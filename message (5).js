$config = {
  gameVersion: 282,
  isTestingMode: false,
  env: "production",
  isBetaMode: false,
  isProduction: true,
  useDevAccountServer: false,
  devAccountServerUrl: "",
  turnstileKey: "0x4AAAAAAAxNgd99O5KdPkC7",
  authentication: {
    discord: "1282395552033669223",
    facebook: "482002344741952",
    google: "621635022753-n0ibkufm9ssukvk7c77rjv2ubn2abk80.apps.googleusercontent.com",
    apple: "io.mope.live.auth"
  },
  gameServers: [{
    id: "prod-ovh-ca-qb-1-lf",
    name: "Quebec 1 LF",
    url: "prod-game-ovh-ca-qb-1-lf.mope.io",
    region: "Quebec, Canada",
    gm: 0
  }, {
    id: "prod-lnd-us-ny-1",
    name: "New York 1",
    url: "prod-game-lnd-us-ny-1.mope.io",
    region: "New York, USA",
    gm: 0
  }, {
    id: "prod-lnd-us-da-1",
    name: "Dallas 1",
    url: "prod-game-lnd-us-da-1.mope.io",
    region: "Dallas, USA",
    gm: 0
  }, {
    id: "prod-lnd-us-la-1",
    name: "Los Angeles 1",
    url: "prod-game-lnd-us-la-1.mope.io",
    region: "Los Angeles, USA",
    gm: 0
  }, {
    id: "prod-lnd-de-ff-1",
    name: "Frankfurt 1",
    url: "prod-game-lnd-de-ff-1.mope.io",
    region: "Frankfurt, Germany",
    gm: 0
  }, {
    id: "prod-lnd-fr-pr-1",
    name: "Paris 1",
    url: "prod-game-lnd-fr-pr-1.mope.io",
    region: "Paris, France",
    gm: 0
  }, {
    id: "prod-lnd-sg-sg-1",
    name: "Singapore 1",
    url: "prod-game-lnd-sg-sg-1.mope.io",
    region: "Singapore, Singapore",
    gm: 0
  }, {
    id: "prod-ovh-de-ff-2-lf",
    name: "Frankfurt 2 LF",
    url: "prod-game-ovh-de-ff-2-lf.mope.io",
    region: "Frankfurt, Germany",
    gm: 0
  }, {
    id: "prod-ovh-sg-sg-2-lf",
    name: "Singapore 2 LF",
    url: "prod-game-ovh-sg-sg-2-lf.mope.io",
    region: "Singapore, Singapore",
    gm: 0
  }, {
    id: "prod-ovh-au-sd-1-lf",
    name: "Sydney 1 LF",
    url: "prod-game-ovh-au-sd-1-lf.mope.io",
    region: "Sydney, Australia",
    gm: 0
  }]
};
console.log("\n\n\n");
console.log("--------------------------------------------");
console.log("");
console.log("#    #  ####  #####  ######     #  ####");
console.log("##  ## #    # #    # #          # #    #");
console.log("# ## # #    # #    # #####      # #    #");
console.log("#    # #    # #####  #      ### # #    #");
console.log("#    # #    # #      #      ### # #    #");
console.log("#    #  ####  #      ###### ### #  ####");
console.log("___ Mope.ioâ„¢ Copyright (2017-present) Mopeio Ltd. ___");
console.log("--------------------------------------------");
const a0_0x530c0d = typeof localStorage !== "undefined" && !!localStorage;
const a0_0x588200 = $config.isTestingMode && a0_0x2ac9fb;
let a0_0x4f4233 = a0_0x588200;
if (a0_0x588200) {
  const a0_0x24ba98 = document.createElement("div");
  a0_0x24ba98.style.zIndex = "999999999";
  a0_0x24ba98.style.zIndex = "999999999";
  a0_0x24ba98.style.left = "0px";
  a0_0x24ba98.style.bottom = "0px";
  a0_0x24ba98.style.width = "100%";
  a0_0x24ba98.style.position = "fixed";
  a0_0x24ba98.style.position = "fixed";
  a0_0x24ba98.style.height = "150px";
  a0_0x24ba98.style.maxHeight = "150px";
  const a0_0x4e17dd = document.createElement("div");
  const a0_0x53ff33 = document.createElement("div");
  a0_0x24ba98.appendChild(a0_0x4e17dd);
  a0_0x24ba98.appendChild(a0_0x53ff33);
  const a0_0x187114 = "25px";
  a0_0x4e17dd.style.position = "absolute";
  a0_0x4e17dd.style.right = "1px";
  a0_0x4e17dd.style.backgroundColor = "rgba(255, 255, 255, .9)";
  a0_0x4e17dd.style.color = "black";
  a0_0x4e17dd.style.top = "-" + a0_0x187114;
  a0_0x4e17dd.style.cursor = "pointer";
  a0_0x4e17dd.style.width = a0_0x187114;
  a0_0x4e17dd.style.height = a0_0x187114;
  a0_0x4e17dd.style.minWidth = a0_0x187114;
  a0_0x4e17dd.style.minHeight = a0_0x187114;
  a0_0x4e17dd.style.maxWidth = a0_0x187114;
  a0_0x4e17dd.style.maxHeight = a0_0x187114;
  a0_0x4e17dd.style.display = "flex";
  a0_0x4e17dd.style.justifyContent = "center";
  a0_0x4e17dd.style.alignItems = "center";
  a0_0x4e17dd.textContent = "-";
  const a0_0x6d892 = () => {
    a0_0x4f4233 = !a0_0x4f4233;
    if (a0_0x4f4233) {
      a0_0x24ba98.style.bottom = "0px";
      a0_0x4e17dd.textContent = "-";
    } else {
      a0_0x24ba98.style.bottom = "-150px";
      a0_0x4e17dd.textContent = "+";
    }
  };
  a0_0x4e17dd.addEventListener("pointerup", () => {
    a0_0x6d892();
  });
  document.body.appendChild(a0_0x24ba98);
  a0_0x53ff33.style.left = "0px";
  a0_0x53ff33.style.bottom = "0px";
  a0_0x53ff33.style.position = "absolute";
  a0_0x53ff33.style.width = "100%";
  a0_0x53ff33.style.height = "150px";
  a0_0x53ff33.style.maxHeight = "150px";
  a0_0x53ff33.style.opacity = ".6";
  a0_0x53ff33.style.backgroundColor = "black";
  a0_0x53ff33.style.color = "white";
  a0_0x53ff33.style.display = "flex";
  a0_0x53ff33.style.flexDirection = "column";
  a0_0x53ff33.style.overflowX = "scroll";
  a0_0x53ff33.style.pointerEvents = "auto";
  const a0_0x4c1de1 = console.log.bind(console);
  const a0_0x354a22 = console.error.bind(console);
  const a0_0x2414e0 = [];
  const a0_0x4b1b76 = _0x542cd9 => {
    if (a0_0x2414e0.length > 100) {
      const _0x44e6cf = a0_0x2414e0[0];
      _0x44e6cf.remove();
      a0_0x2414e0.shift();
    }
    const _0x599dae = document.createElement("DIV");
    _0x599dae.innerText = _0x542cd9.join(" ");
    _0x599dae.style.fontSize = "10px";
    _0x599dae.style.marginBottom = "3px";
    const _0x118c87 = a0_0x53ff33.scrollHeight <= a0_0x53ff33.scrollTop + a0_0x53ff33.getBoundingClientRect().height || a0_0x53ff33.scrollHeight == 0;
    a0_0x53ff33.appendChild(_0x599dae);
    if (_0x118c87) {
      a0_0x53ff33.scrollTop = a0_0x53ff33.scrollHeight;
    }
    a0_0x2414e0.push(_0x599dae);
    return _0x599dae;
  };
  console.log = function () {
    var _0x1ba032 = Array.prototype.slice.call(arguments);
    a0_0x4b1b76(_0x1ba032);
    a0_0x4c1de1.apply(console, _0x1ba032);
  };
  console.error = function () {
    var _0x47ba91 = Array.prototype.slice.call(arguments);
    const _0x6808e0 = a0_0x4b1b76(_0x47ba91);
    _0x6808e0.style.color = "red";
    a0_0x354a22.apply(console, _0x47ba91);
  };
  a0_0x6d892();
}
const a0_0x5e69bf = $config.gameVersion;
const a0_0x52285b = $config.isTestingMode;
console.log("Is Testing mode: ", a0_0x52285b);
const a0_0x574cee = $config.isBetaMode;
console.log("Is beta mode: ", a0_0x574cee);
const a0_0x38887c = true;
console.log("-----------Game Version " + a0_0x5e69bf + (a0_0x574cee ? " (BETA)" : "") + " ----------------");
try {
  const a0_0x159a45 = document.getElementById("mope-footer");
  const a0_0x4b65c4 = document.getElementById("mope-app-store-btn-apple");
  const a0_0xd2681d = a0_0x159a45 && a0_0x4b65c4;
  if (a0_0xd2681d) {
    if (!a0_0x26cdc8 && !a0_0x4eb775) {
      a0_0x4b65c4.style.visibility = "visible";
    } else {
      a0_0x4b65c4.remove();
      const a0_0x4eedf5 = document.getElementsByClassName("Footer__social-media");
      if (a0_0x4eedf5 && a0_0x4eedf5[0]) {
        a0_0x4eedf5[0].style.minWidth = "524px";
        a0_0x4eedf5[0].style.width = "524px";
        a0_0x4eedf5[0].style.maxWidth = "524px";
      }
    }
  }
} catch (a0_0x5dec53) {}
window.onerror = function (_0x1b91f0, _0x2faa02, _0x4d2ac1) {
  if (a0_0x52285b) {}
};
let a0_0xc19b22 = "https://mope-accountserver-do.mope.io";
const a0_0x6eb848 = $config.useDevAccountServer ? $config.devAccountServerUrl : a0_0xc19b22;
console.log("Account server domain became:", a0_0x6eb848);
const a0_0xbf9ed5 = 2;
const a0_0x128bb9 = 1;
const a0_0x1e1cbc = 3;
var a0_0x506ba5 = 0;
var a0_0x5986dd = 1;
var a0_0x46c6b6 = 2;
var a0_0x2f1e00 = 3;
var a0_0x44697a = 4;
var a0_0x4baee2 = 5;
const a0_0x164585 = 1000;
const a0_0x60e332 = false;
const a0_0x28619b = true;
const a0_0x41b8ec = 120;
const a0_0x346988 = 1000 / a0_0x41b8ec;
function a0_0x28fb21() {
  reg = "SANDBOX";
  a0_0x92a71a("LOCAL", "localhost", reg);
}
var a0_0x153783 = 1;
var a0_0x354a2c = 2;
var a0_0x4d7465 = 3;
var a0_0xab2347 = 4;
var a0_0x291db8 = 5;
var a0_0x4ef0c5 = 6;
var a0_0x2ea245 = 7;
var a0_0x270422 = 8;
var a0_0x2eef3b = 9;
var a0_0x8efc60 = 10;
var a0_0x40cab1 = 11;
var a0_0x29de1f = 12;
var a0_0x4a58df = 13;
var a0_0x2aef83 = 14;
var a0_0x5d3489 = 15;
var a0_0x512343 = 16;
var a0_0x17fb89 = 17;
var a0_0x15322b = 18;
var a0_0x31f56a = 19;
var a0_0x1e125f = 20;
const a0_0x129de7 = 1;
const a0_0x312600 = 2;
const a0_0x241262 = 3;
const a0_0x36b8e6 = 4;
const a0_0x3c7e75 = 5;
const a0_0x43730c = 6;
const a0_0x158157 = 7;
const a0_0x31d07e = 8;
const a0_0x399412 = 9;
const a0_0x5cf500 = 10;
const a0_0x581af7 = 11;
const a0_0x5a3e6d = 12;
const a0_0x2e7c14 = 13;
const a0_0x2e84a5 = 14;
const a0_0x5f0df2 = 15;
const a0_0x475abf = 16;
const a0_0x5af041 = 17;
const a0_0x2b0702 = 18;
const a0_0x165c88 = 19;
const a0_0x1c33bf = 20;
const a0_0x55b0da = 21;
const a0_0x3ab614 = 22;
const a0_0x1cd2ec = 23;
const a0_0x2d1c4b = 24;
const a0_0x544efb = 25;
const a0_0x3f956f = 26;
const a0_0x2bb8df = 27;
const a0_0x4499f3 = 28;
const a0_0x207f59 = 29;
const a0_0x15ee73 = 30;
const a0_0x44a73b = 31;
const a0_0x4f0a2e = 32;
const a0_0x288bec = 33;
const a0_0x216f84 = 34;
const a0_0x35a06b = 35;
const a0_0x91985b = 36;
const a0_0x50f980 = 37;
const a0_0x32aa89 = 38;
const a0_0x59dfda = 39;
const a0_0x795571 = 40;
const a0_0xa34074 = 41;
const a0_0x2717d7 = 42;
const a0_0x2e2dbe = 43;
const a0_0x4cfc18 = 44;
const a0_0x1588be = 45;
const a0_0x21a661 = 46;
const a0_0x33c554 = 47;
const a0_0x1cde64 = 48;
const a0_0x55ed51 = 49;
const a0_0x428aeb = 50;
const a0_0x1a4a84 = 51;
const a0_0x1c5ac0 = 52;
const a0_0x2faae4 = 53;
const a0_0x5d2111 = 54;
const a0_0x3ae416 = 55;
const a0_0x3c7cc5 = 56;
const a0_0x310821 = 57;
const a0_0x3960d1 = 58;
const a0_0x80979c = 59;
const a0_0x33b704 = 60;
const a0_0x15ef42 = 61;
const a0_0x3a3299 = 62;
const a0_0x39ee27 = 63;
const a0_0x3e10bf = 64;
const a0_0x100f83 = 65;
const a0_0x1a02ae = 66;
const a0_0x339c41 = 67;
const a0_0xc63a07 = 68;
const a0_0x1a8c34 = 69;
const a0_0x18f893 = 70;
const a0_0x31ad82 = 71;
const a0_0x5403b1 = 72;
const a0_0x5e1756 = 73;
const a0_0x5b3148 = 74;
const a0_0x52a92a = 75;
const a0_0x4b1e42 = 76;
const a0_0x5b3130 = 77;
const a0_0x5cbc39 = 78;
const a0_0x541053 = 79;
const a0_0x357dd1 = 80;
const a0_0x1beb31 = 81;
const a0_0x3273fd = 82;
const a0_0x114db5 = 83;
const a0_0x485d74 = 84;
const a0_0x234f2f = 85;
const a0_0x56635f = 86;
const a0_0x2c5d37 = 87;
const a0_0x2b4087 = 88;
const a0_0xc52046 = 89;
const a0_0x2456fe = 90;
const a0_0x43f4ec = 91;
const a0_0x49efc7 = 92;
const a0_0x419d00 = 93;
const a0_0x25ae06 = 94;
const a0_0x4ecb09 = 95;
const a0_0x4d4fe4 = 96;
const a0_0x55132a = 97;
const a0_0x21e219 = 98;
const a0_0x155e8a = 99;
const a0_0x423bc1 = 100;
const a0_0x30ca83 = 101;
const a0_0x212f58 = 102;
const a0_0x257efe = 103;
const a0_0x4fc92c = 104;
const a0_0x2cc6b1 = 105;
const a0_0x2723db = 106;
const a0_0x16bdfe = 107;
const a0_0x21aa4a = 108;
const a0_0x5db061 = 109;
const a0_0x5c8d1b = 110;
const a0_0x103d05 = 111;
const a0_0x44718c = 112;
const a0_0x417e09 = 113;
const a0_0x35f778 = 114;
const a0_0x3b8a69 = 115;
const a0_0x22cf14 = 116;
const a0_0x3030a0 = 117;
const a0_0x4df3dd = 118;
const a0_0xb974c2 = 119;
const a0_0x454b34 = 120;
const a0_0x25b3a3 = 121;
const a0_0xd47394 = 122;
var a0_0x520579 = 1;
var a0_0x24738f = 2;
var a0_0xf1b509 = 3;
var a0_0x116605 = 4;
var a0_0x55cfa8 = 5;
var a0_0x16a704 = 6;
var a0_0x4b7def = 7;
var a0_0x30cd21 = 8;
var a0_0x226c22 = 9;
var a0_0x61214d = 10;
var a0_0x4f2b01 = 11;
var a0_0x51be8a = 12;
var a0_0x74644c = 13;
var a0_0x382193 = 14;
var a0_0x4c3cae = 15;
var a0_0x4b64fc = 16;
var a0_0x1e4fed = 17;
var a0_0x588c89 = 18;
var a0_0x9b25b8 = 19;
var a0_0x385d1d = 20;
var a0_0x3ab097 = 21;
var a0_0x22b74a = 22;
var a0_0x266048 = 23;
var a0_0x12a9bd = 24;
var a0_0x28419d = 25;
var a0_0x2008b0 = 26;
var a0_0x244bcd = 27;
var a0_0x50e062 = 28;
var a0_0x3ad19b = 29;
var a0_0x11ab7f = 30;
var a0_0x11248d = 31;
var a0_0x1d4a42 = 32;
var a0_0x1cdaba = 33;
var a0_0xc343e9 = 34;
var a0_0x23edee = 35;
var a0_0x58cf25 = 36;
var a0_0x5a9119 = 37;
var a0_0x40a196 = 38;
var a0_0x2db118 = 39;
var a0_0x393078 = 40;
var a0_0x2b11cc = 42;
var a0_0x5c0317 = 43;
var a0_0x16ab5b = 44;
var a0_0xb1af09 = 46;
var a0_0x3bf767 = 47;
var a0_0x2ec460 = 48;
var a0_0x36fcd2 = 49;
var a0_0x131826 = 50;
var a0_0x572c92 = 51;
var a0_0x48e29b = 52;
var a0_0x1ce793 = 53;
var a0_0xa51864 = 54;
var a0_0x3ec0e2 = 55;
var a0_0xcbb879 = 56;
var a0_0x49afaf = 57;
var a0_0x494c53 = 58;
var a0_0x3f9740 = 59;
var a0_0x4d474f = 60;
var a0_0x1698e7 = 61;
var a0_0xc89d15 = 62;
var a0_0x18e157 = 63;
var a0_0x1cccb6 = 64;
var a0_0x95405 = 65;
var a0_0x2424ed = 66;
var a0_0x5b8e04 = 67;
var a0_0x36e46a = 68;
var a0_0x17fc87 = 69;
var a0_0x5e3593 = 70;
var a0_0x139d19 = 71;
var a0_0x5c5702 = 72;
var a0_0x2386f9 = 73;
var a0_0x339a13 = 74;
var a0_0x5d75d7 = 75;
var a0_0x4f9a02 = 76;
var a0_0x4d4186 = 77;
var a0_0x210215 = 78;
var a0_0x1f3985 = 79;
var a0_0x3d673e = 80;
var a0_0x554e7b = 81;
var a0_0x59315a = 82;
var a0_0x4e673a = 83;
var a0_0x13bcd9 = 84;
var a0_0x461487 = 85;
var a0_0x92eab8 = 86;
var a0_0x513b7b = 87;
var a0_0x3d6ea9 = 88;
var a0_0x222f49 = 89;
var a0_0x240d06 = 90;
var a0_0x42d3de = 91;
var a0_0x35e972 = 92;
var a0_0x8a8853 = 93;
var a0_0x273b0e = 94;
var a0_0x1ed65f = 95;
var a0_0x36388e = 96;
var a0_0x457673 = 97;
var a0_0x112493 = 98;
var a0_0x511276 = 99;
var a0_0xe6813b = 100;
var a0_0x47adbb = 101;
var a0_0x12e2db = 102;
var a0_0x511110 = 103;
var a0_0xe70597 = 104;
var a0_0x4522b4 = 105;
var a0_0x5c347e = 106;
var a0_0x5dc060 = 107;
var a0_0x233cb6 = 108;
var a0_0x5df858 = 109;
var a0_0x379ef4 = 110;
var a0_0x3523dd = 111;
var a0_0x4a511e = 112;
var a0_0x197517 = 113;
var a0_0x45e5b0 = 114;
var a0_0x2efa79 = 115;
var a0_0x7973dd = 116;
var a0_0x211475 = 117;
var a0_0x161b09 = 118;
var a0_0x347983 = 119;
var a0_0x349907 = 122;
var a0_0x5812c6 = 123;
var a0_0x536eec = 125;
var a0_0x184b25 = 150;
var a0_0x5d394a = {
  customClassesForOType: {},
  setClassForAnimalType: function (_0x4cf3ef, _0x151152) {
    this.setCustomClassForGameObjType(_0x4cf3ef, a0_0x24738f, _0x151152);
  },
  setClassForAnimalBodyType: function (_0x300a59, _0x89b37b) {
    this.setCustomClassForGameObjType(_0x300a59, a0_0x211475, _0x89b37b);
  },
  setCustomClassForGameObjType: function (_0x2d6db6, _0x3f6c64, _0x2d7189) {
    if (!this.customClassesForOType[_0x3f6c64]) {
      this.customClassesForOType[_0x3f6c64] = {
        oTypeMainClass: null,
        secondaryTypeClasses: {}
      };
    }
    var _0x2f7912 = this.customClassesForOType[_0x3f6c64];
    if (_0x2d7189 == null) {
      if (_0x2f7912.oTypeMainClass != null) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class (" + this.customClassesForOType[_0x3f6c64] + ") is already set for oType " + _0x3f6c64 + "! Check for duplicate calls!");
      }
      _0x2f7912.oTypeMainClass = _0x2d6db6;
    } else {
      if (_0x2d7189 in _0x2f7912.secondaryTypeClasses) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class is already set for oType " + _0x3f6c64 + " AND secondaryType (eg. animalType) " + _0x2d7189 + "! Check for duplicate calls!");
      }
      _0x2f7912.secondaryTypeClasses[_0x2d7189] = _0x2d6db6;
    }
    this.onClassSet(_0x2d6db6, _0x3f6c64, _0x2d7189);
  },
  getClassForGameObjType: function (_0x51b832, _0x3bebc0) {
    if (_0x51b832 in this.customClassesForOType) {
      var _0x5bdd54 = this.customClassesForOType[_0x51b832];
      if (_0x3bebc0 == null || _0x3bebc0 == 0) {
        return _0x5bdd54.oTypeMainClass;
      } else if (_0x3bebc0 in _0x5bdd54.secondaryTypeClasses) {
        return _0x5bdd54.secondaryTypeClasses[_0x3bebc0];
      } else {
        return _0x5bdd54.oTypeMainClass;
      }
    } else {
      return a0_0x42171b;
    }
  },
  newlyVis_createGameObjFromMsg: function (_0x3ed80b) {
    var _0x5b1e55 = _0x3ed80b.readUInt16();
    var _0x226d48 = null;
    if (a0_0x43ec47[_0x5b1e55] != null && a0_0x43ec47[_0x5b1e55] !== undefined) {
      _0x226d48 = _0x3ed80b.readUInt16();
    }
    var _0x25ebca = a0_0x5d394a.createGameObjOfOType(_0x5b1e55, _0x226d48);
    _0x25ebca.worldUpd_readMsgNewlyVisible(_0x3ed80b, _0x5b1e55, _0x226d48);
    return _0x25ebca;
  },
  hasCustomClasses: function (_0x211c7a) {},
  createGameObjOfOType: function (_0x2640fc, _0x5802b3) {
    var _0x296619 = this.getClassForGameObjType(_0x2640fc, _0x5802b3);
    var _0x1666fd = new _0x296619(_0x2640fc, _0x5802b3);
    return _0x1666fd;
  },
  onClassSet: function (_0x99ae8c) {},
  addCustomClassType: function (_0x5bd098) {
    if (a0_0x43ec47[_0x5bd098] == undefined) {
      a0_0x43ec47[_0x5bd098] = _0x5bd098;
    }
  }
};
var a0_0x43ec47 = {};
a0_0x5d394a.addCustomClassType(a0_0x24738f);
a0_0x5d394a.addCustomClassType(a0_0x211475);
a0_0x5d394a.addCustomClassType(a0_0x382193);
a0_0x5d394a.addCustomClassType(a0_0x1486a5);
var a0_0x41cceb = 1;
var a0_0x621981 = 2;
var a0_0x31a123 = 3;
var a0_0x368012 = 4;
var a0_0x2d5af4 = 5;
var a0_0x391884 = 6;
var a0_0x5ce3eb = 7;
var a0_0x2c2f52 = 8;
var a0_0x2a0a8a = 9;
var a0_0x1458da = 10;
var a0_0x13971c = 11;
var a0_0x5812ad = 12;
var a0_0x50d9f7 = 13;
var a0_0x59b763 = 14;
var a0_0x306fa0 = 15;
var a0_0x1d6a29 = 16;
var a0_0x200e1e = 17;
var a0_0x384a46 = 18;
var a0_0x59f431 = 19;
var a0_0x4441e0 = 20;
var a0_0x4a4da1 = 21;
var a0_0x187484 = 22;
var a0_0xbd6036 = 23;
var a0_0x17dc35 = 24;
var a0_0x2b355b = 25;
var a0_0x594c30 = 26;
var a0_0x182226 = 27;
var a0_0x1efea6 = 28;
var a0_0x2f54ae = 29;
var a0_0x5f1ae8 = 30;
var a0_0x303108 = 31;
var a0_0x1c04bf = 32;
var a0_0x1e02a7 = 33;
var a0_0x4f00b9 = 34;
var a0_0xb8200c = 35;
var a0_0x56a2ab = 36;
var a0_0x8a2dda = 37;
var a0_0x4b16c6 = 38;
var a0_0x525e00 = 39;
var a0_0x17ec36 = 40;
var a0_0x90abb = 41;
var a0_0x58b076 = 42;
var a0_0x5d0d4b = 43;
var a0_0x55a097 = 44;
var a0_0x120a91 = 45;
var a0_0x332990 = 46;
var a0_0x4f58e6 = 47;
var a0_0x54926b = 48;
var a0_0x3b5853 = 49;
var a0_0x22a451 = 50;
var a0_0x52bfa4 = 51;
var a0_0x357359 = 52;
var a0_0x45db7b = 53;
var a0_0x33f8d6 = 54;
var a0_0x56479a = 55;
var a0_0xd29085 = 56;
var a0_0x35d037 = 57;
var a0_0x31c0a8 = 58;
var a0_0x18e2b3 = 59;
var a0_0x36faeb = 60;
var a0_0x487fb5 = 61;
var a0_0x40fe0d = 62;
var a0_0x5c6ee3 = 63;
var a0_0x2c361c = 64;
var a0_0x23c69e = 65;
var a0_0xff40c0 = 66;
var a0_0x5ed01e = 67;
var a0_0x1e1209 = 68;
var a0_0x20f7bd = 69;
var a0_0x5aaf14 = 70;
var a0_0x53b0d7 = 71;
var a0_0xadcba8 = 72;
var a0_0x77ab87 = 73;
var a0_0x14b677 = 74;
var a0_0x5aa20b = 75;
var a0_0x16e6c0 = 76;
var a0_0x2f2687 = 77;
var a0_0x52a8a7 = 78;
var a0_0x1b8d24 = 79;
var a0_0x4444cb = 80;
var a0_0x3889a8 = 81;
var a0_0x5a237f = 82;
var a0_0x4dbc97 = 83;
var a0_0x67458 = 84;
var a0_0xee8954 = 85;
var a0_0x4d1599 = 86;
var a0_0x3950f4 = 87;
var a0_0x1e1e1f = 88;
var a0_0x35d611 = 89;
var a0_0x299d82 = 90;
var a0_0x38e019 = 91;
var a0_0x1ad6bd = 92;
var a0_0x273412 = 93;
var a0_0x5650e3 = 94;
var a0_0x3a4899 = 95;
var a0_0x407000 = 96;
var a0_0x4db8c8 = 97;
var a0_0x533584 = 98;
var a0_0x30f1d2 = 99;
var a0_0x5d0b67 = 100;
var a0_0x187b1f = 101;
var a0_0x854d95 = 102;
var a0_0x4a912e = 103;
var a0_0x47f399 = 104;
var a0_0x18f3b8 = 105;
var a0_0x465f60 = 106;
var a0_0x51bdbb = 107;
var a0_0x3edbb5 = 108;
var a0_0x58d479 = 109;
var a0_0x34f3ec = 110;
var a0_0xc8ae84 = 111;
var a0_0x2ea98a = 112;
a_birdMonster = 122;
function a0_0x43fa42(_0x2e7c54) {
  var _0x236981 = {};
  switch (_0x2e7c54) {
    case a0_0x120a91:
      _0x236981.aniName = "Snail";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "You're a super slow snail!";
      _0x236981.aniCol = "#fcc02b";
      _0x236981.skinName = "snail";
      break;
    case a0_0x41cceb:
      _0x236981.aniName = "Mouse";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "";
      _0x236981.aniCol = "#9BA9B9";
      _0x236981.skinName = "mouse";
      break;
    case a0_0x621981:
      _0x236981.aniName = "Rabbit";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to RABBIT! \nPress W to burrow a hole to hide in!";
      _0x236981.aniCol = "#AA937E";
      _0x236981.skinName = "rabbit";
      break;
    case a0_0x31a123:
      _0x236981.aniName = "Pig";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to PIG!\n Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      _0x236981.aniCol = "#DD6BD4";
      _0x236981.skinName = "pig";
      break;
    case a0_0x368012:
      _0x236981.aniName = "Fox";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to FOX! ,\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x236981.aniCol = "#FF9D43";
      _0x236981.skinName = "fox";
      break;
    case a0_0x2d5af4:
      _0x236981.aniName = "Deer";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to DEER! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
      _0x236981.aniCol = "#C4773E";
      _0x236981.skinName = "deer";
      break;
    case a0_0x391884:
      _0x236981.aniName = "Mole";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to MOLE!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
      _0x236981.aniCol = "#4C4A45";
      _0x236981.skinName = "mole";
      break;
    case a0_0x5ce3eb:
      _0x236981.aniName = "Zebra";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to ZEBRA! \nPress W to kick side ways!";
      _0x236981.aniCol = "#FFFFFF";
      _0x236981.skinName = "zebra";
      break;
    case a0_0x2c2f52:
      _0x236981.aniName = "Lion";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to LION!\n Press W to release a mighty ROAR (Rawr!)!";
      _0x236981.aniCol = "#f8c923";
      _0x236981.skinName = "lion";
      break;
    case a0_0x2a0a8a:
      _0x236981.aniName = "CHEETAH";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to CHEETAH!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x236981.aniCol = "#CAC05B";
      _0x236981.skinName = "bigcat/cheetah";
      break;
    case a0_0x1458da:
      _0x236981.aniName = "Bear";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x236981.aniCol = "#99591C";
      _0x236981.skinName = "bear";
      break;
    case a0_0x13971c:
      _0x236981.aniName = "Croc";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to CROCODILE!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
      _0x236981.aniCol = "#30F51C";
      _0x236981.skinName = "croc";
      break;
    case a0_0x50d9f7:
      _0x236981.aniName = "Hippo";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to HIPPO!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x236981.aniCol = "#945A99";
      _0x236981.skinName = "hippo";
      break;
    case a0_0x5812ad:
      _0x236981.aniName = "Rhino";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to RHINO!\n Press W to CHARGE with your mighty horn!";
      _0x236981.aniCol = "#94a3a9";
      _0x236981.skinName = "rhino";
      break;
    case a0_0x306fa0:
      _0x236981.aniName = "Shrimp";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "";
      _0x236981.aniCol = "#f88e37";
      _0x236981.skinName = "shrimp";
      break;
    case a0_0x1d6a29:
      _0x236981.aniName = "Trout";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to TROUT!\nHint: Hold Left-click to RUN! (Uses extra water)";
      _0x236981.aniCol = "#ac8686";
      _0x236981.skinName = "trout";
      break;
    case a0_0x200e1e:
      _0x236981.aniName = "Crab";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to CRAB!\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
      _0x236981.aniCol = "#bf2408";
      _0x236981.skinName = "crab";
      break;
    case a0_0x384a46:
      _0x236981.aniName = "Squid";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to SQUID!\n Squids can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
      _0x236981.aniCol = "#40dda4";
      _0x236981.skinName = "squid";
      break;
    case a0_0x59f431:
      _0x236981.aniName = "Shark";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to SHARK!\n A vicious predator of the oceans!";
      _0x236981.aniCol = "#999fc6";
      _0x236981.skinName = "shark";
      break;
    case a0_0x187484:
      _0x236981.aniName = "Sea-horse";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to SEA HORSE!\n An agile hunter!";
      _0x236981.aniCol = "#73BE2F";
      _0x236981.skinName = "seahorse";
      break;
    case a0_0xbd6036:
      _0x236981.aniName = "Jellyfish";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to JELLYFISH!\n A slowly-turning animal that can grow quite large!";
      _0x236981.aniCol = "#FDB9BA";
      _0x236981.skinName = "jellyfish";
      break;
    case a0_0x4a4da1:
      _0x236981.aniName = "Turtle";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to TURTLE!\n Lives well on land & water! (On land, Press W to go into your shell!)";
      _0x236981.aniCol = "#502E1A";
      _0x236981.skinName = "turtle";
      break;
    case a0_0x4441e0:
      _0x236981.aniName = "Stingray";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to STINGRAY!\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
      _0x236981.aniCol = "#164336";
      _0x236981.skinName = "stingray";
      break;
    case a0_0x17dc35:
      _0x236981.aniName = "The Kraken";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to THE KRAKEN!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
      _0x236981.aniCol = "#64a034";
      _0x236981.skinName = "kraken";
      break;
    case a0_0x2b355b:
      _0x236981.aniName = "Pufferfish";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to PUFFERFISH!\n (Hold W to inflate- become spiky, and dangerous to touch!)";
      _0x236981.aniCol = "#6C5C2C";
      _0x236981.skinName = "pufferfish";
      break;
    case a0_0x594c30:
      _0x236981.aniName = "Killer Whale";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Killer Whale! \nWhales blow out water when diving! (And sometimes other loot!)";
      _0x236981.aniCol = "#141414";
      _0x236981.skinName = "killerwhale";
      break;
    case a0_0x182226:
      _0x236981.aniName = "Swordfish";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n (Press W to rush with your sharp nose!)";
      _0x236981.aniCol = "#689CD7";
      _0x236981.skinName = "swordfish";
      break;
    case a0_0x1efea6:
      _0x236981.aniName = "Gorilla";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Gorillas are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
      _0x236981.aniCol = "#323232";
      _0x236981.skinName = "gorilla";
      break;
    case a0_0x2f54ae:
      _0x236981.aniName = "Octopus";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Octopus!\nHold W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
      _0x236981.aniCol = "#ff8340";
      _0x236981.skinName = "octopus";
      break;
    case a0_0x59b763:
      _0x236981.aniName = "Dragon";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
      _0x236981.aniCol = "#22FF8A";
      _0x236981.skinName = "dragon";
      break;
    case a0_0x332990:
      _0x236981.aniName = "Black Dragon";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
      _0x236981.aniCol = "black";
      _0x236981.skinName = "blackdragon";
      break;
    case a0_0x357359:
      _0x236981.aniName = "Giant Spider";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Place web around the game to catch prey!";
      _0x236981.aniCol = "black";
      _0x236981.skinName = "giantSpider";
      break;
    case a0_0x22a451:
      _0x236981.aniName = "Cobra";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
      _0x236981.aniCol = "black";
      _0x236981.skinName = "cobra";
      break;
    case a0_0x52bfa4:
      _0x236981.aniName = "Boa Constrictor";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Coil and suffocate other animals!";
      _0x236981.aniCol = "black";
      _0x236981.skinName = "boaConstrictor";
      break;
    case a0_0x45db7b:
      _0x236981.aniName = "T-REX";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
      _0x236981.aniCol = "#862A2A";
      _0x236981.skinName = "trex";
      break;
    case a0_0x33f8d6:
      _0x236981.aniName = "Tiger";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Tiger!\n Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "tiger";
      break;
    case a0_0x56479a:
      _0x236981.aniName = "Giraffe";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Giraffe!\nGiraffe have huge legs and stomp anyone in their way!";
      _0x236981.aniCol = "#E9BD23";
      _0x236981.skinName = "giraffe";
      break;
    case a0_0xd29085:
      _0x236981.aniName = "Eagle";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Eagle!\nEagles can fly up other animals in the air! !\n";
      _0x236981.aniCol = "#5b400d";
      _0x236981.skinName = "eagle";
      break;
    case a0_0x90abb:
      _0x236981.aniName = "Arctic Fox";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x236981.aniCol = "#CFCFCF";
      _0x236981.skinName = "arctic/arcticfox";
      break;
    case a0_0x303108:
      _0x236981.aniName = "Arctic Hare";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n \nPress W to burrow a hole to hide in!";
      _0x236981.aniCol = "#D5D5D5";
      _0x236981.skinName = "arctic/arctichare";
      break;
    case a0_0x1c04bf:
      _0x236981.aniName = "The Yeti!";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
      _0x236981.aniCol = "#839eb5";
      _0x236981.skinName = "arctic/yeti";
      break;
    case a0_0x1e02a7:
      _0x236981.aniName = "Chipmunk";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "";
      _0x236981.aniCol = "#A77C30";
      _0x236981.skinName = "arctic/chipmunk";
      break;
    case a0_0x4f00b9:
      _0x236981.aniName = "Muskox";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Press W to charge with your horns! \nPlus move decently on ice!";
      _0x236981.aniCol = "#231f18";
      _0x236981.skinName = "arctic/muskox";
      break;
    case a0_0xb8200c:
      _0x236981.aniName = "Penguin";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
      _0x236981.aniCol = "#FFFFFF";
      _0x236981.skinName = "arctic/penguin";
      break;
    case a0_0x56a2ab:
      _0x236981.aniName = "Polar Bear";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
      _0x236981.aniCol = "#e4e4e4";
      _0x236981.skinName = "arctic/bear/bear";
      break;
    case a0_0x8a2dda:
      _0x236981.aniName = "Seal";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Seals can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x236981.aniCol = "#cfcfcf";
      _0x236981.skinName = "arctic/seal";
      break;
    case a0_0x4b16c6:
      _0x236981.aniName = "Snow leopard";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x236981.aniCol = "#cfcfcf";
      _0x236981.skinName = "arctic/snowleopard";
      break;
    case a0_0x525e00:
      _0x236981.aniName = "Walrus";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x236981.aniCol = "#633838";
      _0x236981.skinName = "arctic/walrus";
      break;
    case a0_0x17ec36:
      _0x236981.aniName = "Reindeer";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
      _0x236981.aniCol = "#a68976";
      _0x236981.skinName = "arctic/reindeer";
      break;
    case a0_0x5f1ae8:
      _0x236981.aniName = "Wolf";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Wolf paws turn very well on ice!\n Press W to howl!";
      _0x236981.aniCol = "#6B6B6B";
      _0x236981.skinName = "arctic/wolf";
      break;
    case a0_0x58b076:
      _0x236981.aniName = "Wolverine";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
      _0x236981.aniCol = "#843A0F";
      _0x236981.skinName = "arctic/wolverine";
      break;
    case a0_0x5d0d4b:
      _0x236981.aniName = "Mammoth";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
      _0x236981.aniCol = "#9d4717";
      _0x236981.skinName = "arctic/mammoth";
      break;
    case a0_0x55a097:
      _0x236981.aniName = "Donkey";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Press W to Kick any animal behind you";
      _0x236981.aniCol = "#8c7c64";
      _0x236981.skinName = "donkey";
      break;
    case a0_0x4f58e6:
      _0x236981.aniName = "Sabertooth Tiger";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Sabertooth Tiger!\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x236981.aniCol = "#945A99";
      _0x236981.skinName = "sabertoothtiger";
      break;
    case a0_0x54926b:
      _0x236981.aniName = "Elephant";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to " + _0x236981.aniName + "!\n Use your long trunk to attack and eat food!";
      _0x236981.aniCol = "#945A99";
      _0x236981.skinName = "elephant";
      break;
    case a0_0x3b5853:
      _0x236981.aniName = "Blue Whale";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Blue Whale!\n Smash with your powerful tail!";
      _0x236981.aniCol = "#945A99";
      _0x236981.skinName = "bluewhale";
      break;
    case a0_0x18e2b3:
      _0x236981.aniName = "Duckling";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to a DUCK!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "duck/duckling";
      break;
    case a0_0x35d037:
      _0x236981.aniName = "Hedgehog";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Hedgehog!\n (Hold W to become spiky, and dangerous to touch!)";
      _0x236981.aniCol = "#5b400d";
      _0x236981.skinName = "hedgehog";
      break;
    case a0_0x487fb5:
      _0x236981.aniName = "King Crab";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to a KING CRAB!";
      _0x236981.aniCol = "#971f0e";
      _0x236981.skinName = "kingcrab";
      break;
    case a0_0x36faeb:
      _0x236981.aniName = "Lemming";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "";
      _0x236981.aniCol = "#A77C30";
      _0x236981.skinName = "arctic/lemming";
      break;
    case a0_0x40fe0d:
      _0x236981.aniName = "Frog";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Frog!!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "frog/frog";
      break;
    case a0_0x5c6ee3:
      _0x236981.aniName = "Ostrich";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Ostrich! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "ostrich/ostrich";
      break;
    case a0_0x2c361c:
      _0x236981.aniName = "Pelican";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Pelican! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "pelican/pelican";
      break;
    case a0_0x23c69e:
      _0x236981.aniName = "Falcon";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Falcon! \nFly, and do a powerful dive attack! Aim it well.";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "falcon/falcon";
      break;
    case a0_0xff40c0:
      _0x236981.aniName = "Snowy Owl";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Snowy Owl!\n Aim the crosshair, \n right click/W when it's on top of prey, to attack!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "snowyowl/snowyowl";
      break;
    case a0_0x20f7bd:
      _0x236981.aniName = "Baby Ostrich";
      _0x236981.aniDesc = "";
      _0x236981.upgradeText = "UPGRADED to Baby Ostrich!!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "ostrich/baby-ostrich";
      break;
    case a0_0x1e1209:
      _0x236981.aniName = "Phoenix";
      _0x236981.upgradeText = "UPGRADED to Phoenix!\nCreate powerful fire tornados to burn your enemies alive!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "phoenix/phoenix";
      break;
    case a0_0x5aaf14:
      _0x236981.aniName = "Sea Monster";
      _0x236981.upgradeText = "UPGRADED to Sea Monster!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "seamonster";
      break;
    case a0_0x53b0d7:
      _0x236981.aniName = "Land Monster";
      _0x236981.upgradeText = "UPGRADED to Land Monster!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "landmonster";
      break;
    case a0_0xadcba8:
      _0x236981.aniName = "Ice Monster";
      _0x236981.upgradeText = "UPGRADED to Ice Monster!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "icemonster";
      break;
    case a0_0x77ab87:
      _0x236981.aniName = "Dino Monster";
      _0x236981.upgradeText = "UPGRADED to Dino Monster!";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "dinomonster";
      break;
    case a0_0x14b677:
      _0x236981.aniName = "Pigeon";
      _0x236981.upgradeText = "UPGRADED to Pigeon!\nHold W to fly around. ";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "pigeon/pigeon";
      break;
    case a0_0x5aa20b:
      _0x236981.aniName = "Toucan";
      _0x236981.upgradeText = "UPGRADED to Toucan!\nHold W to fly around. ";
      _0x236981.aniCol = "#FF9000";
      _0x236981.skinName = "toucan/toucan";
      break;
    default:
      _0x236981.aniName = "(Animal)";
      _0x236981.aniDesc = "";
      _0x236981.aniCol = "#000000";
      _0x236981.upgradeText = "UPGRADED!";
  }
  return _0x236981;
}
function a0_0x4a48ff() {}
function a0_0x4a1828(_0x30a7b2) {
  let _0x1cd6a0 = Array.isArray(_0x30a7b2) ? _0x30a7b2 : [_0x30a7b2];
  _0x1cd6a0 = _0x1cd6a0.map(_0x41d430 => {
    return {
      ..._0x41d430,
      abilImg: "assets/" + _0x41d430.abilImg
    };
  });
  if (_0x1cd6a0.length === 1 && _0x1cd6a0[0].abilImg !== "assets/abilities/Dash-Boost.svg") {
    _0x1cd6a0.unshift({
      abilName: "Dash",
      abilImg: "assets/abilities/Dash-Boost.svg"
    });
  }
  return _0x1cd6a0;
}
var a0_0x29b0dd = 101;
var a0_0x57a669 = 0;
var a0_0x54542a = 1;
var a0_0xec4014 = 2;
var a0_0x289513 = 3;
var a0_0x45e5c9 = 4;
var a0_0x31a080 = 5;
var a0_0x2bc7c5 = 6;
var a0_0x1951cf = 7;
var a0_0x1ef640 = 8;
var a0_0x4923ad = 9;
var a0_0x114871 = 10;
var a0_0x66185c = 11;
var a0_0x421bce = 12;
var a0_0x4806bd = 13;
var a0_0x408e12 = 14;
var a0_0x1a796c = 15;
var a0_0x175051 = 16;
var a0_0x378410 = 17;
var a0_0x5c291b = 18;
var a0_0x56e05b = 19;
var a0_0x467fd7 = 20;
var a0_0x18378d = 21;
var a0_0x305b9b = 22;
var a0_0x4a103d = 23;
var a0_0x55977a = 24;
var a0_0x699bce = 25;
var a0_0x940cd3 = 26;
var a0_0xc76b51 = 27;
var a0_0x3b8ebb = 28;
var a0_0x12424a = 30;
var a0_0x8c90d = 31;
var a0_0x3c1b23 = 32;
var a0_0x170fbe = 33;
var a0_0x4247e2 = 34;
var a0_0xae3632 = 35;
var a0_0x3c8d32 = 36;
var a0_0x1ff953 = 37;
var a0_0x33c77d = 38;
var a0_0x54617e = 39;
var a0_0x37cec6 = 40;
var a0_0xe77a75 = 41;
var a0_0x3d933d = 42;
var a0_0x24a1c7 = 43;
var a0_0x38fdc0 = 46;
var a0_0x4f85ee = 47;
var a0_0x4a2102 = 48;
var a0_0x6b5569 = 49;
var a0_0x5f08f0 = 51;
var a0_0x36fde4 = 54;
var a0_0x3279d5 = 55;
var a0_0x3ab024 = 56;
var a0_0x1e7306 = 57;
var a0_0x4958f1 = 58;
var a0_0x35ed85 = 59;
var a0_0x477380 = 60;
var a0_0xe68ed1 = 61;
var a0_0x40e81e = 62;
var a0_0x30b1e4 = 63;
var a0_0x1353af = 64;
var a0_0x19d526 = 65;
var a0_0x1328f3 = 66;
var a0_0x2d4f40 = 67;
var a0_0x40a7fa = 68;
var a0_0x55f690 = 69;
var a0_0xcb1db2 = 70;
var a0_0x42aec4 = 71;
var a0_0x57e16e = 72;
var a0_0x15b02 = 73;
var a0_0x45967c = 74;
var a0_0x18d55c = 75;
var a0_0x1a3045 = 76;
var a0_0xdd6b17 = 77;
var a0_0x218bc9 = 78;
var a0_0x8ac988 = 79;
var a0_0x390775 = 80;
var a0_0x9aae16 = 81;
var a0_0xbe0a7a = 82;
var a0_0x279b53 = 83;
var a0_0x58739c = 86;
var a0_0x481031 = 87;
var a0_0x2059ce = 88;
var a0_0x4b6abd = 89;
var a0_0x57c6f9 = 90;
var a0_0x1ecf89 = 91;
var a0_0x419227 = 92;
var a0_0x15a2bd = 93;
var a0_0xe0d8c7 = 94;
var a0_0x613643 = 95;
var a0_0x25adb9 = 93;
var a0_0x3cb689 = 97;
var a0_0x486d39 = 98;
var a0_0x522c78 = 99;
var a0_0x37467a = 101;
var a0_0x214f93 = 102;
var a0_0x510b20 = 103;
var a0_0x889e8a = 104;
var a0_0x194a3f = 105;
var a0_0x3ab8de = 106;
var a0_0x2cada6 = 107;
var a0_0x3a0f5 = 108;
var a0_0x2800f6 = 112;
var a0_0x5e6f89 = 128;
var a0_0x311dc9 = 134;
var a0_0x872474 = 135;
var a0_0x22ec55 = 137;
var a0_0x17a34e = 143;
var a0_0x4087d2 = 144;
var a0_0x4fcb9b = 145;
var a0_0x91b534 = 147;
function a0_0x5285b4(_0x400c52) {
  var _0x5a2448 = {};
  var _0x260f47 = "";
  var _0x1bab43 = a0_0x283a01[a0_0x15e4d1];
  switch (_0x400c52) {
    case a0_0xbe0a7a:
      _0x5a2448.abilName = "Bear Attack";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/desert/gobibear/" + _0x1bab43.animalSpecies + "/gobibear_attack.png";
      }
      break;
    case a0_0x311dc9:
      _0x5a2448.abilName = "HOLD to Fly";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0x17a34e:
      _0x5a2448.abilName = "Glide from\n Trees & Hills";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0x872474:
      _0x5a2448.abilName = "Charge!";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0x279b53:
      _0x5a2448.abilName = "Spit!";
      _0x5a2448.abilImg = "skins/desert/camel/spit.png";
      break;
      a0_0x613643 = 95;
    case a0_0x3c1b23:
      _0x5a2448.abilName = "Tail Slap";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x8c90d:
      _0x5a2448.abilName = "Trunk Hit";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x29b0dd:
      _0x5a2448.abilName = "Dive";
      _0x5a2448.abilImg = "img/ability_dive.png";
      break;
    case a0_0x699bce:
      _0x5a2448.abilName = "Dig For Food";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0xec4014:
      _0x5a2448.abilName = "Shell";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + "2.png";
      break;
    case a0_0x18378d:
      _0x5a2448.abilName = "Bite Drag";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x3c8d32:
      _0x5a2448.abilName = "Suffocate prey";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x3279d5:
      _0x5a2448.abilName = "Fly with water";
      var _0x1bab43 = a0_0x283a01[a0_0x15e4d1];
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/pelican/" + _0x1bab43.animalSpecies + "/ability_pelican.png";
      }
      break;
    case a0_0x1951cf:
      _0x5a2448.abilName = "Disguise";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x305b9b:
      _0x5a2448.abilName = "Burrow Hole";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x260f47 + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0x4a103d:
      _0x5a2448.abilName = "Pull from Hole";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x260f47 + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0x4923ad:
      _0x5a2448.abilName = "Charge";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x378410:
      _0x5a2448.abilName = "Roll snow";
      _0x5a2448.abilImg = "img/snowball.png";
      break;
    case a0_0x4247e2:
      _0x5a2448.abilName = "Venom Spit";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0xae3632:
      _0x5a2448.abilName = "Spin Web";
      _0x5a2448.abilImg = "img/spiderWeb.png";
      break;
    case a0_0x4806bd:
      _0x5a2448.abilName = "Throw Snow";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x175051:
      _0x5a2448.abilName = "Drop Snow";
      _0x5a2448.abilImg = "img/snowball.png";
      break;
    case a0_0x5c291b:
      _0x5a2448.abilName = "Loud Noise";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x408e12:
      _0x5a2448.abilName = "Claw Slash";
      _0x5a2448.abilImg = "img/ability_claw.png";
      break;
    case a0_0x45e5c9:
      _0x5a2448.abilName = "Ink";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x289513:
      _0x5a2448.abilName = "Shock";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x54542a:
      _0x5a2448.abilName = "Hold to Dig";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x421bce:
      _0x5a2448.abilName = "Howl";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x55977a:
      _0x5a2448.abilName = "Throw Banana";
      _0x5a2448.abilImg = "skins/" + +_0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x3b8ebb:
      _0x5a2448.abilName = "Cause Wave";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x1a796c:
      _0x5a2448.abilName = "Extra Boost";
      if (a0_0x3bddc6 == a0_0x2a0a8a) {
        if (_0x1bab43) {
          var _0x2b54eb = _0x1bab43.animalInfo();
          _0x5a2448.abilImg = "skins/" + _0x260f47 + _0x2b54eb.skinName + ".png";
        }
      } else {
        _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      }
      break;
    case a0_0x1ef640:
      _0x5a2448.abilName = "Slide on ice";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x114871:
      _0x5a2448.abilName = "Inflate";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x6b5569:
      _0x5a2448.abilName = "Spikes";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + "2.png";
      break;
    case a0_0x56e05b:
      _0x5a2448.abilName = "Fire";
      _0x5a2448.abilImg = "img/fire.png";
      break;
    case a0_0x12424a:
      _0x5a2448.abilName = "Fire";
      _0x5a2448.abilImg = "img/fire.png";
      break;
    case a0_0x5f08f0:
      _0x5a2448.abilName = "Arm Smash";
      _0x5a2448.abilImg = "img/ability_crabSmashSkin.png";
      break;
    case a0_0x1ff953:
      _0x5a2448.abilName = "Jaws Bite";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x38fdc0:
      _0x5a2448.abilName = "Jaws Bite";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x36fde4:
      _0x5a2448.abilName = "Command Babies";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + "ostrich/ostrich-baby.png";
      break;
    case a0_0x4958f1:
      _0x5a2448.abilName = "Target prey";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x1e7306:
      _0x5a2448.abilName = "Sky dive";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x33c77d:
      _0x5a2448.abilName = "Ambush Attack";
      var _0x1bab43 = a0_0x283a01[a0_0x15e4d1];
      if (_0x1bab43) {
        var _0x2b54eb = _0x1bab43.animalInfo();
        _0x5a2448.abilImg = "skins/" + _0x260f47 + _0x2b54eb.skinName + ".png";
      }
      break;
    case a0_0x3d933d:
      _0x5a2448.abilName = "Stomp";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x4f85ee:
      _0x5a2448.abilName = "Fly with prey";
      if (_0x1bab43) {
        var _0x2b54eb = _0x1bab43.animalInfo();
      }
      break;
    case a0_0x4a2102:
      _0x5a2448.abilName = "Stink";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x1353af:
    case a0_0x19d526:
      _0x5a2448.abilName = "HOLD to fly";
      if (_0x1bab43) {
        var _0x2b54eb = _0x1bab43.animalInfo();
        _0x5a2448.abilImg = "skins/" + _0x260f47 + _0x2b54eb.skinName + ".png";
      }
      break;
    case a0_0x42aec4:
      _0x5a2448.abilName = "HOLD to fly\n& Mimic Animals";
      if (_0x1bab43) {
        var _0x2b54eb = _0x1bab43.animalInfo();
        _0x5a2448.abilImg = "skins/" + _0x260f47 + _0x2b54eb.skinName + ".png";
      }
      break;
    case a0_0x57e16e:
      _0x5a2448.abilName = "HOLD in water\n(find food)";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/ocean/flamingo/" + _0x1bab43.animalSpecies + "/flamingo.png";
      }
      break;
    case a0_0x18d55c:
      _0x5a2448.abilName = "HOLD to Peck\n/ Fly";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0x1a3045:
      _0x5a2448.abilName = "HOLD to Hypnotize\n/ Fly from hills";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/" + _0x1bab43.animalInfo().skinName + ".png";
      }
      break;
    case a0_0xdd6b17:
      _0x5a2448.abilName = "HOLD to Jump High\n";
      _0x5a2448.abilImg = "skins/desert/gazelle/gazelle1.png";
      break;
    case a0_0x218bc9:
      _0x5a2448.abilName = "HOLD to ROLL";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/desert/armadillo/" + _0x1bab43.animalSpecies + "/armadillo1.png";
      }
      break;
    case a0_0x390775:
      _0x5a2448.abilName = "HOLD to Dig";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/desert/meerkat/" + _0x1bab43.animalSpecies + "/meerkat1.png";
      }
      break;
    case a0_0x8ac988:
      _0x5a2448.abilName = "Spits Food!";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/desert/chipmunk/" + _0x1bab43.animalSpecies + "/chipmunk1.png";
      }
      break;
    case a0_0x9aae16:
      _0x5a2448.abilName = "Whine!";
      if (_0x1bab43) {
        _0x5a2448.abilImg = "skins/desert/fennecfox/" + _0x1bab43.animalSpecies + "/fennecfox1.png";
      }
      break;
    case a0_0x15b02:
      _0x5a2448.abilName = "Front Kick\n(HOLD to Charge)";
      _0x5a2448.abilImg = "skins/cassowary/cassowary1.png";
      break;
    case a0_0xe68ed1:
      _0x5a2448.abilName = "Fire Tornado";
      _0x5a2448.abilImg = "img/firetornado.png";
      break;
    case a0_0x1328f3:
      _0x5a2448.abilName = "Sink Hole";
      _0x5a2448.abilImg = "skins/" + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0x30b1e4:
      _0x5a2448.abilName = "Giant Whirlpool";
      _0x5a2448.abilImg = "skins/" + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
    case a0_0xcb1db2:
      _0x5a2448.abilName = "Knock In Air";
      _0x5a2448.abilImg = "skins/monsters/dinomonster/dinomonster.png";
      break;
    case a0_0x55f690:
      _0x5a2448.abilName = "Freeze Prey";
      _0x5a2448.abilImg = "skins/monsters/icemonster/icemonster.png";
      break;
    default:
      _0x5a2448.abilName = "Ability";
      _0x5a2448.abilImg = "skins/" + _0x260f47 + a0_0x43fa42(a0_0x3bddc6).skinName + ".png";
      break;
  }
  return _0x5a2448;
}
function a0_0x5dcede(_0x5ca1cd, _0x357c8a) {
  return Math.random() * (_0x357c8a - _0x5ca1cd) + _0x5ca1cd;
}
function a0_0xf18dec(_0x1b754a) {
  var _0x3cc5c3 = "";
  var _0x482411 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  var _0x5bee83 = _0x482411.length;
  for (var _0x54a19d = 0; _0x54a19d < _0x1b754a; _0x54a19d++) {
    _0x3cc5c3 += _0x482411.charAt(Math.floor(Math.random() * _0x5bee83));
  }
  return _0x3cc5c3;
}
function a0_0x1a2937(_0x54bb3b, _0x3cc999) {
  return Math.floor(Math.random() * (_0x3cc999 - _0x54bb3b + 1)) + _0x54bb3b;
}
function a0_0x782b0b(_0x5dc94b) {
  var _0x5dc94b = Math.trunc(_0x5dc94b) % 360 + (_0x5dc94b - Math.trunc(_0x5dc94b));
  if (_0x5dc94b > 0) {
    return _0x5dc94b;
  } else {
    return _0x5dc94b + 360;
  }
}
function a0_0x5907ec(_0x5a8378) {
  var _0x3fe852 = _0x5a8378.split(".");
  return ((+_0x3fe852[0] * 256 + +_0x3fe852[1]) * 256 + +_0x3fe852[2]) * 256 + +_0x3fe852[3];
}
function a0_0x42be5f(_0x3d3508) {
  var _0x32426c = _0x3d3508 % 256;
  for (var _0x364bcc = 3; _0x364bcc > 0; _0x364bcc--) {
    _0x3d3508 = Math.floor(_0x3d3508 / 256);
    _0x32426c = _0x3d3508 % 256 + "." + _0x32426c;
  }
  return _0x32426c;
}
function a0_0x26993c(_0x705ec6, _0x52d2fe) {
  var _0x11031f = _0x52d2fe.split("?")[0];
  var _0x51cb09;
  var _0x5eaed6 = [];
  var _0x1499ee = _0x52d2fe.indexOf("?") !== -1 ? _0x52d2fe.split("?")[1] : "";
  if (_0x1499ee !== "") {
    _0x5eaed6 = _0x1499ee.split("&");
    for (var _0x3d1bd3 = _0x5eaed6.length - 1; _0x3d1bd3 >= 0; _0x3d1bd3 -= 1) {
      _0x51cb09 = _0x5eaed6[_0x3d1bd3].split("=")[0];
      if (_0x51cb09 === _0x705ec6) {
        _0x5eaed6.splice(_0x3d1bd3, 1);
      }
    }
    _0x11031f = _0x11031f + "?" + _0x5eaed6.join("&");
  }
  return _0x11031f;
}
function a0_0x4262f7(_0x1b9af0) {
  return _0x1b9af0 * (180 / Math.PI);
}
function a0_0x873ec7(_0x129873) {
  return _0x129873 * (Math.PI / 180);
}
function a0_0xa3096a(_0x4d2026, _0x5618c2, _0x422119, _0x45627) {
  return Math.atan2(_0x45627 - _0x5618c2, _0x422119 - _0x4d2026);
}
function a0_0x505509(_0x2bcff1, _0x3b4b6f) {
  return (_0x2bcff1 >> _0x3b4b6f) % 2 != 0;
}
function a0_0x392a03(_0x58219e, _0x2b47b3, _0x1d08b7) {
  if (_0x1d08b7) {
    return _0x58219e | 1 << _0x2b47b3;
  } else {
    return _0x58219e & ~(1 << _0x2b47b3);
  }
}
function a0_0x8b0c15(_0x63bedf, _0x2fc791) {
  var _0x543a6b = _0x2fc791 - _0x63bedf;
  var _0x254424 = a0_0x782b0b(a0_0x4262f7(_0x543a6b));
  if (_0x254424 > 180) {
    _0x254424 = _0x254424 - 360;
  }
  return a0_0x873ec7(_0x254424);
}
function a0_0x3cbcc1(_0x4db151, _0x250935, _0x2d1ddf) {
  return Math.min(_0x2d1ddf, Math.max(_0x250935, _0x4db151));
}
function a0_0xaad8f5(_0x1e5840) {
  return unescape(encodeURIComponent(_0x1e5840));
}
function a0_0x34d2d9(_0x111779) {
  return decodeURIComponent(escape(_0x111779));
}
function a0_0x3a863d(_0x531f9e, _0x28466d, _0x14d85a) {
  var _0x383a79 = a0_0x1306ae.measureText("M").width * 1.2;
  var _0x26a022 = _0x531f9e.split("\n");
  for (var _0x56ef9e = 0; _0x56ef9e < _0x26a022.length; ++_0x56ef9e) {
    a0_0x1306ae.fillText(_0x26a022[_0x56ef9e], _0x28466d, _0x14d85a);
    _0x14d85a += _0x383a79;
  }
}
function a0_0x22450c(_0x363ded) {
  var _0x4e1410 = parseInt(_0x363ded, 10);
  var _0x42c850 = Math.floor(_0x4e1410 / 3600);
  var _0x16ec95 = Math.floor((_0x4e1410 - _0x42c850 * 3600) / 60);
  var _0x373e65 = _0x4e1410 - _0x42c850 * 3600 - _0x16ec95 * 60;
  if (_0x373e65 < 10) {
    _0x373e65 = "0" + _0x373e65;
  }
  return _0x16ec95 + ":" + _0x373e65;
}
function a0_0x4b4fe7(_0x6009ad) {
  return _0x6009ad.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
function a0_0x1e543a(_0x51943f) {
  return a0_0x29f156(_0x51943f, 0);
}
function a0_0x29f156(_0x4b1971, _0x4123c1) {
  if (_0x4b1971 === null || _0x4b1971 === 0) {
    return "0";
  }
  _0x4123c1 = !_0x4123c1 || _0x4123c1 < 0 ? 0 : _0x4123c1;
  var _0x89f961 = _0x4b1971.toPrecision(2).split("e");
  var _0xb938bb = _0x89f961.length === 1 ? 0 : Math.floor(Math.min(_0x89f961[1].slice(1), 14) / 3);
  var _0x4bb3ed = _0xb938bb < 1 ? _0x4b1971.toFixed(0 + _0x4123c1) : (_0x4b1971 / Math.pow(10, _0xb938bb * 3)).toFixed(2);
  var _0x51f76d = _0x4bb3ed < 0 ? _0x4bb3ed : Math.abs(_0x4bb3ed);
  var _0x3b0d79 = _0x51f76d + ["", "K", "M", "B", "T"][_0xb938bb];
  return _0x3b0d79;
}
function a0_0x50fd5c(_0x4c1d0c, _0x1e3ad9, _0x55f7c1, _0x5077cc) {
  a0_0x1306ae.fillStyle = _0x5077cc;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(_0x4c1d0c, _0x1e3ad9, Math.max(0, _0x55f7c1), 0, Math.PI * 2);
  a0_0x1306ae.fill();
}
function a0_0x68a33b(_0x1348d8, _0x4ccc86, _0x3d58a9, _0x30e264, _0x1cdc55) {
  a0_0x1306ae.strokeStyle = _0x1cdc55;
  a0_0x1306ae.lineWidth = _0x30e264;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(_0x1348d8, _0x4ccc86, Math.max(0, _0x3d58a9), 0, Math.PI * 2);
  a0_0x1306ae.stroke();
}
function a0_0x423a9f(_0x570045, _0x232fea, _0x390b7c, _0x3b1118) {
  var _0x24ca94 = _0x390b7c * Math.sin(_0x3b1118 * Math.PI / _0x232fea * _0x570045);
  return _0x24ca94;
}
function a0_0xb5f48(_0x291572, _0x25132e) {
  if (a0_0x52285b || _0x25132e) {
    console.log(_0x291572);
  }
}
function a0_0x48a798(_0x38823b) {
  var _0x24d148 = new Date(null);
  _0x24d148.setSeconds(_0x38823b);
  var _0x536f80 = _0x24d148.getMinutes();
  var _0x114b3f = _0x24d148.getSeconds();
  var _0x35950e = "";
  if (_0x536f80 > 0) {
    _0x35950e = _0x536f80 + "m ";
  }
  if (_0x114b3f > 0) {
    _0x35950e += _0x114b3f + "s";
  }
  return _0x35950e;
}
function a0_0x1ddcb5(_0x4004b7, _0x4ac7b4) {
  var _0x3bfed1 = _0x4004b7.x - _0x4ac7b4.x;
  var _0xc8b7de = _0x4004b7.y - _0x4ac7b4.y;
  return Math.sqrt(_0x3bfed1 * _0x3bfed1 + _0xc8b7de * _0xc8b7de);
}
var a0_0x56d87f = "s";
var a0_0x8827a7 = "e";
var a0_0x19d8f5 = "r";
var a0_0x526c5e = "v";
function a0_0x8ebc39() {
  window.setTimeout(function () {
    eval(a0_0x56d87f + a0_0x8827a7 + a0_0x19d8f5 + a0_0x526c5e + a0_0x8827a7 + a0_0x19d8f5 + " = null");
    a0_0x8ebc39();
  }, a0_0x39b824(10, 20) * 1000);
}
a0_0x8ebc39();
const a0_0x4973e3 = a0_0x873ec7(45);
const a0_0x5c63e1 = a0_0x873ec7(90);
const a0_0x2f748d = a0_0x873ec7(180);
function a0_0xfb9a72(_0x26aff1) {
  this.data = _0x26aff1;
  this.offset = 0;
  this.readUInt8 = function () {
    var _0x42be13 = this.data.getUint8(this.offset);
    this.offset += 1;
    return _0x42be13;
  };
  this.readUInt16 = function () {
    try {
      var _0xf3cfe9 = this.data.getUint16(this.offset, false);
      this.offset += 2;
      return _0xf3cfe9;
    } catch (_0x5d6cab) {
      return 0;
    }
  };
  this.readInt16 = function () {
    try {
      var _0x37f9d8 = this.data.getInt16(this.offset, false);
      this.offset += 2;
      return _0x37f9d8;
    } catch (_0x30512c) {
      return 0;
    }
  };
  this.readUInt32 = function () {
    try {
      var _0x2dfe07 = this.data.getUint32(this.offset, false);
      this.offset += 4;
      return _0x2dfe07;
    } catch (_0x3684f2) {
      return 0;
    }
  };
  this.readString = function () {
    var _0x57fc72 = this.readUInt16();
    var _0x20eb4f = "";
    var _0x425464;
    for (var _0x3b7e30 = 0; _0x3b7e30 < _0x57fc72; _0x3b7e30++) {
      _0x425464 = this.readUInt8();
      if (_0x3b7e30 != _0x57fc72 - 1) {
        _0x20eb4f += String.fromCharCode(_0x425464);
      }
    }
    return a0_0x34d2d9(_0x20eb4f);
  };
  this.readMsgReaderBitsGroup = function () {};
  this.readBitGroup = function () {
    return new a0_0x14a461(this);
  };
}
function a0_0x32d020(_0xace72c) {
  this.len = 0;
  this.dataView = new DataView(new ArrayBuffer(_0xace72c));
  this.writeUInt8 = function (_0x51127d) {
    this.dataView.setUint8(this.len, _0x51127d);
    this.len += 1;
  };
  this.writeUInt16 = function (_0x4ba4bc) {
    this.dataView.setUint16(this.len, _0x4ba4bc, false);
    this.len += 2;
  };
  this.writeInt16 = function (_0x38f030) {
    this.dataView.setInt16(this.len, _0x38f030, false);
    this.len += 2;
  };
  this.writeUInt32 = function (_0x58b277) {
    this.dataView.setUint32(this.len, _0x58b277, false);
    this.len += 4;
  };
  this.readUInt8 = function () {
    var _0x48eb5b = this.dataView.getUint8(0);
    return _0x48eb5b;
  };
  this.writeString = function (_0xc88c47) {
    _0xc88c47 = a0_0xaad8f5(_0xc88c47);
    len = _0xc88c47.length;
    this.writeUInt16(_0xc88c47.length);
    for (var _0x307399 = 0; _0x307399 < len; _0x307399++) {
      this.writeUInt8(_0xc88c47.charCodeAt(_0x307399));
    }
  };
}
function a0_0x14a461(_0x5d66e5) {
  this.bytesArray = new Uint8Array(20);
  this.bytesLen = 0;
  this.rBitIndex = 1;
  this.rByteIndex = 0;
  this.getBool = function () {
    var _0x33cec2 = this.bytesArray[this.rByteIndex];
    var _0x367bf5 = a0_0x505509(_0x33cec2, this.rBitIndex) > 0;
    this.rBitIndex += 1;
    if (this.rBitIndex > 7) {
      this.rBitIndex = 1;
      this.rByteIndex += 1;
    }
    return _0x367bf5;
  };
  this.getInt0to3 = function () {
    return this.getIntWithXBits(2);
  };
  this.getIntWithXBits = function (_0x5bbedd) {
    var _0x34a5b3 = 0;
    for (var _0x11a2cd = 0; _0x11a2cd < _0x5bbedd; _0x11a2cd++) {
      var _0x37dda0 = this.getBool();
      _0x34a5b3 = a0_0x392a03(_0x34a5b3, _0x11a2cd, _0x37dda0);
    }
    return _0x34a5b3;
  };
  this.byteToStr = function (_0x25e4a5) {
    var _0xd2a35d = "";
    for (var _0x565404 = 0; _0x565404 < 8; _0x565404++) {
      _0xd2a35d += a0_0x505509(_0x25e4a5, _0x565404) > 0 ? "1" : "0";
    }
    return _0xd2a35d;
  };
  var _0x507f6b = true;
  do {
    var _0x3364e5 = _0x5d66e5.readUInt8();
    this.bytesArray[this.bytesLen++] = _0x3364e5;
    _0x507f6b = a0_0x505509(_0x3364e5, 0) > 0;
  } while (_0x507f6b);
}
a0_0x993fcb.prototype = {
  strokeW: 1,
  strokeColor: "#000000",
  multiLine: false,
  alpha: 1,
  _text: "",
  _color: "#000000",
  x: 0,
  y: 0,
  _fntSize: 16,
  _canvas: null,
  _ctx: null,
  _dirty: false,
  renderScale: 1.5,
  _scale: 1,
  width: 0,
  height: 0,
  setColor: function (_0x4a0054) {
    if (this._color != _0x4a0054) {
      this._color = _0x4a0054;
      this._dirty = true;
    }
  },
  setFontSize: function (_0xf3ad6e) {
    if (this._fntSize != _0xf3ad6e) {
      this._fntSize = _0xf3ad6e;
      this._dirty = true;
    }
  },
  setStroke: function (_0x37a330) {
    if (_0x37a330 != this.strokeW) {
      this.strokeW = _0x37a330;
      this._dirty = true;
    }
  },
  setText: function (_0x2e564b) {
    if (_0x2e564b != this._text) {
      this._text = _0x2e564b;
      this._dirty = true;
    }
  },
  getRenderedCanvas: function () {
    if (this._canvas == null) {
      this._canvas = document.createElement("canvas");
      this._ctx = this._canvas.getContext("2d");
    }
    if (this._dirty) {
      this._dirty = false;
      var _0x92de08 = this._canvas;
      var _0x32dba6 = this._ctx;
      var _0x114318 = this._text;
      var _0x1b0c3e = this._scale;
      var _0x4266b2 = this._fntSize * this.renderScale;
      var _0x530514 = _0x4266b2 + "px Arial";
      _0x32dba6.font = _0x530514;
      var _0x5e79fa = ~~(_0x4266b2 * 0.2);
      _0x32dba6.font = _0x530514;
      if (this.multiLine) {
        var _0xbedd68 = _0x32dba6.measureText("M").width * 1.2;
        var _0x1fd28f = _0x114318.split("\n");
        var _0x57fb3d = 0;
        for (var _0x16fcfe = 0; _0x16fcfe < _0x1fd28f.length; ++_0x16fcfe) {
          _0x57fb3d = Math.max(_0x57fb3d, _0x32dba6.measureText(_0x1fd28f[_0x16fcfe]).width);
        }
        this.width = (_0x57fb3d + 6) * _0x1b0c3e;
        this.height = (_0xbedd68 * _0x1fd28f.length + _0x5e79fa) * _0x1b0c3e;
        _0x92de08.width = this.width;
        _0x92de08.height = this.height;
        this.width /= this.renderScale;
        this.height /= this.renderScale;
        _0x32dba6.globalAlpha = this.alpha;
        _0x32dba6.font = _0x530514;
        if (this.strokeW > 0) {
          _0x32dba6.shadowOffsetX = this.strokeW;
          _0x32dba6.shadowOffsetY = this.strokeW;
          _0x32dba6.shadowColor = this.strokeColor;
        }
        _0x32dba6.fillStyle = this._color;
        _0x32dba6.textAlign = "center";
        var _0x42c47c = 3 + _0x92de08.width / 2;
        var _0x279b2c = _0x4266b2 - _0x5e79fa / 2;
        for (var _0x16fcfe = 0; _0x16fcfe < _0x1fd28f.length; ++_0x16fcfe) {
          _0x32dba6.fillText(_0x1fd28f[_0x16fcfe], _0x42c47c, _0x279b2c);
          _0x279b2c += _0xbedd68;
        }
      } else {
        this.width = (_0x32dba6.measureText(_0x114318).width + 6) * _0x1b0c3e;
        this.height = (_0x4266b2 + _0x5e79fa) * _0x1b0c3e;
        _0x92de08.width = this.width;
        _0x92de08.height = this.height;
        this.width /= this.renderScale;
        this.height /= this.renderScale;
        _0x32dba6.globalAlpha = this.alpha;
        _0x32dba6.font = _0x530514;
        if (this.strokeW > 0) {
          _0x32dba6.shadowOffsetX = this.strokeW;
          _0x32dba6.shadowOffsetY = this.strokeW;
          _0x32dba6.shadowColor = this.strokeColor;
        }
        _0x32dba6.fillStyle = this._color;
        _0x32dba6.fillText(_0x114318, 3, _0x4266b2 - _0x5e79fa / 2);
      }
    }
    return this._canvas;
  },
  draw: function () {
    if (this._text) {
      var _0x3aa6f8 = this.renderScale;
      this.updateColor();
      var _0x12c02d = this.getRenderedCanvas();
      var _0x3ed340 = _0x12c02d.width / _0x3aa6f8;
      var _0x3dce71 = _0x12c02d.height / _0x3aa6f8;
      this.setPos(_0x3ed340, _0x3dce71);
      a0_0x1306ae.drawImage(_0x12c02d, this.x - _0x3ed340 / 2, this.y - _0x3dce71 / 2, _0x3ed340, _0x3dce71);
    }
  },
  setPos: function (_0x13b2c9, _0x4a8f74) {},
  updateColor: function () {}
};
function a0_0x993fcb(_0x4bc90f, _0x59b75b) {
  if (_0x4bc90f) {
    this._fntSize = _0x4bc90f;
  }
  if (_0x59b75b) {
    this._color = _0x59b75b;
  }
}
window.CachedText = a0_0x993fcb;
var a0_0x515556 = [];
a0_0x515556.push(["1", "2", "3", "4", "5", "6", "7", "8"]);
a0_0x515556.push(["q", "e", "r", "t", "y", "u", "i", "o"]);
a0_0x515556.push(["a", "d", "f", "g", "h", "j", "k", "l"]);
a0_0x515556.push(["z", "x", "c", "v", "b", "n", "m", ","]);
const a0_0x2b955f = [];
function a0_0x4e009e(_0x575b7c, _0x326d2e, _0xf551f2, _0x5873d4, _0x4ae923, _0x3ea0ac, _0x37fdfe, _0x409f34, _0x4a9d2e, _0x338d10, _0x5096e2, _0x532a5e) {
  this.x = _0x575b7c;
  this.y = _0x326d2e;
  this.w = _0xf551f2;
  this.h = _0x5873d4;
  this.aniT = _0x4ae923;
  this.species = _0x37fdfe;
  this.subSpecies = _0x409f34;
  this.premiumSkinType = _0x4a9d2e;
  this.teamID = 0;
  this.btnHotkey = "0";
  this.imgSizeF = 0.5;
  const _0x4bf775 = !_0x532a5e && _0x37fdfe > 0;
  this.buttonTXT = new a0_0x993fcb(10, _0x4bf775 ? "gold" : "white");
  this.buttonTXT.renderScale = 1.5;
  this.buttonTXT.multiLine = true;
  this.buttonTXT.setText(a0_0x43fa42(_0x4ae923).aniName);
  this.isHighLighted = false;
  this.biomeNum = _0x3ea0ac;
  var _0x2e1492 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x4ae923);
  _0x2e1492.animalType = _0x4ae923;
  _0x2e1492.animalSpecies = this.species;
  _0x2e1492.skinThemeID = _0x5096e2;
  _0x2e1492.animalSubSpecies = this.subSpecies;
  _0x2e1492.animalPremiumSkin = this.premiumSkinType;
  _0x2e1492.mopeSeasonID = _0x338d10;
  _0x2e1492.curBiome = _0x3ea0ac;
  if (_0x2e1492.animalPremiumSkin > 0) {
    _0x2e1492.setSparkleInterval(a0_0x39b824(5, 10), a0_0x39b824(2, 3));
  }
  _0x2e1492.flag_isDevMode = a0_0x4a41e3;
  _0x2e1492.lava = 100;
  var _0x4fdf3a = "" + _0x2e1492.animalInfo().aniName;
  _0x4fdf3a = _0x4fdf3a.split(" ").join("\n");
  this.buttonTXT.setText(_0x4fdf3a);
  _0x2e1492.x = _0x2e1492.ox = _0x2e1492.nx = 0;
  _0x2e1492.y = _0x2e1492.oy = _0x2e1492.ny = 0;
  _0x2e1492.rad = _0x2e1492.oRad = _0x2e1492.nRad = 30;
  _0x2e1492.alwaysPlainOutline = true;
  this.drawnAniObj = _0x2e1492;
  this.buttonScaleF = 1;
  this.setHotKey = function (_0x56ad05) {
    if (_0x56ad05) {
      this.btnHotkey = _0x56ad05;
      this.hotkey = new a0_0x993fcb(10, "white");
      this.hotkey.renderScale = 1.5;
      this.hotkey.multiLine = true;
      this.hotkey.setText(this.btnHotkey.toUpperCase());
    }
  };
  this.setMouseHover = function (_0x5aa14f) {
    this.drawnAniObj.isMouseHovering = _0x5aa14f;
  };
  this.testPosHitsButton = function (_0x279270, _0x463532) {
    if (_0x279270 < this.x - this.w / 2 || _0x279270 > this.x + this.w / 2) {
      return false;
    }
    if (_0x463532 < this.y - this.w / 2 || _0x463532 > this.y + this.w / 2) {
      return false;
    } else {
      return true;
    }
  };
  this.setPosAndSize = function (_0x64f3e6, _0x1c3025, _0x10424d, _0x2211b6, _0x33be25, _0xd95543) {
    this.w = _0x10424d;
    this.h = _0x2211b6;
    this.x = _0x64f3e6 + _0x10424d * (0.5 - _0x33be25);
    this.y = _0x1c3025 + _0x2211b6 * (0.5 - _0xd95543);
  };
  this.draw = function (_0x46d352) {
    a0_0x1306ae.save();
    a0_0x1306ae.translate(this.x, this.y);
    a0_0x1306ae.scale(this.buttonScaleF, this.buttonScaleF);
    var _0x2340a3 = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha = 0.5;
    switch (this.biomeNum) {
      case 0:
        a0_0x1306ae.fillStyle = "#26A73A";
        break;
      case 1:
        a0_0x1306ae.fillStyle = "#1C91B8";
        break;
      case 2:
        a0_0x1306ae.fillStyle = "#B2B2B2";
        break;
      case 3:
        a0_0x1306ae.fillStyle = "#ff6000";
        break;
      case 4:
        a0_0x1306ae.fillStyle = "#9F8641";
        break;
      case 5:
        a0_0x1306ae.fillStyle = "#00db22";
        break;
    }
    a0_0x1306ae.fillRect(0 - this.w / 2, 0 - this.h / 2, this.w, this.h);
    if (this.isHighLighted) {
      a0_0x1306ae.fillStyle = "white";
      a0_0x1306ae.globalAlpha = _0x2340a3 * 0.2;
      a0_0x1306ae.fillRect(0 - this.w / 2, 0 - this.h / 2, this.w, this.h);
    }
    a0_0x1306ae.globalAlpha = _0x2340a3;
    var _0x53c993 = this.w * 0.225;
    this.drawnAniObj.nRad = this.drawnAniObj.rad = _0x53c993;
    a0_0x1306ae.save();
    a0_0x1306ae.scale(2, 2);
    this.drawnAniObj.teamID = a0_0x4da0d1;
    this.drawnAniObj.draw();
    a0_0x1306ae.restore();
    var _0x2efabe = this.imgSizeF / 0.5;
    var _0x440668 = 10 + _0x2efabe * 10;
    if (_0x53c993 > 15) {
      this.buttonTXT.setFontSize(_0x440668 * a0_0x2c02fa);
      this.buttonTXT.x = 0;
      this.buttonTXT.y = -this.h * 0.5 * 0.75;
      this.buttonTXT.y += this.h * 0.1;
      this.buttonTXT.draw();
    }
    if (this.hotkey && !a0_0x2ac9fb) {
      a0_0x1306ae.save();
      if (a0_0x56bbb3 != 2) {
        a0_0x1306ae.globalAlpha = 0.3;
        this.hotkey.setFontSize(a0_0x2c02fa * 16);
        this.hotkey.x = -this.w / 2 + a0_0x2c02fa * 10;
        this.hotkey.y = this.h / 2 - a0_0x2c02fa * 12;
        this.hotkey.draw();
      }
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  };
}
const a0_0x12346d = async ({
  animalType: _0x2a7757,
  animalSpecies: _0x2202fd,
  animalSubSpecies: _0x530873,
  premiumSkinType: _0xd573a5,
  mopeSeasonID: _0x14c583,
  skinThemeID: _0x31bbb3,
  biomeNum: _0x4f37d2
}) => {
  const _0x5e1a25 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x2a7757);
  _0x5e1a25.animalType = _0x2a7757;
  _0x5e1a25.animalSpecies = _0x2202fd;
  _0x5e1a25.animalSubSpecies = _0x530873;
  _0x5e1a25.animalPremiumSkin = _0xd573a5;
  _0x5e1a25.mopeSeasonID = _0x14c583;
  _0x5e1a25.skinThemeID = _0x31bbb3;
  _0x5e1a25.curBiome = _0x4f37d2;
  return _0x5e1a25.getImageData();
};
var a0_0x27e5b8 = 1;
const a0_0xfa4986 = async function (_0x549744, _0x2e4d2e) {
  a0_0x2b955f.length = 0;
  var _0x125b53 = _0x2e4d2e == 1;
  var _0x8104b9 = _0x549744.readUInt8();
  var _0x3257e1 = _0x549744.readUInt8();
  var _0x21ca7e = _0x549744.readUInt8();
  var _0xa5ac5 = _0x549744.readUInt8();
  a0_0x19ab74 = true;
  a0_0x27e5b8 = _0x21ca7e;
  a0_0x5cf80a = 0;
  a0_0x121f07 = [];
  a0_0x5a6ed0 = _0x125b53;
  a0_0x5c11d6 = +new Date();
  a0_0x42386d = a0_0x5c11d6 + _0x3257e1 * 1000;
  const _0x18d3bb = [];
  for (var _0x43a988 = 0; _0x43a988 < _0xa5ac5; _0x43a988++) {
    var _0x5193fa = _0x549744.readUInt8();
    var _0x311861 = _0x549744.readUInt8();
    var _0x5eb6d5 = _0x549744.readUInt8();
    var _0x526576 = _0x549744.readUInt8();
    var _0x5876ad = _0x549744.readUInt8();
    var _0x2bf63b = _0x549744.readUInt8();
    var _0x559c23 = _0x549744.readUInt8();
    var _0x1838a2 = _0x549744.readUInt8() == 1;
    var _0x55702f = _0x549744.readString();
    var _0x336f42 = _0x43a988;
    var _0x10c71c = _0x55702f != null && _0x55702f !== "null";
    var _0x803b12 = 0;
    var _0x1c5c0c = null;
    if (_0x55702f != null) {
      if (a0_0x5092e6.shop != null && a0_0x5092e6.shop.allItems != null) {
        var _0x306d68 = a0_0x5092e6.shop.allItems["" + _0x55702f];
        if (_0x306d68) {
          _0x1c5c0c = _0x306d68;
          _0x803b12 = _0x306d68.price > 0 ? _0x306d68.price : 0;
        }
      }
    }
    _0x1838a2 = _0x1838a2 || _0x803b12 == 0;
    const _0x19bf88 = {
      abilities: [],
      anAniT: _0x311861,
      biomeNum: _0x5eb6d5,
      species: _0x526576,
      subSpecies: _0x5876ad,
      premiumSkinType: _0x2bf63b,
      season: _0x8104b9,
      skinThemeID: _0x559c23,
      isBought: _0x1838a2,
      itemId: _0x55702f,
      coinsPrice: _0x803b12,
      itemIndex: _0x336f42,
      choiceIndex: _0x336f42,
      shopItem: _0x1c5c0c,
      isShopItem: _0x10c71c,
      forLvl: _0x21ca7e
    };
    const _0x541dad = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x311861);
    _0x541dad.animalType = _0x311861;
    _0x541dad.animalSpecies = _0x526576;
    _0x541dad.animalSubSpecies = _0x5876ad;
    _0x541dad.animalPremiumSkin = _0x2bf63b;
    _0x541dad.mopeSeasonID = _0x5193fa;
    _0x541dad.skinThemeID = _0x559c23;
    _0x541dad.curBiome = _0x5eb6d5;
    _0x19bf88.abilities = _0x541dad.getAbilityInfo();
    _0x19bf88.itemId = a0_0x5d394a.getClassForGameObjType(a0_0x24738f, _0x311861).name;
    if (_0x541dad.animalInfo) {
      const _0x206bdb = _0x541dad.animalInfo();
      _0x19bf88.itemId = _0x206bdb.aniName;
      _0x19bf88.name = _0x206bdb.aniName;
    }
    _0x19bf88.shopImage = _0x541dad.getUpgradeImagePath();
    a0_0x2b955f.push(_0x19bf88);
  }
  a0_0x4b90a8($MOPE_AD_LAYOUTS.UPGRADE);
};
const a0_0x2750da = function () {
  if (!a0_0x2ac9fb) {
    a0_0x4b90a8($MOPE_AD_LAYOUTS.UPGRADE);
  }
};
const a0_0x3e07d7 = function () {};
const a0_0x15dcbf = function () {};
var a0_0x35e268 = false;
const a0_0x4a71ce = function (_0x4e1450, _0x45e404, _0x54ae7c, _0x19c59e) {
  var _0x3fc0ea = 100;
  var _0x4de0b2 = 0.5;
  if (window.matchMedia("(orientation: portrait)").matches) {
    a0_0x35e268 = false;
  }
  if (window.matchMedia("(orientation: landscape)").matches) {
    a0_0x35e268 = true;
  }
  var _0x2f7ff2 = window.innerWidth / 2;
  _0x3fc0ea = Math.max(80, _0x2f7ff2 / 7);
  _0x3fc0ea = Math.min(100, _0x3fc0ea);
  var _0x552c77 = 7;
  if (a0_0x2ac9fb && !a0_0x35e268) {
    _0x552c77 = 4;
  }
  var _0x576993 = _0x3fc0ea * a0_0x2c02fa;
  var _0x360f35 = 10;
  var _0xa0d619 = _0x576993 + 20;
  var _0x50ffea = Math.max(0, _0x4e1450.length);
  if (_0x4e1450.length > _0x552c77 + 1) {
    _0x50ffea = Math.min(_0x552c77, _0x50ffea);
  }
  var _0x5754d3 = _0x50ffea * (_0x360f35 + _0x576993) + (_0xa0d619 - _0x576993);
  var _0x54dcf1 = a0_0x2bf7a6 / 2 - _0x5754d3 / 2;
  var _0x3192ef = _0x45e404;
  var _0x382af6 = _0x576993 * 1.15;
  var _0x485bce = a0_0x2bf7a6 / 2;
  _0x5754d3 = _0x50ffea * _0x382af6;
  _0x54dcf1 = _0x485bce - _0x5754d3 / 2 + _0x382af6 / 2;
  var _0x58c079 = _0x4e1450.length;
  var _0x4db432 = 0;
  for (var _0x1642aa = 0; _0x1642aa < _0x58c079; _0x1642aa++) {
    var _0x57cd87 = _0x4e1450[_0x1642aa];
    if (_0x1642aa > 0 && _0x58c079 > _0x552c77 + 1) {
      if (_0x1642aa % _0x552c77 == 0) {
        _0x54ae7c++;
        _0x4db432 = 0;
        _0x3192ef += _0x382af6 * 1.15;
        var _0x41fba7 = _0x58c079 - _0x1642aa;
        if (_0x41fba7 < _0x552c77) {
          _0x50ffea = _0x41fba7;
        } else {
          _0x50ffea = _0x552c77;
        }
        _0x5754d3 = _0x50ffea * _0x382af6;
        _0x54dcf1 = a0_0x2bf7a6 / 2 - _0x5754d3 / 2 + _0x382af6 / 2;
      }
    }
    if (_0x19c59e && _0x1642aa == 0) {
      _0x57cd87.buttonScaleF = 1.2;
    } else {
      _0x57cd87.buttonScaleF = 1;
    }
    _0x57cd87.w = _0x576993;
    _0x57cd87.h = _0x576993;
    _0x57cd87.x = _0x54dcf1;
    _0x57cd87.y = _0x3192ef;
    _0x54dcf1 += _0x382af6 / 2 * _0x57cd87.buttonScaleF + _0x382af6 / 2;
    if (_0x54ae7c < a0_0x515556.length) {
      _0x57cd87.setHotKey(a0_0x515556[_0x54ae7c - 1][_0x4db432].toUpperCase());
    }
    _0x4db432++;
  }
  a0_0x1306ae.globalAlpha = a0_0x5cf80a;
  for (var _0x1642aa = 0; _0x1642aa < _0x4e1450.length; _0x1642aa++) {
    var _0x57cd87 = _0x4e1450[_0x1642aa];
    _0x57cd87.imgSizeF = _0x4de0b2;
    _0x57cd87.draw();
  }
  return _0x3192ef;
};
const a0_0x28d494 = function (_0x233e7f) {
  if (_0x233e7f.isBought || !a0_0x5887c1) {
    const _0x5a01db = _0x233e7f.hasOwnProperty("choiceIndex") ? _0x233e7f.choiceIndex : a0_0x121f07.indexOf(_0x233e7f);
    a0_0x5ad45f({
      choiceIndex: _0x5a01db
    });
    if (a0_0x5a6ed0) {
      a0_0x643790 = false;
    }
    a0_0x8032f3();
  } else {
    var _0x1c8f99 = a0_0x5092e6.shop.allItems["" + _0x233e7f.itemId];
    if (_0x1c8f99) {
      _0x1c8f99.itemIndex = _0x233e7f.itemIndex;
      a0_0x5092e6.upgradeMenu_selectedItem = _0x1c8f99;
      a0_0x5092e6.upgradeMenu_callback = function () {
        a0_0x5092e6.buyConfirmationOverlay(a0_0x5092e6.upgradeMenu_selectedItem);
      };
      if (!a0_0x2d3651) {
        a0_0x5092e6.actionBtn = "login";
      }
      a0_0x1cd733();
    }
  }
};
a0_0x96c62c.prototype = {
  x: 0,
  y: 0,
  w: 0,
  h: 0,
  visible: true,
  buttonTXT: null,
  pressed: false,
  pressedTouchID: -1,
  touchEnabled: true,
  testPosHitsButton: function (_0x402e09, _0x418128) {
    if (_0x402e09 < this.x - this.w / 2 || _0x402e09 > this.x + this.w / 2) {
      return false;
    }
    if (_0x418128 < this.y - this.w / 2 || _0x418128 > this.y + this.w / 2) {
      return false;
    } else {
      return true;
    }
  },
  setPosAndSize: function (_0x191d2e, _0x1058ec, _0x105c5b, _0x45c37c, _0x33658c, _0x1f73c7) {
    this.w = _0x105c5b;
    this.h = _0x45c37c;
    this.x = _0x191d2e + _0x105c5b * (0.5 - _0x33658c);
    this.y = _0x1058ec + _0x45c37c * (0.5 - _0x1f73c7);
  },
  onButtonTouchStart: function () {},
  onButtonTouchEnd: function () {
    console.log("button touch ended!");
  }
};
function a0_0x96c62c(_0x1760cc) {
  this.buttonTXT = new a0_0x993fcb(10, "white");
  this.buttonTXT.renderScale = 1.5;
  this.buttonTXT.setText(_0x1760cc);
  this.draw = function () {
    if (!this.visible) {
      return;
    }
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.2;
    a0_0x1306ae.fillStyle = this.pressed ? "white" : "#000000";
    a0_0x1306ae.fillRect(this.x - this.w / 2, this.y - this.h / 2, this.w, this.h);
    a0_0x1306ae.globalAlpha = 0.2;
    this.buttonTXT.setFontSize(a0_0x2c02fa * 25);
    this.buttonTXT.x = this.x;
    this.buttonTXT.y = this.y;
    this.buttonTXT.draw();
    a0_0x1306ae.restore();
  };
}
window.TouchButton = a0_0x96c62c;
function a0_0x30c4b4() {
  this.buttonTXT = new a0_0x993fcb(10, "white");
  this.buttonTXT.renderScale = 1.5;
  this.isMiniRechargeBut = false;
  this.abil_Type = 0;
  this.abil_possible = this.abil_usable = this.abil_recharging = this.abil_active = false;
  this.abil_rechargeEndT = 0;
  this.abil_rechargeTotalT = 0;
  this.abil_rechargeBarA = 0;
  this.abil_avilableA = 0;
  this.drawAbilityImage = function (_0x35583d, _0x698b1b) {
    var _0x512576 = a0_0x283a01[a0_0x15e4d1];
    var _0x59a7fc = "";
    if (_0x512576) {
      _0x59a7fc = "assets/s/" + _0x512576.mopeSeasonID;
    } else {
      _0x59a7fc = "assets/s/" + a0_0x31d65e;
    }
    if (this.abil_Type == a0_0x56e05b || this.abil_Type == a0_0x12424a || this.abil_Type == a0_0x522c78) {
      var _0x54535f = Math.trunc(a0_0x24806e / 120) % 5;
      var _0x1bdee6 = _0x35583d.speciesType;
      var _0x1aee2d = a0_0x19ebc9(_0x59a7fc + "/gameobj/18/" + _0x1bdee6 + "/" + _0x54535f + ".png");
      if (_0x1aee2d) {
        var _0x53500d = this.w * 0.4;
        var _0xd39cb0 = 0;
        if (a0_0x283a01[a0_0x15e4d1]) {
          var _0x25a3b7 = a0_0x283a01[a0_0x15e4d1].spawnTime;
          var _0x335095 = (a0_0x24806e - _0x25a3b7) / 1000;
          _0xd39cb0 = a0_0x423a9f(_0x335095, 1, 10, 2);
        }
        a0_0x1306ae.globalAlpha = _0x698b1b * this.abil_avilableA;
        a0_0x1306ae.drawImage(_0x1aee2d, -_0x53500d, -_0x53500d * 0.85 - _0xd39cb0, _0x53500d * 2, _0x53500d * 2 + _0xd39cb0);
      }
    } else {
      var _0x464119 = _0x35583d.abilImg;
      if (_0x512576 && this.abil_Type == a0_0x29b0dd) {
        _0x464119 = "assets/s/" + _0x512576.mopeSeasonID + "/" + this.getDiveImage(_0x512576);
      } else {
        _0x464119 = _0x59a7fc + "/" + _0x464119;
      }
      if (_0x464119.indexOf("assets/") > -1) {
        var _0x1aee2d = a0_0x19ebc9(_0x464119);
        if (_0x1aee2d) {
          var _0x53500d = this.w * 0.4;
          var _0x38f2ae = _0x53500d;
          var _0x341741 = _0x53500d;
          a0_0x1306ae.globalAlpha = _0x698b1b * this.abil_avilableA;
          if (_0x1aee2d.height == 600) {
            _0x341741 = _0x53500d * 1.1;
          }
          a0_0x1306ae.drawImage(_0x1aee2d, -_0x38f2ae, -_0x341741 * 0.85, _0x38f2ae * 2, _0x341741 * 2);
        }
      }
    }
  };
  this.getDiveImage = function (_0x5b745c) {
    var _0x4d321d = "img/ability_dive.png";
    if (_0x5b745c && this.abil_Type == a0_0x29b0dd) {
      if (_0x5b745c.flag_inLava && !_0x5b745c.flag_inWater) {
        _0x4d321d = "img/ability_dive_lava.png";
      } else if (_0x5b745c.flag_eff_isInMud && !_0x5b745c.flag_inWater) {
        _0x4d321d = "img/ability_diveMud.png";
      }
    }
    return _0x4d321d;
  };
  this.draw = function () {
    if (!this.visible) {
      return;
    }
    this.abil_rechargeBarA += ((this.abil_recharging ? 1 : 0) - this.abil_rechargeBarA) * 0.1;
    this.abil_avilableA += ((this.abil_usable || this.abil_active ? 1 : 0.2) - this.abil_avilableA) * 0.1;
    if (this.isMiniRechargeBut) {
      this.h = this.w * 0.6;
    }
    if (this.abil_possible) {
      var _0x1b41a5 = 1;
      a0_0x1306ae.save();
      if (this.isMiniRechargeBut) {
        this.h = this.w * 0.8;
        a0_0x1306ae.translate(this.x, this.y + this.h * 0.36);
        a0_0x1306ae.scale(0.65, 0.65);
      } else {
        a0_0x1306ae.translate(this.x, this.y);
      }
      var _0x208e99 = this.abil_avilableA * 0.2;
      var _0x222699 = this.pressed || a0_0x44f8a5 ? "#CECECE" : "#000000";
      if (this.abil_active) {
        _0x222699 = a0_0x52f121;
        _0x208e99 = 0.7;
      }
      a0_0x1306ae.fillStyle = _0x222699;
      a0_0x1306ae.globalAlpha = _0x1b41a5 * _0x208e99;
      a0_0x1306ae.fillRect(0 - this.w / 2, 0 - this.h / 2, this.w, this.h);
      var _0x55f9c0 = null;
      var _0x1b9be4 = a0_0x283a01[a0_0x15e4d1];
      if (!_0x1b9be4) {
        _0x1b9be4 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, a0_0x3bddc6);
        _0x1b9be4.animalType = a0_0x3bddc6;
        _0x1b9be4.animalSpecies = a0_0x2d877f;
        _0x1b9be4.animalSubSpecies = a0_0x1562d9;
      }
      if (_0x1b9be4 && this.abil_Type != a0_0x29b0dd) {
        _0x55f9c0 = _0x1b9be4.getAbilityInfo(this.abil_Type);
      } else {
        _0x55f9c0 = a0_0x5285b4(this.abil_Type);
      }
      this.drawAbilityImage(_0x55f9c0, _0x1b41a5);
      this.buttonTXT.setText(_0x55f9c0.abilName);
      this.buttonTXT.multiLine = true;
      this.buttonTXT.setFontSize(a0_0x2c02fa * 25);
      this.buttonTXT.x = 0;
      this.buttonTXT.y = -this.w * 0.35;
      this.buttonTXT.draw();
      var _0x88567e = Math.max(0, this.abil_rechargeEndT - a0_0x24806e);
      this.abil_rechargeBarA += ((this.abil_recharging ? 1 : 0) - this.abil_rechargeBarA) * 0.1;
      if (this.abil_rechargeBarA > 0.01) {
        a0_0x1306ae.globalAlpha = _0x1b41a5 * this.abil_rechargeBarA * 0.35;
        a0_0x1306ae.fillStyle = "#000000";
        var _0x4e9c98 = 0;
        var _0x4a0318 = 0;
        var _0x5894e7 = this.w * 0.8;
        var _0x189006 = this.h * 0.5;
        a0_0x1306ae.fillRect(_0x4e9c98 - _0x5894e7 / 2, _0x4a0318 - _0x189006 / 2, _0x5894e7, _0x189006);
        a0_0x1306ae.globalAlpha = _0x1b41a5 * this.abil_rechargeBarA * 1;
        a0_0x1306ae.fillStyle = "#F3C553";
        a0_0x1306ae.fillRect(_0x4e9c98 - _0x5894e7 / 2, _0x4a0318 - _0x189006 / 2, _0x5894e7 * (_0x88567e / this.abil_rechargeTotalT), _0x189006);
      }
      a0_0x1306ae.restore();
    }
  };
}
a0_0x30c4b4.prototype = Object.create(a0_0x96c62c.prototype);
window.AbilityButton = a0_0x30c4b4;
const a0_0x319791 = 1;
const a0_0x456c1d = 2;
const a0_0x52c50a = 3;
const a0_0x48706f = 4;
const a0_0xa8ffeb = 5;
const a0_0x15c47d = 6;
const a0_0x47afd6 = 7;
const a0_0x27e717 = 8;
const a0_0x22081e = 9;
const a0_0x2d1dc0 = 10;
const a0_0x2a4fbd = 11;
const a0_0x3df8e7 = 12;
const a0_0x429af6 = 13;
const a0_0x3c059a = 14;
const a0_0x3e87ad = 15;
const a0_0xb449bb = 16;
const a0_0x1cd016 = 17;
const a0_0x2e66ef = 18;
const a0_0x2646c9 = 19;
const a0_0x118723 = 20;
const a0_0x5e9df9 = 21;
const a0_0x4f0e4b = 22;
const a0_0x3cd62b = 23;
const a0_0x201e4 = 24;
const a0_0x17c875 = 25;
const a0_0x43ecf0 = 26;
const a0_0x470e13 = 27;
const a0_0x1c36d3 = 28;
const a0_0xd7b124 = 29;
const a0_0x345517 = 30;
const a0_0x4b173c = 255;
const a0_0x2c67f9 = 51;
const a0_0x1ac75b = 52;
const a0_0x3fb5cb = 53;
const a0_0x30a3c8 = 54;
const a0_0x470e1e = 55;
const a0_0x2f8a23 = 56;
const a0_0xe44795 = 58;
const a0_0x4c2e24 = 59;
const a0_0x3d63e4 = 60;
const a0_0x3f036b = 61;
const a0_0x21d905 = 62;
const a0_0xad0cb4 = 63;
const a0_0x4aa930 = 64;
const a0_0x1e3b11 = 65;
const a0_0x2c6aca = 66;
const a0_0x39a109 = 67;
const a0_0x5656ad = 68;
const a0_0x1d6d6c = 69;
const a0_0x200b1a = 70;
const a0_0x5fa91f = 71;
const a0_0x494200 = 72;
const a0_0x40b72e = 81;
const a0_0x205b23 = 82;
const a0_0x3afc9b = 83;
const a0_0x254bd9 = 84;
const a0_0x36f6ab = 100;
const a0_0x3c35a2 = 101;
const a0_0x1849c3 = 102;
const a0_0x487f03 = 103;
const a0_0x26a142 = 104;
const a0_0xb635c1 = 105;
const a0_0x8c0fa0 = 106;
const a0_0x3fc395 = 107;
const a0_0x207b14 = 108;
const a0_0xc54bfc = 109;
const a0_0xfacff7 = 110;
const a0_0x3c4b07 = 111;
const a0_0x2a921a = 112;
const a0_0x523364 = 113;
const a0_0x3f29d3 = 114;
function a0_0x472572(_0x4af645) {
  _0x4af645 = _0x4af645.split("+").join(" ");
  var _0x2dca87 = {};
  var _0xed8a39;
  var _0x8fce2d = /[?&]?([^=]+)=([^&]*)/g;
  while (_0xed8a39 = _0x8fce2d.exec(_0x4af645)) {
    _0x2dca87[decodeURIComponent(_0xed8a39[1])] = decodeURIComponent(_0xed8a39[2]);
  }
  return _0x2dca87;
}
var a0_0x27d3af = 1000 / 120;
let a0_0x1dd0d0 = true;
var a0_0xf0fff1 = a0_0x472572(document.location.search);
var a0_0x34bad1 = a0_0xf0fff1.videoson > 0;
var a0_0xf0fff1 = a0_0x472572(document.location.search);
var a0_0x3ff544 = {
  isAndroid: function () {
    return navigator.userAgent.match(/Android/i);
  },
  isBlackBerry: function () {
    return navigator.userAgent.match(/BlackBerry/i);
  },
  isIOS: function () {
    return navigator.userAgent.match(/iPhone|iPad|iPod/i);
  },
  isOpera: function () {
    return navigator.userAgent.match(/Opera Mini/i);
  },
  isWindows: function () {
    return navigator.userAgent.match(/IEMobile/i) || navigator.userAgent.match(/WPDesktop/i);
  },
  isAny: function () {
    return a0_0x3ff544.isAndroid() || a0_0x3ff544.isBlackBerry() || a0_0x3ff544.isIOS() || a0_0x3ff544.isOpera() || a0_0x3ff544.isWindows();
  }
};
var a0_0x2ac9fb = a0_0x212dd3() != null;
var a0_0x26cdc8 = a0_0x2ac9fb && a0_0x3ff544.isIOS();
var a0_0x4eb775 = a0_0x2ac9fb && !a0_0x26cdc8;
var a0_0x3c77d3 = a0_0x3ff544.isAny();
if (a0_0x2ac9fb) {
  document.querySelector("#discordLoginBtn").style.display = "none";
  if (a0_0x4eb775) {
    document.querySelector("#appleLoginBtn").style.display = "none";
  }
}
if (a0_0x2ac9fb) {
  document.querySelector("#discordLoginBtn").style.display = "none";
  if (a0_0x4eb775) {
    document.querySelector("#appleLoginBtn").style.display = "none";
  }
}
var a0_0x26bfcb = 0.175;
var a0_0x5c5eff = "#3FBA54";
var a0_0x2751ed = "#3FBA54";
var a0_0x49d058 = "#f7f7f7";
var a0_0x59eaa4 = "#09992F";
var a0_0x4cf795 = "#007ec0";
var a0_0x8f609e = "white";
var a0_0x128411 = "#8a7908";
var a0_0x4e3f72 = "#1aad41";
var a0_0x39c987 = "#bf4f0b";
var a0_0x30c000 = "#06912b";
var a0_0x29fed4 = "#09992F";
var a0_0x52e0b8 = "#8CCEF4";
var a0_0x41d6b3 = "#4E66E4";
var a0_0xcf4b9b = "#ff6000";
var a0_0x10973d = "#4854a2";
var a0_0x5a7ca5 = a0_0x10973d;
var a0_0x519c59 = "#bfaf43";
var a0_0x1c0072 = "#d6c348";
var a0_0x4f596c = "#c8b745";
var a0_0xc6e5ca = "#F35F53";
var a0_0x2dfbd1 = "#CF6259";
var a0_0x345b04 = "#FF911E";
var a0_0x1eb835 = "#C67019";
var a0_0xbd6cd0 = "#25b645";
var a0_0x2b041b = "#604729";
var a0_0x13e244 = "#8A681B";
var a0_0x1838b8 = "#EF3C31";
var a0_0x52f121 = "#4AE05E";
var a0_0x2a9566 = "#8C9688";
var a0_0x18e207 = "#878053";
var a0_0x5aeb79 = "#328ca2";
var a0_0x124aeb = "rgba(50,140,162,0.5)";
var a0_0xad74f7 = "#ff884c";
var a0_0x58b2d0 = "#007fa9";
var a0_0x23e8e2 = "#b0a13b";
var a0_0x59f977 = true;
var a0_0x6f38e9 = true;
var a0_0x1cb9c7 = true;
var a0_0x2021c9 = true;
var a0_0x4ba546 = true;
var a0_0x3bd5bb = true;
var a0_0x31d65e = 1;
var a0_0x3dcb26 = false;
var a0_0x5387c4 = null;
let a0_0x36aa16 = false;
let a0_0x428d04 = false;
let a0_0x6c3e27 = false;
let a0_0x1223bb = false;
let a0_0x6e50c4 = false;
let a0_0x1f790f = a0_0x57a669;
let a0_0x1b9e17 = a0_0x57a669;
let a0_0x26adb6 = 400;
let a0_0x4e2f9d = 0;
var a0_0x5402e4 = false;
var a0_0x3078a5 = 0;
var a0_0x185cf0 = "";
var a0_0x218094 = 0;
var a0_0x5d69d3 = {};
var a0_0x42a1c7 = 0;
var a0_0x5c9e95 = 0;
var a0_0x29a4a4 = 0;
function a0_0x1595c9(_0x4cf072) {
  switch (_0x4cf072) {
    case a0_0x5986dd:
      return "ocean";
    case a0_0x46c6b6:
      return "arctic";
    case a0_0x44697a:
      return "desert";
    case a0_0x2f1e00:
      return "volcano";
    case a0_0x4baee2:
      return "forest";
    case a0_0x506ba5:
      return "land";
    default:
      return "land";
  }
}
function a0_0x4e8ba0(_0x439f46) {
  switch (_0x439f46) {
    case a0_0x5986dd:
      return a0_0x4cf795;
    case a0_0x46c6b6:
      return a0_0x8f609e;
    case a0_0x44697a:
      return a0_0x128411;
    case a0_0x2f1e00:
      return a0_0x39c987;
    case a0_0x4baee2:
      return a0_0x30c000;
    case a0_0x506ba5:
    default:
      return a0_0x59eaa4;
  }
}
var a0_0xd0b49 = [];
var a0_0x24806e = +new Date();
var a0_0x55801d = +new Date();
var a0_0x4da0d1 = 0;
var a0_0x59c93b = false;
var a0_0x2b2d22 = 0;
var a0_0x38d11f = null;
var a0_0x13885f = false;
var a0_0x22ffd4 = false;
var a0_0x290095 = false;
var a0_0x259b84 = false;
var a0_0x328318 = null;
var a0_0xed1f98 = 0;
var a0_0x4ec0cb = 0;
var a0_0xef9357 = 0;
var a0_0x4727f1 = 0;
var a0_0x14527e = 0;
var a0_0x325969 = 0;
var a0_0xead936 = [];
var a0_0x5663e5 = false;
var a0_0x2f8749 = 0;
var a0_0x357f25 = null;
var a0_0x5bd21d = false;
var a0_0x71c10a = 0;
var a0_0x4a41e3 = false;
var a0_0x396cf5 = false;
var a0_0x427985 = 0;
var a0_0xcc16e4 = false;
var a0_0x3c96dc = false;
var a0_0x368317 = document.getElementById("gCanvas");
var a0_0x37478e = false;
var a0_0x10e951 = null;
var a0_0x105b76 = null;
var a0_0x70cda0 = 0;
var a0_0xbb87b5 = 0;
var a0_0x10e94d = 0;
var a0_0x1ea48d = 0;
var a0_0x1306ae = null;
if (a0_0x368317) {
  a0_0x1306ae = a0_0x368317.getContext("2d");
  a0_0x1306ae.shadowColor = "black";
}
var a0_0x53e59d = false;
var a0_0x2b523d = Math.min(window.devicePixelRatio, 2);
var a0_0x17dc48 = ("ontouchstart" in window || navigator.maxTouchPoints) == true;
var a0_0x3d2e0c = {};
function a0_0x55b16c(_0x5bb350) {
  if (!a0_0x3d2e0c.hasOwnProperty(_0x5bb350) && !a0_0x2cacc6) {
    var _0x6c7bf0 = new Audio(_0x5bb350);
    a0_0x3d2e0c[_0x5bb350] = _0x6c7bf0;
    _0x6c7bf0.volume = 0.7;
    _0x6c7bf0.muted = a0_0x2cacc6;
  }
  return a0_0x3d2e0c[_0x5bb350];
}
var a0_0x54d516 = null;
var a0_0x42353a = "";
var a0_0x39d98b = "audio/music_game.mp3";
function a0_0x34e668(_0x5b29bb) {
  if (a0_0x54d516) {
    a0_0x54d516.pause();
    a0_0x54d516.currentTime = 0;
  }
  a0_0x42353a = _0x5b29bb;
  if (!a0_0x2cacc6) {
    a0_0x54d516 = a0_0x55b16c(_0x5b29bb, true);
    try {
      a0_0x54d516.play();
    } catch (_0x5e3a13) {}
  }
}
var a0_0x4dee6a = true;
var a0_0x333a56 = false;
var a0_0x534d92 = camzoom_n = 2.7;
var a0_0x534d92 = 1;
var a0_0x4a5489 = 0;
var a0_0x201ca7 = 0;
var a0_0xb4c50c = 0;
var a0_0xc985c0 = 0;
var a0_0x3053d3 = 0;
var a0_0x251114 = 0;
var a0_0x2c02fa = 1;
var a0_0x3916f6 = 0;
var a0_0x145dbf = 0;
var a0_0x26c071 = 0;
var a0_0x591cbc = 0;
var a0_0x6d8749 = 0;
var a0_0x4a54b7 = 0;
var a0_0x48ccaa = false;
var a0_0x44f8a5 = false;
var a0_0x2bf7a6 = 0;
var a0_0xa794f1 = 0;
var a0_0x3acc86 = 0;
var a0_0x9b6712 = 0;
var a0_0x28032e = 0;
var a0_0x127a60 = 1;
var a0_0x2e7356 = 2;
var a0_0x5a32c9 = 3;
var a0_0x73c281 = 4;
var a0_0x37f513 = 5;
var a0_0x6833cb = 6;
var a0_0x17b807 = a0_0x28032e;
var a0_0x34b662 = 0;
var a0_0x37f4fc = {};
async function a0_0xd211df(_0x562347) {
  if (!a0_0x37f4fc.hasOwnProperty(_0x562347)) {
    const _0x5cbb4 = new Image();
    var _0xf3b101 = "?v=" + a0_0x5e69bf + (a0_0x574cee ? "." + a0_0x4f5f13 : "");
    _0x5cbb4.src = _0x562347 + _0xf3b101;
    return new Promise((_0x20e91d, _0x151005) => {
      _0x5cbb4.addEventListener("load", () => {
        a0_0x37f4fc[_0x562347] = _0x5cbb4;
        return _0x20e91d(_0x5cbb4);
      }, {
        once: true
      });
      _0x5cbb4.addEventListener("error", _0x58f3ab => {
        _0x151005(_0x58f3ab);
      }, {
        once: true
      });
    });
  }
  console.log("returning the img");
  return a0_0x37f4fc[_0x562347];
}
function a0_0x19ebc9(_0x46d8bf, _0x18cea4) {
  if (!a0_0x37f4fc.hasOwnProperty(_0x46d8bf)) {
    a0_0x37f4fc[_0x46d8bf] = new Image();
    var _0xaf1208 = "?v=" + a0_0x5e69bf + (a0_0x574cee ? "." + a0_0x4f5f13 : "");
    a0_0x37f4fc[_0x46d8bf].src = _0x46d8bf + _0xaf1208;
  }
  if (a0_0x37f4fc[_0x46d8bf].width != 0 && a0_0x37f4fc[_0x46d8bf].complete) {
    return a0_0x37f4fc[_0x46d8bf];
  } else {
    return null;
  }
}
var a0_0x2a6a35 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0x1823b0 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0x6c0301 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0xfab2c7 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
var a0_0x643790 = false;
var a0_0x7532a0 = [];
var a0_0x283a01 = {};
var a0_0x25de50 = [];
var a0_0xc4de06 = [];
var a0_0x5a4b93 = false;
var a0_0x24a091 = 0;
var a0_0x4a99c9 = 1;
var a0_0x3aaa4c = false;
var a0_0x229cd0 = 0;
var a0_0x3ba5e6 = 1;
var a0_0x2478ab = false;
var a0_0x248459 = 0;
var a0_0x3be31e = 1;
var a0_0x2cc639 = false;
var a0_0x29202e = +new Date();
var a0_0x2bafdc = false;
var a0_0x17133c = false;
var a0_0x210e4b = false;
var a0_0x53412f = false;
var a0_0x3e6a07 = false;
var a0_0x371da2 = false;
var a0_0x2cacc6 = false;
var a0_0x4df288 = false;
var a0_0x56bbb3 = 3;
var a0_0x2a2ea4 = false;
var a0_0x2bde41 = false;
var a0_0x1f7a3f = true;
let a0_0x39125e = 0;
var a0_0x4b2290 = document.getElementById("button_mute");
if (a0_0x4b2290) {
  a0_0x4b2290.onclick = function () {
    a0_0x2cacc6 = !a0_0x2cacc6;
    a0_0x4cd8b8();
    try {
      window.localStorage.setItem("options_muted", a0_0x2cacc6 ? 1 : 0);
    } catch (_0x42a104) {}
  };
}
function a0_0x3b0427(_0x4baae1, _0x223392, _0x1149a3) {
  _0x223392 = _0x223392 || _0x223392 === 0 || _0x223392 === "0" ? _0x223392 : null;
  const _0x46717e = _0x52c744 => {
    try {
      if (_0x223392 !== null) {
        _0x52c744.volume = _0x223392;
      }
      if (_0x1149a3) {
        sound_click.playbackRate = _0x1149a3;
      }
      _0x52c744.play();
      return true;
    } catch (_0xc0293) {
      return false;
    }
  };
  if (_0x46717e(a0_0x55b16c(_0x4baae1))) {
    return;
  }
  _0x46717e(new Audio(_0x4baae1));
}
function a0_0x328cf0(_0x10714f) {
  a0_0x3b0427("audio/click.mp3", _0x10714f);
}
function a0_0x358404() {
  var _0x5b9254 = document.getElementById("optionsDiv");
  _0x5b9254.style.display = _0x5b9254.style.display == "block" ? "none" : "block";
  var _0x6e2db = a0_0x55b16c("audio/click.mp3");
  if (_0x6e2db) {
    try {
      _0x6e2db.play();
    } catch (_0x4bbd3d) {}
  }
}
var a0_0x3e52fe = false;
var a0_0x19f3c7 = -1;
var a0_0x4fc0c4 = 100;
var a0_0x22db2c = 0;
var a0_0x37c36b = curBarPerc_n = 100;
var a0_0x3d5297 = -1;
var a0_0x4fe33d = -1;
const a0_0x1b961c = _0x1fcbe9 => {
  if (_0x1fcbe9 != a0_0x22db2c) {
    a0_0x4fc0c4 = _0x1fcbe9;
  }
};
a0_0x1b961c(a0_0x4fc0c4);
const a0_0x15de06 = _0x166a9b => {
  if (_0x166a9b != a0_0x19f3c7) {
    a0_0x19f3c7 = _0x166a9b;
  }
};
a0_0x15de06(a0_0x19f3c7);
const a0_0xfd2732 = _0x123711 => {
  if (_0x123711 != a0_0x3d5297) {
    a0_0x3d5297 = _0x123711;
  }
};
a0_0xfd2732(100);
const a0_0x171408 = _0x2c1049 => {
  if (_0x2c1049 != a0_0x4fe33d) {
    a0_0x4fe33d = _0x2c1049;
  }
};
a0_0xfd2732(0);
a0_0x171408(0);
var a0_0xb662d9 = 0;
var a0_0xedc14 = 0;
var a0_0x3c39a1 = infectionBarPerc_n = 100;
var a0_0x43f1c7 = new a0_0x993fcb(16, "yellow");
var a0_0x1a4097 = new a0_0x993fcb(16, "white");
var a0_0x29f7b8 = new a0_0x993fcb(16, "white");
var a0_0x3d35da = new a0_0x993fcb(16, "white");
var a0_0xf2e1c3 = new a0_0x993fcb(16, "white");
var a0_0x595a8f = new a0_0x993fcb(10, "white");
var a0_0x1b9490 = new a0_0x993fcb(16, "white");
var a0_0x7cd94 = new a0_0x993fcb(26, "white");
var a0_0x398e30 = new a0_0x993fcb(10, "white");
var a0_0x2ddb3e = new a0_0x993fcb(16, "white");
a0_0x1b9490.multiLine = true;
a0_0x2ddb3e.renderScale = 1;
a0_0x1b9490.renderScale = 1;
a0_0x595a8f.renderScale = 1;
var a0_0x307098 = true;
var a0_0x347446 = 0;
var a0_0x5c0019 = 0;
var a0_0x2b9241 = "";
var a0_0x14cf81 = [];
var a0_0x1968ec = new a0_0x30c4b4(null, "W");
a0_0x1968ec.onButtonTouchStart = function () {
  a0_0x10789a(a0_0x46c8b1, true);
};
a0_0x1968ec.onButtonTouchEnd = function () {
  a0_0x10789a(a0_0x46c8b1, false);
  if (a0_0x26eedc.pressed && a0_0x26eedc.pressedTouchID == -1) {
    a0_0x26eedc.pressed = false;
    a0_0x10789a(a0_0x4d3fc6, false);
  }
};
a0_0x14cf81.push(a0_0x1968ec);
var a0_0x72adc4 = new a0_0x30c4b4(null, "W");
a0_0x72adc4.isMiniRechargeBut = true;
a0_0x72adc4.touchEnabled = false;
a0_0x14cf81.push(a0_0x72adc4);
var a0_0x26eedc = new a0_0x96c62c("HOLD TO RUN");
a0_0x26eedc.onButtonTouchStart = function () {
  a0_0x10789a(a0_0x4d3fc6, true);
};
a0_0x26eedc.onButtonTouchEnd = function () {
  a0_0x10789a(a0_0x4d3fc6, false);
};
a0_0x14cf81.push(a0_0x26eedc);
var a0_0x2ee98c = new a0_0x96c62c("CHAT");
a0_0x2ee98c.onButtonTouchStart = function () {
  a0_0x70a369();
};
a0_0x14cf81.push(a0_0x2ee98c);
var a0_0x2b86de = new a0_0x96c62c("S");
a0_0x2b86de.onButtonTouchStart = function () {
  a0_0x10789a(a0_0x23dd78, true);
};
a0_0x2b86de.onButtonTouchEnd = function () {
  a0_0x10789a(a0_0x23dd78, false);
};
a0_0x14cf81.push(a0_0x2b86de);
var a0_0x52feee = false;
var a0_0x48702b = -1;
var a0_0x2ce670 = 0;
var a0_0x2976d1 = 0;
var a0_0x4c28bb = 0;
var a0_0x4d8ddf = 0;
var a0_0x4061c2 = 50;
var a0_0x488b61 = 0;
var a0_0x541188 = 0;
var a0_0x1e4bf4 = 0;
var a0_0x3887d0 = 0;
var a0_0x3d6b40 = 0;
abil_possible = false;
var a0_0x3f99c6 = false;
var a0_0x5a4b93 = false;
var a0_0x1fcecd = false;
var a0_0x55801d = +Date.now();
var a0_0x2129f4 = null;
function a0_0x39b824(_0x1f7e37, _0x2e7c02) {
  _0x1f7e37 = Math.min(_0x1f7e37, _0x2e7c02);
  _0x2e7c02 = Math.max(_0x1f7e37, _0x2e7c02);
  return _0x1f7e37 + Math.random() * (_0x2e7c02 - _0x1f7e37 + 1);
}
var a0_0x58297a = false;
var a0_0x45af98 = false;
var a0_0x305438 = true;
function a0_0x3d7293(_0x2649ea, _0xe7d6ec, _0x3aedf6, _0x1b7400, _0x5dbcef, _0x973d9f) {
  _0x2649ea.strokeStyle = _0x973d9f;
  _0x2649ea.lineWidth = _0x5dbcef;
  _0x2649ea.beginPath();
  _0x2649ea.arc(_0xe7d6ec, _0x3aedf6, Math.max(0, _0x1b7400), 0, Math.PI * 2);
  _0x2649ea.stroke();
}
var a0_0x9051bd = 1;
const a0_0x1acd45 = {
  undefined: () => 0,
  boolean: () => 4,
  number: () => 8,
  string: _0x28c182 => _0x28c182.length * 2,
  object: _0x3af36a => !_0x3af36a ? 0 : Object.keys(_0x3af36a).reduce((_0x1b6a31, _0x3a22b5) => a0_0x30f36f(_0x3a22b5) + a0_0x30f36f(_0x3af36a[_0x3a22b5]) + _0x1b6a31, 0)
};
const a0_0x30f36f = _0x1b3521 => a0_0x1acd45[typeof _0x1b3521](_0x1b3521);
function a0_0x53fdd3(_0x2c53fc, _0x5eb430, _0xa9883) {
  var _0x59f740 = _0xa9883 * Math.PI / _0x5eb430 * _0x2c53fc;
  _0x59f740 = Math.sin(_0x59f740);
  return _0x59f740;
}
let a0_0x168e61 = {};
function a0_0x285ecb(_0x19bdd7, _0x28fd1c, _0x3a78db, _0x4961ea, _0x39a5a, _0x1bf820) {
  let _0x3373a4 = a0_0x168e61[_0x19bdd7];
  if (a0_0x168e61[_0x19bdd7] == undefined) {
    if (_0x39a5a !== undefined && _0x1bf820 !== undefined) {
      _0x3373a4 = new a0_0x79a148(_0x19bdd7, _0x28fd1c, _0x4961ea, _0x3a78db, _0x39a5a, _0x1bf820);
    } else {
      _0x3373a4 = new a0_0x79a148(_0x19bdd7, _0x28fd1c, _0x4961ea, _0x3a78db);
    }
    a0_0x168e61[_0x19bdd7] = _0x3373a4;
    console.log("@@@@@@@@@@@@@@@ AnimFrame created for " + _0x19bdd7 + " @@@@@@@@@@@@@@@@@@@@@@@");
  }
  a0_0x1df248(a0_0x168e61[_0x19bdd7], 0);
}
function a0_0x421c51(_0x409cc0, _0x2c70b6) {
  let _0x1475df = a0_0x168e61[_0x409cc0];
  if (_0x1475df) {
    return _0x1475df.getFrame(_0x2c70b6);
  }
  return undefined;
}
function a0_0x313a69(_0xcbaccf, _0x4364fe, _0xa0018) {
  let _0xfc11fe = a0_0x168e61[_0xcbaccf];
  if (_0xfc11fe) {
    return _0xfc11fe.getFrame(_0x4364fe) * _0xa0018;
  }
  return undefined;
}
function a0_0xae444c(_0x187393, _0x2e3b17) {
  let _0x351396 = a0_0x168e61[_0x187393];
  if (_0x351396) {
    return _0x351396.getShiftAmount(_0x2e3b17);
  }
  return undefined;
}
function a0_0x1df248(_0x2965a2, _0xa6261a) {
  var _0x4199d0 = _0xa6261a / 1000;
  var _0x416281 = _0x4199d0;
  let _0x85219e = a0_0x53fdd3(_0x4199d0, _0x2965a2.period, _0x2965a2.sine);
  let _0x343455 = _0x85219e.toFixed(10);
  let _0x180c72 = _0x4199d0.toFixed(3);
  _0x2965a2.add(_0x180c72, _0x343455);
  if (_0x416281 >= _0x2965a2.period) {
    console.log("@@@@@@@@@@@@@@@@@ baking finished for " + _0x2965a2.forObj);
    return;
  }
  _0xa6261a++;
  setTimeout(function () {
    a0_0x1df248(_0x2965a2, _0xa6261a);
  }, 1);
}
class a0_0x79a148 {
  constructor(_0x553cfc, _0x23e452, _0xbcfed0, _0x13cb5f, _0x37f584, _0x1061f3) {
    this.forObj = _0x553cfc;
    this.period = _0x23e452;
    this.sine = _0xbcfed0;
    this.shiftAmount = _0x13cb5f;
    this.frame = {};
    if (_0x37f584 !== undefined && _0x1061f3 !== undefined) {
      this.startShift = _0x37f584;
      this.endShift = _0x1061f3;
      this.amplitude = this.shiftAmount * (this.endShift - this.startShift);
    }
  }
  getAnimalName() {
    return this.forAni;
  }
  add(_0x5a861e, _0x2f5834) {
    this.frame[_0x5a861e] = _0x2f5834;
  }
  getShiftAmount(_0xe9a0c) {
    let _0x553bb0 = this.getFrame(this.timeKey(_0xe9a0c));
    if (_0x553bb0) {
      if (this.amplitude !== undefined) {
        let _0x5221f5 = this.startShift + this.amplitude;
        return _0x5221f5 + this.amplitude * this.getFrame(_0xe9a0c);
      } else {
        return _0x553bb0 * this.shiftAmount;
      }
    }
    return null;
  }
  getFrame(_0x48b3e5) {
    return this.frame[this.timeKey(_0x48b3e5)];
  }
  timeKey(_0x567ab9) {
    let _0x3e5b43 = (a0_0x24806e - _0x567ab9) / 1000 / this.period;
    let _0x3c18a4 = (_0x3e5b43 - Math.floor(_0x3e5b43)) * this.period;
    return _0x3c18a4.toFixed(3);
  }
}
let a0_0x325bbc = {};
function a0_0x3a3132(_0x70b3c0, _0x5b6283, _0x382a56, _0x2439b5 = 2, _0x2dc4eb = 1) {
  console.log("---------------- started baking " + _0x70b3c0);
  const _0x566ad2 = performance.now();
  a0_0x325bbc[_0x70b3c0] = [];
  const _0x56b371 = _0x5b6283 * 1000;
  for (let _0x38355c = 0; _0x38355c < _0x56b371; _0x38355c += _0x2dc4eb) {
    a0_0x325bbc[_0x70b3c0].push(a0_0x423a9f(_0x38355c / 1000, _0x5b6283, _0x382a56, _0x2439b5));
  }
  console.log("---------------- finished baking " + _0x70b3c0 + " time taken: " + (performance.now() - _0x566ad2).toFixed(4) + "ms");
}
a0_0x285ecb("bird", 0.5, 0.5, 2);
a0_0x285ecb("eagle", 0.9, 0.3, 2);
a0_0x285ecb("volcano", 6, 1.5, 2);
a0_0x3a3132("lake", 4, 5.5, 2);
a0_0x285ecb("lavalake", 4, 2.5, 2);
a0_0x285ecb("fennecfox", 0.5, 5, 1);
a0_0x285ecb("fireball", 1, 0.5, 2, 0.85, 1);
a0_0x3a3132("objects", 1.5, 0.1);
a0_0x3a3132("objects_slow", 2.5, 0.04);
a0_0x3a3132("honeybee", 0.2, 0.3);
a0_0x285ecb("kd", 5, 1, 1);
a0_0x556513.wave = 1;
a0_0x556513.halfWave = 2;
a0_0x556513.arc = 3;
a0_0x556513.quad = 4;
a0_0x556513.bow = 5;
a0_0x556513.bounce = 6;
a0_0x556513.elastic = 7;
a0_0x556513.bounceEaseOut = 8;
a0_0x556513.bounceEaseInOut = 9;
function a0_0x556513(_0x33cb85, _0x4372b3, _0x13cdbf, _0x2305f3) {
  this.forObj = _0x33cb85;
  this.duration = _0x4372b3;
  this.animation = _0x13cdbf;
  this.startTime = null;
  this.frame = 0;
  this.frameRate = 1000;
  this.timePassed = 0;
  this.generate = true;
  this.stopWhenDurationPassed = true;
  this.state = 0;
  this.accelerateEnd = 0;
  this.hasStopped = false;
  this.img = null;
  this.vars = _0x2305f3;
  this.keepLastFrame = false;
  this.loop = false;
  this.setImage = function (_0xdc7dd) {
    this.img = a0_0x19ebc9(_0xdc7dd);
  };
  this.run = function () {
    if (this.startTime == null) {
      this.startTime = a0_0x24806e;
    }
    if (this.startTime != null) {
      if (this.state == 2 && !this.hasStopped) {
        this.hasStopped = true;
        this.onStop();
      }
      if (!this.hasStopped) {
        this.calcTimePassed();
        this.generateFrame();
        this.onFrameEntered(this.frame);
        if (this.timePassed >= this.duration && this.stopWhenDurationPassed) {
          this.state = 2;
        }
      }
      if (this.hasStopped) {
        if (this.keepLastFrame) {
          this.onFrameEntered(this.frame);
        }
        if (this.loop) {
          this.reset();
        }
      }
    }
  };
  this.reset = function () {
    this.timestamp = null;
    this.hasStopped = false;
    this.state = 0;
  };
  this.generateFrame = function () {
    if (this.generate) {
      this.state = 1;
      switch (this.animation) {
        case a0_0x556513.wave:
          this.frame = this.wave(this.timePassed);
          break;
        case a0_0x556513.halfWave:
          this.frame = this.halfWave(this.timePassed);
          break;
        case a0_0x556513.arc:
          this.frame = this.arc(this.timePassed);
          break;
        case a0_0x556513.quad:
          this.frame = this.quad(this.timePassed);
          break;
        case a0_0x556513.bow:
          if (this.vars == undefined) {
            this.vars = {
              v1: 1
            };
          }
          this.frame = this.bow(this.timePassed);
          break;
        case a0_0x556513.bounce:
          this.frame = this.bounce(this.timePassed);
          break;
        case a0_0x556513.elastic:
          if (this.vars == undefined) {
            this.vars = {
              v1: 1
            };
          }
          this.frame = this.elastic(this.timePassed);
          break;
        case a0_0x556513.bounceEaseOut:
          this.frame = this.bounceEaseOut(this.timePassed);
          break;
        case a0_0x556513.bounceEaseInOut:
          this.frame = this.bounceEaseInOut(this.timePassed);
          break;
        default:
          break;
      }
    }
  };
  this.timing = function (_0x2a3986) {
    return _0x2a3986;
  };
  this.halfWave = function (_0x50f87c) {
    return Math.sin(Math.PI * 0.5 / this.duration * _0x50f87c) * 1;
  };
  this.wave = function (_0x5ead09) {
    return Math.sin(Math.PI * 1 / this.duration * _0x5ead09) * 1;
  };
  this.arc = function (_0x213a21) {
    return 1 - Math.sin(Math.acos(_0x213a21));
  };
  this.quad = function (_0x34cdfc) {
    return Math.pow(_0x34cdfc, 2);
  };
  this.bow = function (_0x12770e) {
    var _0x2fd28c = this.vars.v1;
    return Math.pow(_0x12770e, 2) * ((_0x2fd28c + 1) * _0x12770e - _0x2fd28c);
  };
  this.bounce = function (_0x1a3116) {
    for (let _0xe60ce4 = 0, _0x5b99e8 = 1, _0x509923; 1; _0xe60ce4 += _0x5b99e8, _0x5b99e8 /= 2) {
      if (_0x1a3116 >= (7 - _0xe60ce4 * 4) / 11) {
        return -Math.pow((11 - _0xe60ce4 * 6 - _0x1a3116 * 11) / 4, 2) + Math.pow(_0x5b99e8, 2);
      }
    }
  };
  this.elastic = function (_0x1befeb) {
    var _0x3a9230 = this.vars.v1;
    return Math.pow(2, (_0x1befeb - 1) * 10) * Math.cos(Math.PI * 20 * _0x3a9230 / 3 * _0x1befeb);
  };
  this.bounceEaseOut = function (_0x3e41e6) {
    return 1 - this.bounce(1 - _0x3e41e6);
  };
  this.bounceEaseInOut = function (_0x580a6f) {
    if (_0x580a6f < 0.5) {
      return this.bounce(_0x580a6f * 2) / 2;
    } else {
      return (2 - this.bounce((1 - _0x580a6f) * 2)) / 2;
    }
  };
  this.calcTimePassed = function () {
    this.timePassed = (a0_0x24806e - this.startTime) / this.frameRate;
  };
  this.onFrameEntered = function (_0xab7fdb) {};
  this.onStop = function () {};
}
const a0_0x50988d = ["anus", "anus plug", "apeshit", "apeshite", "ar5e", "b00bz", "b1+ch", "b17ch", "b1otch", "b1otchs", "b1tch", "b1tch1ng", "b1tch35", "b1tch3s", "b1tchees", "b1tches", "b1tchez", "b1tchin", "b1tching", "b1tchs", "b1tchy", "baby batter", "ballbag", "bangbros", "bassturd", "bastard", "bastardish", "bastards", "basterd", "bastid", "bastinado", "basturd", "bater", "bates", "beeotch", "bell end", "bellend", "bender", "bewbs", "beyoch", "beyotch", "bi + ch", "bi+ch", "biatch", "biches", "biotch", "biotches", "biotchez", "bishes", "bitch", "bitch3s", "bitchass", "bitchasses", "bitched", "bitcher", "bitchers", "bitches", "bitchez", "bitchfuck", "bitchhole", "bitchin", "bitchin'", "bitching", "bitchlike", "bitchness", "bitchs", "kys", "bitchslap", "bitchtits", "bitchy", "bitchy ass", "bizzach", "blacky", "blumpkin boy", "boll0ck", "bollock", "bollockchops", "bollocks", "bollocktician", "bollox", "bondage", "boner", "bonk juice", "boobs", "booty", "breasticles", "breasts", "bugger", "bugger off", "bull shit", "bullshi", "bullshit", "bullshite", "bum-bandits", "bum-driller", "bumhole", "bung hole", "butt fuck", "butt fucker", "butt hole", "butt pirate", "butt-fucker", "butt-fuckers", "butt-fucking-bandit", "butt-munchers", "buttermilk", "buttfuck", "buttfucker", "buttfuckers", "butthole", "butthole boy", "bwc", "c*nt", "c*ntface", "c*nts", "c*nty", "c00n", "c00nies", "c0ck", "c0ckhead", "c0cks", "c0cksuccer", "c0cksucked", "c0cksucker", "c0cksuckers", "c0x", "c0xux0r", "caaak", "caca", "cack", "cagone", "cajones", "cawk", "cawkmuncher", "cawks", "cawksucker", "ch1nk", "chesticles", "chingchong", "chink", "chinky", "chocha", "cholo", "clitlickers", "clusterfuck", "clusterfucked", "clusterfucker", "clusterfucking", "clusterfucks", "cock", "cock-face", "cock-gobbler", "cock-head", "cock-sucker", "cock-suckers", "cockboy", "cockeater", "cockface", "cockgobbler", "cockh3ad", "cockhead", "cockheads", "cockhed", "cockless", "cocklicker", "cockmonger", "cockmunch", "cockmuncher", "cocks", "cockshit", "cockskin", "cocksmoker", "cocksucc", "cocksuccas", "cocksuccer", "cocksuccers", "cocksuck", "cocksuckas", "cocksucked", "cocksucker", "cocksuckers", "cocksucking", "cocksucking mothafuckers", "cocksucks", "cocksuk", "cocksuka", "cocksukka", "cocsuck", "cokmuncher", "coksucka", "coolie", "coon", "coon1es", "cooni3s", "coonie", "coonies", "coons", "coot", "coot coot", "cooter", "cooter shooting", "cooterpuffing", "cooties", "cotton picker", "crazy mofos", "crazy sob", "creampie", "crotch", "crotch fiddler", "crotchy", "crow", "crows", "cuksuker", "cuksukka", "cum goon", "cumball", "cumdumpster", "cumming", "cums", "cumslut", "cumz", "cunnilingus", "cunt", "cunt ass", "cunt fart", "cunt lick", "cunt licker", "cunt lips", "cuntasaurus rex", "cuntbag", "cuntbollock", "cuntelope", "cuntits", "cuntless", "cuntlick", "cuntlicker", "cuntlickers", "cuntness", "cunts", "cunty", "cuntz", "cuunt", "cyberfck", "cyberfcks", "cyberfuccs", "cyberfucks", "cyberfucs", "cyberfukk", "cyberfukks", "cyberfvcks", "d!ck", "d!cks", "d!ld0", "d!ldo", "d0ggy style", "d1ck", "d1ckhead", "d1ckheads", "d1cks", "d1cksucker", "d1cksukka", "d1ckz", "d1ldo", "dafuq", "dago", "darkass", "darkfuck", "darkie", "darkshit", "darktard", "darky", "dick breath", "dick face", "dick fucker", "dick head", "dick licker", "dick milker", "dick nibbler", "dick smoker", "dick sucker", "dick-face", "dick-gobbler", "dick-head", "dickface", "dickfucker", "dickhead", "dickheads", "dickjockies", "dickless", "dicklicker", "dickmuncher", "dicks", "dickskin", "dickslapper", "dicksmoker", "dicksucker", "dickvag", "dickz", "diddle", "dikhead", "diks", "dild0", "dipsh1t", "dipsh1tty", "dipshat", "dipshidiot", "dipshit", "dipshite", "dipshits", "dipshitter", "dipshitty", "dipstick", "dirty sanchez", "dix", "dlck", "dlcks", "dog fuck", "dog fucker", "dog fucking", "dog shit", "dog-fucker", "dog's bollocks", "doggo style", "doggy style", "doggy_style", "dogie style", "dogsh1t", "dogsh1ts", "dogshit", "dogshits", "dogstyle", "dolt", "dong", "doosh", "dothead", "double dick", "double dicking", "double pen", "double-dong", "douche", "douche bag", "douche canoe", "douchebag", "dumasses", "dumb bastard", "dumb fucker", "dumb@ss", "dumbarrassed", "dumbass", "dumbass fucker", "dumbass mofoes", "dumbass mothafuckers", "dumbass son-of-a-bitch", "dumbasses", "dumbfucks", "dumbshit", "dump a load", "dune coon", "dyke", "erectoplasm", "f_u_c_k", "f'ed", "f'er", "f@ck", "f@cker bunny", "f@g", "f@gg0t", "f@gging", "f@ggot", "f@gs", "f@gshit", "f@k", "f0ck", "f0cked", "f0cker", "f0ckers", "face fuck", "fack", "fackuhs", "fag", "fag asses", "fag bag", "fag hag", "fag queen", "fag0t", "faget", "fagg0t", "fagging", "faggo", "faggot", "faggot mofoes", "faggot mothafuckers", "faggot nob jokeys", "faggot nobjockies", "faggot son-of-a-bitch", "faggoting", "faggots", "faggs", "faggy", "fagot", "fags", "fagshit", "fart-fucker", "fatass", "fatasses", "fccuker", "fck", "fck you", "fcka", "fckahz", "fcked", "fckedup", "fcker", "fckin", "fcking", "Fckk", "fckked", "fckking", "fcks", "fcktard", "fckyeah", "fcuk", "fcuked", "fcuker", "fcukers", "fcuking", "fcukker", "fcuks", "fcvking", "feck", "feck arse", "fecker", "feg", "fellatio aficionado", "fellator", "fick", "finger", "finger fuck", "fingerbanged", "fingerpop", "fk bunny", "fkbny", "fked", "fker", "fking", "fkings", "fkker", "flamer", "flamers", "focker", "fook", "fooker", "fookuh", "forked", "fothermuckers", "fuc", "fucc", "fucca", "fuccers", "fuccing", "fuccs", "Fuck", "fuck arse", "fuck face", "fuck faces", "fuck goblin", "fuck head", "fuck off", "fuck up", "fuck y0u", "fuck you", "fuck your", "fuck your mother", "fucka", "fuckahs", "fuckass", "fuckasses", "fuckaz", "fuckbag", "fuckboy", "fucked", "fucked up", "fuckem", "fucker", "fucker off", "fuckers", "fuckface", "fuckfaces", "fuckhead", "fuckheaded", "fuckheads", "fuckin", "fucking", "fucking A", "fucking asshole", "fucking bastard", "fucking hell", "fucking me", "retard", "fucking retard", "fucking shit", "fuckk", "fuckless", "fuckmachine", "fucknuckle", "fucks", "fuckshit", "fuckshitface", "fuckshithead", "fuckstar", "fuckster", "fuckstick", "fucktard", "fucktards", "fuckup", "fuckwad", "fuckwhore", "fucs", "fucx", "fudgefucker", "fudgepacker", "fudgepackers", "fudgepackershitter", "fudgepacking fucker", "fugged", "fugger", "fuggerz", "fuggings", "fugly", "fuk", "fuk1n", "fuk1ng", "fukcs", "fuker", "fukheads", "fukin", "fuking", "fukk", "fukka", "fukked", "fukker", "fukkers", "fukking", "fukkings", "fukkuh", "fuks", "fuku", "fukwhore", "fukwit", "full of shit", "funbags", "fuq", "futhamucka", "fux", "fux0r", "fvck", "fvck you", "fvcka", "fvckbunny", "fvcker", "fvckers", "fvckin", "fvcking", "fvckker bunny", "fvckwhi", "fxck", "fxcked", "fxcker", "fxcking", "gin jockey", "girlieboy", "gook", "gowl", "greaser", "groid", "groper", "gyp", "harry palms", "heeb", "higg@", "higg3r", "higga", "higger", "higgers", "hoar", "jewboy", "jigaboo", "jigaboos", "jigga", "jiggaboo", "jiggabooboo", "jiggaboos", "jiggabu", "jiggas", "jigger", "jiggerboo", "jiggerboos", "jiggs", "jiggyboo", "jigro", "jim crow", "jizz", "jizz eater", "jizz licker", "jizz-jockey", "jizzbags", "jizzed", "jizzes", "jizzfucker", "jizzing", "jizzsacks", "jizzstain", "jizzy", "k!k3", "k!ke", "k..!ke", "k1k3", "k1ke", "kid diddler", "kiddy touch", "kike", "kikes", "kiss ass", "kiss my ass", "kitty puncher", "kkk", "klan", "klitoris", "kneegrows", "knickers", "knob", "knob eater", "knob gobbler", "knob jockey", "knob-face", "knob-gobbler", "knob-head", "knob3d", "knob3nd", "knobd", "knobe", "knobead", "knobeads", "knobed", "knobeds", "knobend", "knobender", "knobends", "knobendy", "knobendz", "knober", "knobes", "knobgobbler", "knobhead", "knobheads", "knobjockies", "knobjocky", "knobjokey", "knobjokeys", "ku kluxer", "kyke", "l@dyb0i", "l@dyb0y", "l@dyboy", "l3i + ch", "l3i+ch", "l3itch", "l3itches", "ladboys", "ladboyz", "ladiboy", "lady-boy", "ladyb0i", "ladyb0y", "ladyboy", "ladyboys", "ladyboyz", "lesbo", "loose woman", "m@asterbated", "m@derfaker", "m@derfuck", "m@derfuckers", "m0f0", "m0f0s", "m0fo", "m0foes", "m0fos", "m0ng0l0id", "m0ngoloid", "m0thafucked", "m0thafucker", "m0thafucking", "m0therfuckeds", "m0therfucker", "m0therfucking", "m0therfvcker", "man chowder", "man meat", "man seed", "markasses", "meat curtains", "meat-sword", "mecha fag", "mega fag", "mf'er", "mf'ers", "mf'ing", "mfckers", "MFer", "MFers", "mfing", "mfk", "mfs", "mfukk", "mfukker", "milf", "mindfuck", "mof0es", "mof0s", "mofcker", "mofo", "mofo ass", "mofoes", "mofos", "mofoshit", "mofuccers", "mofucckers", "mofuck", "mofucker", "mofuckkas", "mofuk", "mofukkas", "molester", "mong", "mongoloid", "mongrel", "motha fucka", "motha fucker", "motha fuckers", "mothaf@cked", "mothafcked", "mothafcking", "Mothafucc", "mothafucced", "mothafuccer", "mothafuccing", "mothafuck", "mothafucka", "mothafuckas", "mothafuckasses", "mothafuckaz", "mothafuckazzes", "mothafucked", "mothafuckeds", "mothafucker", "mothafuckers", "mothafuckin", "mothafucking", "mothafuckings", "mothafuckins", "mothafucks", "mothafuckz", "mothafvcked", "mother effer", "mother fuck", "mother fuck you", "mother fucka", "mother fucker", "mother fuckers", "mother fucking", "mothercker", "motherf@kka", "motherfacking", "motherfcked", "motherfckin", "motherfcking", "motherfcks", "motherfckshit", "hitler", "motherfecka", "motherfecker", "motherfk", "motherfucca", "motherfuccas", "motherfuccers", "motherfuck", "motherfucked", "motherfuckeds", "motherfucker", "motherfuckers", "motherfuckin", "motherfucking", "motherfuckings", "motherfuckingshit", "motherfuckins", "motherfuckka", "motherfuckkas", "motherfuckkers", "motherfucks", "motherfukka", "motherfukker", "motherfukkings", "motherfvck", "motherfvcked", "motherfvckeds", "motherfvcker", "motherfvckers", "motherfvcking", "motherfxck", "motherfxcking", "mothfck", "mothter fuck", "mtherfuker", "mthrfcker", "muddafukkas", "mudderfuk", "mudderfukker", "mufdive", "mufdivin", "muff", "muffdiving", "muffdivings", "muffindivin", "muffindiving", "muhfucking", "mushroom tip", "mutha fucka", "mutha fucker", "muthafecker", "muthafeckers", "muthafucka", "muthafuckers", "muthafuckings", "muthafuckker", "muthafuckkers", "muthafukka", "mutherfucker", "mutherfuckers", "n0bhead", "n0bj0cky", "n1ckker", "ngger", "ngge", "ngga", "n1g3r", "n1g3rz", "n1gg@", "n1gg@hs", "n1gg3r", "n1gg3rs", "n1gga", "n1ggah", "n1ggahs", "n1ggas", "n1ggazes", "n1gger", "n1ggers", "n1gguh", "n3gro", "negga", "neggar", "negr0", "negro", "negroes", "negroid", "niccer", "nicka", "nickas", "nicker", "nickk3r", "nickker", "nig-nog", "niga", "nigah", "nigasses", "nigers", "kys", "kill yourself", "nigg@", "nigg@hs", "nigg@s", "nigg@z", "nigg@zzes", "nigg3r", "nigg3rs", "nigg4h", "nigg4hs", "nig ger", "niger", "niga", "niggÐ°", "niggÐµr", "nigga", "nigga lover", "niggah", "niggahs", "niggahz", "niggas", "niggger", "niggass", "niggaz", "niggazzes", "nigger", "niggers", "niggerz", "nigge", "niggir", "niggress", "nigguh", "nigguhs", "nigguhz", "nigg", "n@gga", "n@gg@", "ni@@a", "niglet", "nignigs", "nignog", "nigra", "nigre", "nigs", "niguh", "nikk3r", "nikkas", "nikker", "pussylickers", "pussys", "pussywhipped", "puta", "puussy", "puzzies", "puzzy", "queerasses", "S&M", "sack", "salad tosser", "sambo", "sand nigger", "sausage jockey", "scamfuck", "schlong", "scumfuck", "scumfucker", "scumfvck", "scummy", "shytfeisterfuck", "sissy", "snatch licker", "soab", "soppy bollucks", "sphincter", "spic", "spicfuck", "spick", "spics", "spicshit", "spig", "spik", "spix", "spook", "spooks", "spunk", "stump chewer", "stupid fucker", "stupidasses", "sum of a bitch", "sumbitch", "swine", "swine fucker", "tacohead", "tadger", "tallywacker", "tar-baby", "throater", "tits", "tosser", "tossing salad", "towelhead", "towelheads", "towelshithead", "trashybitches", "trouser snake", "trousersnake", "turdcutter", "turdhead", "tw@t", "twa+", "twat", "twat waffle", "twatface", "twats", "twatt", "twattish", "twatzilla", "twink", "upskirts", "vag", "vulva", "w@nker", "w@nkers", "w4nk3r", "w4nker", "wang", "wang wrangler", "wank", "wank off", "wank3r", "wank3rs", "wankbastard", "wanked", "wanker", "wankers", "wankies", "wanking", "wanks", "we1back", "weenie", "weiner", "wet back", "wetback", "wetbacks", "wh0r3", "wh0re"];
const a0_0x1bd3f1 = function (_0x2f225f, _0x49d052, _0x185bf3) {
  let _0x11512f = _0x49d052;
  let _0x1aa2f0 = _0x185bf3;
  var _0x48a186 = _0x2f225f.split("");
  for (var _0x301cea = _0x11512f; _0x301cea < _0x1aa2f0; _0x301cea++) {
    _0x48a186[_0x301cea] = "*";
  }
  return _0x48a186.join("");
};
const a0_0x1159b4 = function (_0x1ae621) {
  if (a0_0x2a2ea4) {
    return _0x1ae621;
  }
  for (var _0x34b9ba in a0_0x50988d) {
    _0x1ae621 = a0_0x5f444b(_0x1ae621, a0_0x50988d[_0x34b9ba]);
  }
  return _0x1ae621;
};
const a0_0x5f444b = function (_0xacc02c, _0x3a2a2d) {
  let _0x1c60f0 = _0xacc02c.normalize("NFKC");
  let _0x44776a = _0x1c60f0.toLowerCase();
  let _0x2b4d51 = _0x44776a.indexOf(_0x3a2a2d);
  if (_0x2b4d51 >= 0) {
    _0xacc02c = a0_0x1bd3f1(_0xacc02c, _0x2b4d51, _0x2b4d51 + _0x3a2a2d.length);
    _0xacc02c = a0_0x5f444b(_0xacc02c, _0x3a2a2d);
  }
  return _0xacc02c;
};
var a0_0x465e93 = window.innerWidth;
class a0_0x5d05c5 {
  constructor(_0x3b76e5) {
    this.season = _0x3b76e5;
  }
  loadMiniMap(_0x492f91) {}
  static create(_0x480683) {
    let _0x50afc2 = _0x480683.readUInt8();
    this.season = _0x50afc2;
    switch (_0x50afc2) {
      case 1:
      case 2:
        let _0x1c359c = new a0_0x4f6c0b();
        _0x1c359c.loadMiniMap(_0x480683);
        return _0x1c359c;
    }
    return null;
  }
}
class a0_0x4f6c0b extends a0_0x5d05c5 {
  constructor() {
    super(1);
  }
  loadMiniMap(_0x28a537) {
    let _0x35f088 = _0x28a537.readUInt16() * 1;
    let _0x34029f = _0x28a537.readUInt16() * 1;
    let _0x4923c7 = _0x28a537.readUInt16();
    let _0x4a4ec3 = _0x28a537.readUInt16();
    let _0x2c16d3 = _0x28a537.readUInt16();
    let _0x54f07e = _0x28a537.readUInt16();
    let _0x2011c2 = _0x28a537.readUInt16();
    let _0x3363a9 = 1;
    let _0x16fdf4 = 1;
    let _0x541ecc = {
      scale: _0x35f088,
      objScale: _0x34029f,
      mapWidth: _0x4923c7,
      mapHeight: _0x4a4ec3,
      width: a0_0x465e93,
      height: a0_0x465e93,
      gameWidth: _0x2c16d3,
      gameHeight: _0x54f07e,
      scaleX: _0x3363a9,
      scaleY: _0x16fdf4,
      totalObjects: _0x2011c2,
      objects: []
    };
    for (let _0x3ba747 = 0; _0x3ba747 < _0x2011c2; _0x3ba747++) {
      let _0x1ca5c0 = _0x28a537.readUInt16();
      for (let _0x480f0b = 0; _0x480f0b < _0x1ca5c0; _0x480f0b++) {
        let _0xa2e491 = _0x28a537.readUInt16();
        let _0x5baf32 = _0x28a537.readUInt16();
        let _0x2e5cf2 = _0x28a537.readUInt8() == 1;
        let _0x27f73a = {
          isRect: _0x2e5cf2,
          objType: _0xa2e491
        };
        if (_0xa2e491 == a0_0x210215) {
          _0x27f73a.teamID = _0x28a537.readUInt8();
          _0x27f73a.outline = "black";
        }
        if (_0x2e5cf2) {
          let _0x314872 = _0x28a537.readUInt16();
          let _0x36d31f = _0x28a537.readUInt16();
          let _0x4bc77a = _0x28a537.readUInt16();
          let _0x430a4f = _0x28a537.readUInt16();
          _0x27f73a.w = _0x4bc77a;
          _0x27f73a.h = _0x430a4f;
          _0x27f73a.x = _0x314872;
          _0x27f73a.y = _0x36d31f;
        } else {
          let _0x2ac397 = _0x28a537.readUInt16();
          let _0x1333a6 = _0x28a537.readUInt16();
          let _0x2a7b6d = _0x28a537.readUInt16();
          _0x27f73a.r = _0x2ac397;
          _0x27f73a.x = _0x1333a6;
          _0x27f73a.y = _0x2a7b6d;
        }
        _0x27f73a.c = this.getColorForObjType(_0xa2e491, _0x5baf32);
        _0x27f73a.biome = _0x5baf32;
        _0x541ecc.objects.push(_0x27f73a);
      }
    }
    a0_0x2ad00 = new a0_0x12f8cb(_0x541ecc);
    a0_0x2ad00.setPlayersCount(a0_0x70cda0);
  }
  getColorForObjType(_0x334459, _0x6af2a4) {
    switch (_0x334459) {
      case a0_0x51be8a:
        return a0_0x5a7ca5;
      case a0_0x520579:
        return a0_0x4e3f72;
      case a0_0x1f3985:
        return "#c8b745";
      case a0_0x4b64fc:
        return "white";
      case a0_0x2b11cc:
        return a0_0x2b041b;
      case a0_0x16ab5b:
        return a0_0xcf4b9b;
      case a0_0x3bf767:
        return a0_0x2b041b;
      case a0_0x161b09:
        return "#07631f";
      case a0_0x393078:
        return a0_0x5a7ca5;
      case a0_0x61214d:
        return a0_0x5a7ca5;
      case a0_0x4b7def:
        return "#907A33";
      case a0_0x1e4fed:
        return "#7BB7BB";
      case a0_0xf1b509:
        return a0_0x4e3f72;
      case a0_0x30cd21:
        return a0_0x2a9566;
      case a0_0x4c3cae:
        return a0_0x59eaa4;
      case a0_0x4f2b01:
        return a0_0x23e8e2;
      case a0_0x244bcd:
        return a0_0xc6e5ca;
      case a0_0x116605:
        return a0_0x41d6b3;
      case a0_0x511276:
        return a0_0x23e8e2;
      case a0_0xe6813b:
        return a0_0x58b2d0;
      case a0_0x1cdaba:
        return a0_0x519c59;
      case a0_0x5c2a70:
      case a0_0x20ad77:
        if (_0x6af2a4 == a0_0x44697a) {
          return "#8f822e";
        } else if (_0x6af2a4 == a0_0x46c6b6) {
          return "red";
        } else if (_0x6af2a4 == a0_0x5986dd) {
          return "#198ebd";
        }
        return "brown";
      case a0_0x47adbb:
        if (_0x6af2a4 == a0_0x44697a) {
          return "#8f822e";
        } else if (_0x6af2a4 == a0_0x46c6b6) {
          return "white";
        }
        return "#00b01a";
      default:
        return "green";
    }
  }
}
let a0_0x307aab = null;
let a0_0x2ad00 = null;
var a0_0x3f0fbe = [];
var a0_0x5cbbcf = [];
var a0_0x548978 = {};
var a0_0x211683 = null;
function a0_0xb4edc5(_0x57f61a) {
  var _0x3e3caf = _0x57f61a.readUInt32();
  if (_0x3e3caf > 0) {
    a0_0x211683 = {
      id: _0x3e3caf,
      x: _0x57f61a.readUInt32(),
      y: _0x57f61a.readUInt32(),
      rad: 3
    };
  }
}
function a0_0x392778(_0x35adc6, _0x460d70, _0x51045e) {
  if (_0x35adc6) {
    var _0x4e5a1e = a0_0x2b523d * Math.max(3, _0x35adc6.rad * (a0_0x2ad00.miniMapCanvas.width / a0_0x3acc86));
    a0_0x1306ae.save();
    if (a0_0x15e4d1 == _0x35adc6.id) {
      a0_0x1306ae.globalAlpha = 1;
    } else {
      a0_0x1306ae.globalAlpha = 0.7;
    }
    var _0x493ca0 = a0_0x2bf7a6 - (a0_0x2b523d * 10 + a0_0x2ad00.miniMapCanvas.width * a0_0x2c02fa) + _0x35adc6.x * (a0_0x2ad00.miniMapCanvas.width * a0_0x2c02fa) / a0_0x3acc86;
    var _0x4dad88 = a0_0x2b523d * 10 + _0x35adc6.y * (a0_0x2ad00.miniMapCanvas.height * a0_0x2c02fa) / a0_0x9b6712;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.fillStyle = _0x460d70;
    a0_0x1306ae.arc(_0x493ca0, _0x4dad88, _0x4e5a1e, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
}
function a0_0x5b8b88(_0x36d810, _0x2ef7a9, _0x23e0f0, _0x5df0ff) {
  if (_0x36d810) {
    a0_0x1306ae.globalAlpha = _0x5df0ff ? _0x5df0ff : 1;
    a0_0x1306ae.fillStyle = _0x2ef7a9;
    a0_0x1306ae.beginPath();
    var _0x4f9929 = a0_0x2b523d * Math.max(2, _0x36d810.rad);
    var _0x41273e = a0_0x2bf7a6 - (a0_0x2b523d * 10 + a0_0x2ad00.miniMapCanvas.width * a0_0x2c02fa) + pObj.x * (a0_0x2ad00.miniMapCanvas.width * a0_0x2c02fa) / a0_0x3acc86;
    var _0xbe39be = a0_0x2b523d * 10 + pObj.y * (a0_0x2ad00.miniMapCanvas.height * a0_0x2c02fa) / a0_0x9b6712;
    a0_0x1306ae.arc(_0x41273e, _0xbe39be, _0x4f9929 * _0x23e0f0, 0, Math.PI * 2);
    a0_0x1306ae.fill();
  }
}
class a0_0x509193 {
  constructor() {
    this.subscribers = {};
  }
  subscribe(_0x11393b, _0x44df4a) {
    if (!this.subscribers[_0x11393b]) {
      this.subscribers[_0x11393b] = [];
    }
    this.subscribers[_0x11393b].push(_0x44df4a);
  }
  emit(_0xe2e033, _0x4bb7ba) {
    const _0x5ebd29 = this.subscribers[_0xe2e033];
    if (_0x5ebd29) {
      _0x5ebd29.forEach(_0xab38c1 => _0xab38c1(_0x4bb7ba));
    }
  }
}
class a0_0x1a82a6 {
  constructor() {}
  static type = 0;
  send() {}
}
class a0_0x6f6da2 {
  constructor() {}
  static type = 0;
  static validate() {}
  static handle() {}
}
class a0_0x36175d {
  constructor() {}
  static type = 0;
  static send() {}
  static validate() {}
  static handle() {}
}
class a0_0x1cf28a extends a0_0x1a82a6 {
  constructor() {
    super();
  }
  static type = 1;
  static send(_0x75290, _0x11c269) {
    let _0x5812ec = 11;
    if (_0x11c269 && _0x11c269.length) {
      _0x5812ec += _0x11c269.length;
    }
    const _0xbab89f = new a0_0x32d020(_0x5812ec);
    _0xbab89f.writeUInt8(a0_0x1cf28a.type);
    _0xbab89f.writeUInt16(a0_0x2bf7a6);
    _0xbab89f.writeUInt16(a0_0xa794f1);
    _0xbab89f.writeUInt16(a0_0x465e93);
    if (_0x11c269) {
      _0xbab89f.writeString(_0x11c269);
    } else {
      _0xbab89f.writeString("");
    }
    _0x75290.send(_0xbab89f.dataView.buffer);
  }
}
class a0_0x4e7ad3 extends a0_0x6f6da2 {
  constructor() {}
  static type = 2;
  static handle(_0x592f98) {
    const _0x3ff9c1 = _0x592f98.readString();
    const _0x5c1f90 = _0x592f98.readUInt16();
    const _0x265100 = _0x592f98.readUInt8();
    const _0x286413 = _0x592f98.readUInt8();
    const _0x924d2d = _0x592f98.readString();
    const _0x1494c8 = _0x592f98.readUInt8() == 1;
    return {
      sessionId: _0x3ff9c1,
      gameVersion: _0x5c1f90,
      gameMode: _0x265100,
      season: _0x286413,
      serverId: _0x924d2d,
      isAliveInGame: _0x1494c8
    };
  }
}
class a0_0x5bb847 extends a0_0x6f6da2 {
  constructor() {
    super();
  }
  static type = 17;
  static handle(_0x4a0409) {
    const _0x1ede7f = _0x4a0409.readUInt16();
    const _0x1f3407 = _0x4a0409.readUInt16();
    const _0x3bd123 = _0x4a0409.readUInt16();
    const _0x308e78 = _0x4a0409.readUInt16();
    const _0x9efbce = _0x4a0409.readUInt16();
    return {
      gameWidth: _0x1ede7f,
      gameHeight: _0x1f3407,
      camX: _0x3bd123,
      camY: _0x308e78,
      camZoom: _0x9efbce
    };
  }
}
class a0_0x199a73 extends a0_0x1a82a6 {
  constructor() {
    super();
  }
  static type = 113;
  static send(_0x23db65, _0x5a89fb, _0x46eeeb, _0xca1335) {
    if (!_0x5a89fb) {
      _0x5a89fb = "mope.io";
    }
    const _0x2fcb28 = 33 + _0x5a89fb.length;
    const _0x1d49e8 = new a0_0x32d020(_0x2fcb28);
    _0x1d49e8.writeUInt8(a0_0x199a73.type);
    _0x1d49e8.writeUInt16(_0x46eeeb);
    _0x1d49e8.writeUInt16(_0xca1335);
    _0x1d49e8.writeString(_0x5a89fb);
    _0x23db65.send(_0x1d49e8.dataView.buffer);
  }
}
class a0_0x1c5468 extends a0_0x36175d {
  constructor() {
    super();
  }
  static type = 24;
  static readUpgradeMenu(_0x2711c7) {
    const _0x485139 = _0x2711c7.readUInt8();
    const _0x60a8f = _0x2711c7.readUInt8();
    const _0x1b1462 = _0x2711c7.readUInt8();
    console.log("timeout on message: " + _0x1b1462);
    const _0x4a3c67 = _0x2711c7.readUInt8();
    const _0x2c1cd2 = _0x2711c7.readUInt8();
    const _0x2f269a = [];
    for (var _0xe95e60 = 0; _0xe95e60 < _0x2c1cd2; _0xe95e60++) {
      let _0x135ea1 = _0x2711c7.readUInt8();
      const _0xa7607 = _0x2711c7.readUInt8();
      const _0x3700e7 = _0x2711c7.readUInt8();
      const _0x1fa371 = _0x2711c7.readUInt8();
      const _0x3894c = _0x2711c7.readUInt16();
      const _0x3e992a = _0x2711c7.readUInt8();
      const _0x8d2717 = _0x2711c7.readUInt8();
      let _0x45dea7 = _0x2711c7.readUInt8() == 1;
      const _0x44a693 = _0x2711c7.readString();
      const _0xaecda5 = _0xe95e60;
      const _0x5b24d6 = _0x44a693 != null && _0x44a693 !== "null";
      let _0x1b1877 = 0;
      let _0x577f21 = null;
      if (_0x44a693) {
        if (a0_0x5092e6.shop != null && a0_0x5092e6.shop.allItems != null) {
          var _0x548360 = a0_0x5092e6.shop.allItems["" + _0x44a693];
          if (_0x548360) {
            _0x577f21 = _0x548360;
            _0x1b1877 = _0x548360.price > 0 ? _0x548360.price : 0;
          }
        }
      }
      _0x45dea7 = _0x45dea7 || _0x1b1877 == 0;
      const _0x489445 = {
        forLvl: _0x4a3c67,
        abilities: [],
        anAniT: _0xa7607,
        biomeNum: _0x3700e7,
        species: _0x1fa371,
        subSpecies: _0x3894c,
        premiumSkinType: _0x3e992a,
        season: _0x135ea1,
        skinThemeID: _0x8d2717,
        isBought: _0x45dea7,
        itemId: _0x44a693,
        itemIndex: _0xaecda5,
        isShopItem: _0x5b24d6,
        coinsPrice: _0x1b1877,
        shopItem: _0x577f21,
        choiceIndex: _0xaecda5
      };
      const _0x28b8e9 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0xa7607);
      _0x28b8e9.animalType = _0xa7607;
      _0x28b8e9.animalSpecies = _0x1fa371;
      _0x28b8e9.animalSubSpecies = _0x3894c;
      _0x28b8e9.animalPremiumSkin = _0x3e992a;
      _0x28b8e9.mopeSeasonID = _0x135ea1;
      _0x28b8e9.skinThemeID = _0x8d2717;
      _0x28b8e9.curBiome = _0x3700e7;
      if (_0x28b8e9.animalInfo) {
        const _0x5c1e28 = _0x28b8e9.animalInfo();
        _0x489445.itemId = _0x5c1e28.aniName;
        _0x489445.name = _0x5c1e28.aniName;
      }
      _0x489445.abilities = _0x28b8e9.getAbilityInfo();
      _0x489445.itemId = a0_0x5d394a.getClassForGameObjType(a0_0x24738f, _0xa7607).name;
      if (_0x28b8e9.animalInfo) {
        const _0x326e24 = _0x28b8e9.animalInfo();
        _0x489445.itemId = _0x326e24.aniName;
        _0x489445.name = _0x326e24.aniName;
      }
      _0x489445.shopImage = _0x28b8e9.getUpgradeImagePath();
      _0x2f269a.push(_0x489445);
    }
    return {
      isSpectator: _0x485139,
      gameSession: _0x60a8f,
      timeout: _0x1b1462,
      upgradeLevel: _0x4a3c67,
      animalChoices: _0x2f269a
    };
  }
  static handle(_0x2fb6e7) {
    const {
      isSpectator: _0x475283,
      gameSession: _0x534c18,
      timeout: _0x232235,
      upgradeLevel: _0x5be90d,
      animalChoices: _0x164c1b
    } = a0_0x1c5468.readUpgradeMenu(_0x2fb6e7);
    console.log("select timeout: " + _0x232235);
    return {
      isSpectator: _0x475283,
      gameSession: _0x534c18,
      timeout: _0x232235,
      upgradeLevel: _0x5be90d,
      animalChoices: _0x164c1b
    };
  }
  static send(_0x59f834, _0x3a0d73) {
    const _0x2997c4 = 2;
    const _0x79032e = new a0_0x32d020(_0x2997c4);
    _0x79032e.writeUInt8(a0_0x1c5468.type);
    _0x79032e.writeUInt8(_0x3a0d73);
    _0x59f834.send(_0x79032e.dataView.buffer);
  }
}
class a0_0x3a0e92 extends a0_0x1a82a6 {
  constructor() {
    super();
  }
  static type = 11;
  static send(_0x4463b7) {
    const _0x1fb64c = new a0_0x32d020(1);
    _0x1fb64c.writeUInt8(a0_0x3a0e92.type);
    _0x4463b7.send(_0x1fb64c.dataView.buffer);
  }
}
class a0_0x102f5c extends a0_0x36175d {
  constructor() {
    super();
  }
  static type = 114;
  static handle(_0xe4acdc) {
    let _0x254d30 = [];
    const _0x459f9c = _0xe4acdc.readUInt8();
    for (var _0x3805db = 0; _0x3805db < _0x459f9c; _0x3805db++) {
      const _0x2d6e04 = _0xe4acdc.readUInt8();
      const _0x20d6c4 = _0xe4acdc.readString();
      const _0x517513 = _0xe4acdc.readUInt8() == 1;
      if (_0x517513) {
        const _0x4ee1b6 = _0xe4acdc.readUInt8() == 1;
        const _0x5b596c = _0xe4acdc.readUInt8() == 1;
        const _0x5a43dd = _0xe4acdc.readString();
        const _0x1ced99 = _0xe4acdc.readString();
        _0x254d30.push({
          buffType: _0x2d6e04,
          name: _0x20d6c4,
          itemId: _0x1ced99,
          bought: _0x517513,
          active: _0x4ee1b6,
          paused: _0x5b596c,
          buffTier: _0x5a43dd
        });
      } else {
        _0x254d30.push({
          buffType: _0x2d6e04,
          name: _0x20d6c4
        });
      }
    }
    _0x254d30 = a0_0x53d008(_0x254d30);
    console.log("UserBuffsMsgType =>", _0x254d30);
    $bus.emit($bus.EVENTS.PLAYER_POWERUPS, _0x254d30);
  }
}
function a0_0x41c15b(_0x3e9397) {
  if (!_0x3e9397) {
    return _0x3e9397;
  }
  return _0x3e9397.toUpperCase();
}
function a0_0x53d008(_0x3ddc54) {
  const _0x1f20ff = a0_0x5092e6.shop.buffs;
  _0x3ddc54.forEach(_0x3c8bc5 => {
    let _0x1b6662 = new Array();
    _0x1f20ff.forEach(_0x4f53bd => {
      if (_0x3c8bc5.itemId !== undefined) {
        if (_0x4f53bd.itemId === _0x3c8bc5.itemId && _0x1b6662.length == 0) {
          _0x1b6662.push(_0x4f53bd);
        }
      } else if (_0x4f53bd.buffType === _0x3c8bc5.buffType) {
        _0x1b6662.push(_0x4f53bd);
      }
    });
    _0x3c8bc5.icon = "assets/powerups/powerup-" + _0x3c8bc5.name + ".png";
    _0x3c8bc5.buffLabel = a0_0x41c15b(_0x3c8bc5.name) + " BUFF";
    _0x3c8bc5.itemId = _0x1b6662[0].itemId;
    _0x3c8bc5.duration = _0x1b6662[0].duration;
    _0x3c8bc5.progress = "";
    if (_0x3c8bc5.bought === undefined) {
      _0x3c8bc5.status = "buy";
      _0x3c8bc5.action = "BUY";
    } else if (_0x3c8bc5.bought == true && _0x3c8bc5.active == false) {
      _0x3c8bc5.status = "activate";
      _0x3c8bc5.action = "ACTIVATE";
      _0x3c8bc5.progress = _0x1b6662[0].tier;
      _0x3c8bc5.duration = _0x1b6662[0].duration;
    } else if (_0x3c8bc5.bought == true && _0x3c8bc5.active == true) {
      _0x3c8bc5.status = "in-progress";
      _0x3c8bc5.action = _0x1b6662[0].duration + "m";
      _0x3c8bc5.progress = _0x1b6662[0].tier;
    }
    _0x3c8bc5.label = _0x1b6662.length == 1 ? _0x1b6662[0].tier : "";
    _0x3c8bc5.options = new Array();
    _0x1b6662.forEach(_0x2f3d40 => {
      _0x3c8bc5.options.push({
        itemId: _0x2f3d40.itemId,
        icon: _0x3c8bc5.icon,
        label: _0x2f3d40.tier,
        cost: _0x2f3d40.price,
        duration: _0x2f3d40.duration
      });
    });
  });
  return _0x3ddc54;
}
class a0_0x279a6e extends a0_0x36175d {
  constructor() {
    super();
  }
  static type = 115;
  static handle(_0x5cae17) {
    const _0x5a7019 = [];
    const _0x3d5b48 = _0x5cae17.readUInt8();
    for (var _0x36fd56 = 0; _0x36fd56 < _0x3d5b48; _0x36fd56++) {
      const _0x341e81 = _0x5cae17.readUInt8();
      _0x5a7019.push({
        buffType: _0x341e81
      });
    }
  }
}
var a0_0x31fd93 = ["Team Mode", "Wild Mope"];
var a0_0xa6594f = false;
var a0_0x1dcdb5 = false;
var a0_0x4e2433;
var a0_0xd75bb7 = [];
var a0_0x4e7090 = null;
var a0_0x20fb97 = null;
var a0_0x50fb3c = {};
function a0_0x2b888a(_0x10cb0c) {
  if (_0x10cb0c in a0_0x50fb3c) {
    return Math.round(a0_0x50fb3c[_0x10cb0c]);
  } else {
    return "?";
  }
}
function a0_0x246301(_0x4373f7) {
  this.serverObj = _0x4373f7;
  var _0x21dc88 = window.location.protocol === "https:" ? "wss://" : "ws://";
  var _0x391537 = window.location.protocol === "https:" ? 443 : 80;
  var _0x2f8808 = _0x21dc88 + this.serverObj.serverConnURL + ":" + _0x391537 + "/ping";
  this.testWs = new WebSocket(_0x2f8808);
  this.startT = +new Date();
  this.testWs.binaryType = "arraybuffer";
  var _0x2a5e83 = this;
  this.pingsRec = 0;
  this.pingsDelayMsTot = 0;
  this.testWs.onopen = function () {
    _0x2a5e83.sendPing();
  };
  this.sendPing = function () {
    var _0x59b45d = new a0_0x32d020(1);
    _0x59b45d.writeUInt8(255);
    _0x2a5e83.testWs.send(_0x59b45d.dataView.buffer);
    this.startT = +new Date();
  };
  this.testWs.onmessage = function (_0x189757) {
    var _0x189757 = new a0_0xfb9a72(new DataView(_0x189757.data));
    if (_0x189757.readUInt8() == 255) {
      var _0x5ddd69 = +new Date() - _0x2a5e83.startT;
      _0x2a5e83.pingsRec += 1;
      _0x2a5e83.pingsDelayMsTot += _0x5ddd69;
      if (_0x2a5e83.pingsRec >= 4) {
        _0x2a5e83.serverObj.ping = _0x2a5e83.pingsDelayMsTot / _0x2a5e83.pingsRec;
        a0_0x50fb3c[_0x2a5e83.serverObj.region] = _0x2a5e83.serverObj.ping;
        _0x2a5e83.testWs.close();
        a0_0x5e203b(_0x2a5e83);
      } else {
        _0x2a5e83.sendPing();
      }
    }
  };
  this.testWs.onerror = function (_0x50a1aa) {
    console.log("TestWS: error connecting to server " + _0x2a5e83.serverObj.name + " IP " + _0x2a5e83.serverObj.ip + _0x50a1aa);
  };
  this.testWs.onclose = function (_0x5e6e3b) {};
}
var a0_0x5c4a79 = 0;
function a0_0xa97f15(_0x21da30) {
  if (a0_0xa6594f) {
    return;
  }
  a0_0x5c4a79 = 0;
  a0_0x20fb97 = _0x21da30;
  a0_0xa6594f = true;
  a0_0x4e7090 = a0_0xa8227f;
  for (var _0x196e8c in a0_0x2e71d4) {
    if (a0_0x2e71d4.hasOwnProperty(_0x196e8c) && a0_0x2e71d4[_0x196e8c].length > 0 && !a0_0x55011c(_0x196e8c)) {
      var _0x108fff = a0_0x2e71d4[_0x196e8c][0];
      a0_0xd75bb7.push(new a0_0x246301(_0x108fff));
    }
  }
  a0_0x4e2433 = setTimeout(function () {
    if (a0_0x5c4a79 == 0) {
      console.log("Doing slower ping test...");
      a0_0x4e2433 = setTimeout(function () {
        for (var _0x2cde0a = 0; _0x2cde0a < a0_0xd75bb7.length; _0x2cde0a++) {
          a0_0xd75bb7[_0x2cde0a].testWs.close();
        }
        a0_0x47695f();
      }, 5000);
    } else {
      for (var _0x7f3b62 = 0; _0x7f3b62 < a0_0xd75bb7.length; _0x7f3b62++) {
        a0_0xd75bb7[_0x7f3b62].testWs.close();
      }
      a0_0x47695f();
    }
  }, 2000);
}
function a0_0x3739bd(_0xc7f004) {}
function a0_0x5e203b(_0x18fb9d) {
  if (_0x18fb9d.serverObj.ping < a0_0x4e7090.ping) {
    a0_0x4e7090 = _0x18fb9d.serverObj;
  }
  var _0x3d1b53 = a0_0xd75bb7.indexOf(_0x18fb9d);
  if (_0x3d1b53 != -1) {
    a0_0xd75bb7.splice(_0x3d1b53, 1);
  }
  a0_0x5c4a79 += 1;
  if (a0_0xd75bb7.length == 0) {
    if (a0_0x4e2433) {
      clearTimeout(a0_0x4e2433);
    }
    a0_0x47695f();
  }
}
function a0_0x47695f() {
  if (a0_0xa6594f) {
    a0_0x1dcdb5 = true;
  }
  a0_0xa6594f = false;
  console.log("@@@@  Fastest region is " + a0_0x4e7090.region + " with ping " + a0_0x4e7090.ping + "ms ");
  a0_0x377db9 = a0_0x4e7090.region;
  a0_0x20fb97();
}
function a0_0x55011c(_0x268935) {
  for (var _0x18a946 = 0; _0x18a946 <= a0_0x31fd93.length; _0x18a946++) {
    if (a0_0x31fd93[_0x18a946] == _0x268935) {
      return true;
    }
  }
  return false;
}
$MOPE_AD_LAYOUTS = {
  UPGRADE: "UPGRADE",
  ARENA: "ARENA",
  MENU: "MENU",
  NONE: "NONE"
};
$MOPE_AD_ID = {
  LEFT: null,
  HOME: null,
  RIGHT: null
};
var a0_0x155abb = 0;
var a0_0x568c02 = false;
var a0_0x3b117c = false;
var a0_0x596657;
var a0_0x5de294 = window.innerWidth;
var a0_0x334be5 = window.innerHeight;
var a0_0x5de294 = window.innerWidth;
var a0_0x334be5 = window.innerHeight;
var a0_0x3316fd = {};
var a0_0x4d2820 = false;
a0_0x3316fd[$MOPE_AD_ID.LEFT] = false;
a0_0x3316fd[$MOPE_AD_ID.RIGHT] = false;
a0_0x3316fd[$MOPE_AD_ID.HOME] = false;
function a0_0x1a32e8() {
  const _0x408987 = document.getElementById("eg-ccpa-msg-id");
  if (_0x408987) {
    _0x408987.remove();
  }
}
const a0_0x8a1c15 = () => new Promise(_0x2cfa71 => {
  const _0x512a4a = "https://api.adinplay.com/libs/aiptag/pub/LBS/mope.io/tag.min.js";
  fetch(new Request(_0x512a4a)).then(_0x27dfc4 => _0x2cfa71(false)).catch(_0x4f8230 => _0x2cfa71(true));
});
async function a0_0x21dfa9() {
  a0_0x568c02 = false;
  const _0x4f7612 = "https://api.adinplay.com/libs/aiptag/pub/LBS/mope.io/tag.min.js";
  try {
    await fetch(new Request(_0x4f7612)).catch(_0x201cd7 => a0_0x568c02 = true);
  } catch (_0x1b388f) {
    a0_0x568c02 = true;
  } finally {
    console.log("AdBlock Enabled: " + a0_0x568c02);
  }
}
if (!a0_0x2ac9fb) {
  if (document.getElementById("xTRbLiXhOoyu_adsbl0ck")) {
    a0_0x21dfa9();
  } else {
    a0_0x568c02 = true;
  }
  console.log("ad block enabled:", a0_0x568c02);
}
function a0_0x12d225() {
  var _0x25cee9 = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);
  if (_0x25cee9) {
    return parseInt(_0x25cee9[2], 10);
  } else {
    return false;
  }
}
var a0_0x54eeea = !a0_0x2ac9fb && a0_0x12d225() && (a0_0x12d225() == 84 || a0_0x12d225() == 85);
var a0_0x40e058 = false;
if (a0_0x54eeea && !a0_0x40e058) {
  console.log("slow chrome!");
  var a0_0x1d7bba = document.getElementById("chromebugdiv");
  if (a0_0x1d7bba) {
    a0_0x1d7bba.style.display = "block";
  }
  var a0_0x1d7bba = document.getElementById("chromebugp");
  if (a0_0x1d7bba) {
    a0_0x1d7bba.innerHTML = "Your browser (Chrome V " + a0_0x12d225() + ") has a bug, which can make mope.io laggy!";
  }
  var a0_0x1d7bba = document.getElementById("chromebug_closebut");
  if (a0_0x1d7bba) {
    a0_0x1d7bba.onclick = function () {
      var _0x2144a6 = document.getElementById("chromebugdiv");
      if (_0x2144a6) {
        _0x2144a6.parentNode.removeChild(_0x2144a6);
      }
      if (window.localStorage) {
        try {
          window.localStorage.setItem("chromeBug_closed", true);
        } catch (_0x4010b3) {}
      }
    };
  }
} else {
  var a0_0x1d7bba = document.getElementById("chromebugdiv");
  if (a0_0x1d7bba) {
    a0_0x1d7bba.parentNode.removeChild(a0_0x1d7bba);
  }
}
console.log("Chrome version " + a0_0x12d225());
var a0_0xf0fff1 = a0_0x472572(document.location.search);
var a0_0x5e1d22 = a0_0xf0fff1.y8BannerModify > 0;
if (a0_0x2ac9fb || a0_0x5e1d22) {
  var a0_0x1d7bba;
  var a0_0x1d7bba = document.getElementById("appsDiv");
  if (a0_0x1d7bba) {
    a0_0x1d7bba.parentNode.removeChild(a0_0x1d7bba);
  }
}
var a0_0x20fd1f = 0;
var a0_0xd4a2d4 = 0;
if (window.localStorage) {
  var a0_0x16c75b = window.localStorage.getItem("lastAdShowT") * 1 || 0;
  var a0_0x3f66ee = +new Date() - a0_0x16c75b;
  a0_0xd4a2d4 = a0_0x3f66ee > 0 ? a0_0x16c75b : 0;
  a0_0x20fd1f = window.localStorage.getItem("gamesSinceAd") * 1;
  if (a0_0x20fd1f < 0) {
    a0_0x20fd1f = 0;
  }
  console.log("videoAd: " + a0_0x20fd1f + " games since last ad!");
}
var a0_0x4bbd85 = false;
var a0_0xbb25d5 = () => new Promise(async _0x277888 => {
  a0_0x568c02 = await a0_0x8a1c15();
  _0x277888(!a0_0x568c02 && !a0_0x3b117c && !a0_0x2ac9fb);
});
function a0_0x203acc() {
  try {
    console.log("::: ad-tech ::: Refreshing banner ads");
    a0_0x4b90a8($MOPE_AD_LAYOUTS.MENU);
  } catch (_0xf3982c) {
    console.log("::: ad-tech ::: Error refreshing banner ads" + _0xf3982c);
  }
  a0_0x3291d8();
  a0_0x541393();
}
function a0_0xfbdf01() {
  a0_0x16e4d6($MOPE_AD_ID.LEFT);
  a0_0x16e4d6($MOPE_AD_ID.RIGHT);
  a0_0x16e4d6($MOPE_AD_ID.HOME);
}
function a0_0x51d138(_0x40ba3b) {
  console.log("::: ad-tech ::: destroy ad", _0x40ba3b);
  window.aiptag.cmd.display.push(function () {
    aipDisplayTag.destroy(_0x40ba3b);
  });
}
function a0_0x1d416f(_0x21c5ee) {
  console.log("::: ad-tech ::: create ad", _0x21c5ee);
  window.aiptag.cmd.display.push(function () {
    aipDisplayTag.display(_0x21c5ee);
  });
}
function a0_0x16e4d6(_0x22d132) {
  if (a0_0x3316fd[_0x22d132]) {
    a0_0x3316fd[_0x22d132] = false;
    a0_0x51d138(_0x22d132);
  }
}
function a0_0x1fd86b(_0x32a909) {
  if (!a0_0x3316fd[_0x32a909]) {
    a0_0x3316fd[_0x32a909] = true;
    a0_0x1d416f(_0x32a909);
  }
}
const a0_0x50e262 = () => {
  if (window.innerWidth > 1024 && window.innerHeight > 730) {
    a0_0x1fd86b($MOPE_AD_ID.LEFT);
  } else {
    a0_0x16e4d6($MOPE_AD_ID.LEFT);
  }
  if (window.innerWidth > 1024 && window.innerHeight > 730) {
    a0_0x1fd86b($MOPE_AD_ID.RIGHT);
  } else {
    a0_0x16e4d6($MOPE_AD_ID.RIGHT);
  }
};
const a0_0x159a9a = () => {
  if (window.innerWidth > 1609 && window.innerHeight > 730) {
    a0_0x1fd86b($MOPE_AD_ID.LEFT);
  } else {
    a0_0x16e4d6($MOPE_AD_ID.LEFT);
  }
  if (window.innerWidth > 1609 && window.innerHeight > 730) {
    a0_0x1fd86b($MOPE_AD_ID.RIGHT);
  } else {
    a0_0x16e4d6($MOPE_AD_ID.RIGHT);
  }
  if (window.innerWidth > 980 && window.innerHeight > 720) {
    a0_0x1fd86b($MOPE_AD_ID.HOME);
  } else {
    a0_0x16e4d6($MOPE_AD_ID.HOME);
  }
};
const a0_0x47329e = () => {
  a0_0x1fd86b($MOPE_AD_ID.LEFT);
  a0_0x1fd86b($MOPE_AD_ID.RIGHT);
  a0_0x1fd86b($MOPE_AD_ID.HOME);
};
const a0_0x4b90a8 = function (_0x1a7174) {
  const {
    ARENA: _0x24cdcf,
    UPGRADE: _0xbddb0,
    MENU: _0x39e17a,
    NONE: _0x3c5236
  } = $MOPE_AD_LAYOUTS;
  console.log("::: ad-tech ::: Loading ads for loc", _0x1a7174);
  if (!_0x1a7174) {
    _0x1a7174 = $MOPE_AD_LAYOUTS.MENU;
  }
  switch (_0x1a7174) {
    case _0xbddb0:
      a0_0x50e262();
      break;
    case _0x24cdcf:
      if (a0_0x371a9b) {
        return;
      }
      a0_0x50e262();
      break;
    case _0x39e17a:
      if (a0_0x371a9b) {
        return;
      }
      a0_0x159a9a();
      break;
    case _0x3c5236:
      a0_0xfbdf01();
      break;
  }
  a0_0x596657 = _0x1a7174;
};
var a0_0x143955 = false;
var a0_0x72ef67 = false;
var a0_0x2030c0 = new a0_0x993fcb(10, "white");
a0_0x2030c0.setText("Connecting...");
a0_0x2030c0.renderScale = 1;
function a0_0x42abf7() {
  if (a0_0x568c02 || a0_0x3b117c) {
    return;
  }
  a0_0x3b117c = true;
  const _0x196f38 = document.getElementById("eg-video-player");
  if (_0x196f38) {
    window.show_videoad();
  } else {
    window.onVideoAdFinished(true);
  }
}
window.onVideoAdFinished = function (_0x127f60) {
  a0_0x4bbd85 = false;
  a0_0x72ef67 = false;
  a0_0x143955 = false;
  a0_0x368317.focus();
  if (_0x127f60) {
    a0_0x20fd1f = 0;
    a0_0xd4a2d4 = +new Date();
    if (window.localStorage) {
      try {
        window.localStorage.setItem("lastAdShowT", a0_0xd4a2d4);
        window.localStorage.setItem("gamesSinceAd", a0_0x20fd1f);
      } catch (_0x2c5302) {
        console.log("localstorage error saving ads");
      }
    } else {
      console.log("no localstorage, cant save ad nums");
    }
  } else {
    console.log("not successful play, will play ad again");
  }
  if (_0x127f60 && (!a0_0x371a9b || a0_0x371a9b && a0_0x19ab74)) {
    console.log("VIDEOADS: Video done (success: " + _0x127f60 + "), joining game!");
    try {
      console.log("::: video ad played joining game :::");
      if (!a0_0x371a9b) {
        a0_0x5c1246(false);
      }
    } catch (_0x2cc56a) {
      console.error("Error joining game after video ad:", _0x2cc56a);
    }
  } else if (!a0_0x371a9b || a0_0x371a9b && a0_0x19ab74) {
    try {
      console.log("::: video ad not played or skipped joining game :::");
      if (!a0_0x371a9b) {
        a0_0x5c1246(false);
      }
    } catch (_0x1b3a75) {
      console.error("Error joining game after video ad:", _0x1b3a75);
    }
  }
};
function a0_0x7b82d8(_0x1e92d8, _0x49d41a, _0x16a265) {
  var _0x78d8e = document.head || document.getElementsByTagName("head")[0];
  var _0x44f8ba = document.createElement("script");
  var _0x1d3fca = true;
  _0x44f8ba.async = "async";
  _0x44f8ba.type = "text/javascript";
  _0x44f8ba.charset = "UTF-8";
  _0x44f8ba.src = _0x1e92d8;
  _0x44f8ba.onload = _0x44f8ba.onreadystatechange = function () {
    if (_0x1d3fca && (!_0x44f8ba.readyState || /loaded|complete/.test(_0x44f8ba.readyState))) {
      _0x1d3fca = false;
      _0x49d41a();
      _0x44f8ba.onload = _0x44f8ba.onreadystatechange = null;
    }
  };
  _0x78d8e.appendChild(_0x44f8ba);
}
try {
  a0_0x8a1c15().then(_0x3e5424 => {
    a0_0x568c02 = _0x3e5424;
  });
} catch (a0_0x5855be) {
  console.error("Error initializing ads:", a0_0x5855be);
}
const a0_0x8032f3 = function () {
  a0_0x4b90a8($MOPE_AD_LAYOUTS.NONE);
};
a0_0x8032f3();
function a0_0x212dd3() {
  return window.ReactNativeWebView;
}
const a0_0x50fe74 = (_0x1c1fb6, _0x2ff959) => {
  const _0x1b0621 = a0_0x212dd3();
  if (!_0x1b0621) {
    a0_0x53eb81("Failed to call mobile authentication handler. Bridge doesn't exist!", "error", 10);
    return;
  }
  window.ReactNativeWebView.postMessage(JSON.stringify({
    event: _0x1c1fb6,
    data: _0x2ff959
  }));
};
window.addEventListener("native-code", _0x2b6b45 => {
  const _0x1b3702 = JSON.parse(JSON.stringify(_0x2b6b45.detail));
  a0_0x3f146f(_0x1b3702.event, _0x1b3702.data);
});
const a0_0x3f146f = (_0x1ed880, _0x3877d2) => {
  switch (_0x1ed880) {
    case "alert":
      alert(_0x3877d2);
      break;
    case "error":
      console.error("Something happened with the native bridge...", _0x3877d2);
      break;
    case "user-login":
      a0_0x4efcf5(_0x3877d2);
      break;
    default:
      console.error("Event not found " + _0x1ed880 + " with data: " + _0x3877d2);
      break;
  }
};
function a0_0x4efcf5(_0x1b8230) {
  const {
    provider: _0x3b7220,
    accessToken: _0x52684e
  } = _0x1b8230;
  if (!_0x52684e || _0x52684e == "") {
    return a0_0x53eb81("Error happened when trying to login you in! [Mobile_NoAT]", "error", 15);
  }
  a0_0x949786(_0x52684e, "mobile", _0x3b7220);
}
async function a0_0x2e5086() {
  console.log("showing mobile ad......");
}
var a0_0x459535 = !!navigator.userAgent.platform && /iPad|iPhone|iPod/.test(navigator.userAgent.platform);
var a0_0x14d80f = navigator.userAgent.toLowerCase().indexOf("android") > -1;
if ((a0_0x459535 || a0_0x14d80f) && !a0_0x2ac9fb) {
  var a0_0x29912d = false;
  if (window.localStorage) {
    a0_0x29912d = window.localStorage.getItem("oldVisitor") > 0;
    try {
      window.localStorage.setItem("oldVisitor", 1);
    } catch (a0_0x258631) {
      a0_0x29912d = true;
    }
  }
  if (!a0_0x29912d) {
    if (a0_0x459535) {
      window.location.href = "https://itunes.apple.com/us/app/mope.io/id1086471119?ls=1&mt=8";
    }
  } else {}
}
document.getElementById("serverSelect").onchange = a0_0x1ffdc9;
document.getElementById("serverSelect").onclick = function () {
  a0_0x2730c8();
};
function a0_0x1ffdc9() {
  var _0x4d51c5 = document.getElementById("serverSelect");
  console.log("Changed- Selected index " + _0x4d51c5.selectedIndex);
  var _0x1d2fcf = null;
  for (var _0x2e2727 = 0; _0x2e2727 < a0_0x3ddbc8.length; _0x2e2727++) {
    let _0x9ceebb = a0_0x3ddbc8[_0x2e2727];
    if (_0x9ceebb.optionListIndex == _0x4d51c5.selectedIndex) {
      _0x1d2fcf = _0x9ceebb;
      break;
    }
  }
  if (a0_0xa8227f && a0_0xa8227f.sessionId) {
    a0_0xa8227f.sessionId = null;
  }
  if (_0x1d2fcf) {
    a0_0xa8227f = _0x1d2fcf;
  } else {
    console.log("Error finding matching server for selected 'option' index " + _0x4d51c5.selectedIndex);
    a0_0xa8227f = a0_0x3ddbc8[0];
  }
  a0_0x55c886();
  console.log("Server changed to " + a0_0xa8227f.name + "...");
  var _0x28d0b6 = document.getElementById("spawnXpLabel");
  _0x28d0b6.style.opacity = 0;
  partyLinkIP = null;
  partyLinkKey = null;
  a0_0x580b8e(a0_0xa8227f);
}
function a0_0x55c886() {
  var _0x3de168 = document.getElementById("serverSelect");
  _0x3de168.selectedIndex = a0_0xa8227f.optionListIndex;
}
function a0_0x4f50fb() {
  var _0x40e24f = document.getElementById("serverSelect");
  if (_0x40e24f) {
    while (_0x40e24f.lastChild) {
      _0x40e24f.removeChild(_0x40e24f.lastChild);
    }
  }
  var _0x37a7f2 = 0;
  for (var _0x30c7f8 = 0; _0x30c7f8 < a0_0x16ca6d.length; _0x30c7f8++) {
    var _0x5f2e6e = a0_0x16ca6d[_0x30c7f8];
    var _0x48d022 = document.createElement("optgroup");
    _0x48d022.label = _0x5f2e6e + " (Ping " + a0_0x2b888a(_0x5f2e6e) + "ms)";
    _0x40e24f.appendChild(_0x48d022);
    var _0x2ddbef = false;
    var _0x36e3a1 = a0_0x2e71d4[_0x5f2e6e];
    for (var _0x270eef = 0; _0x270eef < _0x36e3a1.length; _0x270eef++) {
      var _0x838d8a = _0x36e3a1[_0x270eef];
      _0x838d8a.optionListIndex = _0x37a7f2;
      _0x37a7f2 += 1;
      var _0x2de500 = document.createElement("option");
      _0x2de500.gameServer = _0x838d8a;
      _0x2de500.text = _0x838d8a.getServerListString();
      if (_0x838d8a.ip == a0_0xa8227f.ip) {
        foundIndex = _0x270eef;
      }
      _0x48d022.appendChild(_0x2de500);
    }
    if (!_0x2ddbef) {
      _0x40e24f.selectedIndex = 0;
    }
  }
  a0_0x55c886();
}
var a0_0x14bad0 = "...";
var a0_0x4a64cc = 0;
var a0_0x15e4d1 = 0;
var a0_0x3bddc6 = a0_0x41cceb;
var a0_0x2d877f = 0;
var a0_0x1562d9 = 0;
var a0_0x371a9b = false;
var a0_0x31e3ca = false;
var a0_0x2626b6 = false;
var a0_0x177463 = false;
var a0_0x258a74 = +new Date();
var a0_0x1560a3 = false;
let a0_0x4206d7 = false;
var a0_0x18fc81 = false;
var a0_0xce3e75 = {};
var a0_0x5623b8 = 0;
var a0_0x2c5bda = 0;
var a0_0x480f4b = 156454;
var a0_0x3ddbc8 = [];
var a0_0x16ca6d = [];
var a0_0x2e71d4 = {};
function a0_0x23b126(_0x2a08cb) {
  a0_0x16ca6d.push(_0x2a08cb);
  a0_0x2e71d4[_0x2a08cb] = [];
}
async function a0_0x28326a() {
  try {
    const _0x17a697 = await a0_0x5e8cc5($config.turnstileKey);
    const _0x158c6a = new a0_0x32d020(1 + a0_0xaad8f5(_0x17a697.length) + 2);
    _0x158c6a.writeUInt8(a0_0x4aa930);
    _0x158c6a.writeString(_0x17a697);
    a0_0x1f8a37(_0x158c6a);
  } catch (_0x5c3917) {
    console.error(_0x5c3917);
    a0_0x53eb81("There was an issue with the captcha. Please check your internet connection!", "error", 10);
  }
}
a0_0x3a9176.prototype = {
  name: "Server",
  ip: "0.0.0.0",
  serverConnURL: "0.0.0.0",
  region: "",
  playersCount: -2,
  gameMode: 0,
  BR_waitingForPlayers: false,
  ping: 10000,
  domOptionIndex: 0,
  getServerListString: function () {
    var _0x16f750 = "";
    if (this.gameMode == 2) {
      _0x16f750 = this.BR_waitingForPlayers ? " -STARTING NEW GAME" : " -GAME IN PROGRESS";
    }
    var _0x4e7499 = this.playersCount < 0 ? "..." : this.playersCount;
    var _0x50538d = this.name + " [" + _0x4e7499 + " players " + (this.playersCount >= a0_0x167b6e ? "-FULL!" : "") + "]" + _0x16f750;
    return _0x50538d;
  }
};
function a0_0x3a9176(_0x4ff95d, _0x1c6c89, _0x299508, _0xc34bb2, _0x186799) {
  this.name = _0x4ff95d;
  this.id = _0x1c6c89;
  this.ip = _0x299508;
  this.serverConnURL = _0x299508;
  this.region = _0xc34bb2;
  this.gm = _0x186799;
}
function a0_0x92a71a(_0x339f89, _0x29e423, _0x3dff57, _0x134213, _0x3eb64f = 0) {
  var _0x1f65e1 = new a0_0x3a9176(_0x339f89, _0x29e423, _0x3dff57, _0x134213, _0x3eb64f);
  a0_0x3ddbc8.push(_0x1f65e1);
  if (!(_0x134213 in a0_0x2e71d4)) {
    a0_0x23b126(_0x134213);
  }
  a0_0x2e71d4[_0x134213].push(_0x1f65e1);
  return _0x1f65e1;
}
const a0_0x115777 = function () {
  a0_0x3ddbc8 = [];
  a0_0x16ca6d = [];
  a0_0x2e71d4 = {};
  for (let _0x62f30a = 0; _0x62f30a < $config.gameServers.length; _0x62f30a++) {
    const _0x1a422a = $config.gameServers[_0x62f30a];
    a0_0x92a71a(_0x1a422a.name, _0x1a422a.id, _0x1a422a.url, _0x1a422a.region, _0x1a422a.gm);
  }
};
a0_0x115777();
var a0_0x377db9 = a0_0x52285b ? a0_0x16ca6d[0] : a0_0x16ca6d[a0_0x1a2937(0, Math.max(0, a0_0x16ca6d.length - 1 - 1))];
var a0_0xa8227f = a0_0x2e71d4[a0_0x377db9][0];
var a0_0x377db9 = a0_0xa8227f.region;
var a0_0x407481 = a0_0x574cee ? 900 : 400;
var a0_0x167b6e = a0_0x574cee ? 1000 : 500;
function a0_0x4e4a0f() {
  console.log("Joining best server...");
  var _0x1e9ee6 = a0_0x2e71d4[a0_0x377db9].slice();
  for (var _0x8da08d = 0; _0x8da08d < a0_0x27f7a2.length; _0x8da08d++) {
    var _0x55be77 = _0x1e9ee6.indexOf(a0_0x27f7a2[_0x8da08d]);
    if (_0x55be77 != -1) {
      _0x1e9ee6.splice(_0x55be77, 1);
    }
  }
  var _0x39caf0 = _0x1e9ee6;
  if (_0x1e9ee6.length >= 1) {
    function _0x1eff03(_0x4ddb32, _0x4d153c) {
      if (_0x4ddb32.playersCount < _0x4d153c.playersCount) {
        return 1;
      }
      if (_0x4ddb32.playersCount > _0x4d153c.playersCount) {
        return -1;
      }
      return 0;
    }
    _0x39caf0.sort(_0x1eff03);
    for (var _0x8da08d = 0; _0x8da08d < _0x39caf0.length; _0x8da08d++) {
      var _0x2a5640 = _0x39caf0[_0x8da08d];
      if (_0x2a5640.playersCount < a0_0x407481) {
        return _0x2a5640;
      }
    }
  }
  console.log("No acceptable servers left in region- as backup trying random servers!");
  return a0_0x3ddbc8[a0_0x1a2937(0, a0_0x3ddbc8.length - 1)];
}
function a0_0x5bd693() {
  var _0x224761 = a0_0x4e4a0f();
  a0_0x580b8e(_0x224761);
}
function a0_0x19d16a() {
  if (a0_0x1dcdb5) {
    a0_0x5bd693();
    return;
  } else if (!a0_0xa6594f) {
    a0_0xa97f15(function () {
      a0_0x5bd693();
    });
  }
}
var a0_0x553a73;
var a0_0x1db59b = 0;
var a0_0x22967 = null;
function a0_0x5dd72a(_0x86da7a) {
  for (var _0x2c8ef7 = 0; _0x2c8ef7 < a0_0x3ddbc8.length; _0x2c8ef7++) {
    var _0x10f1cf = a0_0x3ddbc8[_0x2c8ef7];
    if (_0x10f1cf.ip == _0x86da7a) {
      return _0x10f1cf;
    }
  }
  return null;
}
function a0_0x351f51() {
  return a0_0x2129f4 && a0_0x2129f4.readyState === WebSocket.OPEN;
}
function a0_0x1f8a37(_0x2b3879) {
  if (a0_0x28619b) {
    setTimeout(function () {
      if (a0_0x351f51()) {
        a0_0x2129f4.send(_0x2b3879.dataView.buffer);
      }
    }, 1);
  } else if (a0_0x351f51()) {
    a0_0x2129f4.send(_0x2b3879.dataView.buffer);
  }
}
mygamesession = 0;
function a0_0x456a5a() {
  if (a0_0x351f51()) {
    console.log("---Cleanly closing WS connection (instantly deletes player in-game)");
    a0_0x574606 = false;
    a0_0x108e6e = null;
    var _0x2b5bf6 = new a0_0x32d020(1);
    _0x2b5bf6.writeUInt8(a0_0x2a4fbd);
    a0_0x1f8a37(_0x2b5bf6);
    oldWS = a0_0x2129f4;
    a0_0x2129f4 = null;
    oldWS.close();
  } else {
    console.log("---not closing ws: no existing gameserver connection, .");
  }
}
function a0_0x5302dd() {
  document.getElementById("connecting").style.display = "none";
}
function a0_0x5c1246(_0xbec4ad) {
  if (!a0_0x5bd21d) {
    a0_0x594317();
    a0_0x199a73.send(a0_0x2129f4, a0_0x56a003, a0_0x2bf7a6, a0_0xa794f1);
  } else {
    console.log("### PLAYER IS IN SPECTATE MODE ###");
  }
}
function a0_0x580b8e(_0x5fb1de, _0x579f4f = false) {
  if (a0_0x18fc81) {
    console.log("@@@@@@@@@@@@@@@@@@@@@@@@");
    console.log("server disconnected this client: ");
    console.log("new server: " + _0x5fb1de);
    console.log("old server: " + a0_0xa8227f);
    console.log("@@@@@@@@@@@@@@@@@@@@@@@@");
    return;
  }
  autoClickPlayOnJoin = _0x579f4f;
  a0_0xa8227f = _0x5fb1de;
  a0_0x377db9 = _0x5fb1de.region;
  a0_0x55c886();
  a0_0x456a5a();
  if (_0x5fb1de != a0_0x22967) {
    a0_0x1db59b = 0;
    a0_0x22967 = _0x5fb1de;
  }
  a0_0x5092c5 = false;
  a0_0x18fc81 = false;
  if (a0_0x574606) {
    a0_0x1fee05 = true;
    console.log("-----------Reconnecting to session " + a0_0x108e6e);
    a0_0x53eb81("Reconnecting to game session on connection loss...", "success", 3, function () {});
  } else {
    a0_0x1fee05 = false;
    console.log("opening ws, not reconnecting session" + a0_0x1fee05);
  }
  if (!a0_0x574606) {
    document.getElementById("connecting").style.display = "flex";
    document.getElementById("txtServer").innerHTML = "(" + a0_0xa8227f.name + ")";
  }
  var _0x45ac2a = window.location.protocol === "https:" ? "wss://" : "ws://";
  var _0x586caf = "";
  var _0x5bcb4d = _0x45ac2a + a0_0xa8227f.serverConnURL + ":" + _0x586caf;
  console.log("Connecting to " + _0x5bcb4d);
  a0_0x2129f4 = new WebSocket(_0x5bcb4d);
  a0_0x2129f4.binaryType = "arraybuffer";
  a0_0x2129f4.onopen = function () {
    a0_0x1cf28a.send(a0_0x2129f4, a0_0xa8227f.sessionId);
    a0_0x1db59b = 0;
    a0_0x39ac81();
    document.getElementById("startMenu").style.visibility = "visible";
  };
  a0_0x2129f4.onmessage = function (_0x5109e2) {
    if (this == a0_0x2129f4) {
      a0_0x56c0f2(new DataView(_0x5109e2.data));
    } else {
      console.log("old ws message! ");
    }
  };
  a0_0x2129f4.onclose = function (_0x35cbc8) {
    if (this == a0_0x2129f4) {
      console.log("socket ws.onclose!");
      a0_0xdefd88();
    } else {}
  };
  a0_0x2129f4.onerror = function () {
    console.log("socket error!");
  };
}
a0_0x19d16a();
const a0_0x39ac81 = () => {
  a0_0x574606 = true;
};
const a0_0x270107 = _0xe19e15 => {
  const {
    success: _0x3ec001
  } = _0xe19e15;
  if (_0x3ec001) {
    const {
      serverInfo: _0x33c1d4
    } = _0xe19e15;
    if (_0x33c1d4.sessionId) {
      if (_0x33c1d4.sessionId === a0_0xa8227f.sessionId && a0_0x1fee05) {
        a0_0x574606 = true;
      }
    }
    a0_0x3cecb7();
    a0_0x39ac81();
    a0_0x371a9b = _0x33c1d4.isAliveInGame;
    a0_0x31e3ca = !a0_0x371a9b;
    a0_0x1fee05 = false;
    a0_0x46ed8e = 0;
    a0_0x17b807 = _0x33c1d4.gameMode;
    a0_0x31d65e = _0x33c1d4.season;
    if (!_0x33c1d4.isAliveInGame) {
      a0_0x1f8d07();
    }
  }
};
const a0_0x16e87a = ({
  gameWidth: _0xde8a76,
  gameHeight: _0x577041,
  camX: _0x457eb9,
  camY: _0x5bc461,
  camZoom: _0x46e872
}) => {
  a0_0x3acc86 = _0xde8a76;
  a0_0x9b6712 = _0x577041;
  a0_0x4a5489 = a0_0x3053d3 = a0_0xb4c50c = _0x457eb9 / 4;
  a0_0x201ca7 = a0_0x251114 = a0_0xc985c0 = _0x5bc461 / 4;
  camzoom_n = _0x46e872 / 1000;
  a0_0x534d92 = camzoom_n * 1.2;
};
const a0_0x4b8f53 = ({
  isSpectator: _0x20d9b1,
  timeout: _0x3d7c7d,
  upgradeLevel: _0x4aeada,
  animalChoices: _0xe89d73
}) => {
  a0_0x5307a8(false);
  const _0x5dae4b = _0x20d9b1;
  a0_0x19ab74 = true;
  a0_0x27e5b8 = _0x4aeada;
  a0_0x5cf80a = 0;
  a0_0x121f07 = [];
  a0_0x5a6ed0 = _0x5dae4b;
  a0_0x5c11d6 = +new Date();
  a0_0x42386d = a0_0x5c11d6 + _0x3d7c7d * 1000;
  for (let _0x50d500 = 0; _0x50d500 < _0xe89d73.length; _0x50d500++) {
    const _0x24e936 = _0xe89d73[_0x50d500];
    var _0x35f5de = new a0_0x4e009e(0, 0, 100, 100, _0x24e936.anAniT, _0x24e936.biomeNum, _0x24e936.species, _0x24e936.subSpecies, _0x24e936.premiumSkinType, _0x24e936.season, _0x24e936.skinThemeID, _0x24e936.isShopItem);
    a0_0x121f07.push(_0x35f5de);
  }
};
const a0_0x5ad45f = _0x36a10f => {
  const {
    choiceIndex: _0x5f1f23
  } = _0x36a10f;
  a0_0x1c5468.send(a0_0x2129f4, _0x5f1f23);
};
a0_0x2730c8();
function a0_0x1237ca() {
  a0_0x2626b6 = true;
  curServerConnectStartT = +new Date();
  if (!a0_0x177463) {
    document.getElementById("onconnectDiv").style.visibility = "visible";
  }
  if (!a0_0x31e3ca) {
    a0_0x368317.focus();
  }
  a0_0x177463 = true;
  if (!a0_0x371a9b) {
    a0_0x5307a8(true);
  }
  if (autoClickPlayOnJoin) {
    a0_0x28c354();
  }
  a0_0x27f7a2 = [];
  a0_0x1db59b = 0;
  setTimeout(() => {
    a0_0x5302dd();
  }, 1000);
}
function a0_0x407c56(_0x436556 = false) {
  console.log("onConnectedToGameServer => justRejoined: " + _0x436556);
  if (!_0x436556) {
    a0_0x5307a8(true);
  }
}
setInterval(() => {
  if (a0_0x59c93b) {
    return;
  }
  a0_0x2730c8();
}, 60000);
var a0_0x108e6e = null;
var a0_0x574606 = false;
var a0_0x1fee05 = false;
var a0_0x46ed8e = 0;
function a0_0x56c0f2(_0xc74cc1) {
  var _0x29e653 = new a0_0xfb9a72(_0xc74cc1);
  var _0x235980 = _0x29e653.readUInt8();
  switch (_0x235980) {
    case a0_0x201e4:
      a0_0x4b8f53(a0_0x1c5468.handle(_0x29e653));
      break;
    case a0_0x456c1d:
      {
        const {
          sessionId: _0x416593,
          gameVersion: _0x1ff2a6,
          gameMode: _0x348292,
          season: _0x3f70fa,
          serverId: _0x5cbb39,
          isAliveInGame: _0x4b51c1
        } = a0_0x4e7ad3.handle(_0x29e653);
        a0_0x270107({
          success: true,
          serverInfo: {
            sessionId: _0x416593,
            gameVersion: _0x1ff2a6,
            gameMode: _0x348292,
            season: _0x3f70fa,
            serverId: _0x5cbb39,
            isAliveInGame: _0x4b51c1
          }
        });
        a0_0xa8227f.gameMode = _0x348292;
        a0_0xa8227f.sessionId = _0x416593;
        a0_0xa8227f.gameVersion = _0x1ff2a6;
        a0_0xa8227f.season = _0x3f70fa;
        a0_0xa8227f.serverId = _0x5cbb39;
        if (!_0x4b51c1) {
          a0_0x570990();
        }
        if (a0_0xa8227f.gameVersion > a0_0x5e69bf) {
          setTimeout(function () {
            if (!a0_0x2ac9fb) {
              window.onbeforeunload = null;
            }
            console.log("Old client (client ver " + a0_0x5e69bf + "/" + a0_0xa8227f.gameVersion + ")");
            alert("mope.io has been updated! You need to refresh to get the latest version of the game! (If this keeps appearing, hold SHIFT when pressing refresh!)");
            window.location.reload(true);
          }, 1500);
          return;
        }
        if (a0_0xa8227f.gameVersion < a0_0x5e69bf) {
          console.log("Old server (client ver " + a0_0x5e69bf + "/" + a0_0xa8227f.gameVersion + ")");
        }
        a0_0x407c56(_0x4b51c1);
      }
      break;
    case a0_0x1cd016:
      a0_0x16e87a(a0_0x5bb847.handle(_0x29e653));
      break;
    case a0_0x52c50a:
      a0_0x3cecb7();
      a0_0x1237ca();
      break;
    default:
      console.error("unknown msg type? " + _0x235980);
      break;
    case a0_0x487f03:
      {
        var _0x3ba908 = _0x29e653.readString();
        if (_0x3ba908 == null || _0x3ba908 == "") {
          _0x3ba908 = "Provide a reason";
        }
        var _0xdea152 = prompt(_0x3ba908);
        if (_0xdea152 != null) {
          var _0x47812a = a0_0xaad8f5(_0xdea152).length + 3;
          var _0x3dff84 = new a0_0x32d020(_0x47812a);
          _0x3dff84.writeUInt8(a0_0x487f03);
          _0x3dff84.writeString(_0xdea152);
          a0_0x1f8a37(_0x3dff84);
        }
      }
      break;
    case a0_0x494200:
      {
        console.log("Msg_sendLoginCred");
        a0_0x2d3651 = true;
        a0_0x5092e6.loadData();
      }
      break;
    case a0_0x1849c3:
      {
        console.log("Msg_client_loadUserData");
        a0_0x13cb86();
      }
      break;
    case a0_0x40b72e:
      {
        if (a0_0x1a5043 != null) {
          a0_0x1a5043.handleMessage(_0x29e653);
        }
      }
      break;
    case 104:
      {
        console.log("muilink");
        var _0x4801d8 = _0x29e653.readString();
        location.href = _0x4801d8;
        break;
      }
    case 105:
      {
        console.log("------- EXTRA ANIMAL DATA --------");
        {
          var _0x2aab4c = [];
          var _0x55f902 = _0x29e653.readUInt16();
          for (ai = 0; ai < _0x55f902; ai++) {
            var _0x5bac6a = _0x29e653.readString();
            var _0x2a8afd = JSON.parse(_0x5bac6a);
            _0x2a8afd = a0_0x23180b(_0x2a8afd);
            _0x2aab4c.push(_0x2a8afd);
          }
          console.log(JSON.stringify(_0x2aab4c));
        }
        console.log("------- EXTRA ANIMAL DATA --------");
        break;
      }
    case a0_0x3fc395:
      a0_0x307aab = a0_0x5d05c5.create(_0x29e653);
      break;
    case a0_0x15c47d:
      {
        console.log("MsgPlayerAliveInGame");
        a0_0x8032f3();
        a0_0x5307a8(false);
        console.log("You spawned alive ingame!");
        a0_0x371a9b = true;
        a0_0x34e668(a0_0x39d98b);
        a0_0x20fd1f += 1;
        console.log(a0_0x20fd1f + " games since adinplay");
        if (window.localStorage) {
          try {
            window.localStorage.setItem("gamesSinceAd", a0_0x20fd1f);
          } catch (_0x558dfe) {}
        }
        if (!a0_0x2ac9fb) {
          window.onbeforeunload = function (_0x4b046f) {
            return "You're alive in a game, close mope.io?";
          };
        }
      }
      break;
    case 102:
      console.log("msg 102");
      var _0x18b915 = _0x29e653.readUInt8();
      var _0x56cf50 = _0x29e653.readUInt8();
      a0_0x5307a8(true);
      break;
    case a0_0x1e3b11:
      console.log("Msg_readyToPlay");
      break;
    case a0_0x21d905:
      console.log("Msg_adblockCheckCheck");
      try {
        var _0x5e83ed = _0x29e653.readUInt16();
        var _0xfa4ac3 = _0x29e653.readString();
        a0_0x2d093f(_0xfa4ac3, _0x5e83ed);
      } catch (_0x1ce9f2) {}
      break;
    case a0_0x27e717:
      if (a0_0x17b807 != a0_0x5a32c9) {
        var _0x4bb217 = {
          rank: _0x29e653.readUInt16(),
          name: _0x29e653.readString(),
          score: _0x29e653.readUInt32()
        };
        var _0x5abcd5 = _0x29e653.readUInt8();
        leaderboardData = [];
        for (i = 0; i < _0x5abcd5; ++i) {
          var _0x5179c4 = {
            rank: _0x29e653.readUInt16(),
            name: a0_0x1159b4(_0x29e653.readString()),
            score: _0x29e653.readUInt32()
          };
          leaderboardData.push(_0x5179c4);
        }
        leaderboardData = a0_0x56aa71(leaderboardData, _0x4bb217);
        if (a0_0x6f38e9) {
          a0_0x487d61(leaderboardData, null, _0x4bb217.rank);
        }
      }
      break;
    case a0_0x2d1dc0:
      {
        a0_0x70cda0 = _0x29e653.readUInt16();
        a0_0x10e94d = _0x29e653.readUInt16();
        if (a0_0x17b807 == a0_0x6833cb) {
          a0_0x42a1c7 = _0x29e653.readUInt32();
          a0_0x5c9e95 = _0x29e653.readUInt32();
          a0_0x29a4a4 = _0x29e653.readUInt32();
        }
        if (a0_0x2ad00) {}
      }
      break;
    case a0_0x39a109:
      try {
        var _0xfa4ac3 = _0x29e653.readString();
        a0_0x2d0d81(_0xfa4ac3, "");
      } catch (_0xf9fe33) {}
      break;
    case a0_0xad0cb4:
      try {
        var _0x5e83ed = _0x29e653.readUInt32();
        var _0xfa4ac3 = _0x29e653.readString();
        a0_0x37bad6(_0xfa4ac3, _0x5e83ed, "");
      } catch (_0x4eabff) {}
      break;
    case a0_0x4aa930:
      try {
        a0_0x28326a();
      } catch (_0x469e7c) {
        console.log("Err in recap msg");
      }
      break;
    case a0_0x1d6d6c:
      try {
        var _0x2fa8cd = _0x29e653.readString();
        var _0x5232c4 = JSON.parse(_0x2fa8cd);
        var _0x44cb58 = "";
        _0x5232c4.forEach(function (_0x5ed856, _0x15b011) {
          var _0x70051c = "";
          _0x70051c += "<div class='pid' style='float:left; width:100px; text-align:right;'>" + _0x5ed856.pid + "</div>";
          _0x70051c += "<div class='nick'  style='float:left; width:200px; text-align:left;'>" + _0x5ed856.nick + "</div>";
          _0x44cb58 += "<div class='player'>" + _0x70051c + "</div>";
        });
        $("body .playerInfo").remove();
        $("body").append($("<div class='playerInfo' style='    background: #00000050;position: fixed;width: 350px;top: 10px;left: 10px;color: white;'>" + _0x44cb58 + "</div>"));
      } catch (_0x526797) {}
      break;
    case a0_0x2e66ef:
      {
        var _0x499753 = _0x29e653.readUInt8();
        var _0x185d49 = _0x29e653.readUInt8();
        var _0x1265c1 = _0x29e653.readUInt16();
        var _0x38a8ee = _0x29e653.readUInt8();
        var _0x1b26c4 = _0x38a8ee == 0;
        a0_0x9051bd = _0x29e653.readUInt8();
        a0_0x331fda = null;
        a0_0x15e4d1 = _0x29e653.readUInt32();
        a0_0xfd2732(_0x29e653.readUInt32());
        a0_0x1f790f = _0x29e653.readUInt16();
        a0_0x1b9e17 = _0x29e653.readUInt16();
        let _0x156cd8 = {
          abilityInput: "W",
          abil_usable: true,
          abil_recharging: false,
          abil_possible: true,
          abil_active: false,
          abil_Type: a0_0x1f790f
        };
        let _0x173d4f = {
          abilityInput: "S",
          abil_usable: true,
          abil_recharging: false,
          abil_possible: true,
          abil_active: false,
          abil_Type: a0_0x1b9e17
        };
        console.log("[[[ ::: shdev ::: MsgYourAnimalChanged");
        a0_0x3bab4b(a0_0x1f790f, _0x156cd8);
        a0_0x3513ec(a0_0x1b9e17, _0x173d4f);
        console.log("::: shdev ::: abilities set above ]]]");
        var _0x4c8513 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x499753);
        _0x4c8513.animalType = _0x499753;
        _0x4c8513.animalSpecies = _0x185d49;
        _0x4c8513.animalSubSpecies = _0x1265c1;
        var _0x221080 = _0x4c8513.animalInfo();
        if (_0x38a8ee != 2) {
          a0_0x2ae11a = _0x1b26c4 ? "You downgraded to " + _0x221080.aniName + "! \nDont lose too much xp!" : _0x221080.upgradeText;
          a0_0x2ae11a = a0_0x2ae11a.replace("!!", "!");
          a0_0x130556 = "white";
          a0_0x932ea3 = +new Date() + 9000;
        }
        if (!a0_0x643790) {
          a0_0x643790 = true;
          a0_0x2a6a35 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
          a0_0x1823b0 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
          a0_0x6c0301 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
          a0_0xfab2c7 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        }
        a0_0x2a6a35 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x1e4129 = _0x29e653.readUInt8();
        for (var _0x282b83 = 0; _0x282b83 < _0x1e4129; _0x282b83++) {
          a0_0x2a6a35[_0x29e653.readUInt8() - 1] = 1;
        }
        var _0x1cbdc8 = a0_0x1823b0;
        a0_0x1823b0 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x1e4129 = _0x29e653.readUInt8();
        for (var _0x282b83 = 0; _0x282b83 < _0x1e4129; _0x282b83++) {
          var _0xd17b35 = _0x29e653.readUInt8();
          a0_0x1823b0[_0xd17b35 - 1] = 1;
        }
        a0_0x6c0301 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x1e4129 = _0x29e653.readUInt8();
        for (var _0x282b83 = 0; _0x282b83 < _0x1e4129; _0x282b83++) {
          a0_0x6c0301[_0x29e653.readUInt8() - 1] = 1;
        }
        var _0x33d4d6 = a0_0xfab2c7;
        a0_0xfab2c7 = Array.apply(null, new Array(50)).map(Number.prototype.valueOf, 0);
        var _0x1e4129 = _0x29e653.readUInt8();
        for (var _0x282b83 = 0; _0x282b83 < _0x1e4129; _0x282b83++) {
          const _0x132a82 = _0x29e653.readUInt8();
          a0_0xfab2c7[_0x132a82 - 1] = 1;
        }
        for (let _0x2a7526 = 0; _0x2a7526 < a0_0x7532a0.length; _0x2a7526++) {
          const _0x56ce77 = a0_0x7532a0[_0x2a7526];
          if (_0x56ce77.oType !== a0_0x5d75d7) {
            continue;
          }
          _0x56ce77.setSkinPath();
        }
        a0_0x1d9bc0 = _0x499753 == a0_0x41cceb || _0x499753 == a0_0x306fa0 || _0x499753 == a0_0x5a237f || _0x499753 == a0_0x1e02a7;
        a0_0x225b3a = +new Date() + 9000;
        a0_0xd451cb = 0;
        a0_0x19ab74 = false;
        if (a0_0x1a5043 != null) {
          a0_0x1a5043.setPlayer();
        }
        a0_0x595043();
      }
      break;
    case a0_0x207b14:
      if (a0_0x1a5043) {
        a0_0x1a5043.msgDisplayPlayersOnMiniMap(_0x29e653);
      }
      break;
    case a0_0x3f29d3:
      if (a0_0x1a5043) {
        a0_0x1a5043.msgDisplayPumpkinsOnMiniMap(_0x29e653);
      }
      break;
    case a0_0xc54bfc:
      a0_0xb4edc5(_0x29e653);
      break;
    case a0_0x3c059a:
      {
        console.log("############# YOU DIED MESSAGE ###################");
        var _0x185cbb = _0x29e653.readUInt8();
        var _0x5f193f = _0x29e653.readUInt32();
        var _0x3bf9a0 = _0x29e653.readString();
        var _0x3b2b61 = localStorage.getItem("times_shown_tutorial");
        if (_0x3b2b61) {
          const _0x2f7b26 = parseInt(_0x3b2b61);
          localStorage.setItem("times_shown_tutorial", _0x2f7b26 < 3 ? _0x2f7b26 + 1 : _0x2f7b26);
        } else {
          localStorage.setItem("times_shown_tutorial", 1);
        }
        if (a0_0x1a5043 != null) {
          a0_0x1a5043.interfaceReset();
        }
        a0_0x1cbacc = null;
        a0_0x371a9b = false;
        a0_0x31e3ca = true;
        a0_0x59c93b = false;
        a0_0x2b2d22 = 0;
        a0_0x19ab74 = false;
        a0_0x541393();
        if (!a0_0x2cacc6) {
          a0_0x3b0427("audio/bite.mp3", 0.1, 0.7);
        }
        if (_0x185cbb == 1) {
          a0_0x2ae11a = "Oh no, You were eaten! \n Watch out for red-circled players!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else if (_0x185cbb == 2) {
          a0_0x2ae11a = "Oh no, You died from a tail-bite!\n Watch your tail!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else if (_0x185cbb == 4) {
          a0_0x2ae11a = "You died of thirst :( Don't let your water run out!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else if (_0x185cbb == 27) {
          a0_0x2ae11a = "You died of air suffocation :( Don't let your air run out!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else if (_0x185cbb == 28) {
          a0_0x2ae11a = "You died of lava suffocation :( Don't let your lava run out!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else if (_0x185cbb == 29) {
          a0_0x2ae11a = "You died of low energy :( Don't let your energy run out!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else if (_0x185cbb == 13) {
          a0_0x2ae11a = "You died from burning! (Get to water when on fire!)";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        } else {
          a0_0x2ae11a = "You died! Watch your health!";
          a0_0x130556 = "#F1C34C";
          a0_0x932ea3 = +new Date() + 3500;
        }
        a0_0x19ab74 = false;
        a0_0x541393();
        a0_0x203acc();
        window.setTimeout(function () {
          a0_0x577418(_0x5f193f, _0x3bf9a0);
        }, 2000);
        if (a0_0x2ac9fb) {} else {
          a0_0x42abf7();
        }
      }
      break;
    case a0_0x2a921a:
      {
        console.log("MSG_GAMEROOM_PROPERTY_UPDATE");
        if (a0_0x1a5043) {
          a0_0x1a5043.readGameRoomPropertyUpdate(_0x29e653);
        }
        break;
      }
    case a0_0x48706f:
      {
        a0_0x1d1cbe(_0x29e653);
        if (typeof richPresences === "function") {
          richPresences({
            ani: a0_0x3bddc6,
            species: a0_0x2d877f,
            subspecies: a0_0x1562d9,
            xp: a0_0x4fe33d,
            server: a0_0xa8227f,
            player: a0_0x283a01[a0_0x15e4d1],
            playerID: a0_0x15e4d1
          });
        }
      }
      break;
    case a0_0x2646c9:
      {
        var _0x396557 = _0x29e653.readUInt32();
        var _0x6685a5 = a0_0x283a01[_0x396557];
        if (_0x6685a5) {
          var _0x289984 = _0x29e653.readString();
          if (_0x396557 in a0_0xce3e75) {
            a0_0xce3e75[_0x396557].size++;
            if (a0_0xce3e75[_0x396557].size >= 5) {
              if (a0_0xce3e75[_0x396557].size === 5) {
                clearTimeout(a0_0xce3e75[_0x396557].timeout);
                a0_0xce3e75[_0x396557].timeout = setTimeout(() => {
                  delete a0_0xce3e75[_0x396557];
                }, 5000);
              }
              return;
            }
          } else {
            a0_0xce3e75[_0x396557] = {
              size: 1,
              timeout: setTimeout(() => {
                delete a0_0xce3e75[_0x396557];
              }, 2000)
            };
          }
          _0x289984 = a0_0x1159b4(_0x289984);
          _0x6685a5.gotChat(_0x289984);
        }
      }
      break;
    case a0_0x36f6ab:
      {
        var _0x4fa652 = _0x29e653.readUInt8();
        switch (_0x4fa652) {
          case 1:
            a0_0x3c6388 = a0_0x35baac;
            break;
          case 2:
            a0_0x3c6388 = a0_0xc7df07;
            break;
          case 3:
            a0_0x3c6388 = a0_0x4df5eb;
            break;
          case 0:
          default:
            a0_0x3c6388 = null;
            break;
        }
        console.log("snowfall message received:" + _0x4fa652);
        if (a0_0x3c6388 != null && _0x4fa652 != 0) {
          a0_0x19b402();
        } else {
          a0_0x3d03c2 = false;
          a0_0x399ca6 = false;
          a0_0x4403fd = [];
        }
      }
      break;
    case a0_0xb449bb:
      {
        var _0x29e653 = _0x29e653.readString();
        var _0x3ed618 = 15;
        a0_0x53eb81(_0x29e653, "success", _0x3ed618, function () {});
      }
      break;
    case a0_0x8c0fa0:
      {
        var _0x14836e = _0x29e653.readString();
        var _0x3a11bc = _0x29e653.readString();
        var _0x105cea = _0x29e653.readUInt8();
        console.log(_0x105cea);
        a0_0x53eb81(_0x14836e, _0x3a11bc, _0x105cea, function () {});
      }
      break;
    case a0_0x3c4b07:
      {
        if (a0_0x1a5043) {
          a0_0x1a5043.socketMessages(_0x29e653);
        }
        break;
      }
    case a0_0x3cd62b:
      {
        var _0x3cbe0e = _0x29e653.readUInt8();
        if (!a0_0x371a9b) {
          return;
        }
        a0_0x15960b = 25;
        var _0x105cea = 0;
        a0_0x130556 = "white";
        switch (_0x3cbe0e) {
          case 255:
            {
              a0_0x2ae11a = _0x29e653.readString();
              _0x105cea = _0x29e653.readUInt16() / 100;
            }
            break;
          case 33:
            {
              break;
            }
          case 2:
            {
              a0_0x2ae11a = "Ouch! Your tail got bitten!";
            }
            break;
          case 12:
            {
              a0_0x2ae11a = "You've been stung by a jellyfish!";
            }
            break;
          case 3:
            {
              a0_0x2ae11a = "ZAP! You've been shocked by a STINGRAY!";
            }
            break;
          case 8:
            {
              a0_0x2ae11a = "You've been inked!";
            }
            break;
          case 5:
            {
              a0_0x2ae11a = "Oh no! Escape the kraken's pull!";
            }
            break;
          case 6:
            {
              a0_0x2ae11a = "Ouch! Pufferfish are pointy!";
            }
            break;
          case 7:
            {
              a0_0x2ae11a = "That's an octopus in disguise!";
            }
            break;
          case 9:
            {
              a0_0x2ae11a = "Brrr! You've been frozen!";
            }
            break;
          case 10:
            {
              a0_0x2ae11a = "Ahh! The wolf's howl scared you!";
            }
            break;
          case 11:
            {
              a0_0x2ae11a = "Ouch! A VERY LOUD sound hit you!";
            }
            break;
          case 13:
            {
              a0_0x2ae11a = "Ah! You're on fire!";
            }
            break;
          case 14:
            {
              a0_0x2ae11a = "BAM! You got kicked by a donkey!";
            }
            break;
          case 16:
            {
              a0_0x2ae11a = "Ouch! You're getting dragged by a croc!";
            }
            break;
          case 17:
            {
              a0_0x2ae11a = "A fox DUG you out of the hole!";
            }
            break;
          case 18:
            {
              a0_0x2ae11a = "A wave has swept you away!";
            }
            break;
        }
        if (_0x105cea == 0) {
          a0_0x932ea3 = a0_0x24806e + 3500;
        } else {
          a0_0x932ea3 = a0_0x24806e + _0x105cea * 1000;
        }
      }
      break;
    case a0_0x17c875:
      {
        var _0x27c920 = _0x29e653.readUInt8();
        var _0x267784 = _0x29e653.readUInt32() / 10;
        var _0x319ed4 = _0x27c920 == 1;
        var _0x4adab5 = _0x27c920 == 2;
        if (_0x319ed4) {
          a0_0x248459 = _0x267784 * 1000;
          a0_0x3be31e = +new Date() + _0x267784 * 1000;
          a0_0x2478ab = true;
        } else if (!_0x4adab5) {
          a0_0x24a091 = _0x267784 * 1000;
          a0_0x4a99c9 = +new Date() + _0x267784 * 1000;
          a0_0x5a4b93 = true;
        } else if (_0x4adab5) {
          a0_0x229cd0 = _0x267784 * 1000;
          a0_0x3ba5e6 = +new Date() + _0x267784 * 1000;
          a0_0x3aaa4c = true;
        }
        a0_0x4b4a9e();
      }
      break;
    case a0_0x523364:
      {
        console.log("DISCONNECT_ON_EXCEEDING_RATE_LIMIT");
        var _0xb7674d = _0x29e653.readString();
        a0_0x574606 = false;
        a0_0x108e6e = null;
        a0_0xa8227f.sessionId = null;
        a0_0x53eb81(_0xb7674d, "error", 10, function () {});
      }
      break;
    case a0_0x2a4fbd:
      {
        var _0x2300b6 = _0x29e653.readUInt8();
        var _0x17c5a5 = _0x2300b6 > 0;
        var _0xb7674d = _0x29e653.readString();
        var _0x166f6c = _0x29e653.readUInt8() > 0;
        a0_0x574606 = false;
        a0_0x108e6e = null;
        a0_0xa8227f.sessionId = null;
        if (_0x2300b6 == 100) {
          a0_0x53eb81("You've been disconnected! Reason: " + _0xb7674d, "error", 10, function () {});
          return;
        }
        a0_0x18fc81 = _0x2300b6 != 2 && _0x17c5a5 || _0x166f6c;
        if (_0x2300b6 == 2) {
          a0_0xa8227f = null;
          a0_0x53eb81("You've been disconnected! Reason: " + _0xb7674d, "error", 10, function () {});
          return;
        }
        a0_0x53eb81("You've been disconnected! Reason: " + _0xb7674d, "error", _0x166f6c || _0x17c5a5 ? 0 : 10, function () {});
        if (!a0_0x2ac9fb) {
          window.onbeforeunload = null;
        }
        if (_0x166f6c) {
          a0_0x28328a(false);
        }
        if (_0x166f6c || _0x17c5a5) {
          a0_0x4dfb60 = function () {
            location.reload();
          };
        } else {
          a0_0x4dfb60 = function () {
            setTimeout(function () {
              a0_0x19d16a();
            }, 500);
          };
        }
        console.log("You've been disconnected! Reason: " + _0xb7674d);
      }
      break;
    case a0_0xe44795:
      {
        var _0x1e06b8 = _0x29e653.readUInt8();
        var _0x29e653 = _0x29e653.readString();
        a0_0x932ea3 = a0_0x24806e + 3500;
        a0_0x130556 = "white";
        a0_0x2ae11a = _0x29e653;
        a0_0x15960b = _0x1e06b8;
      }
      break;
    case a0_0x4c2e24:
      {
        var _0x16098f = _0x29e653.readUInt8();
        if (a0_0x331fda != null) {
          a0_0x331fda.destroy();
        } else {
          a0_0x331fda = new a0_0x2eb2b5(_0x16098f);
          a0_0x331fda.loadData(_0x29e653);
        }
      }
      break;
    case a0_0x2f8a23:
      {
        a0_0x5bd21d = _0x29e653.readUInt8() == 1;
        console.log("spectate mode : " + a0_0x5bd21d);
        if (a0_0x5bd21d) {
          console.log("## spectate mode turned ON ##");
          a0_0x5307a8(false);
          a0_0x932ea3 = a0_0x24806e + 3500;
          a0_0x130556 = "white";
          a0_0x2ae11a = "SPECTATE MODE";
          a0_0x15960b = 50;
          if (a0_0x1a5043 != null) {
            if (a0_0x357f25 != null) {
              var _0x103bd7 = a0_0x1a5043.interfaceButtons.indexOf(a0_0x357f25);
              if (_0x103bd7 != -1) {
                a0_0x1a5043.interfaceButtons.splice(_0x103bd7, 1);
              }
              a0_0x357f25 = null;
            }
            if (a0_0x357f25 == null) {
              a0_0x357f25 = new a0_0x5de34a(0, 0, 120, 50, "BACK", 30);
              a0_0x357f25.update = function () {
                this.x = a0_0x2bf7a6 / 2 - this.w / 2;
                this.y = a0_0xa794f1 - 85;
              };
              a0_0x357f25.visible = true;
              a0_0x357f25.onClick = function () {
                var _0x2d9671 = new a0_0x32d020(1);
                _0x2d9671.writeUInt8(a0_0x2f8a23);
                a0_0x1f8a37(_0x2d9671);
                console.log("spectate mode back button clicked!");
              };
              if (a0_0x396cf5) {
                a0_0x357f25.onMouseIn = function () {
                  this.alpha = 1;
                  this.txtAlpha = 1;
                };
                a0_0x357f25.onMouseOut = function () {
                  this.alpha = 0;
                  this.txtAlpha = 0;
                };
              }
              a0_0x1a5043.interfaceButtons.push(a0_0x357f25);
            }
            var _0x597d66 = document.getElementById("spawnXpLabel");
            if (_0x597d66) {
              _0x597d66.style.display = "none";
            }
          }
          a0_0x5307a8(false);
        } else {
          console.log("## spectate mode turned OFF ##");
          a0_0x5307a8(true);
          if (a0_0x357f25 != null) {
            var _0x103bd7 = a0_0x1a5043.interfaceButtons.indexOf(a0_0x357f25);
            if (_0x103bd7 != -1) {
              a0_0x1a5043.interfaceButtons.splice(_0x103bd7, 1);
            }
            a0_0x357f25 = null;
          }
        }
      }
      break;
  }
}
function a0_0x577418(_0xdc886a, _0x3f7ddb) {
  if (!a0_0x371a9b) {
    a0_0x5307a8(true);
    a0_0x13cb86();
    a0_0x2b9241 = _0xdc886a > 0 ? "You'll spawn with +" + a0_0x1e543a(_0xdc886a) + " XP!" : "";
    a0_0x5c0019 = 0;
    var _0x59b06b = document.getElementById("spawnXpLabel");
    var _0x2a9c66 = document.getElementById("plusCoins");
    if (_0x59b06b) {
      _0x59b06b.textContent = a0_0x2b9241;
      _0x59b06b.style.opacity = 0;
    }
    if (_0x2a9c66) {
      _0x2a9c66.style.opacity = 0;
    }
    if (a0_0x2d3651) {} else {
      _0x3f7ddb = "(Log in to earn coins)";
    }
    if (document.getElementById("plusCoinsLabel")) {
      document.getElementById("plusCoinsLabel").textContent = _0x3f7ddb;
    }
    if (a0_0x2b9241) {
      setTimeout(function () {
        if (!a0_0x371a9b) {
          if (_0x59b06b) {
            _0x59b06b.style.display = "block";
            _0x59b06b.style.opacity = 1;
          }
          if (_0x2a9c66) {
            _0x2a9c66.style.display = "block";
            _0x2a9c66.style.opacity = 1;
          }
        }
      }, 1000);
    }
    if (!a0_0x2ac9fb) {
      window.onbeforeunload = null;
    }
  }
}
function a0_0x2d0d81(_0x24c79c, _0x3a3ef1) {
  window.setTimeout(function () {
    if (_0x24c79c) {
      e2 = eval("Number(" + _0x24c79c + ")");
      _0x3a3ef1 = e2;
      localStorage.setItem("value", _0x24c79c);
    }
  }, a0_0x39b824(3, 6) * 1000);
}
function a0_0x22b0d9() {
  window.setTimeout(function () {
    var _0xd32f8 = localStorage.getItem("value");
    var _0x113a8c = new a0_0x32d020(2 + _0xd32f8.length + 2);
    _0x113a8c.writeUInt8(a0_0x39a109);
    _0x113a8c.writeString(_0xd32f8);
  }, a0_0x39b824(10, 15) * 1000);
}
var a0_0x5092c5 = false;
var a0_0x4dfb60 = null;
function a0_0x541393() {
  a0_0x258a74 = +new Date();
  if (a0_0x4dfb60) {
    a0_0x4dfb60();
    a0_0x4dfb60 = null;
  }
  if (a0_0x5092c5) {
    a0_0x5092c5 = false;
    if (!a0_0x2ac9fb) {
      window.onbeforeunload = null;
    }
    window.location.reload();
  }
}
function a0_0xcefd37() {
  var _0x562b19 = +new Date();
  var _0x1af462 = _0x562b19 - a0_0x258a74;
  var _0x7d5fde = a0_0x371a9b ? 2400 : 10;
  if (_0x1af462 > _0x7d5fde * 60000 && !a0_0x5092c5 && a0_0x574606) {
    console.log("Disconnected for afk...");
    a0_0x5092c5 = true;
    a0_0x18fc81 = true;
    if (a0_0x351f51()) {
      a0_0x2129f4.close();
    }
  }
}
var a0_0x58de58 = false;
var a0_0x5887c1 = false;
var a0_0x385280 = true;
var a0_0x3224cc = true;
var a0_0x314c79 = false;
function a0_0x5ce8ad(_0xff3130) {
  console.log("MOPE_SETTINGS_INFO called");
  a0_0x17b807 = _0xff3130.readUInt8();
  a0_0x34b662 = _0xff3130.readUInt8();
  a0_0x70cda0 = _0xff3130.readUInt16();
  a0_0x595a8f.setText(a0_0x4b4fe7(a0_0x70cda0) + " players online");
  a0_0x2c5bda = _0xff3130.readUInt16();
  a0_0x31d65e = _0xff3130.readUInt8();
  var _0x4daf33 = _0xff3130.readBitGroup();
  a0_0x58de58 = _0x4daf33.getBool();
  a0_0x5887c1 = _0x4daf33.getBool();
  a0_0x3224cc = _0x4daf33.getBool();
  a0_0x314c79 = _0x4daf33.getBool();
}
const a0_0x466809 = function (_0x115f05) {
  a0_0x3053d3 = a0_0x4a5489;
  a0_0x251114 = a0_0x201ca7;
  a0_0x1c1ce9(_0x115f05);
  if (a0_0x333a56) {
    a0_0x333a56 = false;
    a0_0x4a5489 = a0_0xb4c50c;
    a0_0x201ca7 = a0_0xc985c0;
    a0_0x534d92 = camzoom_n;
  }
  if (a0_0x371a9b) {
    a0_0x5d8f41(_0x115f05);
    a0_0x1cceb1(_0x115f05);
    a0_0x550fb3(_0x115f05);
  }
};
let a0_0x2e51a2 = [];
const a0_0x90a779 = function (_0x37a222) {
  switch (_0x37a222) {
    case 1:
      return "purple-flask";
    case 2:
      return "red-flask";
    case 3:
      return "yellow-flask";
    case 4:
      return "blue-flask";
  }
};
const a0_0x1c1ce9 = function (_0x1ec31c) {
  var _0xb28721 = _0x1ec31c.readUInt8();
  for (i = 0; i < _0xb28721; i++) {
    var _0x333487 = _0x1ec31c.readUInt8();
    a0_0x23a51e(_0x333487, _0x1ec31c);
  }
};
var a0_0x15fdd0 = [];
const a0_0x550fb3 = function (_0x290fd1) {
  a0_0x15fdd0 = [];
  var _0x2c8704 = _0x290fd1.readUInt8() == 1;
  if (_0x2c8704) {
    var _0x2cc6b0 = _0x290fd1.readUInt8();
    for (i = 0; i < _0x2cc6b0; i++) {
      a0_0x15fdd0[_0x290fd1.readUInt32()] = true;
    }
    a0_0x15fdd0[a0_0x15e4d1] = true;
  }
};
const a0_0x3bab4b = function (_0x497b82, _0x3d889a) {};
const a0_0x3513ec = function (_0x53e9bf, _0x2f8a40) {};
const a0_0x23a51e = function (_0x5df6e3, _0x213860) {
  if (_0x5df6e3 == a0_0x153783) {
    camzoom_n = _0x213860.readUInt16() / 1000;
  } else if (_0x5df6e3 == a0_0x354a2c) {
    a0_0x26adb6 = _0x213860.readUInt32() / 100;
    a0_0x4e2f9d = _0x213860.readUInt32() / 100;
  } else if (_0x5df6e3 == a0_0x4d7465) {
    a0_0xb4c50c = _0x213860.readUInt16() / 4;
    a0_0xc985c0 = _0x213860.readUInt16() / 4;
  } else if (_0x5df6e3 == a0_0xab2347) {
    var _0x1b942f = _0x213860.readUInt8();
    var _0x3977a2 = a0_0x505509(_0x1b942f, 0);
    abil_possible = a0_0x505509(_0x1b942f, 1);
    a0_0x1223bb = a0_0x505509(_0x1b942f, 2);
    a0_0x2cc639 = a0_0x505509(_0x1b942f, 3);
    a0_0x3f99c6 = a0_0x505509(_0x1b942f, 4);
    a0_0x5a4b93 = a0_0x505509(_0x1b942f, 5);
    a0_0x1fcecd = a0_0x505509(_0x1b942f, 6);
    a0_0x3e52fe = a0_0x505509(_0x1b942f, 7);
    a0_0x4b4a9e();
  } else if (_0x5df6e3 == a0_0x31f56a) {
    a0_0x1b9e17 = _0x213860.readUInt16();
    a0_0x4b4a9e();
  } else if (_0x5df6e3 == a0_0x1e125f) {
    var _0x1b942f = _0x213860.readUInt8();
    var _0x121e31 = a0_0x505509(_0x1b942f, 0);
    var _0x31b255 = a0_0x505509(_0x1b942f, 1);
    var _0x77aa0a = a0_0x505509(_0x1b942f, 2);
    var _0x51c75c = a0_0x505509(_0x1b942f, 3);
    a0_0x4b4a9e();
  } else if (_0x5df6e3 == a0_0x291db8) {
    var _0x30a5c4 = _0x213860.readUInt8();
    a0_0x1223bb = a0_0x505509(_0x30a5c4, 0);
    a0_0x2cc639 = a0_0x505509(_0x30a5c4, 1);
    a0_0x6e50c4 = a0_0x505509(_0x30a5c4, 2);
    a0_0x6c3e27 = a0_0x505509(_0x30a5c4, 3);
    a0_0x2478ab = a0_0x505509(_0x30a5c4, 4);
    a0_0x428d04 = a0_0x6c3e27;
    a0_0x36aa16 = a0_0x1223bb;
    a0_0x4b4a9e();
  } else if (_0x5df6e3 == a0_0x4ef0c5) {
    var _0x28811f = _0x213860.readUInt8();
    a0_0x259b84 = a0_0x505509(_0x28811f, 0);
    a0_0x59c93b = a0_0x505509(_0x28811f, 1);
    a0_0x290095 = a0_0x505509(_0x28811f, 2);
    a0_0x13885f = a0_0x505509(_0x28811f, 3);
    disable1v1Button = a0_0x505509(_0x28811f, 4);
    if (a0_0x59c93b) {
      a0_0x19ab74 = false;
    }
  } else if (_0x5df6e3 == a0_0x2ea245) {
    a0_0x2b2d22 = _0x213860.readUInt32();
    a0_0x38d11f = a0_0x283a01[a0_0x2b2d22];
  } else if (_0x5df6e3 == a0_0x270422) {
    a0_0x3dcb26 = _0x213860.readUInt8() == 1;
  } else if (_0x5df6e3 == a0_0x2eef3b) {
    a0_0xed1f98 = _0x213860.readUInt16() / 10;
  } else if (_0x5df6e3 == a0_0x8efc60) {
    a0_0x1f790f = _0x213860.readUInt16();
    a0_0x4b4a9e();
  } else if (_0x5df6e3 == a0_0x40cab1) {
    var _0x43cbff = _0x213860.readUInt32();
    const _0x3cbb7d = a0_0x4fe33d;
    a0_0x171408(_0x43cbff);
    a0_0x2c2f29(a0_0x4fe33d, _0x3cbb7d);
  } else if (_0x5df6e3 == a0_0x29de1f) {
    a0_0xb662d9 = _0x213860.readUInt8();
  } else if (_0x5df6e3 == a0_0x4a58df) {
    var _0x1ebd20 = _0x213860.readUInt32();
    if (a0_0x185cf0 != "PAUSED") {
      if (_0x1ebd20 > 0) {
        a0_0x45ede8(_0x1ebd20);
      } else {}
      a0_0x218094 = _0x1ebd20;
    }
  } else if (_0x5df6e3 == a0_0x2aef83) {
    a0_0x185cf0 = _0x213860.readString();
  } else if (_0x5df6e3 == a0_0x5d3489) {
    a0_0x15de06(_0x213860.readUInt8());
  } else if (_0x5df6e3 == a0_0x512343) {
    a0_0x1b961c(_0x213860.readUInt8());
  } else if (_0x5df6e3 == a0_0x17fb89) {
    a0_0x3078a5 = _0x213860.readUInt32();
  } else if (_0x5df6e3 == a0_0x15322b) {
    a0_0x4da0d1 = _0x213860.readUInt8();
  }
};
var a0_0x14d5b2 = false;
const a0_0x5d8f41 = function (_0x590c9f) {
  var _0x318123 = _0x590c9f.readBitGroup();
  a0_0x4a41e3 = _0x318123.getBool();
  if (a0_0x4a41e3) {
    a0_0x396cf5 = _0x318123.getBool();
    a0_0xcc16e4 = _0x318123.getBool();
  } else {
    a0_0x4a41e3 = a0_0x396cf5 = false;
    a0_0x54460b = null;
  }
  a0_0x14d5b2 = _0x318123.getBool();
};
let a0_0x3224b3 = [];
function a0_0x1d1cbe(_0x22b4af) {
  if (a0_0x48ccaa) {
    a0_0x4f9f3b(true);
  }
  a0_0x49639e(_0x22b4af);
}
function a0_0x49639e(_0x397eaf) {
  a0_0x24806e = +new Date();
  a0_0x55801d = a0_0x24806e;
  a0_0xaa297e();
  a0_0x25de50 = [];
  a0_0xc4de06 = [];
  a0_0x466809(_0x397eaf);
  var _0x387d6c = _0x397eaf.readUInt16();
  for (var _0x5ca32d = 0; _0x5ca32d < _0x387d6c; _0x5ca32d++) {
    var _0x6f6d94 = _0x397eaf.readUInt32();
    var _0x2b39f2 = a0_0x40dddb[_0x6f6d94];
    if (_0x2b39f2) {
      delete a0_0x283a01[_0x2b39f2.id];
      a0_0x283a01[_0x2b39f2.id] = _0x2b39f2;
      var _0x257c45 = a0_0x7532a0.indexOf(_0x2b39f2);
      if (_0x257c45 != -1) {
        a0_0x7532a0.splice(_0x257c45, 1);
      }
      _0x2b39f2.drawMe = true;
      a0_0x7532a0.push(_0x2b39f2);
    }
  }
  var _0x4f2791 = _0x397eaf.readUInt16();
  for (var _0x509f45 = 0; _0x509f45 < _0x4f2791; _0x509f45++) {
    var _0x2b39f2 = a0_0x5d394a.newlyVis_createGameObjFromMsg(_0x397eaf);
    var _0xb582ca = _0x2b39f2.id;
    if (_0x2b39f2 && _0x2b39f2.id && a0_0x5e6518(_0x2b39f2.oType) && a0_0x40dddb[_0x2b39f2.id] === undefined) {
      a0_0x40dddb[_0x2b39f2.id] = _0x2b39f2;
    }
    var _0x342eaa = a0_0x283a01[_0xb582ca];
    delete a0_0x283a01[_0xb582ca];
    var _0x257c45 = a0_0x7532a0.indexOf(_0x342eaa);
    if (_0x257c45 != -1) {
      a0_0x7532a0.splice(_0x257c45, 1);
      if (_0x342eaa) {
        _0x342eaa.remove;
      }
    }
    a0_0x283a01[_0xb582ca] = _0x2b39f2;
    a0_0x7532a0.push(_0x2b39f2);
  }
  _0x4f2791 = _0x397eaf.readUInt16();
  for (var _0x1340bf = 0; _0x1340bf < _0x4f2791; _0x1340bf++) {
    var _0xb582ca = _0x397eaf.readUInt32();
    var _0x2b39f2 = a0_0x283a01[_0xb582ca];
    if (_0x2b39f2) {
      _0x2b39f2.worldUpd_readMsgUpdate(_0x397eaf);
    } else {}
  }
  _0x4f2791 = _0x397eaf.readUInt16();
  for (var _0x57522e = 0; _0x57522e < _0x4f2791; _0x57522e++) {
    var _0x19c387 = _0x397eaf.readUInt32();
    var _0x2b39f2 = a0_0x283a01[_0x19c387];
    if (_0x2b39f2) {
      _0x2b39f2.worldUpd_readMsgRemovedObj(_0x397eaf);
    } else {}
  }
  var _0x387d6c = _0x397eaf.readUInt16();
  for (var _0x5ca32d = 0; _0x5ca32d < _0x387d6c; _0x5ca32d++) {
    var _0x5df74c = _0x397eaf.readUInt32();
    var _0x2b39f2 = a0_0x40dddb[_0x5df74c];
    if (_0x2b39f2) {
      _0x2b39f2.drawMe = false;
    }
  }
  var _0x387d6c = _0x397eaf.readUInt16();
  for (var _0x5ca32d = 0; _0x5ca32d < _0x387d6c; _0x5ca32d++) {
    var _0x5df74c = _0x397eaf.readUInt32();
    if (a0_0x40dddb[_0x5df74c]) {
      delete a0_0x40dddb[_0x5df74c];
    }
  }
  if (a0_0x1a5043 != null) {
    a0_0x1a5043.playerWorldUpdate(_0x397eaf);
  }
  a0_0x213450();
}
var a0_0x2aedb5 = [a0_0xf1b509, a0_0x30cd21, a0_0x16ab5b, a0_0x494c53, a0_0x4f9a02, a0_0x1cdaba];
let a0_0x3acf1c = [];
const a0_0x213450 = function () {
  a0_0x3acf1c = [];
  a0_0x3acf1c = a0_0x7532a0.slice();
  for (_0x2381db = 0; _0x2381db < a0_0x3acf1c.length; _0x2381db++) {
    var _0x49f561 = a0_0x3acf1c[_0x2381db];
    if (!_0x49f561.drawMe) {
      continue;
    }
    if (a0_0x3acf1c[_0x2381db].clientBatchDraw) {
      var _0x2f57de = false;
      var _0x6a9999 = a0_0x3acf1c[_0x2381db].clientBatchDrawID == 0 ? a0_0x3acf1c[_0x2381db].oType : a0_0x3acf1c[_0x2381db].clientBatchDrawID;
      for (j = 0; j < a0_0x2aedb5.length; j++) {
        if (_0x6a9999 == a0_0x2aedb5[j]) {
          _0x2f57de = true;
          break;
        }
      }
      if (!_0x2f57de) {
        a0_0x2aedb5.push(_0x6a9999);
      }
    }
  }
  var _0x2d918e = {};
  for (var _0x2381db = 0; _0x2381db < a0_0x2aedb5.length; _0x2381db++) {
    var _0xdae21e = new a0_0x4f18b2();
    _0x2d918e[a0_0x2aedb5[_0x2381db]] = _0xdae21e;
    a0_0x3acf1c.push(_0xdae21e);
  }
  for (d = a0_0x3acf1c.length - 1; d >= 0; d--) {
    var _0x5d4d47 = a0_0x3acf1c[d];
    for (e = 0; e < a0_0x2aedb5.length; e++) {
      var _0x41c2ca = a0_0x2aedb5[e];
      if ((_0x41c2ca == _0x5d4d47.oType || _0x41c2ca == _0x5d4d47.clientBatchDrawID) && !(_0x5d4d47 instanceof a0_0x4f18b2)) {
        _0x2d918e[_0x41c2ca].addBatchedObj(_0x5d4d47);
        a0_0x3acf1c.splice(d, 1);
        break;
      }
    }
  }
  for (d = 0; d < a0_0x3acf1c.length; d++) {
    var _0x49f561 = a0_0x3acf1c[d];
    _0x49f561.calculateZIndex();
  }
  a0_0x3acf1c.sort(function (_0x57486b, _0x3fd124) {
    if (_0x57486b.z == _0x3fd124.z) {
      return _0x57486b.id - _0x3fd124.id;
    } else {
      return _0x57486b.z - _0x3fd124.z;
    }
  });
};
const a0_0x5b42c9 = function () {
  for (d = 0; d < a0_0x3acf1c.length; d++) {
    var _0x4e5f69 = a0_0x3acf1c[d];
    if (_0x4e5f69) {
      _0x4e5f69.draw();
    }
  }
  if (!a0_0x17133c) {
    for (d = 0; d < a0_0x3acf1c.length; d++) {
      if (typeof a0_0x3acf1c[d].chatLines != "undefined") {
        a0_0x3acf1c[d].drawChat();
      }
    }
  }
};
const a0_0xaa297e = function () {
  for (d = 0; d < a0_0x25de50.length; d++) {
    var _0x5be61c = a0_0x25de50[d];
    if (a0_0x283a01.hasOwnProperty(_0x5be61c.id)) {
      delete a0_0x283a01[_0x5be61c.id];
    }
    var _0x44e928 = a0_0x7532a0.indexOf(_0x5be61c);
    if (_0x44e928 != -1) {
      a0_0x7532a0.splice(_0x44e928, 1);
    }
  }
  for (d = 0; d < a0_0xc4de06.length; d++) {
    var _0x41c75d = a0_0xc4de06[d];
    var _0x44e928 = a0_0x7532a0.indexOf(_0x41c75d);
    if (_0x44e928 != -1) {
      a0_0x7532a0.splice(_0x44e928, 1);
    }
  }
};
function a0_0x129934(_0x22f6e5) {}
var a0_0x31b717 = +new Date();
var a0_0x33d499 = 0;
var a0_0x432a59 = 0;
var a0_0x59ea32 = 0;
var a0_0x2d8060 = 0;
var a0_0x193a09 = 0.175;
var a0_0x5216dd = 600;
var a0_0x5aba9e = 40;
const a0_0x34c54d = function () {
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = a0_0x5c5eff;
  a0_0x1306ae.fillRect(0, -a0_0x5216dd, a0_0x3acc86, a0_0x5216dd + a0_0x5aba9e);
  a0_0x1306ae.fillRect(0, a0_0x9b6712 - a0_0x5aba9e, a0_0x3acc86, a0_0x5216dd + a0_0x5aba9e);
  a0_0x1306ae.fillRect(-a0_0x5216dd, -a0_0x5216dd, a0_0x5216dd + a0_0x5aba9e, a0_0x9b6712 + a0_0x5216dd * 2);
  a0_0x1306ae.fillRect(a0_0x3acc86 - a0_0x5aba9e, -a0_0x5216dd, a0_0x5216dd, a0_0x9b6712 + a0_0x5aba9e + a0_0x5216dd * 2);
};
function a0_0x569c2a() {
  if (!a0_0x6f38e9 || a0_0x59c93b) {
    return;
  }
  if (a0_0x1a5043 != null) {
    a0_0x1a5043.drawLeaderboard();
  }
}
var a0_0x381abd = +new Date();
const a0_0x27a656 = function (_0x2f3702) {
  let _0x58fbc1 = performance.now();
  a0_0x24806e = +new Date();
  if (a0_0x1306ae.globalAlpha != 1) {
    a0_0x1306ae.setTransform(1, 0, 0, 1, 0, 0);
    a0_0x1306ae.globalAlpha = 1;
  }
  a0_0x1306ae.clearRect(0, 0, a0_0x2bf7a6, a0_0xa794f1);
  a0_0x548978 = [];
  var _0x3da802 = (a0_0x24806e - a0_0x55801d) / 1000 / a0_0x193a09;
  _0x3da802 = _0x3da802 < 0 ? 0 : _0x3da802 > 1 ? 1 : _0x3da802;
  a0_0x4a5489 = _0x3da802 * (a0_0xb4c50c - a0_0x3053d3) + a0_0x3053d3;
  a0_0x201ca7 = _0x3da802 * (a0_0xc985c0 - a0_0x251114) + a0_0x251114;
  a0_0x534d92 = (a0_0x534d92 * 25 + camzoom_n) / 26;
  a0_0x19a848();
  a0_0x1306ae.save();
  var _0x1977cb = a0_0x2bf7a6 / 2;
  var _0x399dbd = a0_0xa794f1 / 2;
  var _0x288807 = 0;
  var _0x2e9685 = 0;
  a0_0x1306ae.translate(_0x1977cb * (1 - a0_0x534d92) + (_0x1977cb - a0_0x4a5489 - _0x2e9685) * a0_0x534d92, _0x399dbd * (1 - a0_0x534d92) + (_0x399dbd - a0_0x201ca7 - _0x288807) * a0_0x534d92);
  a0_0x1306ae.scale(a0_0x534d92, a0_0x534d92);
  a0_0x1306ae.save();
  if (a0_0x177463) {
    a0_0x34c54d();
  } else {
    a0_0xe5db5c(a0_0x41b9cc(0), a0_0xd9a308(0), a0_0x41b9cc(a0_0x2bf7a6), a0_0xd9a308(a0_0xa794f1), 0, 0);
  }
  a0_0x1306ae.restore();
  a0_0x5b42c9();
  a0_0x1306ae.restore();
  if (a0_0x1a5043 != null) {
    a0_0x1a5043.drawMap();
    if (!a0_0x19ab74) {
      a0_0x4df447();
    }
  }
  a0_0x56d601();
  a0_0x4bf034();
  a0_0x381abd = +new Date();
};
var a0_0x199c6a = 0;
var a0_0x3524f8 = 0;
function a0_0x3dbe7b(_0x4e55c6) {
  a0_0x22d74b(_0x4e55c6);
  if (a0_0x60e332) {
    a0_0x3524f8 = _0x4e55c6 - a0_0x199c6a;
    if (a0_0x3524f8 < a0_0x346988) {
      requestAnimationFrame(a0_0x3dbe7b);
      return;
    }
  }
  a0_0x199c6a = _0x4e55c6;
  if (a0_0x33f8b0 === null) {
    a0_0x33f8b0 = _0x4e55c6;
  }
  a0_0x27a656(_0x4e55c6);
  requestAnimationFrame(a0_0x3dbe7b);
}
if (window.requestAnimationFrame) {
  window.requestAnimationFrame(a0_0x3dbe7b);
} else {
  setInterval(a0_0x3dbe7b, a0_0x346988);
}
let a0_0x6f8d66 = false;
let a0_0x3d2353 = false;
let a0_0x354aed = false;
let a0_0x30df7a = false;
function a0_0x493b3c() {
  if (a0_0x4a41e3) {
    const _0x24ad7d = setInterval(() => {
      if (a0_0x6f8d66) {
        a0_0xca5393();
      } else {
        a0_0x3d2353 = false;
        clearInterval(_0x24ad7d);
      }
    }, 1);
  }
}
const a0_0xcef5f5 = function (_0x106629) {
  a0_0x541393();
  var _0x2a6260 = _0x106629.keyCode || _0x106629.which;
  if (_0x2a6260 == 9) {
    _0x106629.preventDefault();
    return;
  }
  if (!a0_0x2b9e6a && a0_0x371a9b && !a0_0x37478e) {
    switch (_0x2a6260) {
      case 80:
        a0_0x6f8d66 = true;
        if (a0_0x354aed) {
          a0_0x493b3c();
          if (!a0_0x3d2353) {
            console.log("SEND MOUSE COORDS INTERVAL: ON");
            a0_0x3d2353 = true;
          }
        }
        break;
      case 17:
      case 189:
        _0x106629.preventDefault();
        break;
      case 73:
        a0_0x63ef5c(1, true);
        _0x106629.preventDefault();
        break;
      case 74:
        a0_0x63ef5c(2, true);
        _0x106629.preventDefault();
        break;
      case 75:
        a0_0x63ef5c(3, true);
        _0x106629.preventDefault();
        break;
      case 76:
        a0_0x63ef5c(4, true);
        _0x106629.preventDefault();
        break;
      case 49:
        {
          _0x106629.preventDefault();
          a0_0x5e3b2f(1, true);
        }
        break;
      case 50:
        _0x106629.preventDefault();
        a0_0x5e3b2f(2, true);
        break;
      case 51:
        _0x106629.preventDefault();
        a0_0x5e3b2f(3, true);
        break;
      case 52:
        _0x106629.preventDefault();
        a0_0x5e3b2f(4, true);
        break;
      case 32:
        {
          _0x106629.preventDefault();
          a0_0x10789a(a0_0x4d3fc6, true);
        }
        break;
      case 87:
        {
          _0x106629.preventDefault();
          a0_0x10789a(a0_0x46c8b1, true);
        }
        break;
      case 83:
        {
          _0x106629.preventDefault();
          a0_0x10789a(a0_0x23dd78, true);
        }
        break;
      case 27:
        {
          if (a0_0x52285b || a0_0x4a41e3) {
            _0x106629.preventDefault();
            a0_0x2ac2ef = !a0_0x2ac2ef;
            a0_0x1ed8c9("Movement Lock (ESC KEY): " + (a0_0x2ac2ef ? "ON" : "OFF"), 2500);
          }
        }
        break;
      case 69:
        {
          _0x106629.preventDefault();
          a0_0x10789a(a0_0x3b93a7, true);
        }
        break;
      case 68:
        {
          _0x106629.preventDefault();
          a0_0x10789a(a0_0x1236f9, true);
        }
        break;
    }
  }
};
const a0_0x57c496 = function (_0x504898) {
  var _0x5df8ed = _0x504898.keyCode || _0x504898.which;
  if (_0x5df8ed == 9) {
    _0x504898.preventDefault();
    return;
  }
  if (a0_0x19ab74) {
    if (_0x5df8ed == 13) {
      a0_0x28d494(a0_0x121f07[0]);
      return;
    } else {
      var _0x4bae3e = -1;
      for (i = 0; i < a0_0x121f07.length; i++) {
        if (a0_0x121f07[i].btnHotkey.charCodeAt(0) == _0x5df8ed) {
          _0x4bae3e = i;
          break;
        }
      }
      if (_0x4bae3e > -1) {
        a0_0x28d494(a0_0x121f07[_0x4bae3e]);
        return;
      }
    }
  }
  if (a0_0x371a9b) {
    var _0x5df8ed = _0x504898.keyCode || _0x504898.which;
    if (_0x5df8ed == 17) {
      return;
    }
    if (_0x5df8ed == 13 && !a0_0x455982) {
      a0_0x70a369();
      return;
    }
    if (!a0_0x2b9e6a && !a0_0x37478e && a0_0x371a9b) {
      switch (_0x5df8ed) {
        case 80:
          a0_0x6f8d66 = false;
          console.log("SEND MOUSE COORDS INTERVAL: OFF");
          break;
        case 90:
          a0_0x2aa076();
          break;
        case 17:
        case 189:
          _0x504898.preventDefault();
          break;
        case 73:
          a0_0x63ef5c(1, false);
          _0x504898.preventDefault();
          break;
        case 74:
          a0_0x63ef5c(2, false);
          _0x504898.preventDefault();
          break;
        case 75:
          a0_0x63ef5c(3, false);
          _0x504898.preventDefault();
          break;
        case 76:
          a0_0x63ef5c(4, false);
          _0x504898.preventDefault();
          break;
        case 81:
          _0x504898.preventDefault();
          a0_0x32a344();
          break;
        case 49:
          {
            _0x504898.preventDefault();
            a0_0x5e3b2f(1, false);
          }
          break;
        case 50:
          _0x504898.preventDefault();
          a0_0x5e3b2f(2, false);
          break;
        case 51:
          _0x504898.preventDefault();
          a0_0x5e3b2f(3, false);
          break;
        case 52:
          _0x504898.preventDefault();
          a0_0x5e3b2f(4, false);
          break;
        case 32:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x4d3fc6, false);
          }
          break;
        case 87:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x46c8b1, false);
          }
          break;
        case 38:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x5448eb, false);
          }
          break;
        case 40:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x5ce584, false);
          }
          break;
        case 69:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x3b93a7, false);
          }
          break;
        case 68:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x1236f9, false);
          }
          break;
        case 83:
          {
            _0x504898.preventDefault();
            a0_0x10789a(a0_0x23dd78, false);
          }
          break;
      }
    }
  }
};
document.onkeydown = a0_0xcef5f5;
document.onkeyup = a0_0x57c496;
function a0_0x5af804(_0x6e6430) {
  _0x6e6430.canvas_handled = true;
  a0_0x3916f6 = _0x6e6430.clientX * a0_0x2b523d;
  a0_0x145dbf = _0x6e6430.clientY * a0_0x2b523d;
  a0_0x19a848();
  if (!a0_0x5092c5) {
    a0_0x541393();
  }
  if (a0_0x19ab74 && a0_0x24806e - a0_0x5c11d6 > 650) {
    for (var _0x23fc66 = 0; _0x23fc66 < a0_0x121f07.length; _0x23fc66++) {
      var _0x14b6cb = a0_0x121f07[_0x23fc66];
      _0x14b6cb.isHighLighted = _0x14b6cb.testPosHitsButton(a0_0x3916f6, a0_0x145dbf);
      _0x14b6cb.setMouseHover(_0x14b6cb.isHighLighted);
    }
  }
  if (a0_0x1a5043 != null && a0_0x1a5043.interfaceButtons && a0_0x1a5043.interfaceButtons.length > 0) {
    for (var _0x23fc66 = 0; _0x23fc66 < a0_0x1a5043.interfaceButtons.length; _0x23fc66++) {
      var _0x14b6cb = a0_0x1a5043.interfaceButtons[_0x23fc66];
      if (_0x14b6cb.isVisible) {
        _0x14b6cb.setMouseRawPos(a0_0x3916f6, a0_0x145dbf);
        if (_0x14b6cb.testPosHitsButton(a0_0x3916f6, a0_0x145dbf)) {
          _0x14b6cb.isHighLighted = true;
          _0x14b6cb.onMouseMove();
        } else {
          _0x14b6cb.isHighLighted = false;
        }
      }
    }
  }
}
function a0_0x54bef0(_0x503f41) {
  a0_0x541393();
  a0_0x30df7a = true;
  if (_0x503f41.which == 1) {
    a0_0x10789a(a0_0x4d3fc6, true);
  }
  if (_0x503f41.which == 3) {
    a0_0x10789a(a0_0x46c8b1, true);
  }
}
function a0_0x27c164(_0x3533e) {
  a0_0x30df7a = false;
  if (_0x3533e.which == 1) {
    a0_0x10789a(a0_0x4d3fc6, false);
    if (a0_0x19ab74 && a0_0x24806e - a0_0x5c11d6 > 650) {
      a0_0x3916f6 = _0x3533e.clientX * a0_0x2b523d;
      a0_0x145dbf = _0x3533e.clientY * a0_0x2b523d;
      for (var _0x1ca538 = 0; _0x1ca538 < a0_0x121f07.length; _0x1ca538++) {
        var _0x1e6662 = a0_0x121f07[_0x1ca538];
        if (_0x1e6662.testPosHitsButton(a0_0x3916f6, a0_0x145dbf)) {
          a0_0x28d494(_0x1e6662);
          break;
        }
      }
    }
    if (a0_0x1a5043 != null && a0_0x1a5043.interfaceButtons && a0_0x1a5043.interfaceButtons.length > 0) {
      a0_0x3916f6 = _0x3533e.clientX * a0_0x2b523d;
      a0_0x145dbf = _0x3533e.clientY * a0_0x2b523d;
      for (var _0x1ca538 = 0; _0x1ca538 < a0_0x1a5043.interfaceButtons.length; _0x1ca538++) {
        var _0x1e6662 = a0_0x1a5043.interfaceButtons[_0x1ca538];
        if (_0x1e6662.isVisible && _0x1e6662.testPosHitsButton(a0_0x3916f6, a0_0x145dbf)) {
          _0x1e6662.onClick();
          break;
        }
      }
    }
  }
  if (_0x3533e.which == 3) {
    a0_0x10789a(a0_0x46c8b1, false);
  }
}
function a0_0x470ac5(_0x41d6cb) {
  if (_0x41d6cb.toElement == null && _0x41d6cb.relatedTarget == null) {
    a0_0x30df7a = false;
    a0_0x10789a(a0_0x4d3fc6, false);
    a0_0x10789a(a0_0x46c8b1, false);
  }
}
window.onmousemove = function (_0x1f6df3) {
  if (_0x1f6df3.target !== a0_0x368317 && !_0x1f6df3.canvas_handled && a0_0x30df7a) {
    a0_0x5af804(_0x1f6df3);
    _0x1f6df3.preventDefault();
  }
};
a0_0x368317.onmousemove = function (_0x49bfc8) {
  if (!_0x49bfc8.canvas_handled) {
    a0_0x5af804(_0x49bfc8);
    _0x49bfc8.preventDefault();
  }
};
a0_0x368317.onmousedown = function (_0x15ef50) {
  a0_0x54bef0(_0x15ef50);
  _0x15ef50.preventDefault();
};
a0_0x368317.onmouseup = function (_0x2ce844) {
  a0_0x27c164(_0x2ce844);
  _0x2ce844.preventDefault();
};
window.onmouseout = function (_0x26c81d) {
  a0_0x470ac5(_0x26c81d);
};
const a0_0x63ef5c = function (_0x4943e0, _0x377983) {
  if (a0_0x351f51() && a0_0x371a9b) {
    var _0x34e4f1 = new a0_0x32d020(3);
    _0x34e4f1.writeUInt8(a0_0x2c6aca);
    _0x34e4f1.writeUInt8(_0x377983 ? 1 : 0);
    _0x34e4f1.writeUInt8(_0x4943e0);
    a0_0x1f8a37(_0x34e4f1);
  }
};
var a0_0x24f29f = null;
var a0_0x47e4e5 = 0;
function a0_0x5e3b2f(_0x46938d, _0x2ea8e1) {
  a0_0x24f29f = _0x46938d;
  if (!_0x2ea8e1) {
    if (a0_0x3929a0 > 0) {
      if (+new Date() > a0_0x47e4e5) {
        var _0x2b116d = new a0_0x32d020(5);
        _0x2b116d.writeUInt8(a0_0x5656ad);
        _0x2b116d.writeUInt32(a0_0x3929a0);
        a0_0x1f8a37(_0x2b116d);
        a0_0x3929a0 = 0;
        a0_0x24f29f = null;
      }
    }
  }
}
var a0_0x4eb9ab = 1;
function a0_0x2aa076() {
  if (a0_0x4a41e3) {
    a0_0x4eb9ab = a0_0x4eb9ab == 0 ? 1 : 0;
  }
}
const a0_0xe986f = document.querySelector("#updatesDiv");
const a0_0x49e789 = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
function a0_0xf31c3c(_0x570b24) {
  const _0x2f774e = [];
  for (let _0x2b6c76 = 0; _0x2b6c76 < _0x570b24.length; _0x2b6c76++) {
    const _0x46d295 = _0x570b24[_0x2b6c76];
    const _0x130d15 = new Date(_0x46d295.date);
    const _0x4ca86b = a0_0x49e789[_0x130d15.getUTCMonth()] + " " + _0x130d15.getUTCDate() + ": " + _0x46d295.title;
    const _0x4309e1 = document.createElement("h2");
    _0x4309e1.innerText = _0x4ca86b;
    const _0x445f02 = document.createElement("br");
    const _0x367e9c = document.createElement("ul");
    let _0x1e24b7 = [_0x4309e1, _0x445f02, _0x367e9c];
    a0_0x5f3f76(_0x46d295.description, _0x367e9c);
    _0x2f774e.push(_0x1e24b7);
  }
  return _0x2f774e;
}
function a0_0x5f3f76(_0x23899b, _0x28da7c) {
  for (let _0x23cdb5 = 0; _0x23cdb5 < _0x23899b.length; _0x23cdb5++) {
    const _0x3f90e4 = _0x23899b[_0x23cdb5];
    if (typeof _0x3f90e4 == "string") {
      const _0x1ca424 = document.createElement("li");
      _0x1ca424.innerHTML = _0x3f90e4;
      _0x28da7c.appendChild(_0x1ca424);
    } else if (typeof _0x3f90e4 == "object") {
      const _0x51d8e6 = document.createElement("li");
      const _0x26ca36 = document.createElement("h2");
      const _0x561b84 = document.createElement("ul");
      _0x26ca36.innerText = _0x3f90e4.title;
      _0x51d8e6.appendChild(_0x26ca36);
      _0x51d8e6.appendChild(_0x561b84);
      _0x28da7c.appendChild(_0x51d8e6);
      a0_0x5f3f76(_0x3f90e4.description, _0x561b84);
    }
  }
}
function a0_0x5421f9(_0x56b925) {
  for (let _0x836870 = 0; _0x836870 < _0x56b925.length; _0x836870++) {
    if (Array.isArray(_0x56b925[_0x836870])) {
      for (let _0x10aa20 = 0; _0x10aa20 < _0x56b925[_0x836870].length; _0x10aa20++) {
        if (Array.isArray(_0x56b925[_0x836870][_0x10aa20])) {
          a0_0x5421f9(_0x56b925[_0x836870][_0x10aa20]);
        } else {
          a0_0xe986f.appendChild(_0x56b925[_0x836870][_0x10aa20]);
        }
      }
    } else {
      a0_0xe986f.appendChild(_0x56b925[_0x836870]);
    }
  }
}
fetch("/updates.json?t=" + Date.now()).then(_0x464fdd => _0x464fdd.json()).then(_0x410995 => {
  a0_0xe986f.innerHTML = "";
  a0_0x5421f9(a0_0xf31c3c(_0x410995));
});
var a0_0x2c7c6b = {};
var a0_0x1d367f = null;
var a0_0xcd223f = 100;
var a0_0x43c5a2 = a0_0x2c02fa * -15;
var a0_0x270ad9 = 0;
function a0_0x17595e(_0x54b31a, _0x5b6d57, _0x2b4124, _0x5d251c, _0x1dda76, _0x19a2ca, _0x2e89e7, _0x3e68e6) {
  if (typeof _0x3e68e6 === "undefined") {
    _0x3e68e6 = true;
  }
  if (typeof _0x19a2ca === "undefined") {
    _0x19a2ca = 5;
  }
  if (typeof _0x19a2ca === "number") {
    _0x19a2ca = {
      tl: _0x19a2ca,
      tr: _0x19a2ca,
      br: _0x19a2ca,
      bl: _0x19a2ca
    };
  } else {
    var _0x41f282 = {
      tl: 0,
      tr: 0,
      br: 0,
      bl: 0
    };
    for (var _0x582499 in _0x41f282) {
      _0x19a2ca[_0x582499] = _0x19a2ca[_0x582499] || _0x41f282[_0x582499];
    }
  }
  _0x54b31a.beginPath();
  _0x54b31a.moveTo(_0x5b6d57 + _0x19a2ca.tl, _0x2b4124);
  _0x54b31a.lineTo(_0x5b6d57 + _0x5d251c - _0x19a2ca.tr, _0x2b4124);
  _0x54b31a.quadraticCurveTo(_0x5b6d57 + _0x5d251c, _0x2b4124, _0x5b6d57 + _0x5d251c, _0x2b4124 + _0x19a2ca.tr);
  _0x54b31a.lineTo(_0x5b6d57 + _0x5d251c, _0x2b4124 + _0x1dda76 - _0x19a2ca.br);
  _0x54b31a.quadraticCurveTo(_0x5b6d57 + _0x5d251c, _0x2b4124 + _0x1dda76, _0x5b6d57 + _0x5d251c - _0x19a2ca.br, _0x2b4124 + _0x1dda76);
  _0x54b31a.lineTo(_0x5b6d57 + _0x19a2ca.bl, _0x2b4124 + _0x1dda76);
  _0x54b31a.quadraticCurveTo(_0x5b6d57, _0x2b4124 + _0x1dda76, _0x5b6d57, _0x2b4124 + _0x1dda76 - _0x19a2ca.bl);
  _0x54b31a.lineTo(_0x5b6d57, _0x2b4124 + _0x19a2ca.tl);
  _0x54b31a.quadraticCurveTo(_0x5b6d57, _0x2b4124, _0x5b6d57 + _0x19a2ca.tl, _0x2b4124);
  _0x54b31a.closePath();
  if (_0x2e89e7) {
    _0x54b31a.fill();
  }
  if (_0x3e68e6) {
    _0x54b31a.stroke();
  }
}
function a0_0x569beb() {
  a0_0x22db2c += (a0_0x4fc0c4 - a0_0x22db2c) * 0.1;
  a0_0xedc14 += (a0_0xb662d9 - a0_0xedc14) * 0.03;
  if (a0_0x17b807 == a0_0x6833cb) {
    a0_0x22db2c += (a0_0x4fc0c4 - a0_0x22db2c) * 0.015;
  }
}
const a0_0x56d601 = function () {
  if (a0_0x2f63fa) {
    return;
  }
  if (!a0_0x371a9b) {
    return;
  }
  a0_0x1306ae.save();
  a0_0x569beb();
  var _0x4b08ef = a0_0x283a01[a0_0x15e4d1];
  if (_0x4b08ef) {
    a0_0x3bddc6 = _0x4b08ef.animalType;
    a0_0x2d877f = _0x4b08ef.animalSpecies;
    a0_0x1562d9 = _0x4b08ef.animalSubSpecies;
  }
  if (a0_0x17b807 != a0_0x6833cb) {
    a0_0x270ad9 = 30;
  }
  a0_0x1306ae.save();
  var _0x43af86 = Math.min(450, a0_0x2bf7a6 * 0.9) * a0_0x2c02fa;
  var _0x264d0b = a0_0x2c02fa * 30;
  var _0x449c60 = a0_0x2bf7a6 / 2;
  var _0x44b9a3 = a0_0xa794f1 - a0_0x2c02fa * 128;
  _0x44b9a3 += a0_0x270ad9 * a0_0x2c02fa;
  a0_0x1306ae.fillStyle = "black";
  var _0x4645b0 = "";
  if (a0_0x185cf0 != "null") {
    var _0x634b80 = "";
    if (a0_0x185cf0.indexOf("BEGIN") == -1) {
      _0x634b80 = "\nYOU COULD EARN " + a0_0x218094 + " COINS";
    } else {
      _0x634b80 = "\nPLEASE WAIT!";
    }
    _0x4645b0 = a0_0x185cf0 + _0x634b80;
    a0_0x1306ae.globalAlpha = 0.05;
    a0_0x43f1c7.alpha = 0.5;
    a0_0x43f1c7.multiLine = true;
  } else {
    a0_0x43f1c7.multiLine = false;
    _0x4645b0 = a0_0x218094;
    a0_0x1306ae.globalAlpha = 0.3;
    a0_0x43f1c7.alpha = 1;
  }
  a0_0x43f1c7.setText(_0x4645b0);
  a0_0x43f1c7.setFontSize(a0_0x2c02fa * 22);
  var _0x5badea = a0_0x43f1c7.getRenderedCanvas();
  var _0x58335f = _0x5badea.width + a0_0x2c02fa * 25;
  var _0x21e2bb = _0x5badea.height / 2 + a0_0x2c02fa * 15;
  if (a0_0x185cf0 != "null") {
    _0x58335f = _0x43af86;
    _0x21e2bb = _0x5badea.height / 2 + a0_0x2c02fa * 15;
  }
  var _0x2af1fc = _0x449c60 - _0x58335f / 2;
  var _0x2052b9 = _0x449c60;
  if (a0_0x185cf0 == "null") {
    _0x2af1fc = _0x449c60 + a0_0x43c5a2 - _0x58335f / 2;
    _0x2052b9 = _0x2af1fc - a0_0x43c5a2 * 1.5;
  }
  a0_0x43f1c7.x = _0x2052b9;
  a0_0x43f1c7.y = _0x44b9a3;
  a0_0x1306ae.fillRect(_0x2af1fc, _0x44b9a3 - _0x21e2bb / 2, _0x58335f, _0x21e2bb);
  a0_0x1306ae.globalAlpha = 1;
  a0_0x43f1c7.draw();
  a0_0x1306ae.restore();
  if (a0_0x185cf0 == "null") {
    a0_0x1306ae.save();
    var _0x479ac3 = a0_0x19ebc9("./shop/mopecoin.png");
    if (_0x479ac3) {
      var _0x148604 = a0_0x2c02fa * 30;
      var _0x59ae33 = _0x148604 / _0x479ac3.height * 1.25;
      var _0xa589bc = _0x479ac3.width * _0x59ae33;
      var _0x2529d8 = _0x479ac3.height * _0x59ae33;
      a0_0x1306ae.drawImage(_0x479ac3, _0x449c60, _0x44b9a3 - _0x2529d8 / 2, _0xa589bc, _0x2529d8);
    }
    a0_0x1306ae.restore();
  }
  if (a0_0x17b807 == a0_0x6833cb) {
    a0_0x1306ae.save();
    _0x44b9a3 = a0_0xa794f1 - a0_0x2c02fa * 111;
    var _0x525bba = 1;
    var _0x3ae489 = false;
    if (isInfected) {
      _0x3ae489 = a0_0x22db2c >= 20;
    } else {
      _0x3ae489 = a0_0x22db2c <= 50;
    }
    if (_0x3ae489) {
      var _0x3366bb = 1.2;
      var _0xe435e9 = 0.4;
      var _0x5c8e99 = 1;
      var _0x2ba082 = (_0x5c8e99 - _0xe435e9) * 0.5;
      _0x525bba = _0xe435e9 + _0x2ba082 + _0x2ba082 * Math.sin(Math.PI * 2 / _0x3366bb * (a0_0x24806e / 1000));
    }
    a0_0x1306ae.globalAlpha = _0x525bba * 0.35;
    a0_0x1306ae.fillStyle = "black";
    _0x44b9a3 = _0x44b9a3 - a0_0x2c02fa * 3;
    a0_0x1306ae.fillRect(_0x449c60 - _0x43af86 / 2, _0x44b9a3, _0x43af86, _0x264d0b);
    a0_0x1306ae.globalAlpha = _0x525bba;
    a0_0x1306ae.fillStyle = isInfected ? "red" : "pink";
    var _0x3bb617 = _0x43af86 / 2;
    a0_0x1306ae.fillRect(_0x449c60 - _0x3bb617, _0x44b9a3, _0x43af86 * (a0_0x22db2c / 100), _0x264d0b);
    a0_0x1306ae.restore();
    var _0x4b4f1d = "";
    var _0x5a5064 = "";
    if (a0_0x22db2c > 70) {
      _0x4b4f1d = "SEVERE ";
    } else if (a0_0x22db2c > 40) {
      _0x4b4f1d = "SERIOUS ";
    } else if (a0_0x22db2c <= 40) {
      _0x4b4f1d = "MILD ";
    }
    if (a0_0x22db2c > 50) {
      _0x5a5064 = "STRONG ";
    } else {
      _0x5a5064 = "WEAK ";
    }
    a0_0x1a4097.setText(isInfected ? _0x4b4f1d + "INFECTION" : _0x5a5064 + "IMMUNITY");
    a0_0x1a4097.setFontSize(a0_0x2c02fa * 22);
    a0_0x1a4097.x = _0x449c60;
    a0_0x1a4097.y = _0x44b9a3 + a0_0x2c02fa * 15;
    a0_0x1306ae.globalAlpha *= _0x3ae489 ? 1 : 0.5;
    a0_0x1a4097.draw();
  }
  a0_0x1306ae.save();
  var _0x381c44 = 1;
  var _0x352f06 = a0_0x22db2c <= 25;
  if (_0x352f06) {
    var _0x3366bb = 1.2;
    var _0xe435e9 = 0.4;
    var _0x5c8e99 = 1;
    var _0x2ba082 = (_0x5c8e99 - _0xe435e9) * 0.5;
    _0x381c44 = _0xe435e9 + _0x2ba082 + _0x2ba082 * Math.sin(Math.PI * 2 / _0x3366bb * (a0_0x24806e / 1000));
  }
  _0x44b9a3 = a0_0xa794f1 - a0_0x2c02fa * 60;
  if (a0_0x2021c9) {
    a0_0x1306ae.globalAlpha = _0x381c44 * 0.35;
    a0_0x1306ae.fillStyle = "#000000";
    a0_0x1306ae.fillRect(_0x449c60 - _0x43af86 / 2, _0x44b9a3 - _0x264d0b / 2, _0x43af86, _0x264d0b);
    a0_0x1306ae.globalAlpha = _0x381c44;
    if (a0_0x19f3c7 == 2) {
      a0_0x1306ae.fillStyle = a0_0xcf4b9b;
    } else if (a0_0x19f3c7 == 3) {
      a0_0x1306ae.fillStyle = a0_0xad74f7;
    } else {
      a0_0x1306ae.fillStyle = a0_0x3e52fe || a0_0x19f3c7 == 1 ? a0_0x52e0b8 : a0_0x41d6b3;
    }
    a0_0x1306ae.fillRect(_0x449c60 - _0x43af86 / 2, _0x44b9a3 - _0x264d0b / 2, _0x43af86 * (a0_0x22db2c / 100), _0x264d0b);
    a0_0x1306ae.fillStyle = a0_0x48ccaa ? _0x352f06 ? a0_0xc6e5ca : "orange" : _0x352f06 ? a0_0xc6e5ca : "white";
    a0_0x1306ae.globalAlpha = _0x381c44 * 1;
    var _0x21696e;
    if (a0_0x19f3c7 == 1) {
      _0x21696e = _0x352f06 ? "LOW AIR" : "AIR";
    } else if (a0_0x19f3c7 == 2) {
      _0x21696e = _0x352f06 ? "LOW LAVA" : "LAVA";
    } else if (a0_0x19f3c7 == 3) {
      _0x21696e = _0x352f06 ? "LOW ENERGY" : "ENERGY";
    } else {
      _0x21696e = _0x352f06 ? "LOW WATER" : "WATER";
    }
    a0_0x29f7b8.setText(_0x21696e);
    a0_0x29f7b8.setFontSize(a0_0x2c02fa * 22);
    if (a0_0x19f3c7 == 4) {
      a0_0x29f7b8.setColor("black");
    } else {
      a0_0x29f7b8.setColor(_0x352f06 ? a0_0xc6e5ca : "white");
    }
    a0_0x29f7b8.x = _0x449c60;
    a0_0x29f7b8.y = _0x44b9a3;
    a0_0x1306ae.globalAlpha *= _0x352f06 ? 1 : 0.5;
    a0_0x29f7b8.draw();
  }
  a0_0x1306ae.restore();
  _0x44b9a3 = a0_0xa794f1 - _0x264d0b / 2 - 5;
  _0x43af86 = a0_0x2bf7a6 * 0.9;
  if (a0_0x1cb9c7) {
    a0_0x1306ae.globalAlpha = 0.35;
    a0_0x1306ae.fillStyle = "#000000";
    a0_0x1306ae.fillRect(_0x449c60 - _0x43af86 / 2, _0x44b9a3 - _0x264d0b / 2, _0x43af86, _0x264d0b);
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.fillStyle = "#F3C553";
    a0_0x1306ae.fillRect(_0x449c60 - _0x43af86 / 2, _0x44b9a3 - _0x264d0b / 2, _0x43af86 * (a0_0xedc14 / 100), _0x264d0b);
    a0_0x1306ae.globalAlpha = 1;
    a0_0xf2e1c3.setText("" + a0_0x1e543a(a0_0x4fe33d) + " xp  (" + a0_0x1e543a(a0_0x3d5297) + " xp Next Animal)");
    a0_0xf2e1c3.setFontSize(a0_0x2c02fa * 22);
    a0_0xf2e1c3.x = _0x449c60;
    a0_0xf2e1c3.y = _0x44b9a3;
    a0_0xf2e1c3.draw();
  }
  a0_0x1306ae.globalAlpha = 1;
  if (a0_0x4ba546) {
    for (var _0x24e0fe = 0; _0x24e0fe < a0_0x14cf81.length; _0x24e0fe++) {
      var _0x4bbdeb = a0_0x14cf81[_0x24e0fe];
      _0x4bbdeb.draw();
    }
  }
  if (a0_0x3bd5bb) {
    a0_0x30d3ef();
  }
  if (a0_0x17dc48) {
    if (!a0_0x52feee && a0_0x2ac9fb) {
      var _0x4b08ef = a0_0x283a01[a0_0x15e4d1];
      var _0x53c44f = a0_0x2bf7a6 / 2;
      var _0x33852d = a0_0xa794f1 / 2;
      if (_0x4b08ef) {
        _0x53c44f = a0_0x3c4488(_0x4b08ef.x);
        _0x33852d = a0_0x268360(_0x4b08ef.y);
      }
    }
    a0_0x488b61 += ((a0_0x52feee ? 1 : 0) - a0_0x488b61) * 0.1;
    if (a0_0x488b61 > 0.005 && a0_0x371a9b) {
      a0_0x1306ae.globalAlpha = a0_0x488b61 * 0.3;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(a0_0x2ce670, a0_0x2976d1, a0_0x4061c2 * a0_0x2b523d, 0, Math.PI * 2);
      a0_0x1306ae.fillStyle = "#000000";
      a0_0x1306ae.fill();
      a0_0x1306ae.globalAlpha = a0_0x488b61 * 0.5;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(a0_0x4c28bb, a0_0x4d8ddf, a0_0x4061c2 * a0_0x2b523d * 0.57, 0, Math.PI * 2);
      a0_0x1306ae.fillStyle = "#000000";
      a0_0x1306ae.fill();
      var _0x1c245c = a0_0x1e4bf4 * 0.3;
      a0_0x1e4bf4 -= _0x1c245c;
      a0_0x541188 += _0x1c245c;
      a0_0x3887d0 += (a0_0x3d6b40 - a0_0x3887d0) * 0.1;
      a0_0x1306ae.save();
      a0_0x1306ae.translate(a0_0x2bf7a6 / 2, a0_0xa794f1 / 2);
      a0_0x1306ae.rotate(a0_0x541188);
      a0_0x1306ae.globalAlpha = a0_0x488b61 * 0.5;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.fillStyle = "#000000";
      var _0x3a49af = a0_0x2b523d * 40;
      if (a0_0x283a01[a0_0x15e4d1]) {
        _0x3a49af = (9 + a0_0x283a01[a0_0x15e4d1].rad) * a0_0x534d92;
      }
      _0x3a49af *= 0.1 + a0_0x3887d0 * 0.9;
      var _0x1613c6 = a0_0x2b523d * 15;
      var _0x1589df = a0_0x2b523d * 30 * (0.2 + a0_0x3887d0 * 0.8);
      a0_0x1306ae.moveTo(_0x3a49af + _0x1589df, 0);
      a0_0x1306ae.lineTo(_0x3a49af, _0x1613c6 / 2);
      a0_0x1306ae.lineTo(_0x3a49af, -_0x1613c6 / 2);
      a0_0x1306ae.closePath();
      a0_0x1306ae.fill();
      a0_0x1306ae.restore();
    }
  }
  for (var _0x24e0fe = a0_0x9f83e5.length - 1; _0x24e0fe >= 0; _0x24e0fe--) {
    var _0x274746 = a0_0x9f83e5[_0x24e0fe];
    _0x274746.draw();
    if (_0x274746.timedOut) {
      a0_0x9f83e5.splice(_0x24e0fe, 1);
    }
  }
  a0_0x1306ae.restore();
  if (a0_0x1cbacc != null) {
    a0_0x1306ae.save();
    if (a0_0x1cbacc.width) {
      a0_0x1306ae.drawImage(a0_0x1cbacc, a0_0x2bf7a6 / 2 - a0_0x1cbacc.width / 2, a0_0xe3d4b2, a0_0x1cbacc.width, a0_0x1cbacc.height);
    }
    a0_0x1306ae.restore();
  }
};
var a0_0x2ae11a = "Ready to survive!";
var a0_0x15960b = 25;
var a0_0x130556 = "white";
var a0_0x932ea3 = +new Date() + 0;
var a0_0x1d5db5 = [];
var a0_0x225b3a = +new Date() + 0;
var a0_0xd451cb = 0;
var a0_0x195e50 = 100;
var a0_0x91e20a = 2;
var a0_0x1d9bc0 = false;
var a0_0x19ab74 = false;
var a0_0x5cf80a = 0;
var a0_0x121f07 = [];
var a0_0x5a6ed0 = false;
var a0_0x5c11d6 = 0;
var a0_0x42386d = 0;
function a0_0x1ed8c9(_0x2649fe, _0x29bb03) {
  a0_0x2ae11a = _0x2649fe;
  a0_0x932ea3 = +new Date() + _0x29bb03;
}
const a0_0x4df447 = function () {
  if (!a0_0x59f977 || a0_0x2f63fa) {
    return;
  }
  a0_0x595a8f.setFontSize(a0_0x2c02fa * 18);
  a0_0x398e30.setFontSize(a0_0x2c02fa * 18);
  a0_0x2ddb3e.setFontSize(a0_0x2c02fa * 18);
  if (a0_0x371a9b) {
    playerCountX = a0_0x2bf7a6 - (20 + a0_0x595a8f.width) / 2;
    playerCountY = (a0_0x2ad00.miniMapCanvas.height + a0_0x2b523d * 25) * a0_0x2c02fa;
  } else {
    playerCountX = a0_0x2bf7a6 - 5 - a0_0x595a8f.width / 2;
    playerCountY = a0_0xa794f1 - 2 - a0_0x595a8f.height / 2;
  }
  a0_0x595a8f.x = playerCountX;
  a0_0x595a8f.y = playerCountY;
  a0_0x595a8f.draw();
  playerCountY += a0_0x2b523d * 20;
  a0_0x398e30.x = a0_0x2bf7a6 - (20 + a0_0x398e30.width) / 2;
  a0_0x398e30.y = playerCountY;
  a0_0x398e30.draw();
  a0_0x2ddb3e.x = a0_0x2bf7a6 - (20 + a0_0x2ddb3e.width) / 2;
  a0_0x2ddb3e.y = playerCountY;
  a0_0x2ddb3e.draw();
};
function a0_0x4bf034() {
  var _0x2d0fb7 = 1;
  var _0x4f6bcf = (a0_0x932ea3 - a0_0x24806e) / 1000 / _0x2d0fb7;
  _0x4f6bcf = _0x4f6bcf < 0 ? 0 : _0x4f6bcf > 1 ? 1 : _0x4f6bcf;
  if (_0x4f6bcf > 0) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x4f6bcf;
    a0_0x1b9490.setText(a0_0x2ae11a);
    a0_0x1b9490.setColor(a0_0x130556);
    if (a0_0x2ae11a == "SPECTATE MODE") {
      a0_0x15960b = 50;
    } else {
      a0_0x15960b = 25;
    }
    a0_0x1b9490.setFontSize(a0_0x15960b * a0_0x2c02fa);
    a0_0x1b9490.x = a0_0x2bf7a6 / 2;
    a0_0x1b9490.y = a0_0xa794f1 * 0.25;
    a0_0x1b9490.draw();
    a0_0x1306ae.restore();
  }
  var _0x1003ea = a0_0x225b3a - a0_0x24806e > 0 ? 1 : 0;
  a0_0xd451cb += (_0x1003ea - a0_0xd451cb) * 0.05;
  if (a0_0xd451cb > 0.01 && a0_0x56bbb3 != a0_0xbf9ed5) {
    if (a0_0x1d9bc0) {
      a0_0x1306ae.save();
      a0_0x1306ae.translate(a0_0x2bf7a6 / 2, a0_0xa794f1 * (0.9 + (1 - a0_0xd451cb) * 0.3));
      var _0xbdda4d = a0_0x19ebc9("./img/howToPlay1.png");
      if (_0xbdda4d) {
        var _0x4bdcb4 = a0_0xa794f1 * 0.2;
        var _0x5b8d3c = _0x4bdcb4 / _0xbdda4d.height * a0_0xd451cb;
        a0_0x1306ae.drawImage(_0xbdda4d, _0xbdda4d.width * -0.5 * _0x5b8d3c, _0xbdda4d.height * -1.5 * _0x5b8d3c, _0xbdda4d.width * _0x5b8d3c, _0xbdda4d.height * _0x5b8d3c);
      }
      a0_0x1306ae.restore();
    }
  }
  var _0x1003ea = a0_0x19ab74 ? 1 : 0;
  a0_0x5cf80a += (_0x1003ea - a0_0x5cf80a) * 0.1;
  if (a0_0x5cf80a > 0.01) {
    if (a0_0x121f07.length > 0) {
      a0_0x1306ae.save();
      var _0x21d1b3 = 150;
      var _0x5b33e9 = 0.5;
      var _0x4be332 = false;
      if (window.matchMedia("(orientation: portrait)").matches) {
        _0x4be332 = false;
      }
      if (window.matchMedia("(orientation: landscape)").matches) {
        _0x4be332 = true;
      }
      if (!_0x4be332) {
        var _0x4f0000 = window.innerWidth / 2;
        _0x21d1b3 = Math.max(80, _0x4f0000 / 4);
      } else {}
      var _0x509fef = _0x21d1b3 * a0_0x2c02fa;
      var _0xcb1740 = 10;
      var _0xf7df68 = _0x509fef + 20;
      var _0x54d656 = 7;
      var _0x3f37c2 = Math.max(0, a0_0x121f07.length);
      if (a0_0x121f07.length > _0x54d656 + 1) {
        _0x3f37c2 = Math.min(_0x54d656, _0x3f37c2);
      }
      var _0x4b0a24 = _0x3f37c2 * (_0xcb1740 + _0x509fef) + (_0xf7df68 - _0x509fef);
      var _0x22069a = a0_0x2bf7a6 / 2 - _0x4b0a24 / 2;
      var _0x5983c8 = a0_0xa794f1 * 0.25;
      var _0x26b7bc = _0x509fef * 1.15;
      var _0x289478 = a0_0x2bf7a6 / 2;
      _0x4b0a24 = _0x3f37c2 * _0x26b7bc;
      _0x22069a = _0x289478 - _0x4b0a24 / 2 + _0x26b7bc / 2;
      var _0x2e9740 = 1;
      var _0xa38720 = a0_0x121f07.length;
      var _0x59352e = 0.5 + Math.floor(_0xa38720 / _0x3f37c2) / 10;
      _0x59352e = Math.max(0.5, _0x59352e);
      _0x59352e = Math.min(0.9, _0x59352e);
      a0_0x1306ae.translate(0, a0_0xa794f1 * (-_0x59352e * (1 - a0_0x5cf80a)));
      var _0x204faa = 0;
      for (var _0xaaa954 = 0; _0xaaa954 < _0xa38720; _0xaaa954++) {
        var _0x3cbfcf = a0_0x121f07[_0xaaa954];
        if (_0xaaa954 > 0 && _0xa38720 > _0x54d656 + 1) {
          if (_0xaaa954 % _0x54d656 == 0) {
            _0x2e9740++;
            _0x204faa = 0;
            _0x5983c8 += _0x26b7bc * 1.15;
            var _0x523ec3 = _0xa38720 - _0xaaa954;
            if (_0x523ec3 < _0x54d656) {
              _0x3f37c2 = _0x523ec3;
            } else {
              _0x3f37c2 = _0x54d656;
            }
            _0x4b0a24 = _0x3f37c2 * _0x26b7bc;
            _0x22069a = a0_0x2bf7a6 / 2 - _0x4b0a24 / 2 + _0x26b7bc / 2;
          }
        }
        if (_0xaaa954 == 0) {
          _0x3cbfcf.buttonScaleF = 1.2;
        } else {
          _0x3cbfcf.buttonScaleF = 1;
        }
        _0x3cbfcf.w = _0x509fef;
        _0x3cbfcf.h = _0x509fef;
        _0x3cbfcf.x = _0x22069a;
        _0x3cbfcf.y = _0x5983c8;
        _0x22069a += _0x26b7bc / 2 * _0x3cbfcf.buttonScaleF + _0x26b7bc / 2;
        if (_0x2e9740 < a0_0x515556.length) {
          _0x3cbfcf.setHotKey(a0_0x515556[_0x2e9740 - 1][_0x204faa].toUpperCase());
        }
        _0x204faa++;
      }
      a0_0x1306ae.globalAlpha = a0_0x5cf80a;
      for (var _0xaaa954 = 0; _0xaaa954 < a0_0x121f07.length; _0xaaa954++) {
        var _0x3cbfcf = a0_0x121f07[_0xaaa954];
        _0x3cbfcf.imgSizeF = _0x5b33e9;
        _0x3cbfcf.draw();
      }
    }
    var _0x4c7fe6 = Math.max(0, a0_0x42386d - a0_0x24806e) / 1000;
    var _0x38ace5 = 1;
    if (_0x4c7fe6 != 0 && _0x4c7fe6 < 8) {
      var _0x4fe1dc = 1.2;
      var _0x860a53 = 0.4;
      var _0x13db1b = 1;
      var _0x197903 = (_0x13db1b - _0x860a53) * 0.5;
      _0x38ace5 = _0x860a53 + _0x197903 + _0x197903 * Math.sin(Math.PI * 2 / _0x4fe1dc * (a0_0x24806e / 1000));
    }
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = a0_0x5cf80a * _0x38ace5;
    a0_0x1306ae.fillStyle = _0x4c7fe6 != 0 && _0x4c7fe6 < 8 ? "red" : "white";
    a0_0x1306ae.font = a0_0x2c02fa * 25 + "px Arial";
    a0_0x1306ae.lineWidth = 1;
    a0_0x1306ae.textAlign = "center";
    a0_0x1306ae.textBaseline = "middle";
    if (a0_0x56bbb3 != 2) {
      a0_0x1306ae.shadowOffsetX = 1;
      a0_0x1306ae.shadowOffsetY = 1;
      a0_0x1306ae.shadowColor = "black";
    }
    var _0x59dfb3 = a0_0x121f07[0].y - a0_0x121f07[0].w / 2;
    var _0x109b8d = _0x4c7fe6 > 0 ? " (auto in " + Math.trunc(_0x4c7fe6) + "s)" : "";
    a0_0x1306ae.fillText(a0_0x5a6ed0 ? "Choose which animal to spawn as:" : "Choose an upgrade:" + _0x109b8d, a0_0x2bf7a6 / 2, _0x59dfb3 - a0_0x2b523d * 25);
    a0_0x1306ae.restore();
    a0_0x1306ae.restore();
  }
  if (a0_0x1a5043 != null) {
    a0_0x1a5043.interface();
  }
  a0_0xab5677();
  a0_0x252aef();
}
function a0_0x252aef() {
  if (a0_0x1a5043 != null) {
    if (a0_0x1a5043.interfaceButtons) {
      for (var _0x1a1f45 = 0; _0x1a1f45 < a0_0x1a5043.interfaceButtons.length; _0x1a1f45++) {
        var _0x305b13 = a0_0x1a5043.interfaceButtons[_0x1a1f45];
        if (_0x305b13.isVisible) {
          _0x305b13.draw();
        }
      }
    }
  }
}
var a0_0x9f83e5 = [];
var a0_0x3eb640 = 0;
var a0_0x14cbf7 = 0;
function a0_0x2c2f29(_0x2e772b, _0x507c74) {
  var _0x4aeb29 = _0x2e772b - a0_0x3eb640;
  if (_0x2e772b - a0_0x3eb640 != 0 && (a0_0x24806e - a0_0x14cbf7) / 1000 > 0.7) {
    a0_0x3eb640 = _0x2e772b;
    a0_0x14cbf7 = a0_0x24806e;
    var _0x1de608 = new a0_0x51e618(_0x4aeb29, " XP");
    a0_0x9f83e5.push(_0x1de608);
  }
}
var a0_0x7b1f5f = 0;
function a0_0x45ede8(_0x27cc1f, _0x5c458d) {
  var _0x3f3430 = _0x27cc1f - a0_0x7b1f5f;
  if (_0x3f3430 > 0) {
    if (_0x27cc1f - a0_0x7b1f5f != 0 && (a0_0x24806e - a0_0x14cbf7) / 1000 > 0.7) {
      a0_0x7b1f5f = _0x27cc1f;
      a0_0x14cbf7 = a0_0x24806e;
      var _0x2b8b39 = new a0_0x51e618(_0x3f3430, _0x3f3430 > 1 ? " COINS" : " COIN", "yellow");
      a0_0x9f83e5.push(_0x2b8b39);
    }
  }
}
function a0_0x49d848() {
  if (a0_0x5503be && a0_0x5503be.length > 0) {
    for (i = 0; i < a0_0x5503be.length; i++) {
      var _0xce9ed7 = a0_0x5503be[i];
      if (_0xce9ed7.oType == a0_0x3a11dd) {
        if (!_0xce9ed7.droppedInHole) {
          a0_0x5b8b88(_0xce9ed7, "brown", 2);
          a0_0x5b8b88(_0xce9ed7, "orange", 1.5);
        }
      } else if (_0xce9ed7.oType == a0_0x511110) {
        a0_0x1581f1(_0xce9ed7, 3, 0.9);
      } else if (_0xce9ed7.oType == a0_0x382193) {
        a0_0x38374a(_0xce9ed7, 3, 0.9);
      } else {
        a0_0x5b8b88(_0xce9ed7, "red", 2);
      }
    }
  }
}
function a0_0xd0cae4(_0x156e84) {
  switch (_0x156e84) {
    case 0:
      return "tornado";
    case 1:
      return "waterspout";
    case 2:
      return "dustdevil";
    case 3:
      return "arcticwhirl";
    case 4:
      return "firedevil";
    case 5:
      return "deviltwister";
  }
  return "tornado";
}
function a0_0x1581f1(_0x437115, _0x2d8033, _0x1ee17a) {
  var _0x39c355 = "/assets/s/" + a0_0x31d65e + "/img/disasters/" + a0_0xd0cae4(_0x437115.specType) + ".png";
  var _0x459286 = a0_0x19ebc9(_0x39c355);
  if (_0x459286) {
    var _0x5b162b = Math.max(2, _0x437115.rad);
    var _0x274897 = _0x5b162b * _0x2d8033;
    var _0x5892ad = 0;
    if (a0_0x56bbb3 == a0_0x1e1cbc) {
      var _0x2904d7 = 1;
      var _0x362ef4 = 1000 / _0x2904d7;
      var _0x118935 = a0_0x24806e % _0x362ef4 / _0x362ef4;
      _0x5892ad = _0x118935 * 2 * Math.PI;
    }
    a0_0x548978.push({
      drawType: "image",
      alpha: _0x1ee17a,
      x: _0x437115.x,
      y: _0x437115.y,
      rotation: _0x5892ad,
      params: [_0x459286, 0 - _0x274897, 0 - _0x274897, _0x274897 * 2, _0x274897 * 2]
    });
  }
}
function a0_0x4b22c8(_0x1bb0ae) {
  switch (_0x1bb0ae) {
    case a0_0x37467a:
      return "img/disasters/tsunami.png";
    case a0_0x214f93:
      return "img/disasters/dustwave.png";
    case a0_0x510b20:
      return "img/disasters/heatwave.png";
    case a0_0x889e8a:
      return "img/disasters/heatwave.png";
    case a0_0x194a3f:
      return "img/disasters/coldwave.png";
  }
  return null;
}
function a0_0x38374a(_0x2784df, _0x468eca, _0x5dd145) {
  var _0x14e491 = "/assets/s/" + a0_0x31d65e + "/" + a0_0x4b22c8(_0x2784df.abil);
  var _0x29b187 = a0_0x19ebc9(_0x14e491);
  if (_0x29b187) {
    var _0x45ba77 = Math.max(2, _0x2784df.rad);
    var _0x2c0ddc = _0x45ba77 * _0x468eca;
    a0_0x548978.push({
      drawType: "image",
      alpha: _0x5dd145,
      x: _0x2784df.x,
      y: _0x2784df.y,
      rotation: _0x2784df.angle + a0_0x873ec7(a0_0xec9932),
      params: [_0x29b187, 0 - _0x2c0ddc, 0 - _0x2c0ddc, _0x2c0ddc * 2, _0x2c0ddc * 2]
    });
  }
}
var a0_0xec9932 = 90;
function a0_0x5d84f8(_0x59d6b7, _0x3fb45d, _0x42b796) {
  var _0x4d6a5c = "/assets/s/" + a0_0x31d65e + "/img/pumpkin/" + _0x59d6b7.specType + "/0.png";
  var _0x40eb7c = a0_0x19ebc9(_0x4d6a5c);
  if (_0x40eb7c) {
    var _0x134c84 = Math.max(2, _0x59d6b7.rad);
    var _0x4e8485 = _0x134c84 * _0x3fb45d;
    a0_0x1306ae.globalAlpha = 1;
    a0_0x548978.push({
      drawType: "image",
      x: _0x59d6b7.x,
      y: _0x59d6b7.y,
      alpha: _0x42b796,
      params: [_0x40eb7c, 0 - _0x4e8485, 0 - _0x4e8485, _0x4e8485 * 2, _0x4e8485 * 2]
    });
  }
}
function a0_0x2494d3(_0x4dece4, _0x5d593c, _0x3ad1f9) {
  if (_0x4dece4) {
    var _0x175b4b = a0_0x2b523d * Math.max(3, _0x4dece4.rad * (a0_0x105b76.width / a0_0x3acc86));
    var _0x473619 = a0_0x2bf7a6 - (a0_0x2b523d * 10 + a0_0x105b76.width * a0_0x2c02fa) + _0x4dece4.x * (a0_0x105b76.width * a0_0x2c02fa) / a0_0x3acc86;
    var _0x3b4490 = a0_0x2b523d * 10 + _0x4dece4.y * (a0_0x105b76.height * a0_0x2c02fa) / a0_0x9b6712;
    var _0x4d4c9a = _0x175b4b + a0_0x2b523d * 2;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.fillStyle = "black";
    a0_0x1306ae.arc(_0x473619, _0x3b4490, _0x4d4c9a, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.fillStyle = _0x5d593c;
    a0_0x1306ae.arc(_0x473619, _0x3b4490, _0x175b4b, 0, Math.PI * 2);
    a0_0x1306ae.fill();
  }
}
function a0_0x5b8b88(_0x4ddd40, _0xedb04b, _0xe32267, _0x81ea60) {
  if (_0x4ddd40) {
    a0_0x1306ae.globalAlpha = _0x81ea60 ? _0x81ea60 : 1;
    a0_0x1306ae.fillStyle = _0xedb04b;
    a0_0x1306ae.beginPath();
    var _0x18d41c = a0_0x2b523d * Math.max(2, _0x4ddd40.rad);
    a0_0x1306ae.arc(a0_0x2bf7a6 - (a0_0x2b523d * 10 + a0_0x2ad00.miniMapCanvas.width * a0_0x2c02fa) + _0x4ddd40.x * (a0_0x2ad00.miniMapCanvas.width * a0_0x2c02fa) / a0_0x3acc86, a0_0x2b523d * 10 + _0x4ddd40.y * (a0_0x2ad00.miniMapCanvas.height * a0_0x2c02fa) / a0_0x9b6712, _0x18d41c * _0xe32267, 0, Math.PI * 2);
    a0_0x1306ae.fill();
  }
}
function a0_0x487d61(_0x1cc4f0, _0x494b9f, _0x5661ef = 9999) {
  a0_0x10e951 = null;
  if (_0x1cc4f0.length != 0) {
    a0_0x10e951 = document.createElement("canvas");
    var _0x502e7a = a0_0x10e951.getContext("2d");
    var _0x59921a = 55;
    var _0x5531bd = 22;
    _0x59921a = _0x59921a + _0x5531bd * _0x1cc4f0.length;
    a0_0x10e951.width = 270;
    a0_0x10e951.height = _0x59921a;
    _0x502e7a.globalAlpha = 0.2;
    _0x502e7a.fillStyle = "#000000";
    _0x502e7a.fillRect(0, 0, a0_0x10e951.width, a0_0x10e951.height);
    _0x502e7a.globalAlpha = 1;
    _0x502e7a.fillStyle = "#FFFFFF";
    var _0x2405cc = a0_0xa8227f.name;
    _0x502e7a.font = "24px Arial";
    if (a0_0x56bbb3 != 2) {
      _0x502e7a.shadowOffsetX = 1;
      _0x502e7a.shadowOffsetY = 1;
    }
    _0x502e7a.shadowColor = "black";
    _0x502e7a.fillText(_0x2405cc, a0_0x10e951.width / 2 - _0x502e7a.measureText(_0x2405cc).width / 2, 40);
    var _0x351feb;
    _0x502e7a.textAlign = "left";
    _0x502e7a.font = "17px Arial";
    _0x351feb = 0;
    for (; _0x351feb < _0x1cc4f0.length; ++_0x351feb) {
      _0x2405cc = a0_0x17133c ? "" : _0x1cc4f0[_0x351feb].name || "mope.io";
      if (_0x5661ef == _0x1cc4f0[_0x351feb].rank) {
        _0x502e7a.fillStyle = "#FEED92";
        if (a0_0x17133c) {
          _0x2405cc = "you";
        }
      } else {
        _0x502e7a.fillStyle = "#FFFFFF";
      }
      _0x2405cc = _0x1cc4f0[_0x351feb].rank + ". " + _0x2405cc + " (" + a0_0x1e543a(_0x1cc4f0[_0x351feb].score) + ")";
      _0x502e7a.fillText(_0x2405cc, 15, 65 + _0x5531bd * _0x351feb);
    }
  }
}
function a0_0x56aa71(_0x13d5c8, _0x12d17e) {
  const _0x32101c = _0x13d5c8.some(_0x5752fd => _0x5752fd.rank === _0x12d17e.rank);
  if (!_0x32101c) {
    _0x13d5c8.pop();
    _0x13d5c8.push(_0x12d17e);
  }
  return _0x13d5c8;
}
var a0_0x3bd119 = true;
function a0_0x5307a8(_0x2a0288) {
  a0_0x3bd119 = _0x2a0288;
  document.getElementById("startMenuWrapper").style.display = _0x2a0288 ? "block" : "none";
}
function a0_0x213922() {
  return;
}
function a0_0x39a59a() {
  a0_0x5307a8(true);
  document.getElementById("mopeMenu").style.display = "block";
}
function a0_0x4b4a9e() {
  if (a0_0x2cc639) {
    a0_0x72adc4.abil_usable = a0_0x3f99c6;
    a0_0x72adc4.abil_recharging = a0_0x5a4b93;
    a0_0x72adc4.abil_possible = abil_possible;
    a0_0x72adc4.abil_active = a0_0x1fcecd;
    a0_0x72adc4.abil_Type = a0_0x1f790f;
    a0_0x1968ec.abil_usable = a0_0x6c3e27;
    a0_0x1968ec.abil_recharging = a0_0x2478ab;
    a0_0x1968ec.abil_possible = a0_0x1223bb;
    a0_0x1968ec.abil_active = a0_0x6e50c4;
    a0_0x1968ec.abil_Type = a0_0x29b0dd;
    if (a0_0x2478ab) {
      a0_0x1968ec.abil_rechargeTotalT = a0_0x248459;
      a0_0x1968ec.abil_rechargeEndT = a0_0x3be31e;
    }
    if (a0_0x5a4b93) {
      a0_0x72adc4.abil_rechargeTotalT = a0_0x24a091;
      a0_0x72adc4.abil_rechargeEndT = a0_0x4a99c9;
    }
  } else {
    a0_0x1968ec.abil_usable = a0_0x3f99c6;
    a0_0x1968ec.abil_recharging = a0_0x5a4b93;
    a0_0x1968ec.abil_possible = abil_possible;
    a0_0x1968ec.abil_active = a0_0x1fcecd;
    a0_0x1968ec.abil_Type = a0_0x1f790f;
    a0_0x72adc4.abil_usable = a0_0x6c3e27;
    a0_0x72adc4.abil_recharging = a0_0x2478ab;
    a0_0x72adc4.abil_possible = a0_0x1223bb;
    a0_0x72adc4.abil_active = a0_0x6e50c4;
    a0_0x72adc4.abil_Type = a0_0x29b0dd;
    if (a0_0x5a4b93) {
      a0_0x1968ec.abil_rechargeTotalT = a0_0x24a091;
      a0_0x1968ec.abil_rechargeEndT = a0_0x4a99c9;
    }
    if (a0_0x2478ab) {
      a0_0x72adc4.abil_rechargeTotalT = a0_0x248459;
      a0_0x72adc4.abil_rechargeEndT = a0_0x3be31e;
    }
  }
}
function a0_0xc2011() {
  console.log("client objs reset!");
  a0_0x7532a0 = [];
  a0_0x283a01 = {};
  a0_0x25de50 = [];
}
function a0_0x4743f7(_0x26b44f, _0x26e01b, _0x4ac7e8, _0x12d801, _0x572336) {
  _0x26b44f.fillText(_0x26e01b, _0x12d801, _0x572336);
  _0x26b44f.fillText(": " + _0x4ac7e8, _0x12d801 + 120, _0x572336);
}
function a0_0x32a344() {
  if (!a0_0x290095 || disable1v1Button) {
    return;
  }
  var _0x25bdd8 = new a0_0x32d020(2);
  _0x25bdd8.writeUInt8(52);
  _0x25bdd8.writeUInt8(0);
  a0_0x1f8a37(_0x25bdd8);
}
function a0_0x30d3ef() {
  if (a0_0x259b84) {
    if (a0_0x328318 == null) {
      a0_0x328318 = new a0_0x5de34a(0, 0, a0_0x2c02fa * 60, a0_0x2c02fa * 60, "Invite for 1v1", 30);
      a0_0x328318.showLabeleOnHover = true;
      a0_0x328318.textShadow = true;
      a0_0x328318.drawTextOnHowever = function () {
        if (a0_0xed1f98 > 0.01) {
          return;
        }
        this.drawText(this.w / 2, this.h + this.h / 2);
      };
      a0_0x328318.onClick = function () {
        if (a0_0xed1f98 > 0.01) {
          return;
        }
        if (!this.clicked) {
          this.isVisible = false;
          this.clicked = true;
          this.isHighLighted = false;
          a0_0x32a344();
        }
      };
      a0_0x328318.onMouseMove = function () {};
      a0_0x328318.update = function () {
        this.x = a0_0x2bf7a6 / 2 - this.w / 2;
        this.y = a0_0x2c02fa * 45 + this.h / 2;
      };
      a0_0x328318.onInterfaceReset = function () {
        this.isVisible = false;
        a0_0x328318 = null;
        a0_0x1a5043.interfaceButtons.splice(a0_0x1a5043.interfaceButtons.indexOf(a0_0x328318), 1);
      };
      a0_0x328318.onAfterDraw = function () {
        var _0x3730c3 = a0_0x19ebc9("img/icons/1v1.png");
        if (_0x3730c3) {
          a0_0x1306ae.save();
          var _0x1fb01f = this.w * 0.8;
          var _0x4b4251 = (this.w - _0x1fb01f) / 2;
          a0_0x1306ae.drawImage(_0x3730c3, this.x + _0x4b4251, this.y + _0x4b4251, _0x1fb01f, _0x1fb01f);
          a0_0x1306ae.restore();
        }
        if (a0_0xed1f98 > 0.01) {
          this.alpha = 0.1;
          rechargeTotalT = 30000;
          rechargeEndT = +new Date() + a0_0xed1f98 * 1000;
          var _0x22dba7 = Math.max(0, rechargeEndT - a0_0x24806e);
          var _0x12dca8 = _0x22dba7 / rechargeTotalT;
          a0_0x1306ae.save();
          a0_0x1306ae.fillStyle = "#000000";
          var _0x40cc36 = this.x;
          var _0x54163e = this.y;
          var _0x460e80 = this.w;
          var _0x5bba35 = this.h * 0.5;
          a0_0x1306ae.globalAlpha = 0.1;
          a0_0x1306ae.fillRect(_0x40cc36, _0x54163e + _0x5bba35 / 2, _0x460e80, _0x5bba35);
          a0_0x1306ae.globalAlpha = 1;
          a0_0x1306ae.fillStyle = "#F3C553";
          a0_0x1306ae.fillRect(_0x40cc36, _0x54163e + _0x5bba35 / 2, _0x460e80 * _0x12dca8, _0x5bba35);
          a0_0x1306ae.restore();
        } else {
          this.alpha = disable1v1Button ? 0.1 : 1;
        }
      };
      a0_0x1a5043.interfaceButtons.push(a0_0x328318);
    } else if (a0_0x328318 != null) {
      a0_0x328318.isVisible = a0_0x290095 && !a0_0x19ab74 && !a0_0x59c93b;
      if (a0_0x328318.isVisible) {
        a0_0x328318.clicked = false;
      }
      a0_0x328318.draw();
    }
  } else if (a0_0x328318 != null) {
    a0_0x1a5043.interfaceButtons.splice(a0_0x1a5043.interfaceButtons.indexOf(a0_0x328318), 1);
    a0_0x328318 = null;
  }
}
function a0_0x13c907() {
  var _0x75d230 = document.getElementById("optionsDiv");
  let _0x4a06f2 = _0x75d230.style.display == "block";
  if (!_0x4a06f2) {}
  _0x75d230.style.display = _0x4a06f2 ? "none" : "block";
  var _0x303c6c = a0_0x55b16c("audio/click.mp3");
  if (_0x303c6c) {
    try {
      _0x303c6c.play();
    } catch (_0x2b4e23) {}
  }
}
document.getElementById("closeBut").onclick = function () {
  a0_0x358404();
};
function a0_0x4cd8b8() {
  var _0x472c43 = document.getElementById("button_mute_img");
  if (_0x472c43) {
    _0x472c43.src = a0_0x2cacc6 ? "img/sound_off.png" : "img/sound_on.png";
    if (a0_0x4dee6a) {
      a0_0x4dee6a = false;
    } else {
      var _0x22430c = new Audio("audio/tap.mp3");
      _0x22430c.volume = a0_0x2cacc6 ? 0.15 : 0.5;
      _0x22430c.play();
    }
  }
}
function a0_0x517783(_0x50dd6d, _0x5afa3e, _0x14730c) {
  var _0x2f4bc8 = document.getElementById("optionsContainer");
  var _0x52329b = document.createElement("label");
  _0x52329b.innerHTML = "<input type='checkbox' id='" + _0x50dd6d + "'><span style='color: " + _0x14730c + ";''>" + _0x5afa3e + "</span>";
  _0x2f4bc8.appendChild(_0x52329b);
}
a0_0x517783("options_noImages", "No Animal images  ", "black");
a0_0x517783("options_noNames", "No Names & Chat  ", "black");
a0_0x517783("options_disableFilter", "Disable Profanity Filter", "black");
if (a0_0x17dc48) {
  a0_0x517783("options_noJoystick", "No Joystick", "#194614");
  a0_0x517783("options_leftHanded", "LEFT-handed Joystick", "#194614");
}
if (window.localStorage) {
  a0_0x17133c = window.localStorage.getItem("options_noNames") + 0 > 0;
  var a0_0x1d889a = document.getElementById("options_noNames");
  if (a0_0x1d889a) {
    a0_0x1d889a.checked = a0_0x17133c;
  }
  a0_0x2bafdc = window.localStorage.getItem("options_noImages") + 0 > 0;
  var a0_0x1d889a = document.getElementById("options_noImages");
  if (a0_0x1d889a) {
    a0_0x1d889a.checked = a0_0x2bafdc;
  }
  a0_0x2a2ea4 = window.localStorage.getItem("options_disableFilter") + 0 > 0;
  var a0_0x1d889a = document.getElementById("options_disableFilter");
  if (a0_0x1d889a) {
    a0_0x1d889a.checked = a0_0x2a2ea4;
  }
  a0_0x210e4b = window.localStorage.getItem("options_noJoystick") + 0 > 0;
  var a0_0x1d889a = document.getElementById("options_noJoystick");
  if (a0_0x1d889a) {
    a0_0x1d889a.checked = a0_0x210e4b;
  }
  a0_0x53412f = window.localStorage.getItem("options_leftHanded") + 0 > 0;
  var a0_0x1d889a = document.getElementById("options_leftHanded");
  if (a0_0x1d889a) {
    a0_0x1d889a.checked = a0_0x53412f;
  }
  a0_0x2cacc6 = window.localStorage.getItem("options_muted") + 0 > 0;
  a0_0x4cd8b8();
  a0_0x371da2 = window.localStorage.getItem("options_snowfall") + 0 > 0;
  var a0_0x1d889a = document.getElementById("options_snowfall");
  if (a0_0x1d889a) {
    a0_0x1d889a.checked = a0_0x371da2;
  }
}
var a0_0x4b2290 = document.getElementById("button_mute");
if (a0_0x4b2290) {
  a0_0x4b2290.onclick = function () {
    a0_0x2cacc6 = !a0_0x2cacc6;
    a0_0x4cd8b8();
    try {
      window.localStorage.setItem("options_muted", a0_0x2cacc6 ? 1 : 0);
    } catch (_0x162747) {}
  };
}
document.getElementById("settingsButton").onclick = function () {
  a0_0x13c907();
};
var a0_0x1d889a = document.getElementById("graphicsBut_low");
if (a0_0x1d889a) {
  a0_0x1d889a.onclick = function () {
    a0_0x30ac83(a0_0xbf9ed5);
    a0_0x595043();
    var _0x31b60a = new Audio("audio/tap.mp3");
    _0x31b60a.volume = a0_0x2cacc6 ? 0.15 : 0.5;
    _0x31b60a.play();
  };
}
var a0_0x1d889a = document.getElementById("graphicsBut_med");
if (a0_0x1d889a) {
  a0_0x1d889a.onclick = function () {
    a0_0x30ac83(a0_0x128bb9);
    a0_0x595043();
    var _0x56d840 = new Audio("audio/tap.mp3");
    _0x56d840.volume = a0_0x2cacc6 ? 0.15 : 0.5;
    _0x56d840.play();
  };
}
var a0_0x1d889a = document.getElementById("graphicsBut_hd");
if (a0_0x1d889a) {
  a0_0x1d889a.onclick = function () {
    a0_0x30ac83(a0_0x1e1cbc);
    a0_0x595043();
    var _0x28ee5f = new Audio("audio/tap.mp3");
    _0x28ee5f.volume = a0_0x2cacc6 ? 0.15 : 0.5;
    _0x28ee5f.play();
  };
}
var a0_0x4b2290 = document.getElementById("options_noImages");
if (a0_0x4b2290) {
  a0_0x4b2290.onchange = function () {
    if (window.localStorage) {
      a0_0x2bafdc = this.checked;
      try {
        window.localStorage.setItem("options_noImages", a0_0x2bafdc ? 1 : 0);
      } catch (_0x2399d6) {}
    }
  };
}
var a0_0x4b2290 = document.getElementById("options_disableFilter");
if (a0_0x4b2290) {
  a0_0x4b2290.onchange = function () {
    if (window.localStorage) {
      a0_0x2a2ea4 = this.checked;
      try {
        window.localStorage.setItem("options_disableFilter", a0_0x2a2ea4 ? 1 : 0);
      } catch (_0x45093a) {}
    }
  };
}
var a0_0x4b2290 = document.getElementById("options_noNames");
if (a0_0x4b2290) {
  a0_0x4b2290.onchange = function () {
    if (window.localStorage) {
      a0_0x17133c = this.checked;
      try {
        window.localStorage.setItem("options_noNames", a0_0x17133c ? 1 : 0);
      } catch (_0x550b2a) {}
    }
  };
}
var a0_0x4b2290 = document.getElementById("options_noJoystick");
if (a0_0x4b2290) {
  a0_0x4b2290.onchange = function () {
    if (window.localStorage) {
      a0_0x210e4b = this.checked;
      try {
        window.localStorage.setItem("options_noJoystick", a0_0x210e4b ? 1 : 0);
      } catch (_0x29688c) {}
      a0_0x595043();
    }
  };
}
var a0_0x4b2290 = document.getElementById("options_leftHanded");
if (a0_0x4b2290) {
  a0_0x4b2290.onchange = function () {
    if (window.localStorage) {
      a0_0x53412f = this.checked;
      try {
        window.localStorage.setItem("options_leftHanded", a0_0x53412f ? 1 : 0);
      } catch (_0x25e496) {}
      a0_0x595043();
      console.log("options_leftHanded: saved as " + window.localStorage.getItem("options_leftHanded"));
    }
  };
}
var a0_0x27f7a2 = [];
function a0_0xdefd88() {
  if (a0_0x1fee05) {
    a0_0x46ed8e += 1;
    console.log("Reconnecting to session failed ... " + a0_0x46ed8e + " fails now");
  } else {
    console.log("wasnt reconnecting- first time ws DCed");
  }
  if (a0_0x574606) {
    console.log("Random ws DC, reconnecting with session ID " + a0_0x108e6e + "...");
  }
  a0_0x2626b6 = false;
  if (!a0_0x574606) {
    a0_0x371a9b = false;
    a0_0x31e3ca = false;
    console.log("Connection to server closed/failed!");
    if (a0_0x18fc81) {
      a0_0x18fc81 = false;
      return;
    } else {
      document.getElementById("connecting").style.display = "flex";
    }
    a0_0x5307a8(true);
  }
  if (!a0_0x574606) {
    if (a0_0x27f7a2.indexOf(a0_0xa8227f) == -1) {
      a0_0x27f7a2.push(a0_0xa8227f);
    }
    a0_0x1db59b += 1;
    if (a0_0x553a73) {
      clearTimeout(a0_0x553a73);
    }
    a0_0x553a73 = setTimeout(function () {
      if (a0_0x1db59b > 1) {
        console.log("too many fails, trying next server (in region)");
        a0_0x5bd693();
      } else {
        a0_0x580b8e(a0_0xa8227f);
      }
    }, 1000);
  } else {
    var _0x4b4333 = 200;
    if (a0_0x1fee05) {
      if (a0_0x46ed8e > 3) {
        _0x4b4333 = 1000;
        console.log("over 5 session re-join fails, slowing down...");
      }
      if (a0_0x46ed8e > 23) {
        console.log("Too many session-rejoin fails, giving up and rejoining a fresh game session");
        a0_0x574606 = false;
        a0_0x5bd693();
        return;
      }
    }
    if (a0_0x553a73) {
      clearTimeout(a0_0x553a73);
    }
    a0_0x553a73 = setTimeout(function () {
      a0_0x580b8e(a0_0xa8227f);
    }, _0x4b4333);
  }
}
function a0_0x2eb2b5(_0x38ad84) {
  this.interfaceType = _0x38ad84;
  this.data = {};
  this.interfaceCanvas = null;
  this.interfaceCanvas_pos = 0;
  this.expiresT = 0;
  this.maxDur = 150;
  this.interfaceShowT = 0;
  this.animalType = a0_0x283a01[a0_0x15e4d1].animalType;
  this.aniRad = a0_0x283a01[a0_0x15e4d1].rad;
  this.customButtons = [];
  this.loadData = function (_0x4d7dd0) {
    if (this.interfaceType == 1) {
      this.maxDur = _0x4d7dd0.readUInt8();
      this.data = {};
      this.data[a0_0x332990] = _0x4d7dd0.readUInt8();
      this.data[a0_0x53b0d7] = _0x4d7dd0.readUInt8();
      this.data[a0_0x77ab87] = _0x4d7dd0.readUInt8();
      this.data[a0_0x5aaf14] = _0x4d7dd0.readUInt8();
      this.data[a0_0xadcba8] = _0x4d7dd0.readUInt8();
      this.data[a0_0x3a4899] = _0x4d7dd0.readUInt8();
      this.data[a0_0x1e1209] = _0x4d7dd0.readUInt8();
      this.data[a0_0x59b763] = _0x4d7dd0.readUInt8();
      this.data[a0_0x45db7b] = _0x4d7dd0.readUInt8();
      this.data[a0_0x17dc35] = _0x4d7dd0.readUInt8();
      this.data[a0_0x487fb5] = _0x4d7dd0.readUInt8();
      this.data[a0_0x1c04bf] = _0x4d7dd0.readUInt8();
      this.data[a0_0x407000] = _0x4d7dd0.readUInt8();
      this.rows = 13;
      this.data.anis = new Array();
      this.data.anis.push(a0_0x487fb5);
      this.data.anis.push(a0_0x1c04bf);
      this.data.anis.push(a0_0x407000);
      this.data.anis.push(a0_0x332990);
      this.data.anis.push(a0_0x53b0d7);
      this.data.anis.push(a0_0x77ab87);
      this.data.anis.push(a0_0x5aaf14);
      this.data.anis.push(a0_0xadcba8);
      this.data.anis.push(a0_0x3a4899);
      this.data.anis.push(a0_0x1e1209);
      this.data.anis.push(a0_0x59b763);
      this.data.anis.push(a0_0x45db7b);
      this.data.anis.push(a0_0x17dc35);
    } else {
      this.data = {};
      this.maxDur = _0x4d7dd0.readUInt8();
      this.data.selected = _0x4d7dd0.readUInt8();
      this.data[0] = _0x4d7dd0.readUInt8();
      this.data[1] = _0x4d7dd0.readUInt8();
      this.data[2] = _0x4d7dd0.readUInt8();
      this.data[3] = 0;
      this.rows = 4;
    }
    this.expiresT = a0_0x24806e + this.maxDur * 1000;
    if (this.interfaceCanvas == null) {
      this.interfaceCanvas = document.createElement("canvas");
      this.interfaceCanvas.setAttribute("id", "playerCustomCanvas");
      this.ctx = this.interfaceCanvas.getContext("2d");
    }
  };
  this.getTitle = function () {
    if (this.interfaceType == 1) {
      return "APEX KILLS";
    } else if (this.interfaceType == 2) {
      return "CHOOSE MAIN ABILITY";
    } else if (this.interfaceType == 3) {
      return "CHOOSE PASSIVE ABILITY";
    } else {
      return "OPTIONS";
    }
  };
  this.getInterfaceSize = function () {
    if (this.animalType == a0_0x332990) {
      return this.aniRad * a0_0x2c02fa;
    } else {
      return this.aniRad * 2 * a0_0x2c02fa;
    }
  };
  this.drawCircles = function (_0x2067ac, _0x3aa601, _0x3f7d4e) {
    if (this.animalType == a0_0x332990) {
      return this.bdInterface(_0x2067ac, _0x3aa601, _0x3f7d4e);
    } else {
      return this.getInterface(_0x2067ac, _0x3aa601, _0x3f7d4e);
    }
  };
  this.bdInterface = function (_0x564eb8, _0x360325, _0x3cff05) {
    var _0xf06782 = 3.1;
    this.ctx.save();
    this.ctx.globalAlpha = 0.05;
    var _0x2a75af = _0x3cff05 * _0xf06782;
    this.ctx.lineWidth = 2;
    this.ctx.fillStyle = "black";
    this.ctx.beginPath();
    this.ctx.arc(_0x564eb8, _0x360325, _0x2a75af - _0x3cff05 / 2, 0, Math.PI * 2, false);
    this.ctx.arc(_0x564eb8, _0x360325, _0x2a75af + _0x3cff05 / 2, Math.PI * 2, 0, true);
    this.ctx.fill();
    this.ctx.globalAlpha = 0.1;
    this.ctx.strokeStyle = "black";
    this.ctx.beginPath();
    this.ctx.arc(_0x564eb8, _0x360325, _0x2a75af + _0x3cff05 / 2, Math.PI * 2, 0);
    this.ctx.stroke();
    this.ctx.beginPath();
    this.ctx.arc(_0x564eb8, _0x360325, _0x2a75af - _0x3cff05 / 2, 0, Math.PI * 2, false);
    this.ctx.stroke();
    this.ctx.restore();
    return _0x2a75af;
  };
  this.getInterface = function (_0x2fb8e4, _0x4a4642, _0x65e6da) {
    var _0x1489bf = 3;
    var _0x3f35a0 = _0x65e6da * _0x1489bf;
    this.ctx.lineWidth = 4;
    this.ctx.fillStyle = "red";
    this.ctx.globalAlpha = 0.1;
    this.ctx.beginPath();
    var _0x4bdc25 = _0x65e6da * 0.9;
    var _0x4ef1f9 = _0x65e6da * 1.9;
    this.ctx.arc(_0x2fb8e4, _0x4a4642, _0x3f35a0 - _0x4bdc25, 0, Math.PI * 2, false);
    this.ctx.arc(_0x2fb8e4, _0x4a4642, _0x3f35a0 + _0x4ef1f9, Math.PI * 2, 0, true);
    this.ctx.fill();
    this.ctx.globalAlpha = 0.1;
    this.ctx.strokeStyle = "blue";
    this.ctx.beginPath();
    this.ctx.arc(_0x2fb8e4, _0x4a4642, _0x3f35a0 + _0x4ef1f9, Math.PI * 2, 0);
    this.ctx.stroke();
    this.ctx.beginPath();
    this.ctx.arc(_0x2fb8e4, _0x4a4642, _0x3f35a0 - _0x4bdc25, 0, Math.PI * 2, false);
    this.ctx.stroke();
    return _0x3f35a0;
  };
  this.drawTitle = function (_0x89cbb7) {
    this.ctx.globalAlpha = 1;
    this.ctx.fillStyle = "#FFFFFF";
    this.ctx.font = "30px Arial";
    var _0x54b3f3 = this.getTitle();
    var _0x48fdfc = (_0x89cbb7 + 80) * a0_0x2c02fa;
    var _0x156b98 = this.interfaceCanvas.width / 2 - this.ctx.measureText(_0x54b3f3).width / 2;
    if (this.animalType != a0_0x332990) {
      _0x48fdfc -= a0_0x2c02fa * 20;
    }
    this.ctx.fillText(_0x54b3f3, _0x156b98, _0x48fdfc);
  };
  this.display = function () {
    if (this.interfaceCanvas == null) {
      return;
    }
    if (this.interfaceShowT == 0) {
      this.interfaceShowT = a0_0x24806e;
    }
    var _0x18731a = 55;
    var _0x44e900 = 5;
    var _0x2ec4ab = 0;
    var _0x3ca0e8 = this.getInterfaceSize();
    var _0xcd4df0 = a0_0x2c02fa * 130 + (_0x3ca0e8 + a0_0x2c02fa * 10) * 6;
    var _0x38ba43 = _0xcd4df0 * 1.3;
    _0x18731a = _0x38ba43 + _0x44e900 * 2;
    this.interfaceCanvas.width = _0xcd4df0 + _0x44e900 * 2;
    this.interfaceCanvas.height = _0x18731a;
    var _0x33aa94 = 200;
    this.interfaceCanvas_pos = _0x33aa94;
    this.ctx.globalAlpha = 0.1;
    this.ctx.fillStyle = "#000000";
    if (this.interfaceType != 1) {
      this.ctx.fillRect(0, 0, this.interfaceCanvas.width, this.interfaceCanvas.height);
    }
    this.drawTitle(_0x44e900);
    _0x33aa94 = 100;
    var _0x2ffe44 = 360 / this.rows;
    var _0x560e96 = this.interfaceCanvas.width / 2;
    var _0x33f2a5 = this.interfaceCanvas.height / 2;
    this.ctx.save();
    var _0x4dc40d = 3.1;
    var _0x184c35 = _0x3ca0e8 * _0x4dc40d;
    var _0x47fd0e = Math.PI * 2 / this.rows;
    var _0x501e95 = 0;
    var _0x25e094 = (a0_0x24806e - this.interfaceShowT) / 1000;
    var _0x2a85e9 = 2;
    var _0x3314f3 = 8;
    _0x501e95 = _0x3314f3 * Math.sin(Math.PI * 2 / _0x2a85e9 * _0x25e094);
    if (this.interfaceType == 1) {
      this.bdInterface(_0x560e96, _0x33f2a5, _0x3ca0e8);
    }
    for (r = 0; r < this.rows; r++) {
      var _0x19d3fb = _0x33f2a5 + Math.sin(_0x2ffe44 * r * (Math.PI / 180) - a0_0x873ec7(180)) * _0x184c35;
      var _0x49defb = _0x560e96 + Math.cos(_0x2ffe44 * r * (Math.PI / 180) - a0_0x873ec7(180)) * _0x184c35;
      var _0x44394e = (r - 1) * _0x47fd0e - a0_0x873ec7(180);
      var _0x474426 = _0x44394e + _0x47fd0e;
      if (this.interfaceType == 1) {
        ani = this.data.anis[r];
        var _0xfc4485 = this.getSkinForAniKills(ani);
        var _0x1ee6fe = a0_0x283a01[a0_0x15e4d1] ? a0_0x283a01[a0_0x15e4d1].getSkinImageObjForSeason(_0xfc4485, 1) : null;
        if (_0x1ee6fe) {
          var _0x12d0c = this.data[ani] > 0;
          this.ctx.save();
          this.ctx.globalAlpha = _0x12d0c ? 1 : 0.3;
          var _0xbac097 = _0x3ca0e8;
          if (_0x12d0c) {
            this.ctx.shadowOffsetX = 0;
            this.ctx.shadowOffsetY = 0;
            this.ctx.shadowColor = "black";
            this.ctx.shadowBlur = 8;
            _0xbac097 -= _0x501e95;
          }
          this.ctx.drawImage(_0x1ee6fe, _0x49defb - _0xbac097 / 2, _0x19d3fb - _0xbac097 / 2, _0xbac097, _0xbac097);
          this.ctx.restore();
        } else {}
      } else {
        this.showInterfaceButton(_0x560e96, _0x33f2a5, this.data[r], _0x49defb, _0x19d3fb);
      }
    }
    this.ctx.restore();
    if (this.interfaceCanvas != null) {
      if (this.interfaceCanvas.width) {
        var _0x1068c2 = (a0_0x24806e - this.interfaceShowT) / 600;
        var _0x5d7805 = (this.expiresT - a0_0x24806e) / 600;
        if (_0x5d7805 < 1) {
          _0x1068c2 = Math.max(0, _0x5d7805);
        }
        var _0x2a210a = Math.min(1, _0x1068c2);
        var _0x1c7142 = this.interfaceCanvas.width * _0x2a210a;
        var _0x330584 = this.interfaceCanvas.height * _0x2a210a;
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha = _0x2a210a;
        this.interfaceCanvas.screenX = a0_0x2bf7a6 / 2 - _0x1c7142 / 2;
        this.interfaceCanvas.screenY = a0_0xa794f1 / 2 - _0x330584 / 2;
        this.updateButtons();
        a0_0x1306ae.drawImage(this.interfaceCanvas, a0_0x2bf7a6 / 2 - _0x1c7142 / 2, a0_0xa794f1 / 2 - _0x330584 / 2, _0x1c7142, _0x330584);
        a0_0x1306ae.restore();
        if (a0_0x24806e > this.expiresT || !a0_0x371a9b) {
          a0_0x331fda.destroy();
        }
      }
    }
  };
  this.destroy = function () {
    if (this.customButtons != null && this.customButtons.length > 0) {
      for (i = 0; i < this.customButtons.length; i++) {
        this.customButtons[i].isVisible = false;
      }
    }
    this.interfaceCanvas = null;
    this.ctx = null;
    a0_0x331fda = null;
    console.log("custom interface canvas destroyed!");
  };
  this.updateButtons = function () {
    var _0x5ae18c = this.interfaceCanvas.width;
    var _0x4e822c = this.interfaceCanvas.height;
    var _0x177ad2 = a0_0x2bf7a6 / 2 - _0x5ae18c / 2;
    var _0x1796b4 = a0_0xa794f1 / 2 - _0x4e822c / 2;
    if (this.customButtons != null && this.customButtons.length > 0) {
      for (i = 0; i < this.customButtons.length; i++) {
        this.customButtons[i].screenX = _0x177ad2;
        this.customButtons[i].screenY = _0x1796b4;
      }
    }
  };
  this.drawAngularInterface = function (_0x4cb073, _0x16166c, _0x59bac4, _0x2da3fe, _0x8ec64f, _0x5c4562) {
    this.ctx.save();
    this.ctx.globalAlpha = 0.2;
    this.ctx.lineWidth = _0x59bac4;
    var _0x368842 = Math.PI * 2 / this.rows;
    var _0x5e4f23 = a0_0x873ec7(-90);
    var _0x1b4b9d = ["red", "green", "blue", "purple"];
    for (r = 1; r <= this.rows; r++) {
      this.ctx.beginPath();
      if (this.interfaceType == 1) {
        this.ctx.strokeStyle = "black";
      } else {
        this.ctx.strokeStyle = _0x1b4b9d[r - 1];
      }
      this.ctx.arc(_0x4cb073, _0x16166c, _0x8ec64f - _0x2da3fe * _0x5c4562, _0x5e4f23, _0x5e4f23 + _0x368842);
      this.ctx.stroke();
      _0x5e4f23 += _0x368842;
    }
    this.ctx.restore();
  };
  this.getSkinForAniKills = function (_0x541f8a) {
    switch (_0x541f8a) {
      case a0_0x332990:
        return "./skins/volcano/blackdragon/0/blackdragon.png";
      case a0_0x77ab87:
        return "./skins/land/dinomonster/0/dinomonster.png";
      case a0_0xadcba8:
        return "./skins/arctic/icemonster/0/icemonster.png";
      case a0_0x53b0d7:
        return "./skins/volcano/landmonster/0/0/landmonster.png";
      case a0_0x5aaf14:
        return "./skins/ocean/seamonster/0/seamonster.png";
      case a0_0x3a4899:
        return "./skins/desert/scorpion/0/giantscorpion.png";
      case a0_0x1c04bf:
        return "./skins/arctic/yeti/0/yeti.png";
      case a0_0x59b763:
        return "./skins/land/dragon/0/0/dragon.png";
      case a0_0x45db7b:
        return "./skins/land/trex/0/trex.png";
      case a0_0x17dc35:
        return "./skins/ocean/kraken/0/0/kraken.png";
      case a0_0x487fb5:
        return "./skins/ocean/kingcrab/0/kingcrab.png";
      case a0_0x1e1209:
        return "./skins/volcano/phoenix/0/phoenix.png";
      case a0_0x407000:
        return "./skins/desert/pterodactyl/0/pterodactyl_ability.png";
    }
  };
  this.updateExpiry = function () {
    var _0xbaa432 = (this.expiresT - a0_0x24806e) / 1000;
    if (_0xbaa432 < this.maxDur - 1 && _0xbaa432 > 1) {
      this.expiresT = a0_0x24806e + 1000;
    }
  };
  this.getBtnTitle = function (_0x5b9333) {
    switch (_0x5b9333) {
      case a0_0x3ab8de:
        return "Fly High";
      case a0_0x2cada6:
        return "Gives Gifts";
      case a0_0x3a0f5:
        return "Flying Sleigh";
      default:
        return "Close";
    }
  };
  this.buttons = {};
  this.sendSelection = function (_0x3875d9) {
    if (this.customButtons != null && this.customButtons.length > 0) {
      for (i = 0; i < this.customButtons.length; i++) {
        this.customButtons[i].resetSelection();
      }
    }
    _0x3875d9.setSelection();
    var _0x180a4a = new a0_0x32d020(3);
    _0x180a4a.writeUInt8(a0_0x3f036b);
    _0x180a4a.writeUInt8(this.interfaceType);
    _0x180a4a.writeUInt8(_0x3875d9.buttonID);
    a0_0x1f8a37(_0x180a4a);
  };
  this.showInterfaceButton = function (_0xf2ad2d, _0x3f9ea8, _0x47b31c, _0xf0bd14, _0x295091) {
    var _0x5139bb = this.buttons[_0x47b31c];
    if (_0x5139bb === undefined || _0x5139bb == null) {
      var _0x3ce09a = this.getBtnTitle(_0x47b31c);
      var _0x77ce7d = _0x47b31c == 0 ? {
        w: 100,
        h: 60
      } : {
        w: 100,
        h: 100
      };
      _0x5139bb = this.buttons[_0x47b31c] = new a0_0x5de34a(_0xf0bd14, _0x295091, _0x77ce7d.w, _0x77ce7d.h, _0x3ce09a, 30, this.ctx);
      _0x5139bb.buttonID = _0x47b31c;
      _0x5139bb.selected = false;
      _0x5139bb.isVisible = true;
      _0x5139bb.textShadow = true;
      _0x5139bb.screenX = 0;
      _0x5139bb.screenY = 0;
      if (_0x47b31c != 0) {
        _0x5139bb.drawButtonRect = false;
        _0x5139bb.showLabeleOnHover = true;
      }
      _0x5139bb.testPosHitsButton = function (_0x29bcd7, _0x1fd932) {
        var _0x11a45b = this.screenX + this.x;
        var _0x19668c = _0x11a45b + this.w;
        var _0x407062 = this.screenY + this.y;
        var _0x5a8025 = _0x407062 + this.h;
        if (_0x29bcd7 < _0x11a45b || _0x29bcd7 > _0x19668c) {
          return false;
        }
        if (_0x1fd932 < _0x407062 || _0x1fd932 > _0x5a8025) {
          return false;
        } else {
          return true;
        }
      };
      _0x5139bb.onClick = function () {
        console.log("clicked: " + this.label);
        if (!this.clicked) {
          this.clicked = true;
          this.isHighLighted = false;
        }
        if (this.label == "Close") {
          a0_0x331fda.destroy();
        } else {
          a0_0x331fda.sendSelection(this);
        }
      };
      _0x5139bb.setSelection = function () {
        this.labelColor = "yellow";
        this.selected = true;
      };
      _0x5139bb.resetSelection = function () {
        this.labelColor = "white";
        this.selected = false;
      };
      _0x5139bb.beforeDrawText = function () {
        var _0x2908dc = this.w / 2;
        var _0x18e63b = this.h / 2;
        this.buttonTXT.x = this.screenX + this.x + _0x2908dc;
        if (this.buttonID == 0) {
          this.buttonTXT.y = this.screenY + this.y + _0x18e63b;
        } else {
          this.buttonTXT.y = this.screenY + this.y - _0x18e63b / 2;
        }
      };
      _0x5139bb.onMouseMove = function () {};
      _0x5139bb.update = function () {
        this.x = _0xf0bd14 - this.w / 2;
        this.y = _0x295091 - this.h / 2;
      };
      _0x5139bb.onInterfaceReset = function () {
        this.isVisible = false;
      };
      _0x5139bb.onAfterDraw = function () {
        var _0x2047cb = a0_0x283a01[a0_0x15e4d1];
        if (_0x2047cb) {
          var _0x461e14 = _0x2047cb.getAbilityInfo(this.buttonID);
          if (_0x461e14) {
            var _0x14ee52 = "assets/s/" + _0x461e14.mopeSeasonID + "/" + _0x461e14.abilImg;
            var _0x219652 = a0_0x19ebc9(_0x14ee52);
            if (_0x219652) {
              a0_0x1306ae.save();
              if (this.isHighLighted || this.selected) {
                a0_0x1306ae.shadowBlur = 10;
                a0_0x1306ae.shadowOffsetX = 0;
                a0_0x1306ae.shadowOffsetY = 0;
                a0_0x1306ae.shadowColor = "yellow";
              }
              var _0x5a9b5 = this.w / 2;
              var _0x1c2bc2 = this.h / 2;
              _0x5a9b5 = this.screenX + this.x;
              _0x1c2bc2 = this.screenY + this.y;
              var _0x3c27e0 = this.w;
              a0_0x1306ae.drawImage(_0x219652, _0x5a9b5, _0x1c2bc2, _0x3c27e0, _0x3c27e0);
              a0_0x1306ae.restore();
            }
          }
        }
      };
      a0_0x1a5043.interfaceButtons.push(_0x5139bb);
      this.customButtons.push(_0x5139bb);
      if (this.data.selected == _0x5139bb.buttonID) {
        _0x5139bb.setSelection();
      }
    } else if (_0x5139bb != null) {
      if (_0x5139bb.isVisible) {
        _0x5139bb.clicked = false;
      }
      _0x5139bb.draw();
    }
  };
}
console.log("ACCOUNT SERVER START");
function a0_0x2f23a7(_0x311d70) {
  var _0x2a9fe2 = document.getElementById("loginCoins");
  _0x2a9fe2.innerHTML = _0x311d70 > 0 ? _0x311d70 : 0;
}
const a0_0x949786 = async function (_0x59f263, _0x10007b = "web", _0x391cc9) {
  let _0x3c0f89 = a0_0x6eb848 + "/auth/login/" + _0x391cc9;
  let _0x23d450 = {
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined,
    accessToken: _0x59f263,
    platform: _0x10007b
  };
  try {
    const _0x48cbcb = await fetch(_0x3c0f89, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(_0x23d450)
    });
    const _0xd9acea = await _0x48cbcb.json();
    if (_0xd9acea.success) {
      a0_0x4d726b(_0xd9acea.data);
      a0_0x57ae88(_0xd9acea.data.userId, _0xd9acea.data.token, _0xd9acea.data.userName, _0xd9acea.data.avatar, _0x391cc9);
      return true;
    } else {
      a0_0x53eb81("ACCOUNTS: Failed to login using " + _0x391cc9 + " encountered an error [" + _0xd9acea.error + "]", "error", 10000);
      return false;
    }
  } catch (_0x1c601b) {
    console.error("::: Social Network Login ERROR :::", _0x1c601b);
    return false;
  }
};
const a0_0x3f80d8 = async _0x9c7fb4 => {
  return;
};
var a0_0x1c0ca2;
var a0_0x2bc035;
var a0_0x2ab42e;
var a0_0x36fe5f;
var a0_0x2affb2;
var a0_0x2d3651;
if (a0_0x530c0d) {
  console.log("Checking what login_userId was:", a0_0x1c0ca2);
  a0_0x1c0ca2 = localStorage.getItem("login_userId");
  a0_0x2d3651 = a0_0x1c0ca2 !== undefined && a0_0x1c0ca2 !== null;
  if (a0_0x2d3651) {
    console.log("WAS LOGGED IN!");
    a0_0x2bc035 = localStorage.getItem("login_passwordToken");
    a0_0x2ab42e = localStorage.getItem("login_profilePicURL");
    a0_0x36fe5f = localStorage.getItem("login_name");
    a0_0x2affb2 = localStorage.getItem("login_socialNetworkName");
  }
}
jQuery.loadScript = function (_0x23450e, _0x2b9713) {
  jQuery.ajax({
    url: _0x23450e,
    dataType: "script",
    success: _0x2b9713,
    async: true
  });
};
window.fbAsyncInit = function () {
  FB.init({
    appId: "482002344741952",
    cookie: true,
    xfbml: true,
    version: "v3.2",
    status: true
  });
  FB.AppEvents.logPageView();
};
(function (_0x2d8a14, _0x584403, _0x301f7d) {
  var _0x443279;
  var _0xb31633 = _0x2d8a14.getElementsByTagName(_0x584403)[0];
  if (_0x2d8a14.getElementById(_0x301f7d)) {
    return;
  }
  _0x443279 = _0x2d8a14.createElement(_0x584403);
  _0x443279.id = _0x301f7d;
  _0x443279.crossorigin = "anonymous";
  _0x443279.src = "https://connect.facebook.net/en_US/sdk.js";
  _0xb31633.parentNode.insertBefore(_0x443279, _0xb31633);
})(document, "script", "facebook-jssdk");
if (a0_0x2ac9fb) {} else {}
const a0_0x570990 = async () => {
  if (a0_0x2d3651) {
    const _0x1104d1 = await a0_0x11e627();
    if (!_0x1104d1) {
      a0_0x2d6f4f();
    }
  } else {
    var _0x398720 = "none";
    var _0x5bfd1f = new URL(window.location.href);
    var _0x1ed1c1 = _0x5bfd1f.searchParams.get("testAccountSecret");
    if (_0x1ed1c1) {
      _0x398720 = _0x1ed1c1;
      let _0x400a71 = "" + _0x5bfd1f.searchParams.get("user");
      if (!a0_0x1c2159(_0x398720 + _0x400a71)) {
        if (_0x400a71 && _0x400a71.length <= 2) {
          a0_0x949786(_0x400a71, "web", _0x398720, _0x398720 + _0x400a71, null);
        }
      }
    }
  }
};
setTimeout(a0_0x19eec4, 1);
function a0_0x19eec4() {
  var _0x117848 = document.getElementById("divButtons");
  document.getElementById("facebookLoginBtn").onclick = a0_0x6e7675;
  document.getElementById("appleLoginBtn").onclick = a0_0x19fd8c;
  document.getElementById("discordLoginBtn").onclick = a0_0x62f243;
  document.getElementById("btnLogout2").onclick = a0_0x28328a;
  if (a0_0x2d3651) {
    console.log("user previously logged in: " + a0_0x36fe5f + " : " + a0_0x1c0ca2);
    document.getElementById("onloggedInDiv").style.display = "block";
    if (a0_0x2ab42e) {
      document.getElementById("loggedInUserImg").src = a0_0x2ab42e;
    }
    document.getElementById("loggedInNameTxt").innerHTML = a0_0x36fe5f;
    document.getElementById("notLoggedInDiv").style.display = "none";
    _0x117848.style.display = "none";
    if (a0_0x24f77f) {
      a0_0x24f77f.style.display = "none";
    }
  } else {
    document.getElementById("onloggedInDiv").style.display = "none";
    document.getElementById("loggedInUserImg").src = "none";
    document.getElementById("loggedInNameTxt").innerHTML = "";
    document.getElementById("notLoggedInDiv").style.display = "block";
    _0x117848.style.display = "block";
  }
}
var a0_0x575a59 = "none";
var a0_0x67944e = new URL(window.location.href);
var a0_0x51da4c = a0_0x67944e.searchParams.get("testAccountSecret");
if (a0_0x51da4c) {
  console.log("testing account enabled.");
  a0_0x575a59 = a0_0x51da4c;
}
function a0_0x2d6f4f() {
  if (a0_0x530c0d) {
    localStorage.removeItem("login_userId");
    localStorage.removeItem("login_passwordToken");
    localStorage.removeItem("login_profilePicURL");
    localStorage.removeItem("login_name");
    localStorage.removeItem("login_socialNetworkName");
  }
  a0_0x1c0ca2 = null;
  a0_0x2bc035 = null;
  a0_0x2ab42e = null;
  a0_0x36fe5f = null;
  a0_0x2affb2 = null;
  a0_0x2d3651 = false;
  a0_0x40aaf = {
    coins: -1
  };
  a0_0x5092e6.loadData();
}
async function a0_0x28328a(_0x5a9de2 = true) {
  if (a0_0x2ac9fb) {
    _0x5a9de2 = false;
  }
  let _0x1c0cb1 = () => {};
  if (a0_0x2affb2 === "google") {
    _0x1c0cb1 = a0_0x11b7d4;
  } else if (a0_0x2affb2 === "facebook") {
    _0x1c0cb1 = a0_0x3c7d2f;
  } else if (a0_0x2affb2 === "apple") {
    _0x1c0cb1 = a0_0x5bbcd2;
  }
  console.log("logging out with social network " + a0_0x2affb2);
  try {
    await _0x1c0cb1();
    await a0_0x5cd295(a0_0x1c0ca2);
    a0_0x2d6f4f();
    a0_0x19eec4();
  } catch (_0x16ace0) {
    console.error("Error logging out:", _0x16ace0);
  }
}
const a0_0x5cd295 = async _0x2b93fe => {
  let _0x318077 = a0_0x6eb848 + "/auth/logout";
  let _0xd06f08 = {
    userId: _0x2b93fe,
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined
  };
  try {
    await fetch(_0x318077, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(_0xd06f08)
    });
  } catch (_0x4e2137) {
    a0_0x53eb81("AccountServer: Failed to logout");
    console.error("::: Account Server Logout ERROR :::", _0x4e2137);
    return false;
  }
  return true;
};
const a0_0x4d726b = _0x4658f0 => {
  a0_0x40aaf = _0x4658f0;
  a0_0x2f23a7(_0x4658f0.coins);
};
const a0_0x11e627 = async () => {
  if (!a0_0x2d3651) {
    console.error("::: verifyLocalCredentials ERROR ::: User is not logged in!");
    return;
  }
  const _0x3e9735 = a0_0x6eb848 + "/auth/@me";
  const _0x5b5e25 = {
    userId: a0_0x1c0ca2,
    token: a0_0x2bc035,
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined,
    isRefresh: false
  };
  try {
    const _0x2845ae = await fetch(_0x3e9735, {
      method: "POST",
      headers: {
        "Content-Type": "application/json;charset=UTF-8"
      },
      body: JSON.stringify(_0x5b5e25)
    });
    const _0x93237d = await _0x2845ae.json();
    if (_0x93237d.success) {
      a0_0x4d726b(_0x93237d.data);
      return true;
    } else {
      a0_0x28328a();
      console.log("::: verifyLocalCredentials failed ::: Needs new credentials");
      return false;
    }
  } catch (_0x15dcb4) {
    console.error("::: verifyLocalCredentials ERROR :::", _0x15dcb4);
    return false;
  }
};
var a0_0x40aaf = {
  coins: -1,
  level: 0,
  xp: 0,
  xpNextLvl: 0
};
const a0_0x1acd9a = async function () {
  if (!a0_0x2d3651) {
    console.log("not logged in!");
    return null;
  }
  console.log("loading account data...");
  let _0x145e6c = a0_0x6eb848 + "/auth/@me";
  const _0x31eb82 = {
    userId: a0_0x1c0ca2,
    token: a0_0x2bc035,
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined,
    isRefresh: true
  };
  return new Promise((_0x26417b, _0x2f67b0) => {
    $.ajax({
      url: _0x145e6c,
      type: "POST",
      headers: {
        "Content-Type": "application/json;charset=UTF-8"
      },
      data: JSON.stringify(_0x31eb82),
      success: function (_0x39f6f9) {
        var _0x1bde0d = _0x39f6f9;
        console.log("Done, result is " + _0x39f6f9);
        a0_0x40aaf = _0x1bde0d.data;
        console.log("the resObj coins was", _0x1bde0d.coins);
        if (_0x1bde0d.coins == "BANNED") {
          setInterval(function () {
            a0_0x53eb81("Your account has been BANNED!", "error", 10000);
          }, 10000);
        }
        return _0x26417b(_0x1bde0d);
      },
      error: function (_0x112358, _0x20d646, _0xf7ef43) {
        console.error("URL error: " + _0xf7ef43);
        console.error("failed to refresh account data!");
        return _0x26417b(null);
      }
    });
  });
};
const a0_0x13cb86 = async function (_0x1cf8bc) {
  const _0x358134 = await a0_0x1acd9a();
  if (_0x1cf8bc) {
    _0x1cf8bc(_0x358134);
  }
};
function a0_0x56aacd(_0x49b1dd) {
  console.log("Loading shop items for logged in user! " + a0_0x1c0ca2);
  let _0x56a8f6 = a0_0x6eb848 + "/shop/get";
  console.log("@@@@@@@ Sending URL request :" + _0x56a8f6);
  $.ajax({
    url: _0x56a8f6,
    success: function (_0x3028a8) {
      _0x49b1dd(true, _0x3028a8);
    },
    error: function (_0x4b9fd1, _0x4125c6, _0x25b2f2) {
      console.log("Shop loading-URL error: " + _0x25b2f2);
      _0x49b1dd(false, null);
    }
  });
}
const a0_0x45aefa = function (_0x451e27) {
  let _0x28395e = a0_0x6eb848 + "/shop/purchases";
  const _0x257a0d = {
    userId: a0_0x1c0ca2,
    token: a0_0x2bc035,
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined
  };
  if (a0_0x52285b) {
    console.log("Sending URL request :" + _0x28395e);
  }
  $.ajax({
    url: _0x28395e,
    method: "POST",
    data: JSON.stringify(_0x257a0d),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0xd45647) {
      var _0x24a4e9 = _0xd45647;
      _0x451e27(_0x24a4e9.success, _0x24a4e9.data);
    },
    error: function (_0x2b4ebe, _0x99b3e0, _0x2fadbd) {
      if (_0x2b4ebe.responseText) {
        const _0x2eb91f = JSON.parse(_0x2b4ebe.responseText);
        _0x451e27(_0x2eb91f.success, _0x2eb91f.error);
      } else {
        _0x451e27(false, "an error happened during retrieving your purchased items.");
      }
    }
  });
};
const a0_0x1121cc = function (_0xc9d40, _0x176fb1) {
  let _0x5ba31c = a0_0x6eb848 + "/shop/wardrobe/save";
  const _0x3f7344 = {
    userId: a0_0x1c0ca2,
    token: a0_0x2bc035,
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined,
    data: _0xc9d40
  };
  if (a0_0x52285b) {
    console.log("Sending URL request :" + _0x5ba31c);
  }
  $.ajax({
    url: _0x5ba31c,
    method: "POST",
    data: JSON.stringify(_0x3f7344),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x2e06de) {
      var _0x30022d = _0x2e06de;
      _0x176fb1(_0x30022d.success, _0x30022d.data);
    },
    error: function (_0xb2deac, _0xaa540d, _0x51c2ab) {
      if (_0xb2deac.responseText) {
        const _0xe4b185 = JSON.parse(_0xb2deac.responseText);
        _0x176fb1(_0xe4b185.success, _0xe4b185.error);
      } else {
        _0x176fb1(false, "an error happened during wardrobe saving.");
      }
    }
  });
};
const a0_0x7b0be3 = function (_0x1526a3, _0x2b3801) {
  if (a0_0x52285b) {
    console.log("Sending URL request to load coins for logged in user! " + a0_0x1c0ca2);
  }
  if (!_0x1526a3) {
    _0x1526a3 = "goldDragon";
  }
  let _0x717802 = a0_0x6eb848 + "/shop/buy";
  const _0x61b19e = {
    userId: a0_0x1c0ca2,
    token: a0_0x2bc035,
    shopItem: _0x1526a3,
    sessionId: a0_0xa8227f ? a0_0xa8227f.sessionId : undefined,
    serverId: a0_0xa8227f ? a0_0xa8227f.serverId : undefined
  };
  if (a0_0x52285b) {
    console.log("Sending URL request :" + _0x717802);
  }
  $.ajax({
    url: _0x717802,
    method: "POST",
    data: JSON.stringify(_0x61b19e),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x116222) {
      var _0x56cfa5 = _0x116222;
      _0x2b3801(_0x56cfa5.success, _0x56cfa5.reason);
    },
    error: function (_0x580064, _0x24c024, _0x1c6a72) {
      if (_0x580064.responseText) {
        const _0x94fa1 = JSON.parse(_0x580064.responseText);
        _0x2b3801(_0x94fa1.success, _0x94fa1.error);
      } else {
        _0x2b3801(false, "an error happened during purchase.");
      }
    }
  });
};
function a0_0x4c32a9() {
  let _0x490008 = a0_0x6eb848 + "/addCoins?userId=" + a0_0x1c0ca2 + "&passwordToken=" + a0_0x2bc035;
  if (a0_0x52285b) {
    console.log("Sending URL request :" + _0x490008);
  }
  $.ajax({
    url: _0x490008,
    success: function (_0x2aafe3) {
      if (a0_0x52285b) {
        a0_0x13cb86();
      }
    },
    error: function (_0x2384f1, _0x4ca8b7, _0xdaab67) {
      console.log("URL error: " + _0xdaab67);
    }
  });
}
function a0_0x415714() {
  let _0x5cfbd2 = a0_0x6eb848 + "/resetAccount?userId=" + a0_0x1c0ca2 + "&passwordToken=" + a0_0x2bc035;
  if (a0_0x52285b) {
    console.log("Sending URL request :" + _0x5cfbd2);
  }
  $.ajax({
    url: _0x5cfbd2,
    success: function (_0x453f49) {
      console.log("reposnse is " + _0x453f49);
      a0_0x13cb86();
    },
    error: function (_0x2b6846, _0x3f7c63, _0x3c0c46) {
      console.log("URL error: " + _0x3c0c46);
    }
  });
}
const a0_0x57ae88 = function (_0x410e2a, _0x26faa1, _0x46d4ae, _0x5110db, _0x4a85e4) {
  a0_0x1c0ca2 = _0x410e2a;
  a0_0x2bc035 = _0x26faa1;
  a0_0x2ab42e = _0x5110db;
  a0_0x36fe5f = _0x46d4ae;
  a0_0x2affb2 = _0x4a85e4;
  a0_0x2d3651 = true;
  if (a0_0x530c0d) {
    localStorage.setItem("login_userId", a0_0x1c0ca2);
    localStorage.setItem("login_passwordToken", a0_0x2bc035);
    localStorage.setItem("login_name", a0_0x36fe5f);
    localStorage.setItem("login_profilePicURL", a0_0x2ab42e);
    localStorage.setItem("login_socialNetworkName", a0_0x2affb2);
  }
  a0_0x24f77f = document.getElementById("loginButtons");
  a0_0x1acd9a();
  a0_0x19eec4();
  a0_0x3e0a5d();
};
const a0_0x1f0624 = function (_0x4982e2, _0x34937b) {
  if (a0_0x52285b) {
    console.log("Sending URL request to load coins for logged in user! " + a0_0x1c0ca2);
  }
  if (!_0x4982e2) {
    _0x4982e2 = "none";
  }
  let _0x38806d = a0_0x6eb848 + "/playerSettings_update?userId=" + a0_0x1c0ca2 + "&passwordToken=" + a0_0x2bc035 + "&itemId=" + _0x4982e2;
  if (a0_0x52285b) {
    console.log("Sending URL request :" + _0x38806d);
  }
  $.ajax({
    url: _0x38806d,
    success: function (_0x455dff) {
      var _0x2363a3 = JSON.parse(_0x455dff);
      console.log("Done, result is " + _0x455dff);
      _0x34937b(_0x2363a3.success, _0x2363a3.reason);
    },
    error: function (_0x5d8e4a, _0x359ffa, _0x41d8d7) {
      _0x34937b(false, "urlnotfound");
    }
  });
};
const a0_0x1c2159 = function (_0x419aea) {
  if (a0_0x2d3651) {
    if (a0_0x1c0ca2 === _0x419aea) {
      return true;
    }
  }
  return false;
};
function a0_0x2730c8() {
  $.ajax({
    url: a0_0x6eb848 + "/servers/get",
    type: "GET",
    success: function (_0xd60f5d) {
      var _0x35ba79 = _0xd60f5d;
      gotMasterServerStats = true;
      var _0x2bd995 = _0x35ba79.reduce((_0x1986fc, _0x45e22e) => _0x1986fc + Math.max(0, _0x45e22e.totalPlayerCount), 0);
      a0_0x595a8f.setText(a0_0x4b4fe7(_0x2bd995) + " players online");
      for (var _0x4b0b4a = 0; _0x4b0b4a < a0_0x3ddbc8.length; _0x4b0b4a++) {
        var _0x335155 = a0_0x3ddbc8[_0x4b0b4a];
        var _0x1b7220 = false;
        for (var _0x4532fc = 0; _0x4532fc < _0x35ba79.length; _0x4532fc++) {
          var _0x14826a = _0x35ba79[_0x4532fc];
          if (_0x14826a.id == _0x335155.id) {
            _0x335155.playersCount = _0x14826a.totalPlayerCount;
            _0x1b7220 = true;
            break;
          }
        }
        if (!_0x1b7220) {
          _0x335155.playersCount = -1;
        }
      }
      a0_0x4f50fb();
    },
    error: function (_0x88d095, _0x2b70b4, _0x129228) {
      a0_0x4f50fb();
      console.log("Error getting master server stats: " + _0x129228);
    }
  });
}
$.loadScript("https://accounts.google.com/gsi/client?hl=en", function () {
  function _0x28d92a() {
    if (typeof gapi === "google") {
      return;
    }
    const _0x43e267 = google.accounts.oauth2.initTokenClient({
      client_id: $config.authentication.google,
      cookiepolicy: "single_host_origin",
      scope: "openid email profile",
      callback: _0x58bc80 => {
        a0_0x949786(_0x58bc80.access_token, "web", "google");
      }
    });
    document.querySelector("#googleLoginBtn").onclick = () => {
      if (a0_0x2ac9fb) {
        a0_0xd9b068();
      } else {
        _0x43e267.requestAccessToken();
      }
      console.log("requesting token");
    };
  }
  _0x28d92a();
});
async function a0_0x5ede28(_0x15669f, _0x1eb6b5) {
  const _0x564ff5 = await a0_0x949786(_0x15669f, _0x1eb6b5, "google");
  if (!_0x564ff5) {
    await a0_0x2b666d()();
  }
}
async function a0_0x197bb0() {
  const _0x2cf7fb = a0_0xaaeb98();
  try {
    const _0x23fb87 = await _0x2cf7fb.func();
    if (_0x2cf7fb.platform == "mobile") {
      return;
    }
    console.log("GOT ID TOKEN", _0x23fb87, _0x2cf7fb.platform);
    await a0_0x5ede28(_0x23fb87, _0x2cf7fb.platform);
  } catch (_0x2508be) {
    console.error("Error with google login:", _0x2508be.message);
  }
}
async function a0_0x11b7d4() {}
function a0_0xaaeb98() {
  if (!a0_0x2ac9fb) {
    console.log("resolve web google login");
    return {
      platform: "web",
      func: a0_0x4c40e9
    };
  } else {
    console.log("resolve mobile google login");
    return {
      platform: "mobile",
      func: a0_0xd9b068
    };
  }
}
function a0_0x2b666d() {
  if (!a0_0x2ac9fb) {
    return a0_0x536b95;
  } else {
    return a0_0x337bfd;
  }
}
async function a0_0x4c40e9() {
  console.log("Doing web google login.");
  return new Promise((_0x17dbb6, _0x5537d0) => {
    gapi.load("auth2", async function () {
      console.log("loaded auth2");
      try {
        console.log("initializing auth2");
        auth2 = auth2 || gapi.auth2.init({
          client_id: $config.googleAuthClientId,
          cookiepolicy: "single_host_origin"
        });
        console.log("Signing in.");
        const _0x111b05 = await auth2.signIn();
        console.log("Getting id token.");
        const _0x573f83 = _0x111b05.getAuthResponse().id_token;
        console.log("Received id_token", _0x573f83);
        return _0x17dbb6(_0x573f83);
      } catch (_0x5c1426) {
        console.error("Error with google login:", _0x5c1426);
        return _0x5537d0(_0x5c1426);
      }
    });
  });
}
async function a0_0xd9b068() {
  a0_0x50fe74("google-login", "");
}
async function a0_0x536b95() {
  try {
    var _0xf60c5a = gapi.auth2.getAuthInstance();
    return _0xf60c5a.signOut();
  } catch (_0x3bbbc7) {
    console.error("Error with web google logout:", _0x3bbbc7);
  }
}
async function a0_0x337bfd() {}
window.fbAsyncInit = function () {
  if (typeof FB === "undefined") {
    return;
  }
  FB.init({
    appId: $config.authentication.facebook,
    cookie: true,
    xfbml: true,
    version: "v3.2",
    status: true
  });
  FB.AppEvents.logPageView();
};
(function (_0x17f6af, _0x2c2f87, _0x2f556d) {
  var _0x4fc797;
  var _0x288371 = _0x17f6af.getElementsByTagName(_0x2c2f87)[0];
  if (_0x17f6af.getElementById(_0x2f556d)) {
    return;
  }
  _0x4fc797 = _0x17f6af.createElement(_0x2c2f87);
  _0x4fc797.id = _0x2f556d;
  _0x4fc797.src = "https://connect.facebook.net/en_US/sdk.js";
  _0x288371.parentNode.insertBefore(_0x4fc797, _0x288371);
})(document, "script", "facebook-jssdk");
async function a0_0x3d2636() {
  a0_0x50fe74("facebook-login", "");
}
async function a0_0x49ea24(_0x2445ad, _0x168db6) {
  const _0x452c0f = await a0_0x949786(_0x2445ad, _0x168db6, "facebook");
  if (!_0x452c0f) {
    await a0_0x5476b7()();
  }
}
async function a0_0x6e7675() {
  const _0x5471f4 = a0_0x343e30();
  try {
    const _0x57f8ff = await _0x5471f4.func();
    if (_0x5471f4.platform == "mobile") {
      return;
    }
    await a0_0x49ea24(_0x57f8ff, _0x5471f4.platform);
  } catch (_0x3d144b) {
    console.error("Error with facebook login:", _0x3d144b.message);
  }
}
async function a0_0x22b3c1() {
  return new Promise((_0x2bd6c0, _0xbb4bd9) => {
    FB.login(function (_0xa9cdf9) {
      if (_0xa9cdf9.status === "connected") {
        console.log("Successfully got auth token from FB");
        var _0x42a775 = _0xa9cdf9.authResponse.accessToken;
        return _0x2bd6c0(_0x42a775);
      } else {
        return _0xbb4bd9("Error logging in to FB.");
      }
    }, {
      scope: "public_profile,email"
    });
  });
}
function a0_0x343e30() {
  if (!a0_0x2ac9fb) {
    return {
      platform: "web",
      func: a0_0x22b3c1
    };
  } else {
    return {
      platform: "mobile",
      func: a0_0x3d2636
    };
  }
}
function a0_0x5476b7() {
  if (!a0_0x2ac9fb) {
    return a0_0x86b14f;
  } else {
    return a0_0x178928;
  }
}
async function a0_0x3c7d2f() {
  const _0x2bad1a = a0_0x5476b7();
  try {
    return _0x2bad1a();
  } catch (_0x404bb2) {
    console.error("Error with facebook logout:", _0x404bb2.message);
  }
}
async function a0_0x178928() {}
async function a0_0x86b14f() {
  return new Promise((_0x294b4a, _0x55c2e2) => {
    FB.logout(function (_0x354e40) {
      return _0x294b4a(true);
    });
  });
}
let a0_0x57ac72 = false;
const a0_0x598e23 = () => typeof AppleID === "object" && AppleID.hasOwnProperty("auth");
if (!a0_0x4eb775) {
  $.loadScript("https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js", function () {
    if (a0_0x598e23()) {
      let _0x50b276 = window.location.origin;
      AppleID.auth.init({
        clientId: $config.authentication.apple,
        scope: "name email",
        redirectURI: _0x50b276,
        usePopup: true,
        state: a0_0xf18dec(7)
      });
      a0_0x57ac72 = true;
    }
  });
}
async function a0_0x531e77(_0x39903d, _0x3935d7, _0x4bf063) {
  const _0x29c46e = _0x4bf063 ? {
    name: _0x4bf063
  } : null;
  const _0x5552e0 = await a0_0x949786(_0x39903d, _0x3935d7, "apple", _0x29c46e);
  if (!_0x5552e0) {
    await a0_0x5b0c73()();
  }
}
async function a0_0x19fd8c() {
  const _0x5c2b72 = a0_0x29efa8();
  try {
    const _0x3d39c6 = await _0x5c2b72.func();
    await a0_0x531e77(_0x3d39c6, _0x5c2b72.platform);
  } catch (_0x8963ca) {
    console.error("Error with apple login:", _0x8963ca.message);
  }
}
async function a0_0x5bbcd2() {}
function a0_0x29efa8() {
  if (!a0_0x2ac9fb) {
    console.log("resolve web apple login");
    return {
      platform: "web",
      func: a0_0x5d84d5
    };
  } else {
    console.log("resolve mobile apple login");
    return {
      platform: "mobile",
      func: a0_0x5d84d5
    };
  }
}
function a0_0x5b0c73() {
  if (!a0_0x2ac9fb || a0_0x4eb775) {
    return a0_0x2a0dc4;
  } else {
    return a0_0x2a0dc4;
  }
}
async function a0_0x5d84d5() {
  try {
    if (!a0_0x57ac72) {
      throw new Error("Failed to initialize apple auth library.");
    }
    const _0xa82a24 = await AppleID.auth.signIn();
    if (_0xa82a24 && _0xa82a24.authorization && _0xa82a24.authorization.id_token) {
      console.log("data authorization was:", _0xa82a24.authorization);
      return _0xa82a24.authorization.id_token;
    } else {
      throw new Error("Failed to get id token from apple.");
    }
  } catch (_0x3c1522) {
    console.error("error signing in ", _0x3c1522);
    throw _0x3c1522;
  }
}
async function a0_0x2a0dc4() {
  try {
    var _0x2df35a = gapi.auth2.getAuthInstance();
    return _0x2df35a.signOut();
  } catch (_0x5a374c) {
    console.error("Error with web apple logout:", _0x5a374c);
  }
}
async function a0_0x451ca9() {}
async function a0_0x62f243() {
  a0_0x2c39f5();
}
let a0_0x2d7b9a = null;
function a0_0x2c39f5() {
  const _0x2ba00b = "scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,\nwidth=700,height=800,left=50%,top=50%";
  a0_0x2d7b9a = a0_0xf18dec(10);
  const _0x3a3721 = window.location.origin + "/discord_login.html";
  const _0x4bc190 = "https://discord.com/oauth2/authorize?response_type=token&client_id=" + $config.authentication.discord + "&state=" + a0_0x2d7b9a + "&scope=identify+email&redirect_uri=" + _0x3a3721;
  const _0x3e2402 = window.open(_0x4bc190, "Discord Auth", _0x2ba00b);
  const _0x1bee37 = setInterval(() => {
    _0x3e2402.postMessage("MOPE_GET_DISCORD", window.location.origin);
  }, 500);
  const _0x213f79 = async _0x1f927e => {
    if (_0x1f927e.data.response) {
      clearInterval(_0x1bee37);
      _0x3e2402.close();
      if (_0x1f927e.data.response == "MOPE_GET_DISCORD") {
        console.log(_0x1f927e.data);
        if (_0x1f927e.data.state != a0_0x2d7b9a) {
          a0_0x53eb81("ACCOUNTS: Error while trying to login using discord: DISCORD_2", "error", 10000);
          return;
        }
        const _0x539a5d = await a0_0x949786(_0x1f927e.data.code, "web", "discord");
      } else {
        a0_0x53eb81("ACCOUNTS: Error while trying to login using discord: DISCORD_1", "error", 10000);
      }
      window.removeEventListener("message", _0x213f79);
    }
  };
  window.addEventListener("message", _0x213f79);
}
var a0_0x225c73 = null;
var a0_0x2063ee = +new Date();
let a0_0x5a0076 = false;
function a0_0x5ed66f(_0x4f3910, _0x5e282e) {
  var _0x12b24d = location.protocol == "https:" ? "https:" : "http:";
  var _0x16a422 = location.host;
  var _0x263c6b = _0x12b24d + "//" + _0x16a422;
  $.ajax({
    url: a0_0x6eb848 + "/xsolla/getToken",
    type: "POST",
    data: JSON.stringify({
      userId: a0_0x1c0ca2,
      token: a0_0x2bc035,
      itemId: _0x4f3910,
      settings_ui_version: a0_0x3c77d3 ? "mobile" : "desktop",
      return_url: _0x263c6b
    }),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x3c0fbc) {
      var _0x5ee891 = _0x3c0fbc;
      _0x5e282e(_0x5ee891.success ? _0x5ee891.token : null);
    },
    error: function (_0x4a51c6, _0x25d96d, _0x69559f) {
      var _0x4c4b82 = JSON.parse(_0x4a51c6.responseText);
      console.log("Error getting token: " + _0x69559f);
      a0_0x53eb81(_0x4c4b82.reason, "error", 10);
      _0x5e282e(false, null);
    }
  });
}
function a0_0x22300d(_0x5edf23) {
  $.ajax({
    url: a0_0x6eb848 + "/xsolla/getPackets",
    type: "POST",
    data: JSON.stringify({
      userId: a0_0x1c0ca2,
      token: a0_0x2bc035
    }),
    headers: {
      "Content-Type": "application/json;charset=UTF-8"
    },
    success: function (_0x44ba0b) {
      var _0x198afc = _0x44ba0b;
      _0x5edf23(_0x198afc.success ? _0x198afc.data : null);
    },
    error: function (_0x407933, _0x422fb6, _0x223516) {
      var _0x2c1240 = JSON.parse(_0x407933.responseText);
      console.log("Error getting token: " + _0x223516);
      a0_0x53eb81(_0x2c1240.error, "error", 10);
      _0x5edf23(false, null);
    }
  });
}
document.getElementById("xsollaStoreCloseButton").onclick = function () {
  a0_0x168476();
};
function a0_0x168476() {
  a0_0x46ed3d = false;
  var _0x1f3e43 = document.getElementById("xsollaStoreFrameWrapper");
  _0x1f3e43.style.display = "none";
  var _0x46c42c = document.getElementById("xsollaStoreInnerDiv");
  while (_0x46c42c.firstChild) {
    _0x46c42c.removeChild(_0x46c42c.firstChild);
  }
}
var a0_0x46ed3d = false;
function a0_0x4643d6() {
  if (a0_0x2ac9fb) {
    alert("Please open mope.io in your browser to buy coins (can't buy them in the app yet!)");
    return;
  }
  if (a0_0x46ed3d) {
    a0_0x168476();
  }
  a0_0x46ed3d = true;
  var _0x544f5b = document.getElementById("xsollaStoreInnerDiv");
  _0x544f5b.style.display = "none";
  while (_0x544f5b.firstChild) {
    _0x544f5b.removeChild(_0x544f5b.firstChild);
  }
  const _0x53dc81 = document.querySelector(".xsollaStoreItems");
  while (_0x53dc81.lastChild) {
    _0x53dc81.removeChild(_0x53dc81.lastChild);
  }
  var _0x2792be = document.getElementById("xsollaStoreFrameWrapper");
  _0x2792be.style.display = "block";
  var _0x4116a6 = document.getElementById("loadingAnim_xsolla");
  _0x4116a6.style.display = "block";
  a0_0x22300d(_0xe7b9f4 => {
    if (!_0xe7b9f4) {
      a0_0x168476();
      return;
    }
    _0x4116a6.style.display = "none";
    _0x53dc81.style.display = "grid";
    for (let _0x491dac = 0; _0x491dac < _0xe7b9f4.length; _0x491dac++) {
      const _0x2846d0 = _0xe7b9f4[_0x491dac];
      const _0x5320d0 = document.createElement("div");
      const _0x28aaa9 = document.createElement("div");
      const _0x3266cc = document.createElement("img");
      const _0x4be14d = document.createElement("div");
      const _0x42be0e = document.createElement("div");
      _0x5320d0.className = "xsollaStoreItem";
      _0x28aaa9.className = "xsollaStoreItemImageOuter";
      _0x3266cc.className = "xsollaStoreItemImageInner";
      _0x4be14d.className = "xsollaStoreItemTitle";
      _0x42be0e.className = "xsollaStoreItemBuy";
      _0x5320d0.append(_0x28aaa9, _0x4be14d, _0x42be0e);
      _0x28aaa9.append(_0x3266cc);
      _0x5320d0.title = _0x2846d0.description;
      _0x4be14d.innerText = _0x2846d0.name + " - " + _0x2846d0.amount;
      _0x3266cc.src = _0x2846d0.image;
      _0x42be0e.innerText = "Buy for " + _0x2846d0.price.replace(".", ",") + "$";
      _0x42be0e.onclick = () => {
        a0_0x284037(_0x2846d0.id);
      };
      _0x53dc81.appendChild(_0x5320d0);
    }
  });
}
function a0_0x284037(_0x31b92b) {
  const _0x1e7cf6 = document.querySelector(".xsollaStoreItems");
  while (_0x1e7cf6.lastChild) {
    _0x1e7cf6.removeChild(_0x1e7cf6.lastChild);
  }
  _0x1e7cf6.style.display = "none";
  var _0x4cc85f = document.getElementById("loadingAnim_xsolla");
  _0x4cc85f.style.display = "block";
  var _0x4c7409 = document.getElementById("xsollaStoreInnerDiv");
  _0x4c7409.style.display = "block";
  a0_0x5ed66f(_0x31b92b, function (_0x4fe880) {
    if (_0x4fe880) {
      console.log("Got xsolla token " + _0x4fe880);
      var _0x2dce7d = document.getElementById("loadingAnim_xsolla");
      _0x2dce7d.style.display = "none";
      var _0x287f6d;
      if (a0_0x5a0076) {
        _0x287f6d = "https://sandbox-secure.xsolla.com/paystation4/?token=" + _0x4fe880;
      } else {
        _0x287f6d = "https://secure.xsolla.com/paystation4/?token=" + _0x4fe880;
      }
      var _0x45a259 = document.createElement("iframe");
      _0x45a259.setAttribute("src", _0x287f6d);
      _0x45a259.setAttribute("id", "storeIFrame");
      _0x4c7409.appendChild(_0x45a259);
    }
  });
}
function a0_0x471679(_0x23bf47) {
  var _0x4b3a74 = {
    access_token: "abcdef1234567890abcdef1234567890"
  };
  var _0x4173fa = document.createElement("script");
  _0x4173fa.type = "text/javascript";
  _0x4173fa.async = true;
  _0x4173fa.src = "//static.xsolla.com/embed/paystation/1.0.7/widget.min.js";
  _0x4173fa.addEventListener("load", function (_0x4654cb) {
    XPayStationWidget.init(_0x4b3a74);
  }, false);
  var _0xe073ff = document.getElementsByTagName("head")[0];
  _0xe073ff.appendChild(_0x4173fa);
}
if (typeof a0_0x56bbb3 === "undefined" || a0_0x56bbb3 === null || a0_0x56bbb3 === undefined) {
  window.options_graphicsLevel = 3;
}
a0_0x30ac83(a0_0x56bbb3);
function a0_0x30ac83(_0x5aef68) {
  var _0x41108a = _0x5aef68 == a0_0x56bbb3;
  a0_0x56bbb3 = _0x5aef68;
  if (window.localStorage) {
    try {
      window.localStorage.setItem("options_graphicsLevel", a0_0x56bbb3);
    } catch (_0x29247a) {}
  }
  for (var _0x1c2bcb = 1; _0x1c2bcb <= 3; _0x1c2bcb++) {
    var _0x249873;
    switch (_0x1c2bcb) {
      case a0_0xbf9ed5:
        _0x249873 = document.getElementById("graphicsBut_low");
        break;
      case a0_0x128bb9:
        _0x249873 = document.getElementById("graphicsBut_med");
        break;
      case a0_0x1e1cbc:
        _0x249873 = document.getElementById("graphicsBut_hd");
        break;
    }
    if (_0x249873) {
      if (_0x1c2bcb == _0x5aef68) {
        _0x249873.disabled = true;
        _0x249873.style.opacity = 0.5;
      } else {
        _0x249873.disabled = false;
        _0x249873.style.opacity = 1;
      }
    }
    if (_0x41108a) {
      a0_0x333a56 = true;
    }
  }
}
let a0_0x4f90b6 = 0;
let a0_0x33f8b0 = null;
let a0_0x1d10a7 = 0;
function a0_0x22d74b(_0x11c8ef) {
  a0_0x4f90b6 += 1;
  if (_0x11c8ef - a0_0x33f8b0 > 1000) {
    a0_0x33f8b0 = _0x11c8ef;
    a0_0x1d10a7 = a0_0x4f90b6;
    a0_0x4f90b6 = 0;
  }
}
function a0_0x2ab550(_0xf51145) {
  a0_0x2ddb3e.setText("fps: " + a0_0x1d10a7);
  var _0xdc1054 = document.getElementById("graphics_fps");
  if (_0xdc1054 && !a0_0x371a9b) {
    if (_0xf51145 > 58) {
      _0xdc1054.innerHTML = " FPS " + _0xf51145 + " (perfect)";
    } else if (_0xf51145 > 40) {
      _0xdc1054.innerHTML = " FPS " + _0xf51145 + " (okay)";
    } else if (_0xf51145 > 29) {
      _0xdc1054.innerHTML = " FPS " + _0xf51145 + " (playable- close other tabs/ lower graphics)";
    } else {
      _0xdc1054.innerHTML = " FPS " + _0xf51145 + " (low- close other tabs/ lower graphics)";
    }
  }
}
setInterval(function () {
  a0_0x2ab550(a0_0x1d10a7);
}, a0_0x164585);
const a0_0x3d2680 = performance.now();
let a0_0x1e5b59 = window.innerWidth - 150;
let a0_0x4d71f5 = window.innerHeight - 150;
function a0_0x51e618(_0x4342b1, _0x441476, _0x19b457) {
  this.animStep = 1;
  this.animStartT = a0_0x24806e;
  this.animDur = 3000;
  this.timedOut = false;
  this.xShift = a0_0x5dcede(-10, 10);
  this.yShift = a0_0x5dcede(-10, 10);
  this.anlgeShift = a0_0x5dcede(-10, 10);
  this.text = new a0_0x993fcb(16, "white");
  this.text.setText((_0x4342b1 >= 0 ? "+ " : "") + a0_0x29f156(_0x4342b1) + _0x441476);
  this.textFontSz = 30;
  var _0x560ff5 = "white";
  if (_0x4342b1 > 10000) {
    _0x560ff5 = "#c7b753";
    this.textFontSz = 40;
    this.animDur += 1000;
  }
  if (_0x4342b1 > 100000) {
    _0x560ff5 = "#fdca5b";
    this.textFontSz = 45;
    this.animDur += 2000;
  }
  if (_0x4342b1 > 1000000) {
    _0x560ff5 = "#c7b753";
    this.textFontSz = 51;
    this.animDur += 2000;
  }
  if (_0x4342b1 < 0) {
    _0x560ff5 = "#c65f59";
    this.animDur += 2000;
  }
  _0x560ff5 = _0x19b457 === undefined ? _0x560ff5 : _0x19b457;
  this.text.setColor(_0x560ff5);
  this.draw = function () {
    var _0x3be23d = a0_0x3cbcc1((a0_0x24806e - this.animStartT) / this.animDur, 0, 1);
    a0_0x1306ae.save();
    var _0x1cb6d5 = window.innerWidth * window.devicePixelRatio * 0.5;
    var _0x13d242 = a0_0xa794f1 - a0_0x2c02fa * 85 + _0x3be23d * (a0_0x2c02fa * -150);
    a0_0x1306ae.translate(_0x1cb6d5, _0x13d242);
    a0_0x1306ae.rotate(a0_0x873ec7(this.anlgeShift * _0x3be23d));
    a0_0x1306ae.globalAlpha = 1 - _0x3be23d;
    this.text.setFontSize(this.textFontSz * a0_0x2c02fa);
    this.text.x = 0;
    this.text.y = 0;
    this.text.draw();
    a0_0x1306ae.restore();
    if (a0_0x24806e >= this.animStartT + this.animDur) {
      this.timedOut = true;
    }
  };
}
function a0_0x3c1415(_0x389ec8, _0x30b4eb, _0x4e7e20, _0x3b6506) {
  this.animStep = 1;
  this.animStartT = a0_0x24806e;
  this.timedOut = false;
  this.xShift = a0_0x5dcede(-10, 10);
  this.yShift = a0_0x5dcede(-10, 10);
  this.anlgeShift = a0_0x5dcede(-10, 10);
  this.text = new a0_0x993fcb(_0x30b4eb, _0x4e7e20);
  this.text.setText(_0x389ec8);
  this.textFontSz = _0x30b4eb;
  this.animDur = _0x3b6506;
  this.text.setColor(_0x4e7e20);
  this.draw = function () {
    if (a0_0x3e6a07) {
      return;
    }
    var _0x5874e0 = a0_0x3cbcc1((a0_0x24806e - this.animStartT) / this.animDur, 0, 1);
    a0_0x1306ae.save();
    var _0x2e5b7c = a0_0x2bf7a6 / 2;
    var _0x198268 = a0_0xa794f1 - a0_0x2c02fa * 85 + _0x5874e0 * (a0_0x2c02fa * -150);
    a0_0x1306ae.translate(_0x2e5b7c, _0x198268);
    a0_0x1306ae.globalAlpha = 1 - _0x5874e0;
    this.text.setFontSize(this.textFontSz * a0_0x2c02fa);
    this.text.x = 0;
    this.text.y = 0;
    this.text.draw();
    a0_0x1306ae.restore();
    if (a0_0x24806e >= this.animStartT + this.animDur) {
      this.timedOut = true;
    }
  };
}
var a0_0x2c0fc4 = 200;
function a0_0x499f6c() {
  var _0x22d516 = a0_0x17dc48 && a0_0x339877 < 500 ? 1.4 : 1;
  a0_0x26eedc.w = a0_0x26eedc.h = a0_0x2c0fc4 * a0_0x2c02fa * _0x22d516;
  a0_0x1968ec.w = a0_0x1968ec.h = a0_0x2c0fc4 * a0_0x2c02fa * _0x22d516;
  a0_0x72adc4.w = a0_0x72adc4.h = a0_0x2c0fc4 * a0_0x2c02fa * _0x22d516;
  a0_0x2ee98c.w = a0_0x2b523d * 60 * _0x22d516;
  a0_0x2ee98c.h = a0_0x2b523d * 30 * _0x22d516;
  const _0x3bde50 = 50;
  a0_0x26eedc.x = a0_0x2b523d * 25 * _0x22d516 + a0_0x26eedc.w / 2;
  a0_0x26eedc.y = a0_0xa794f1 - (a0_0x2b523d * 40 + a0_0x26eedc.w / 2);
  if (a0_0x53412f) {
    a0_0x26eedc.x = a0_0x2bf7a6 - a0_0x26eedc.x;
  }
  a0_0x1968ec.x = a0_0x26eedc.x;
  if (!a0_0x17dc48) {
    a0_0x1968ec.y = a0_0x26eedc.y;
  } else {
    a0_0x1968ec.y = a0_0x26eedc.y - (a0_0x2b523d * 10 * _0x22d516 + a0_0x1968ec.w / 2 + a0_0x26eedc.w / 2);
  }
  a0_0x72adc4.x = a0_0x26eedc.x;
  a0_0x72adc4.y = a0_0x1968ec.y - (a0_0x2b523d * 10 * _0x22d516 + a0_0x72adc4.w / 2 + a0_0x1968ec.w / 2);
  a0_0x2ee98c.x = Math.min(a0_0x2bf7a6 / 2 + a0_0x2b523d * 250 * _0x22d516, a0_0x2bf7a6 * 0.8) - 150;
  a0_0x2ee98c.y = a0_0x2b523d * 15 + a0_0x2ee98c.h / 2;
  a0_0x2b86de.setPosAndSize(a0_0x2ee98c.x - (a0_0x2ee98c.w / 2 + a0_0x2b523d * 10 * _0x22d516), a0_0x2ee98c.y, a0_0x2b523d * 60 * _0x22d516, a0_0x2b523d * 30 * _0x22d516, 1, 0.5);
  for (var _0x42e657 = 0; _0x42e657 < a0_0x14cf81.length; _0x42e657++) {
    var _0x1c3ac6 = a0_0x14cf81[_0x42e657];
    _0x1c3ac6.visible = a0_0x17dc48;
  }
  a0_0x1968ec.visible = true;
  a0_0x72adc4.visible = true;
  a0_0x2b86de.visible = a0_0x2b86de.touchEnabled = a0_0x17dc48;
}
a0_0x368317.addEventListener("gesturestart", function (_0x280010) {
  _0x280010.preventDefault();
});
function a0_0x396162() {
  for (var _0x2fa779 = 0; _0x2fa779 < a0_0x14cf81.length; _0x2fa779++) {
    var _0x28beb5 = a0_0x14cf81[_0x2fa779];
    _0x28beb5.pressed = false;
    _0x28beb5.pressedTouchID = -1;
  }
  a0_0x52feee = false;
}
a0_0x368317.ontouchstart = function (_0x539998) {
  a0_0x541393();
  var _0x4eb608 = _0x539998.touches;
  if (_0x4eb608.length == 1) {
    a0_0x396162();
  }
  if (!a0_0x371a9b) {
    return;
  }
  for (var _0x560fec = 0; _0x560fec < _0x539998.changedTouches.length; _0x560fec++) {
    var _0x32a48f = _0x539998.changedTouches[_0x560fec];
    for (var _0x4153b3 = 0; _0x4153b3 < a0_0x14cf81.length; _0x4153b3++) {
      var _0x3099b1 = a0_0x14cf81[_0x4153b3];
      var _0x31ad5d = _0x3099b1.testPosHitsButton(_0x32a48f.clientX * a0_0x2b523d, _0x32a48f.clientY * a0_0x2b523d);
      if (_0x31ad5d && !_0x3099b1.pressed && _0x3099b1.touchEnabled) {
        _0x539998.preventDefault();
        _0x3099b1.pressed = true;
        _0x3099b1.pressedTouchID = _0x32a48f.identifier;
        _0x3099b1.onButtonTouchStart();
        return;
      }
    }
  }
  if (!a0_0x210e4b) {
    if (!a0_0x52feee) {
      var _0x32a48f = _0x539998.changedTouches[0];
      a0_0x52feee = true;
      a0_0x2ce670 = _0x32a48f.clientX * a0_0x2b523d;
      a0_0x2976d1 = _0x32a48f.clientY * a0_0x2b523d;
      a0_0x4c28bb = a0_0x2ce670;
      a0_0x4d8ddf = a0_0x2976d1;
      a0_0x48702b = _0x32a48f.identifier;
      return;
    }
  }
  a0_0x3916f6 = _0x539998.touches[0].clientX * a0_0x2b523d;
  a0_0x145dbf = _0x539998.touches[0].clientY * a0_0x2b523d;
  a0_0x19a848();
};
var a0_0x3876dd = 0;
var a0_0x38cda4 = 0;
var a0_0x2027cd = 0;
var a0_0x502481 = 1;
a0_0x368317.ontouchmove = function (_0x3257e4) {
  a0_0x541393();
  _0x3257e4.preventDefault();
  for (var _0x966acf = 0; _0x966acf < _0x3257e4.changedTouches.length; _0x966acf++) {
    var _0x13bece = _0x3257e4.changedTouches[_0x966acf];
    if (_0x13bece.identifier == a0_0x1968ec.pressedTouchID) {
      if (a0_0x26eedc.pressedTouchID == -1) {
        var _0x105b4c = a0_0x26eedc.testPosHitsButton(_0x13bece.clientX * a0_0x2b523d, _0x13bece.clientY * a0_0x2b523d);
        var _0x571fb6 = a0_0x26eedc.pressed;
        a0_0x26eedc.pressed = _0x105b4c;
        if (_0x105b4c && !_0x571fb6) {
          a0_0x10789a(a0_0x4d3fc6, true);
        } else if (!_0x105b4c && _0x571fb6) {
          a0_0x10789a(a0_0x4d3fc6, false);
        }
      }
      continue;
    }
    if (!a0_0x210e4b) {
      if (a0_0x52feee && _0x13bece.identifier == a0_0x48702b) {
        var _0x20def6 = _0x13bece.clientX * a0_0x2b523d - a0_0x2ce670;
        var _0x190cd1 = _0x13bece.clientY * a0_0x2b523d - a0_0x2976d1;
        var _0x4ae08f = Math.sqrt(_0x20def6 * _0x20def6 + _0x190cd1 * _0x190cd1);
        if (_0x4ae08f > 0) {
          var _0x5672b2 = _0x20def6 / _0x4ae08f;
          var _0x1c5818 = _0x190cd1 / _0x4ae08f;
          var _0x20653c = Math.min(1, _0x4ae08f / (a0_0x4061c2 * a0_0x2b523d));
          if (_0x20653c < 0.35) {
            _0x20653c = 0;
          }
          var _0x9c7b0b = Math.pow(_0x20653c, 2);
          var _0xc5a3c3 = a0_0x2b523d * 300 * _0x9c7b0b;
          var _0x1795a5 = Math.atan2(_0x1c5818, _0x5672b2);
          a0_0x1e4bf4 = a0_0x8b0c15(a0_0x541188, _0x1795a5);
          a0_0x3d6b40 = _0x20653c;
          a0_0x4c28bb = a0_0x2ce670 + a0_0x4061c2 * a0_0x2b523d * _0x5672b2 * _0x20653c;
          a0_0x4d8ddf = a0_0x2976d1 + a0_0x4061c2 * a0_0x2b523d * _0x1c5818 * _0x20653c;
          a0_0x3916f6 = a0_0x2bf7a6 / 2 + _0x5672b2 * _0xc5a3c3;
          a0_0x145dbf = a0_0xa794f1 / 2 + _0x1c5818 * _0xc5a3c3;
          a0_0x19a848();
        }
      }
    } else {
      a0_0x3916f6 = _0x13bece.clientX * a0_0x2b523d;
      a0_0x145dbf = _0x13bece.clientY * a0_0x2b523d;
      a0_0x19a848();
    }
  }
};
a0_0x368317.ontouchend = function (_0x46770d) {
  for (var _0x2b716d = 0; _0x2b716d < _0x46770d.changedTouches.length; _0x2b716d++) {
    var _0x366b86 = _0x46770d.changedTouches[_0x2b716d];
    if (a0_0x52feee && _0x366b86.identifier == a0_0x48702b) {
      a0_0x52feee = false;
      a0_0x48702b = -1;
      continue;
    }
    for (var _0x3679ce = 0; _0x3679ce < a0_0x14cf81.length; _0x3679ce++) {
      var _0x1665e1 = a0_0x14cf81[_0x3679ce];
      if (_0x1665e1.pressed && _0x1665e1.pressedTouchID == _0x366b86.identifier && _0x1665e1.touchEnabled) {
        _0x1665e1.pressed = false;
        _0x1665e1.pressedTouchID = -1;
        if (a0_0x371a9b) {
          _0x1665e1.onButtonTouchEnd();
        }
        return;
      }
    }
  }
};
a0_0x368317.ontouchcancel = function (_0x104743) {
  console.log("touch cancel");
  a0_0x368317.ontouchend(_0x104743);
};
a0_0x368317.ontouchleave = function (_0xee3c0e) {
  console.log("touch leave");
};
a0_0x42171b.prototype = {
  id: 0,
  drawMe: true,
  oType: a0_0x385d1d,
  spawnTime: 0,
  rPer: 0,
  updateTime: 0,
  x: 0,
  y: 0,
  ox: 0,
  oy: 0,
  nx: 0,
  ny: 0,
  rad: 0,
  oRad: 0,
  nRad: 0,
  angle: 0,
  oAngle: 0,
  angleDelta: 0,
  moveUpdF: 0,
  z: 0,
  name: "",
  dead: false,
  type: 0,
  curBiome: 0,
  isRectangle: false,
  rectW: 0,
  rectH: 0,
  specType: 0,
  spawnedByID: 0,
  toString: function () {
    return "[GObj t=" + this.oType + " id=" + this.id + "]";
  }
};
a0_0x42171b.prototype.flag_hurt = false;
a0_0x42171b.prototype.hpPer = a0_0x42171b.prototype.hpPer_n = a0_0x42171b.prototype.hpBarA = 0;
a0_0x42171b.prototype.infectionPer = a0_0x42171b.prototype.infectionPer_n = a0_0x42171b.prototype.infectionBarA = 0;
a0_0x42171b.prototype.curePer = a0_0x42171b.prototype.curePer_n = a0_0x42171b.prototype.cureBarA = 0;
a0_0x42171b.prototype.hpBarTimeoutT = 0;
a0_0x42171b.prototype.alwaysPlainOutline = false;
a0_0x42171b.prototype.doesDrawEffectScale = false;
a0_0x42171b.prototype.drawEffectScale_Slow = false;
a0_0x42171b.prototype.customInterfaceDraw = false;
a0_0x42171b.prototype.animateRadOnSpawn = true;
a0_0x42171b.prototype.canRotate = function () {
  switch (this.oType) {
    case a0_0x28419d:
    case a0_0x36e46a:
    case a0_0x23edee:
      return false;
  }
  return true;
};
a0_0x42171b.prototype.getObjSpecies = function () {
  switch (this.oType) {
    case a0_0x16a704:
      return "/" + this.speciesType;
  }
  return "";
};
a0_0x42171b.prototype.customDraw2 = function (_0x196e5b) {
  switch (this.oType) {
    case a0_0xf1b509:
    case a0_0x30cd21:
    case a0_0xb1af09:
    case a0_0x3ab097:
    case a0_0x385d1d:
    case a0_0x22b74a:
    case a0_0x12a9bd:
    case a0_0x28419d:
    case a0_0x3ad19b:
    case a0_0x11ab7f:
    case a0_0x36fcd2:
    case a0_0x266048:
    case a0_0x36e46a:
    case a0_0xa51864:
    case a0_0x1ce793:
    case a0_0x48e29b:
    case a0_0x17fc87:
    case a0_0x131826:
    case a0_0x572c92:
    case a0_0x2db118:
    case a0_0x5a9119:
    case a0_0x40a196:
    case a0_0x23edee:
    case a0_0x58cf25:
    case a0_0x4d474f:
    case a0_0x2ec460:
    case a0_0x1d4a42:
    case a0_0x11248d:
    case a0_0x116605:
    case a0_0x4f2b01:
    case a0_0x59315a:
    case a0_0x222f49:
    case a0_0x240d06:
    case a0_0x42d3de:
    case a0_0x35e972:
    case a0_0x16a704:
    case a0_0x244bcd:
    case a0_0x184b25:
    case a0_0x55cfa8:
    case a0_0x226c22:
    case a0_0x2008b0:
    case a0_0x18e157:
    case a0_0x8a8853:
      this.doesDrawEffectScale = false;
      this.drawEffectScale_Slow = false;
      {
        var _0x57c41b = this.getSkinImageObj(this.objSkinPath);
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha = this.getObjAlpha();
        if (_0x57c41b) {
          var _0x3bad45 = this.getRad();
          if (this.canRotate()) {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x57c41b, -_0x3bad45, -_0x3bad45, _0x3bad45 * 2, _0x3bad45 * 2);
        } else {
          this.drawOutlinedCircle("(make this obj invisible on server?) " + this.oType, "black");
        }
        a0_0x1306ae.restore();
      }
      break;
  }
};
a0_0x42171b.prototype.getRad = function () {
  switch (this.oType) {
    case a0_0x244bcd:
    case a0_0x50e062:
      return this.rad * 1.5;
    case a0_0x28419d:
      return this.rad * 1.2;
    case a0_0x55cfa8:
    case a0_0x226c22:
      var _0x3a6639 = a0_0x283a01[a0_0x15e4d1];
      if (_0x3a6639 && _0x3a6639.lastHidingHoleID == this.id) {
        if (this.alpha == undefined) {
          this.alpha = 0;
        }
        if (_0x3a6639.flag_inHidingHole) {
          this.alpha += (0.1 + this.alpha) * 0.1;
        } else {
          this.alpha -= this.alpha * 0.1;
        }
        if (this.alpha > 1) {
          this.alpha = 1;
        } else if (this.alpha < 0) {
          this.alpha = 0;
        }
        a0_0x1306ae.globalAlpha = this.alpha;
        return this.rad;
      } else {
        return this.innerRad;
      }
  }
  return this.rad;
};
a0_0x42171b.prototype.getObjAlpha = function () {
  switch (this.oType) {
    case a0_0x16a704:
      return 0.9;
  }
  return 1;
};
a0_0x42171b.prototype.objSkinPath = null;
a0_0x42171b.prototype.getBiomeSkin = function (_0x29f7de) {
  switch (this.oType) {
    case a0_0x18e157:
      _0x29f7de = (this.isEdibleOutlined() ? "e" : this.oType) + "_" + this.specType;
      break;
    case a0_0x16a704:
    case a0_0xf1b509:
    case a0_0x30cd21:
    case a0_0xb1af09:
    case a0_0x244bcd:
    case a0_0x8a8853:
      _0x29f7de = this.isEdibleOutlined() ? "e" : this.curBiome;
      break;
    case a0_0x12a9bd:
    case a0_0x22b74a:
    case a0_0x28419d:
      _0x29f7de = this.isEdibleOutlined() ? "e" : this.oType;
      if (this.curBiome == a0_0x46c6b6) {
        _0x29f7de += "_2";
      }
      break;
    case a0_0x3ab097:
      _0x29f7de = this.isEdibleOutlined() ? "e" : this.curBiome;
      if (this.curBiome == a0_0x46c6b6) {
        _0x29f7de += "_2";
      }
      break;
    case a0_0x116605:
      _0x29f7de += "_" + this.curBiome;
      break;
    case a0_0x55cfa8:
    case a0_0x226c22:
      if (this.curBiome != a0_0x2f1e00) {
        _0x29f7de = this.curBiome;
      }
      break;
  }
  return _0x29f7de;
};
a0_0x42171b.prototype.customDraw = function (_0xb381dc) {
  switch (this.oType) {
    case a0_0x184b25:
      this.customDraw2(_0xb381dc);
      break;
    case a0_0xf1b509:
      {
        switch (this.curBiome) {
          case a0_0x44697a:
            if (_0xb381dc) {
              a0_0x50fd5c(0, 0, this.rad, a0_0x128411);
            } else {
              a0_0x50fd5c(0, 0, this.rad - 1.5, a0_0x1c0072);
            }
            break;
          case a0_0x5986dd:
            if (_0xb381dc) {
              a0_0x50fd5c(0, 0, this.rad, this.getOutlineColor());
            } else {
              a0_0x50fd5c(0, 0, this.rad - 1.5, a0_0x519c59);
            }
            break;
          case a0_0x46c6b6:
            if (_0xb381dc) {
              a0_0x50fd5c(0, 0, this.rad, "white");
            } else {
              a0_0x50fd5c(0, 0, this.rad - 1.5, a0_0x49d058);
            }
            break;
          case a0_0x506ba5:
          default:
            if (_0xb381dc) {
              a0_0x50fd5c(0, 0, this.rad, a0_0x59eaa4);
            } else {
              a0_0x50fd5c(0, 0, this.rad - 1.5, a0_0x4e3f72);
            }
            break;
        }
      }
      break;
    case a0_0x244bcd:
      {
        a0_0x1306ae.save();
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 2;
          var _0x4c2878 = 1.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        var _0xab7a01 = this.curBiome == a0_0x5986dd ? a0_0x1eb835 : a0_0x2dfbd1;
        a0_0x1306ae.fillStyle = _0xab7a01;
        var _0x2c0997 = this.rad * 0.8;
        this.drawOutlinedCircle("", _0xab7a01);
        a0_0x1306ae.globalAlpha *= 0.98;
        var _0x962186 = -_0x2c0997 * 0.5;
        var _0x2eeeb4 = -_0x2c0997 * 0.5 + this.rPer * 10;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.65 + _0x48588c) + 2;
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0xab7a01);
        var _0x962186 = _0x2c0997 * 0.5;
        var _0x2eeeb4 = -_0x2c0997 * 0.5 - this.rPer * 10;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.73 - _0x48588c);
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0xab7a01);
        var _0x962186 = _0x2c0997 * 0.6;
        var _0x2eeeb4 = _0x2c0997 * 0.4;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.78 + _0x48588c);
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0xab7a01);
        var _0x962186 = -_0x2c0997 * 0.5;
        var _0x2eeeb4 = _0x2c0997 * 0.5 + this.rPer * 10;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.6 + this.rPer - _0x48588c);
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0xab7a01);
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x4c3cae:
      {
        var _0x2b1c76 = this.curBiome == a0_0x44697a ? "#9b702b" : "#1AAE31";
        this.drawOutlinedCircle("", _0x2b1c76);
        a0_0x1306ae.save();
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 2;
          var _0x4c2878 = 1.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        a0_0x1306ae.fillStyle = a0_0x2751ed;
        var _0x484c6e = this.rad * 0.75;
        a0_0x1306ae.globalAlpha *= 0.8;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(-_0x484c6e * 0.5, -_0x484c6e * 0.5 + this.rPer * 10, Math.max(0, _0x484c6e * 0.65 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(_0x484c6e * 0.5, -_0x484c6e * 0.5 - this.rPer * 10, Math.max(0, _0x484c6e * 0.73 - _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(_0x484c6e * 0.6, _0x484c6e * 0.4, Math.max(0, _0x484c6e * 0.78 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(-_0x484c6e * 0.5, _0x484c6e * 0.5, Math.max(0, _0x484c6e * 0.6 + this.rPer - _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x50e062:
      {
        a0_0x1306ae.save();
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 2;
          var _0x4c2878 = 1.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        var _0x2c0997 = this.rad * 0.8;
        var _0x368192 = a0_0x1eb835;
        this.drawOutlinedCircle("", _0x368192);
        a0_0x1306ae.globalAlpha *= 0.98;
        var _0x962186 = -_0x2c0997 * 0.5;
        var _0x2eeeb4 = -_0x2c0997 * 0.5 + this.rPer * 10;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.65 + _0x48588c) + 2;
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0x368192);
        var _0x962186 = _0x2c0997 * 0.5;
        var _0x2eeeb4 = -_0x2c0997 * 0.5 - this.rPer * 10;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.73 - _0x48588c);
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0x368192);
        var _0x962186 = _0x2c0997 * 0.6;
        var _0x2eeeb4 = _0x2c0997 * 0.4;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.78 + _0x48588c);
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0x368192);
        var _0x962186 = -_0x2c0997 * 0.5;
        var _0x2eeeb4 = _0x2c0997 * 0.5 + this.rPer * 10;
        var _0x20efdc = Math.max(0, _0x2c0997 * 0.6 + this.rPer - _0x48588c);
        a0_0x50fd5c(_0x962186, _0x2eeeb4, _0x20efdc, _0x368192);
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x116605:
      {
        a0_0x1306ae.save();
        var _0x4a5a27 = this.curBiome == a0_0x46c6b6 ? "#7790d8" : a0_0x10973d;
        this.drawOutlinedCircle("", _0x4a5a27);
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 7;
          var _0x4c2878 = 4;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        if (this.curBiome == a0_0x46c6b6) {
          a0_0x1306ae.fillStyle = "#7790d8";
        } else {
          a0_0x1306ae.fillStyle = a0_0x10973d;
        }
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.3, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.35 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x385d1d:
      {
        var _0x4faac5 = a0_0xc6e5ca;
        if (this.curBiome == a0_0x46c6b6) {
          _0x4faac5 = "#ac443c";
        }
        this.drawOutlinedCircle("", _0x4faac5);
      }
      break;
    case a0_0x11ab7f:
      {
        var _0x235773 = this.getSkinImageObj("img/coconut" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x1306ae.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x1306ae.rotate(this.angle);
          } else {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x3ad19b:
      {
        var _0x235773 = this.getSkinImageObj("img/banana" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x1306ae.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x1306ae.rotate(this.angle);
          } else {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x11248d:
      {
        var _0x235773 = this.getSkinImageObj("img/rasp" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x1306ae.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x1306ae.rotate(this.angle);
          } else {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x1d4a42:
      {
        var _0x235773 = this.getSkinImageObj("img/pear" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x1306ae.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x1306ae.rotate(this.angle);
          } else {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x23edee:
      {
        var _0x235773 = this.getSkinImageObj("img/seaweed" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x58cf25:
      {
        var _0x235773 = this.getSkinImageObj("img/starfish" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x5a9119:
      {
        var _0x235773 = this.getSkinImageObj("img/kelp" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x40a196:
      {
        var _0x235773 = this.getSkinImageObj("img/clam" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x2db118:
      {
        var _0x235773 = this.getSkinImageObj("img/conch" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad * 1;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0xc89d15:
    case a0_0x1698e7:
      {
        break;
      }
    case a0_0x2424ed:
      {
        var _0x235773 = this.getSkinImageObj("skins/land/ostrich/" + this.speciesType + "/ostrichEgg" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x197517:
      this.drawOutlinedCircle("", "red");
      break;
    case a0_0x45e5b0:
      this.drawOutlinedCircle("", "green");
      break;
    case a0_0x2efa79:
      this.drawOutlinedCircle("", "blue");
      break;
    case a0_0x7973dd:
      break;
    case a0_0x18e157:
      {
        var _0x245c95 = "egg";
        if (this.specType == 1) {
          _0x245c95 = "goldenegg";
        }
        var _0x31dd68 = "img/" + _0x245c95 + (this.isEdibleOutlined() ? "_e" : "") + ".png";
        var _0x235773 = this.getSkinImageObj(_0x31dd68);
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x36e46a:
      {
        var _0x235773 = this.getSkinImageObj("img/beehive" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x112493:
      {
        var _0x235773 = this.getSkinImageObj("img/desert/anthill/anthill.png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
          console.log("drawing anthill");
        }
      }
      break;
    case a0_0x17fc87:
      {
        var _0x235773 = this.getSkinImageObj("img/honeycomb" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x95405:
      {
        var _0x235773 = this.getSkinImageObj("img/quill.png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.angle);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x2008b0:
      {
        this.drawOutlinedCircle("", a0_0x345b04);
        a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
        a0_0x50fd5c(this.rad * 0.25, this.rad * 0.4, (0.3 + this.rPer * 0.15) * this.rad, "#905113");
      }
      break;
    case a0_0xb1af09:
      {
        var _0x2fd4d4 = "";
        switch (this.curBiome) {
          case a0_0x5986dd:
            _0x2fd4d4 = "_ocean";
            break;
          case a0_0x46c6b6:
            _0x2fd4d4 = "_arctic";
            break;
          case a0_0x506ba5:
          default:
            _0x2fd4d4 = "";
            break;
        }
        var _0x235773 = this.getSkinImageObj("img/healingStone" + _0x2fd4d4 + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x2b11cc:
      {
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 1), "#815427");
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.6), "#6e4b29");
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.5), "#543d28");
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.45), "#3f3124");
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.33), "#241e19");
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.25), "#120f0d");
        a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.2), a0_0xcf4b9b);
      }
      break;
    case a0_0x16ab5b:
      {
        a0_0x1306ae.save();
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 !== a0_0xbf9ed5) {
          _0x48588c = a0_0xae444c("lavalake", this.spawnTime);
        }
        if (_0xb381dc) {
          var _0x590df1 = 4;
          a0_0x1306ae.fillStyle = a0_0xcf4b9b;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
          a0_0x1306ae.fill();
        } else {
          a0_0x1306ae.fillStyle = a0_0xcf4b9b;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          if (a0_0x56bbb3 != 2) {
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
            a0_0x1306ae.fill();
          }
          if (!a0_0x59c93b && a0_0x56bbb3 != 2) {
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
            var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
            var _0x523294 = 1.5;
            var _0x4c2878 = 8;
            var _0x53e8fd = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
            if (this.flag_underWater) {
              a0_0x1306ae.globalAlpha *= 0.5;
              if (this.animalType == a0_0x13971c) {
                a0_0x1306ae.globalAlpha = 0.3;
              }
            }
            a0_0x1306ae.fillStyle = "yellow";
            var _0x47cf35 = this.rad * 0.15;
            a0_0x1306ae.beginPath();
            var _0x104263 = 1;
            for (i = 1; i <= _0x104263; i++) {
              a0_0x1306ae.save();
              a0_0x1306ae.globalAlpha = 0.2;
              a0_0x1306ae.rotate(this.rPer * Math.PI * 2 * i);
              a0_0x1306ae.beginPath();
              a0_0x1306ae.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x47cf35 + _0x53e8fd), 0, Math.PI * 2);
              a0_0x1306ae.fill();
              a0_0x1306ae.beginPath();
              a0_0x1306ae.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x47cf35 - _0x53e8fd), 0, Math.PI * 2);
              a0_0x1306ae.fill();
              a0_0x1306ae.beginPath();
              a0_0x1306ae.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x47cf35 + _0x53e8fd), 0, Math.PI * 2);
              a0_0x1306ae.fill();
              a0_0x1306ae.beginPath();
              a0_0x1306ae.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x47cf35 - _0x53e8fd), 0, Math.PI * 2);
              a0_0x1306ae.fill();
              a0_0x1306ae.restore();
            }
            a0_0x1306ae.restore();
          }
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x494c53:
      {
        a0_0x1306ae.save();
        var _0x48588c = 0;
        var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x523294 = 4;
        var _0x4c2878 = 2.5;
        _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        if (_0xb381dc) {
          var _0x590df1 = 4;
          a0_0x1306ae.fillStyle = "#5e5348";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
          a0_0x1306ae.fill();
        } else {
          a0_0x1306ae.fillStyle = "#706962";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          if (a0_0x56bbb3 != a0_0xbf9ed5) {
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
            a0_0x1306ae.fill();
          }
          a0_0x1306ae.save();
          a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 1.5;
          var _0x4c2878 = 8;
          var _0x53e8fd = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
          if (this.flag_underWater) {
            a0_0x1306ae.globalAlpha *= 0.5;
            if (this.animalType == a0_0x13971c) {
              a0_0x1306ae.globalAlpha = 0.3;
            }
          }
          a0_0x1306ae.fillStyle = "yellow";
          var _0x47cf35 = this.rad * 0.15;
          a0_0x1306ae.beginPath();
          var _0x104263 = 1;
          for (i = 1; i <= _0x104263; i++) {
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.2;
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2 * i);
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x47cf35 + _0x53e8fd), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x47cf35 - _0x53e8fd), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x47cf35 + _0x53e8fd), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x47cf35 - _0x53e8fd), 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.restore();
          }
          a0_0x1306ae.restore();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x4d474f:
      {
        var _0x235773 = this.getSkinImageObj("img/cloudberry" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x1306ae.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x1306ae.rotate(this.angle);
          } else {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x2ec460:
      {
        var _0x235773 = this.getSkinImageObj("img/arcticNut" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          if (this.specType2 == 1) {
            if (this.angle == 0) {
              this.angle = this.rPer * Math.PI * 2;
            }
            this.angle += 0.4;
            a0_0x1306ae.rotate(this.angle);
          } else if (this.specType2 == 2) {
            a0_0x1306ae.rotate(this.angle);
          } else {
            a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          }
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x36fcd2:
      {
        var _0x235773 = this.getSkinImageObj("img/carrot" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x131826:
      {
        var _0x235773 = this.getSkinImageObj("img/watermelon" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0xcbb879:
      {
        a0_0x1306ae.save();
        a0_0x50fd5c(0, 0, this.rad, !this.isEdibleOutlined() ? a0_0x4e8ba0(this.curBiome) : a0_0x52f121);
        a0_0x50fd5c(0, 0, Math.max(0, this.rad - 2), "#74e61e");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x572c92:
      {
        var _0x235773 = this.getSkinImageObj("img/watermelonSlice" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x48e29b:
    case a0_0x1ce793:
    case a0_0xa51864:
      {
        var _0xaed472 = 0;
        var _0x235773 = this.getSkinImageObj("img/meat" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x22b74a:
    case a0_0x12a9bd:
      {
        var _0x590df1 = 2;
        var _0x13afd9 = this.oType == a0_0x12a9bd ? 15 : 9;
        a0_0x1306ae.fillStyle = this.getOutlineColor();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.rect(-_0x13afd9 / 2 - _0x590df1, -_0x590df1, _0x13afd9 + _0x590df1 * 2, this.rad * 0.8 + _0x590df1 * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.fillStyle = "#FFCA49";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.rect(-_0x13afd9 / 2, 0 + _0x590df1 / 2, _0x13afd9, this.rad * 0.8 - _0x590df1 / 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad), Math.PI, Math.PI * 2);
          a0_0x1306ae.fillStyle = this.getOutlineColor();
          a0_0x1306ae.fill();
        }
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1), Math.PI, Math.PI * 2);
        a0_0x1306ae.fillStyle = this.oType == a0_0x12a9bd ? "#B8413B" : "#CFAD59";
        a0_0x1306ae.fill();
      }
      break;
    case a0_0x28419d:
      {
        var _0x590df1 = 2;
        a0_0x1306ae.save();
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 2;
          var _0x4c2878 = 1.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        a0_0x1306ae.fillStyle = "#45D157";
        a0_0x1306ae.globalAlpha *= 0.93;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(-this.rad * 0.5, -this.rad * 0.5 + this.rPer * 10, Math.max(0, this.rad * 0.55 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad * 0.5, -this.rad * 0.5 - this.rPer * 10, Math.max(0, this.rad * 0.43 - _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad * 0.6, this.rad * 0.4, Math.max(0, this.rad * 0.48 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(-this.rad * 0.5, this.rad * 0.5, Math.max(0, this.rad * 0.4 + this.rPer - _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.restore();
        var _0x13afd9 = 20;
        a0_0x1306ae.fillStyle = this.getOutlineColor();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.rect(-_0x13afd9 / 2 - _0x590df1, -_0x590df1, _0x13afd9 + _0x590df1 * 2, this.rad * 0.8 + _0x590df1 * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.fillStyle = "#FFCA49";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.rect(-_0x13afd9 / 2, 0 + _0x590df1 / 2, _0x13afd9, this.rad * 0.8 - _0x590df1 / 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, Math.max(0, this.rad * 0.8), Math.PI, Math.PI * 2);
        a0_0x1306ae.fillStyle = this.getOutlineColor();
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, Math.max(0, this.rad * 0.8 - _0x590df1), Math.PI, Math.PI * 2);
        a0_0x1306ae.fillStyle = "#B8413B";
        a0_0x1306ae.fill();
      }
      break;
    case a0_0x266048:
      {
        var _0x235773 = this.getSkinImageObj("img/lillypad" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        }
      }
      break;
    case a0_0x382193:
      {
        console.log("ERROR: " + this + " should be subclassed!");
      }
      break;
    case a0_0x55cfa8:
    case a0_0x226c22:
      {
        var _0xb7fc5c = this.curBiome == a0_0x46c6b6 ? "#e0e0e0" : "#9F8641";
        var _0x3fdbe7 = this.curBiome == a0_0x46c6b6 ? "#878787" : "#7E6A35";
        var _0x40348e = this.curBiome == a0_0x46c6b6 ? "#666666" : "#5C4E28";
        var _0x44a978 = this.curBiome == a0_0x46c6b6 ? "#434343" : "#40371D";
        if (this.curBiome != a0_0x46c6b6) {
          this.drawOutlinedCircleRad("", _0xb7fc5c, this.innerRad);
        } else {
          a0_0x50fd5c(0 + this.rPer, 1, Math.max(0, this.innerRad), _0xb7fc5c);
        }
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, this.innerRad - 7), _0x3fdbe7);
        }
        a0_0x50fd5c(0 + this.rPer, 1, Math.max(0, this.innerRad - 14), _0x40348e);
        a0_0x50fd5c(0 - this.rPer * 2 - 3, 1, Math.max(0, this.innerRad - 18.5), _0x44a978);
        var _0x1d22d0 = a0_0x283a01[a0_0x15e4d1];
        if (_0x1d22d0 && _0x1d22d0.lastHidingHoleID == this.id) {
          if (this.alpha == undefined) {
            this.alpha = 0;
          }
          if (_0x1d22d0.flag_inHidingHole) {
            this.alpha += (0.1 + this.alpha) * 0.1;
          } else {
            this.alpha -= this.alpha * 0.1;
          }
          if (this.alpha > 1) {
            this.alpha = 1;
          } else if (this.alpha < 0) {
            this.alpha = 0;
          }
          a0_0x1306ae.globalAlpha = this.alpha;
          var _0x1d25e1 = this.rad;
          if (this.curBiome != a0_0x46c6b6) {
            this.drawOutlinedCircleRad("", _0xb7fc5c, _0x1d25e1);
          } else {
            a0_0x50fd5c(0, 0, Math.max(0, _0x1d25e1), _0xb7fc5c);
          }
          a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x1d25e1 - 7), _0x3fdbe7);
          a0_0x50fd5c(0 + this.rPer, 1, Math.max(0, _0x1d25e1 - 12), _0x40348e);
          a0_0x1306ae.globalAlpha = this.alpha * 0.7;
          _0x1d25e1 = _0x1d25e1 * 0.7;
          a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x1d25e1 - 7), _0x44a978);
          _0x1d25e1 = _0x1d25e1 * 0.5;
          a0_0x1306ae.globalAlpha = this.alpha * 0.3;
          a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x1d25e1), _0x44a978);
        }
      }
      break;
    case a0_0x74644c:
      {
        var _0x25dd75 = 1;
        var _0x331c79 = 1;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 1.2;
          _0x25dd75 = Math.cos(Math.PI * 2 / _0x523294 * _0x1db59c) * 3.5;
          _0x331c79 = Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c) * 2.5;
        }
        this.drawOutlinedCircleRad("", "#4A549D", this.innerRad);
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x50fd5c(0 + _0x25dd75 / 2 - this.rPer, 0 + _0x331c79 / 2 - this.rPer, Math.max(0, this.innerRad - 6), "#444C8B");
        }
        a0_0x50fd5c(0 + _0x25dd75 / 4.5 + this.rPer, 1 + _0x331c79 / 1.5, Math.max(0, this.innerRad - 14), "#4A549D");
        a0_0x50fd5c(0 + _0x25dd75 / 1.5 - this.rPer * 2, _0x331c79, Math.max(0, this.innerRad - 18.5 + _0x331c79 / 5), "#3F4477");
        a0_0x50fd5c(0 + _0x25dd75 / 1.5 - this.rPer * 2, _0x331c79, Math.max(0, this.innerRad - 22.5 + _0x331c79 / 11), "#353860");
        var _0x1d22d0 = a0_0x283a01[a0_0x15e4d1];
        if (_0x1d22d0 && _0x1d22d0.lastHidingHoleID == this.id) {
          if (this.alpha == undefined) {
            this.alpha = 0;
          }
          if (_0x1d22d0.flag_inHidingHole) {
            this.alpha += (0.1 + this.alpha) * 0.1;
          } else {
            this.alpha -= this.alpha * 0.1;
          }
          if (this.alpha > 1) {
            this.alpha = 1;
          } else if (this.alpha < 0) {
            this.alpha = 0;
          }
          a0_0x1306ae.globalAlpha = this.alpha;
          var _0x1d25e1 = this.rad;
          this.drawOutlinedCircle("", "#4A549D", _0x1d25e1);
          if (a0_0x56bbb3 != a0_0xbf9ed5) {
            a0_0x50fd5c(0 + _0x25dd75 / 2 - this.rPer, 0 + _0x331c79 / 2 - this.rPer, Math.max(0, _0x1d25e1 - 6), "#444C8B");
          }
          a0_0x50fd5c(0 + _0x25dd75 / 4.5 + this.rPer, 1 + _0x331c79 / 1.5, Math.max(0, _0x1d25e1 - 14), "#4A549D");
          _0x1d25e1 = _0x1d25e1 * 0.9;
          a0_0x1306ae.globalAlpha = this.alpha * 0.6;
          a0_0x50fd5c(0 + _0x25dd75 / 3.5 - this.rPer * 2, _0x331c79, Math.max(0, _0x1d25e1 - 18.5 + _0x331c79 / 5), "#3F4477");
          _0x1d25e1 = _0x1d25e1 * 0.7;
          a0_0x1306ae.globalAlpha = this.alpha * 0.3;
          a0_0x50fd5c(0 + _0x25dd75 / 6.5 - this.rPer * 2, _0x331c79, Math.max(0, _0x1d25e1 - 22.5 + _0x331c79 / 11), "#353860");
        }
      }
      break;
    case a0_0x16a704:
      {
        a0_0x1306ae.save();
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 2;
          var _0x4c2878 = 1.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        var _0x46724d = "#45D157";
        switch (this.curBiome) {
          case a0_0x5986dd:
            _0x46724d = "#786810";
            break;
          case a0_0x46c6b6:
            _0x46724d = "#CED0D0";
            break;
          default:
          case a0_0x506ba5:
            _0x46724d = "#45D157";
            break;
          case a0_0x44697a:
            _0x46724d = "#9b6f31";
            break;
        }
        a0_0x1306ae.fillStyle = _0x46724d;
        a0_0x1306ae.globalAlpha *= 0.93;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(-this.rad * 0.5, -this.rad * 0.5 + this.rPer * 10, Math.max(0, this.rad * 0.65 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad * 0.5, -this.rad * 0.5 - this.rPer * 10, Math.max(0, this.rad * 0.73 - _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad * 0.6, this.rad * 0.4, Math.max(0, this.rad * 0.78 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(-this.rad * 0.5, this.rad * 0.5, Math.max(0, this.rad * 0.6 + this.rPer - _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3bf767:
      {
        a0_0x1306ae.save();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 0;
        var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x523294 = 6;
        var _0x4c2878 = 1.5;
        _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        var _0x590df1 = 4;
        a0_0x1306ae.fillStyle = "#604729";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.fillStyle = "#8A681B";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3ec0e2:
      {
        a0_0x1306ae.save();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 0;
        var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x523294 = 6;
        var _0x4c2878 = 1.5;
        _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        var _0x590df1 = 4;
        a0_0x1306ae.fillStyle = "#605649";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.fillStyle = "#5e4f36";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x349907:
      break;
    case a0_0x5df858:
    case a0_0x233cb6:
    case a0_0x12e2db:
    case a0_0xe70597:
      break;
    case a0_0x4522b4:
    case a0_0x379ef4:
      var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
      a0_0x1306ae.globalAlpha = 0.1 + this.cloudOpacity;
      var _0x235773 = this.getSkinImageObj("img/disasters/cloud.png");
      if (_0x235773) {
        var _0x484c6e = this.rad * 2;
        a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
      }
      var _0x48588c = 0;
      var _0x523294 = 6;
      var _0x4c2878 = 15;
      _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
      a0_0x1306ae.globalAlpha = 0.1;
      var _0x235773 = this.getSkinImageObj("img/disasters/cloud1.png");
      if (_0x235773) {
        var _0x484c6e = this.rad * 2;
        _0x484c6e = Math.max(0, _0x484c6e - 5 + _0x48588c);
        a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
      }
      a0_0x1306ae.restore();
      break;
    case a0_0x4b7def:
      {
        a0_0x1306ae.save();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 1.5;
        var _0x43c31d = a0_0xae444c("volcano", this.spawnTime);
        if (_0x43c31d !== undefined && _0x43c31d != null) {
          this.theFrame = _0x43c31d;
          _0x48588c = this.theFrame;
        }
        var _0x590df1 = 4;
        a0_0x1306ae.fillStyle = "#8B7833";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.fillStyle = "#98803A";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          if (this.rad > 50) {
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
            a0_0x1306ae.fill();
          }
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x1e4fed:
      {
        a0_0x1306ae.save();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 0;
        var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x523294 = 6;
        var _0x4c2878 = 1.5;
        _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        var _0x590df1 = 4;
        a0_0x1306ae.fillStyle = "#8CC3C7";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.fillStyle = "#9DDADE";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, this.specType == 0 ? 8 : 4, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x61214d:
      {
        a0_0x1306ae.save();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 4;
          var _0x4c2878 = 5.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        var _0x590df1 = 4;
        a0_0x1306ae.fillStyle = a0_0x519c59;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (this.curBiome == a0_0x46c6b6) {
          a0_0x1306ae.fillStyle = "#8da0d6";
        } else {
          a0_0x1306ae.fillStyle = a0_0x10973d;
        }
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, this.specType == 0 ? 8 : 4, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x1306ae.fill();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0xc343e9:
      {
        a0_0x1306ae.save();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x48588c = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - a0_0x29202e) / 1000;
          var _0x523294 = 5;
          var _0x4c2878 = 5.5;
          _0x48588c = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        var _0x590df1 = 4;
        if (_0xb381dc) {} else {
          a0_0x1306ae.fillStyle = a0_0x5a7ca5;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x590df1 + _0x48588c), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          if (a0_0x56bbb3 != a0_0xbf9ed5) {
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
            a0_0x1306ae.fill();
            a0_0x1306ae.beginPath();
            a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
            a0_0x1306ae.fill();
          }
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x51be8a:
      {
        var _0x272982 = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          var _0x1db59c = (a0_0x24806e - a0_0x29202e) / 1000;
          var _0x523294 = 5;
          var _0x4c2878 = -8.5;
          _0x272982 = _0x4c2878 * Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c);
        }
        var _0x3c13be = 10;
        var _0x19d916 = this.x > a0_0x3acc86 / 2 ? 1 : 0;
        if (_0x19d916 == 1) {
          a0_0x1306ae.fillStyle = a0_0x5a7ca5;
          a0_0x1306ae.fillRect(-this.rectW / 2 + _0x272982, -this.rectH / 2 + _0x272982 + _0x3c13be, this.rectW - _0x272982, this.rectH - _0x272982 - _0x3c13be);
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rectW / 2 + 50, -this.rectH / 2 + 50, 70 - _0x272982, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          var _0x5a3a32 = 35;
          a0_0xe5db5c(-this.rectW / 2 + _0x5a3a32, -this.rectH / 2 + _0x5a3a32, this.rectW / 2 - _0x5a3a32, this.rectH / 2 - _0x5a3a32, this.x, this.y);
        } else {
          a0_0x1306ae.fillStyle = a0_0x5a7ca5;
          _0x272982 *= -1;
          a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2 - _0x272982 + _0x3c13be, this.rectW + _0x272982, this.rectH + _0x272982 - _0x3c13be);
          var _0x5a3a32 = 25;
          a0_0xe5db5c(-this.rectW / 2 + _0x5a3a32, -this.rectH / 2 + _0x5a3a32, this.rectW / 2 - _0x5a3a32, this.rectH / 2 - _0x5a3a32, this.x, this.y);
        }
      }
      break;
    case a0_0x1cdaba:
      {
        a0_0x1306ae.fillStyle = a0_0x519c59;
        var _0x237d50 = -this.rectW / 2;
        var _0x516b69 = this.rectW / 2;
        var _0x1c1720 = -this.rectH / 2;
        var _0x3b5e42 = this.rectH / 2;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.moveTo(_0x237d50, _0x1c1720);
        var _0x24b78f = 30;
        var _0x5b765d = [-15, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
        var _0xce6d1f = 45;
        var _0x528191 = 0;
        var _0x3cb405 = a0_0x3acc86 - this.x;
        var _0x441531 = 0 - this.x;
        var _0x5c6300 = a0_0x9b6712 - this.y;
        var _0x2ba154 = 0 - this.y;
        var _0x2eeeb4;
        var _0x962186 = _0x237d50 - _0x24b78f;
        for (_0x2eeeb4 = _0x1c1720; _0x2eeeb4 < _0x3b5e42; _0x2eeeb4 += _0xce6d1f) {
          a0_0x1306ae.lineTo(Math.min(_0x3cb405, Math.max(_0x441531, _0x962186 + _0x5b765d[_0x528191])), _0x2eeeb4);
          _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
        }
        a0_0x1306ae.lineTo(_0x237d50, _0x3b5e42);
        _0x2eeeb4 = _0x3b5e42 + _0x24b78f;
        for (_0x962186 = _0x237d50; _0x962186 < _0x516b69; _0x962186 += _0xce6d1f) {
          a0_0x1306ae.lineTo(_0x962186, Math.min(_0x5c6300, Math.max(_0x2ba154, _0x2eeeb4 + _0x5b765d[_0x528191])));
          _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
        }
        a0_0x1306ae.lineTo(_0x516b69, _0x3b5e42);
        _0x962186 = _0x516b69 + _0x24b78f;
        for (_0x2eeeb4 = _0x3b5e42; _0x2eeeb4 > _0x1c1720; _0x2eeeb4 -= _0xce6d1f) {
          a0_0x1306ae.lineTo(Math.min(_0x3cb405, Math.max(_0x441531, _0x962186 + _0x5b765d[_0x528191])), _0x2eeeb4);
          _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
        }
        a0_0x1306ae.lineTo(_0x516b69, _0x1c1720);
        _0x2eeeb4 = _0x1c1720 - _0x24b78f;
        for (_0x962186 = _0x516b69; _0x962186 > _0x237d50; _0x962186 -= _0xce6d1f) {
          a0_0x1306ae.lineTo(_0x962186, Math.min(_0x5c6300, Math.max(_0x2ba154, _0x2eeeb4 + _0x5b765d[_0x528191])));
          _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
        }
        a0_0x1306ae.closePath();
        a0_0x1306ae.fill();
      }
      break;
    case a0_0x1f3985:
      {
        var _0x26dc1d = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.fillStyle = a0_0x4f596c;
        a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x5a3a32 = 35;
        a0_0xe5db5c(-this.rectW / 2 + _0x5a3a32, -this.rectH / 2 + _0x5a3a32, this.rectW / 2 - _0x5a3a32, this.rectH / 2 - _0x5a3a32, this.x, this.y);
        var _0x2ab9a8 = 15;
        {
          a0_0x1306ae.fillStyle = a0_0x4f596c;
          var _0x237d50 = -this.rectW / 2;
          var _0x516b69 = this.rectW / 2;
          var _0x1c1720 = -this.rectH / 2 + 3;
          var _0x3b5e42 = -this.rectH / 2 - _0x2ab9a8;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.moveTo(_0x237d50, _0x1c1720);
          var _0x24b78f = 0;
          var _0x5b765d = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
          var _0xce6d1f = 60;
          var _0x528191 = 0;
          var _0x3cb405 = a0_0x3acc86 - this.x;
          var _0x441531 = 0 - this.x;
          var _0x5c6300 = a0_0x9b6712 - this.y;
          var _0x2ba154 = 0 - this.y;
          var _0x2eeeb4;
          var _0x962186 = _0x237d50 - _0x24b78f;
          a0_0x1306ae.lineTo(_0x237d50, _0x3b5e42);
          _0x2eeeb4 = _0x3b5e42 + _0x24b78f;
          for (_0x962186 = _0x237d50; _0x962186 < _0x516b69; _0x962186 += _0xce6d1f) {
            a0_0x1306ae.lineTo(_0x962186, Math.min(_0x5c6300, Math.max(_0x2ba154, _0x2eeeb4 + _0x5b765d[_0x528191])));
            _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
          }
          a0_0x1306ae.lineTo(_0x516b69, _0x3b5e42);
          a0_0x1306ae.lineTo(_0x516b69, _0x1c1720);
          a0_0x1306ae.closePath();
          a0_0x1306ae.fill();
        }
      }
      break;
    case a0_0x4b64fc:
      {
        var _0x26dc1d = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.fillStyle = "#ececec";
        a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x237d50 = -this.rectW / 2;
        var _0x516b69 = this.rectW / 2;
        var _0x1c1720 = this.rectH / 2 - 20;
        var _0x3b5e42 = this.rectH / 2;
        snowLandWidth = this.rectW;
        snowLandHeight = this.rectH;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.moveTo(_0x237d50, _0x1c1720);
        var _0x24b78f = 20;
        var _0x5b765d = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
        var _0xce6d1f = 60;
        var _0x528191 = 0;
        var _0x3cb405 = a0_0x3acc86 - this.x;
        var _0x441531 = 0 - this.x;
        var _0x5c6300 = a0_0x9b6712 - this.y;
        var _0x2ba154 = 0 - this.y;
        var _0x2eeeb4;
        var _0x962186 = _0x237d50 - _0x24b78f;
        a0_0x1306ae.lineTo(_0x237d50, _0x3b5e42);
        _0x2eeeb4 = _0x3b5e42 + _0x24b78f;
        for (_0x962186 = _0x237d50; _0x962186 < _0x516b69; _0x962186 += _0xce6d1f) {
          a0_0x1306ae.lineTo(_0x962186, Math.min(_0x5c6300, Math.max(_0x2ba154, _0x2eeeb4 + _0x5b765d[_0x528191])));
          _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
        }
        a0_0x1306ae.lineTo(_0x516b69, _0x3b5e42);
        a0_0x1306ae.lineTo(_0x516b69, _0x1c1720);
        a0_0x1306ae.closePath();
        a0_0x1306ae.fill();
        var _0x5a3a32 = 20;
        a0_0xe5db5c(-this.rectW / 2 + _0x5a3a32, -this.rectH / 2 + _0x5a3a32, this.rectW / 2 - _0x5a3a32, this.rectH / 2 - _0x5a3a32, this.x, this.y);
      }
      break;
    case a0_0x393078:
      {
        var _0x26dc1d = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.fillStyle = a0_0x10973d;
        a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x2ab9a8 = 15;
        {
          a0_0x1306ae.fillStyle = a0_0x10973d;
          var _0x237d50 = -this.rectW / 2;
          var _0x516b69 = this.rectW / 2;
          var _0x1c1720 = -this.rectH / 2 + 3;
          var _0x3b5e42 = -this.rectH / 2 - _0x2ab9a8;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.moveTo(_0x237d50, _0x1c1720);
          var _0x24b78f = 0;
          var _0x5b765d = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
          var _0xce6d1f = 60;
          var _0x528191 = 0;
          var _0x3cb405 = a0_0x3acc86 - this.x;
          var _0x441531 = 0 - this.x;
          var _0x5c6300 = a0_0x9b6712 - this.y;
          var _0x2ba154 = 0 - this.y;
          var _0x2eeeb4;
          var _0x962186 = _0x237d50 - _0x24b78f;
          a0_0x1306ae.lineTo(_0x237d50, _0x3b5e42);
          _0x2eeeb4 = _0x3b5e42 + _0x24b78f;
          for (_0x962186 = _0x237d50; _0x962186 < _0x516b69; _0x962186 += _0xce6d1f) {
            a0_0x1306ae.lineTo(_0x962186, Math.min(_0x5c6300, Math.max(_0x2ba154, _0x2eeeb4 + _0x5b765d[_0x528191])));
            _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
          }
          a0_0x1306ae.lineTo(_0x516b69, _0x3b5e42);
          a0_0x1306ae.lineTo(_0x516b69, _0x1c1720);
          a0_0x1306ae.closePath();
          a0_0x1306ae.fill();
        }
        {
          a0_0x1306ae.fillStyle = a0_0x10973d;
          var _0x237d50 = -this.rectW / 2;
          var _0x516b69 = this.rectW / 2;
          var _0x1c1720 = this.rectH / 2 - 3;
          var _0x3b5e42 = this.rectH / 2 + _0x2ab9a8;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.moveTo(_0x237d50, _0x1c1720);
          var _0x24b78f = 0;
          var _0x5b765d = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
          var _0xce6d1f = 60;
          var _0x528191 = 0;
          var _0x3cb405 = a0_0x3acc86 - this.x;
          var _0x441531 = 0 - this.x;
          var _0x5c6300 = a0_0x9b6712 - this.y;
          var _0x2ba154 = 0 - this.y;
          var _0x2eeeb4;
          var _0x962186 = _0x237d50 - _0x24b78f;
          a0_0x1306ae.lineTo(_0x237d50, _0x3b5e42);
          _0x2eeeb4 = _0x3b5e42 + _0x24b78f;
          for (_0x962186 = _0x237d50; _0x962186 < _0x516b69; _0x962186 += _0xce6d1f) {
            a0_0x1306ae.lineTo(_0x962186, Math.min(_0x5c6300, Math.max(_0x2ba154, _0x2eeeb4 + _0x5b765d[_0x528191])));
            _0x528191 = (_0x528191 + 1) % _0x5b765d.length;
          }
          a0_0x1306ae.lineTo(_0x516b69, _0x3b5e42);
          a0_0x1306ae.lineTo(_0x516b69, _0x1c1720);
          a0_0x1306ae.closePath();
          a0_0x1306ae.fill();
        }
        var _0x5a3a32 = 20;
        var _0x235773 = this.getSkinImageObj("img/riverCurrent" + this.riverSpecT + ".png");
        if (_0x235773) {
          var _0x37bcb6 = -this.rectW / 2;
          var _0x8f4a47 = 100;
          var _0x1f8ed8 = 120;
          for (i = 0; i < 40; i++) {
            var _0x25db4a = this.riverFlowSpeedX * (_0x8f4a47 / _0x1f8ed8) * 1000;
            var _0x433fa4 = (a0_0x24806e - this.spawnTime) % _0x25db4a / _0x25db4a;
            var _0x224861 = _0x8f4a47;
            var _0x4757bb = _0x37bcb6 + _0x224861 * _0x433fa4;
            a0_0x1306ae.drawImage(_0x235773, _0x4757bb, -this.rectH / 2, _0x8f4a47, this.rectH);
            _0x37bcb6 += _0x8f4a47;
          }
        }
      }
      break;
    case a0_0x520579:
      {
        a0_0x1306ae.fillStyle = a0_0x2751ed;
        a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
        var _0x5a3a32 = 45;
        a0_0xe5db5c(-this.rectW / 2 + _0x5a3a32, -this.rectH / 2 + _0x5a3a32, this.rectW / 2 - _0x5a3a32, this.rectH / 2 - _0x5a3a32, this.x, this.y);
      }
      break;
    case a0_0x30cd21:
      {
        var _0x4e2cf6 = this.curBiome == a0_0x44697a ? a0_0x18e207 : a0_0x2a9566;
        if (_0xb381dc) {
          a0_0x50fd5c(0, 0, this.rad, this.getOutlineColor());
        } else {
          a0_0x50fd5c(0, 0, this.rad - 1.5, _0x4e2cf6);
        }
      }
      break;
    case a0_0x4f2b01:
      {
        if (_0xb381dc) {
          a0_0x1306ae.fillStyle = a0_0x519c59;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad), 0, Math.PI * 2);
          a0_0x1306ae.fill();
        } else {
          a0_0x1306ae.fillStyle = "#E4D04C";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-5 + this.rPer * 10, -5 + this.rPer * 10, this.rad * 0.8, 0, Math.PI * 2);
          a0_0x1306ae.fill();
        }
      }
      break;
    case a0_0x5dc060:
      var _0x48588c = 0;
      var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
      var _0xcb2e28 = a0_0x423a9f(_0x1db59c, 1, 5, 2);
      var _0xa75127 = a0_0x423a9f(_0x1db59c, 1, 0.2, 2);
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.5;
      a0_0x50fd5c(0, 0, this.rad, a0_0xcf4b9b);
      var _0x5218ef = -(-0.2 + _0xcb2e28) * a0_0x873ec7(90);
      a0_0x1306ae.save();
      a0_0x1306ae.scale(1, 1 + _0xa75127);
      a0_0x1306ae.globalAlpha = 0.3;
      a0_0x1306ae.rotate(_0x5218ef);
      a0_0x50fd5c(0, 0, this.rad - _0xcb2e28, "#de9d23");
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      a0_0x1306ae.scale(1 + _0xa75127, 1);
      a0_0x1306ae.globalAlpha = 0.1;
      a0_0x1306ae.rotate(_0x5218ef);
      a0_0x50fd5c(0, 0, this.rad * 0.9 - _0xcb2e28, "yellow");
      a0_0x1306ae.restore();
      if (this.specType == 1) {
        a0_0x1306ae.globalAlpha = 0.5;
        a0_0x50fd5c(0, 0, this.rad, "white");
      }
      a0_0x1306ae.restore();
      break;
    case a0_0x5b8e04:
      var _0x48588c = 0;
      var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
      var _0xcb2e28 = a0_0x423a9f(_0x1db59c, 1, 5, 2);
      var _0xa75127 = a0_0x423a9f(_0x1db59c, 1, 0.2, 2);
      a0_0x1306ae.globalAlpha = 0.5;
      a0_0x50fd5c(0, 0, this.rad, a0_0x41d6b3);
      var _0x5218ef = -(-0.2 + _0xcb2e28) * a0_0x5c63e1;
      a0_0x1306ae.save();
      a0_0x1306ae.scale(1, 1 + _0xa75127);
      a0_0x1306ae.globalAlpha = 0.3;
      a0_0x1306ae.rotate(_0x5218ef);
      a0_0x50fd5c(0, 0, this.rad - _0xcb2e28, "#2CAAC4");
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      a0_0x1306ae.scale(1 + _0xa75127, 1);
      a0_0x1306ae.globalAlpha = 0.1;
      a0_0x1306ae.rotate(_0x5218ef);
      a0_0x50fd5c(0, 0, this.rad * 0.9 - _0xcb2e28, "white");
      a0_0x1306ae.restore();
      break;
    case a0_0x3ab097:
      {
        var _0x4a5a27 = this.curBiome == a0_0x46c6b6 ? "#8fa4e0" : a0_0x41d6b3;
        if (this.specType == 1 && a0_0x3bddc6 == a0_0x5650e3) {
          a0_0x1306ae.save();
          a0_0x50fd5c(0, 0, this.rad, a0_0x5aeb79);
          a0_0x1306ae.restore();
          a0_0x1306ae.save();
          var _0x590df1 = 1.5;
          a0_0x50fd5c(0, 0, Math.max(0, this.rad - _0x590df1), _0x4a5a27);
          a0_0x1306ae.restore();
        } else {
          this.drawOutlinedCircle("", _0x4a5a27);
        }
      }
      break;
    case a0_0x5c347e:
    case a0_0x9b25b8:
      {
        var _0x235773 = this.getSkinImageObj("img/snowball.png");
        if (_0x235773) {
          var _0x484c6e = this.rad;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x235773, -_0x484c6e, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
        } else {
          this.drawOutlinedCircle("", "white");
        }
      }
      break;
    case a0_0x49afaf:
      {}
      break;
    case a0_0x3f9740:
      {
        a0_0x1306ae.save();
        a0_0x50fd5c(0, 0, this.rad, !this.isEdibleOutlined() ? a0_0x4e8ba0(this.curBiome) : a0_0x52f121);
        a0_0x50fd5c(0, 0, Math.max(0, this.rad - 2), a0_0x41d6b3);
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        var _0x523294 = 1.2;
        var _0xdb9da9 = 0.3;
        var _0x417be7 = 0.7;
        var _0x4ed545 = (_0x417be7 - _0xdb9da9) * 0.5;
        a0_0x1306ae.globalAlpha *= _0xdb9da9 + _0x4ed545 + _0x4ed545 * Math.sin(Math.PI * 2 / _0x523294 * ((a0_0x24806e - this.spawnTime) / 1000));
        a0_0x1306ae.globalAlpha *= this.effA_poison;
        var _0x2c3b54 = 2.6;
        a0_0x50fd5c(0, 0, this.rad + _0x2c3b54, "#7FF600");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x139d19:
      {
        a0_0x1306ae.save();
        var _0x5b921a = this.speciesType;
        if (this.speciesType == 200) {
          _0x5b921a = _0x5b921a + "/" + this.speciesSubType;
        }
        var _0xd4f51d = "skins/volcano/phoenix/" + _0x5b921a + "/firetornado.png";
        var _0x543cf9 = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 200 ? 1 : this.mopeSeasonID;
        var _0x1e7753 = this.getSkinImageObjForSeason(_0xd4f51d, _0x543cf9);
        if (_0x1e7753) {
          var _0x484c6e = this.rad;
          var _0x23c62e = 1;
          var _0x366587 = 1000 / _0x23c62e;
          var _0x433fa4 = (a0_0x24806e - this.spawnTime) % _0x366587 / _0x366587;
          var _0x4ca88a = _0x433fa4 * 2 * Math.PI;
          var _0x23c62e = 30 / 60;
          var _0x366587 = 1000 / _0x23c62e;
          var _0x433fa4 = (a0_0x24806e - this.spawnTime) % _0x366587 / _0x366587;
          var _0x3f2343 = _0x433fa4 * 2 * Math.PI;
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(_0x4ca88a);
          var _0x1f7aec = a0_0x1306ae.globalAlpha;
          a0_0x1306ae.globalAlpha = _0x1f7aec * 1;
          var _0x1db59c = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x523294 = 2.2;
          var _0x25dd75 = Math.cos(Math.PI * 2 / _0x523294 * _0x1db59c) * 6.5;
          var _0x331c79 = Math.sin(Math.PI * 2 / _0x523294 * _0x1db59c) * 6.5;
          a0_0x1306ae.globalAlpha = 1;
          a0_0x1306ae.drawImage(_0x1e7753, -_0x484c6e - _0x25dd75 / 2.2, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(_0x3f2343);
          a0_0x1306ae.drawImage(_0x1e7753, -_0x484c6e - _0x25dd75 / 2.2, -_0x484c6e, _0x484c6e * 2, _0x484c6e * 2);
          a0_0x1306ae.restore();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x588c89:
      {
        var _0x523294 = 1;
        var _0xdb9da9 = 0.15;
        var _0x417be7 = 0.8;
        var _0x4ed545 = (_0x417be7 - _0xdb9da9) * 0.5;
        var _0x5b34a0 = _0xdb9da9 + _0x4ed545 + _0x4ed545 * Math.sin(Math.PI * 2 / _0x523294 * (a0_0x24806e / 1000));
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha *= _0x5b34a0;
        a0_0x50fd5c(0, 0, Math.max(0, this.rad), "#F6EA65");
        a0_0x1306ae.restore();
        var _0x523294 = 1;
        var _0xdb9da9 = 0.85;
        var _0x417be7 = 1;
        var _0x4ed545 = (_0x417be7 - _0xdb9da9) * 0.5;
        var _0x53e8fd = _0xdb9da9 + _0x4ed545 + _0x4ed545 * Math.sin(Math.PI * 2 / _0x523294 * (a0_0x24806e / 1000));
        var _0x509b31 = Math.trunc(a0_0x24806e / 300) % 2;
        var _0x543cf9 = this.animalType === 14 && (this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 3 || this.speciesType === 100 || this.speciesType === 200 || this.speciesType === 201 || this.speciesType === 204 || this.speciesType === 1001 || this.speciesType === 69420) ? 1 : this.mopeSeasonID;
        var _0x235773 = this.getSkinImageObjForSeason(_0x509b31 == 1 ? "img/fire.png" : "img/fire2.png", _0x543cf9);
        if (_0x235773) {
          var _0x5287c5 = 0;
          var _0x297c3d = this.rad * 0.3;
          var _0x80021c = this.rad * 2 * (2 + _0x53e8fd * 2) / 3;
          var _0x183320 = this.rad * 2 * _0x53e8fd;
          var _0x27d4cf = 0.5;
          var _0x304861 = 0.95;
          a0_0x1306ae.save();
          if (_0x235773) {
            a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x53e8fd;
            a0_0x1306ae.drawImage(_0x235773, _0x5287c5 + _0x80021c * -_0x27d4cf, _0x297c3d + _0x183320 * -_0x304861, _0x80021c, _0x183320);
          }
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x24738f:
      {}
      break;
    default:
      {
        if (this.isRectangle) {
          a0_0x1306ae.fillStyle = "black";
          a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
          this.drawOutlinedCircle("(make this rect obj invisible on server?)" + this.oType, "black");
        } else {
          this.drawOutlinedCircle("(make this obj invisible on server?)" + this.oType, "black");
        }
      }
      break;
  }
};
a0_0x42171b.prototype.beforeCustomDraw = function () {};
a0_0x42171b.prototype.afterCustomDraw = function () {};
a0_0x42171b.prototype.drawImage = function (_0x15a97a, _0x40c755, _0x1f0d5f, _0xb4cbad, _0x1b8a82, _0x53bb00) {
  if (_0x53bb00 !== undefined) {
    a0_0x1306ae.rotate(_0x53bb00);
  }
  a0_0x1306ae.drawImage(_0x15a97a, _0x40c755, _0x1f0d5f, _0xb4cbad, _0x1b8a82);
};
a0_0x42171b.prototype.drawTranslate = function () {
  a0_0x1306ae.translate(this.x, this.y);
};
a0_0x42171b.prototype.drawScaleEffect = function () {
  if (!a0_0x59c93b && this.showScaleEffectToPlayer()) {
    if (this.doesDrawEffectScale && a0_0x56bbb3 != a0_0xbf9ed5) {
      var _0x3fed09 = 0;
      var _0x357045 = a0_0x24806e - this.spawnTime;
      if (a0_0x1dd0d0) {
        _0x3fed09 = a0_0x325bbc.objects[_0x357045 % a0_0x325bbc.objects.length];
        if (this.drawEffectScale_Slow) {
          _0x3fed09 = a0_0x325bbc.objects_slow[_0x357045 % a0_0x325bbc.objects_slow.length];
        }
      } else {
        var _0x1794a5 = 1.5;
        var _0x42bf44 = 0.1;
        if (this.drawEffectScale_Slow) {
          _0x1794a5 = 2.5;
          _0x42bf44 = 0.04;
        }
        _0x3fed09 = _0x42bf44 * Math.sin(Math.PI * 2 / _0x1794a5 * (_0x357045 / 1000));
      }
      a0_0x1306ae.scale(1 + _0x3fed09, 1 + _0x3fed09 / 2);
    }
  }
};
a0_0x42171b.prototype.setSkinPath = function () {
  var _0x40b61d = this.isEdibleOutlined() ? "e" : this.oType;
  _0x40b61d = this.getBiomeSkin(_0x40b61d);
  _0x40b61d = "gameobj/" + this.oType + this.getObjSpecies() + "/" + _0x40b61d + ".png";
  this.objSkinPath = _0x40b61d;
};
a0_0x42171b.prototype.draw = function (_0x11e69b) {
  this.moveUpdF = this.moveUpdate();
  if (this.objSkinPath == null) {
    this.setSkinPath();
  }
  this.beforeCustomDraw();
  a0_0x1306ae.save();
  this.drawTranslate();
  this.drawScaleEffect();
  var _0x430a19 = this.getOutlineColor();
  var _0x3122ad = 2;
  if (this.dead) {
    a0_0x1306ae.globalAlpha *= 1 - this.moveUpdF;
  } else {
    a0_0x1306ae.globalAlpha *= Math.min(1, (a0_0x24806e - this.spawnTime) / (a0_0x26bfcb * 1000));
  }
  this.customDraw(_0x11e69b);
  if (this.flag_hurt) {
    this.onHurt();
  }
  this.drawHealthBar();
  a0_0x1306ae.restore();
  this.afterCustomDraw();
};
a0_0x42171b.prototype.onHurt = function () {
  a0_0x1306ae.fillStyle = "rgba(255,0,0,0.3)";
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, Math.max(0, this.rad), 0, Math.PI * 2);
  a0_0x1306ae.fill();
};
a0_0x42171b.prototype.drawHealthBar = function () {
  a0_0x1306ae.save();
  var _0x1c382c = a0_0x24806e < this.hpBarTimeoutT ? 1 : 0;
  this.hpBarA += (_0x1c382c - this.hpBarA) * 0.04;
  if (this.hpBarA > 0.001) {
    this.hpPer += (this.hpPer_n - this.hpPer) * 0.1;
    var _0x3d6c05 = Math.max(1, this.rad / 25);
    var _0x164279 = _0x3d6c05 * 20;
    var _0x2b37bf = _0x3d6c05 * 5;
    var _0x1ff63f = 0;
    var _0x5caa3a = -this.rad - _0x3d6c05 * 10;
    a0_0x1306ae.globalAlpha *= this.hpBarA;
    a0_0x1306ae.fillStyle = "rgba(0,0,0,0.35)";
    a0_0x1306ae.fillRect(_0x1ff63f - _0x164279 / 2, _0x5caa3a - _0x2b37bf / 2, _0x164279, _0x2b37bf);
    a0_0x1306ae.fillStyle = "#16D729";
    a0_0x1306ae.fillRect(_0x1ff63f - _0x164279 / 2, _0x5caa3a - _0x2b37bf / 2, _0x164279 * (this.hpPer / 100), _0x2b37bf);
  }
  a0_0x1306ae.restore();
  this.drawInfectionBar();
};
var a0_0x3b5a42 = 5;
a0_0x42171b.prototype.drawInfectionBar = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0x1fb38b = a0_0x24806e < this.infectionBarTimeoutT ? 1 : 0;
  this.infectionBarA += (_0x1fb38b - this.infectionBarA) * 0.04;
  if (this.infectionBarA > 0.001) {
    this.infectionPer += (this.infectionPer_n - this.infectionPer) * 0.1;
    this.drawBar("red", this.infectionBarA, this.infectionPer, 2, 6.5);
  }
};
a0_0x42171b.prototype.drawBar = function (_0x2bec00, _0x4a88a2, _0x435653, _0x42640a, _0x4540ea) {
  a0_0x1306ae.save();
  var _0x396a3f = Math.max(1, this.rad / 25);
  var _0x3ca4f0 = _0x396a3f * 20;
  barH = _0x42640a * _0x396a3f;
  var _0x5282da = 0;
  var _0x3a5140 = -this.rad - _0x4540ea * _0x396a3f;
  a0_0x1306ae.globalAlpha = 0.3;
  a0_0x1306ae.fillStyle = "rgba(0,0,0,0.35)";
  a0_0x1306ae.fillRect(_0x5282da - _0x3ca4f0 / 2, _0x3a5140 - barH / 2, _0x3ca4f0, barH);
  a0_0x1306ae.globalAlpha = _0x4a88a2;
  a0_0x1306ae.fillStyle = _0x2bec00;
  a0_0x1306ae.fillRect(_0x5282da - _0x3ca4f0 / 2, _0x3a5140 - barH / 2, _0x3ca4f0 * (_0x435653 / 100), barH);
  a0_0x1306ae.restore();
};
a0_0x42171b.prototype.drawChat = function () {
  if (this.chatLines.length < 1) {
    return;
  }
  a0_0x1306ae.save();
  a0_0x1306ae.font = "10px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  var _0x68a44a = this.hpBarA > 0.01 ? -10 : 0;
  var _0x48bef8 = [];
  for (var _0xfbb318 = this.chatLines.length - 1; _0xfbb318 >= 0; _0xfbb318--) {
    var _0x46f6a9 = this.chatLines[_0xfbb318];
    if (!a0_0x3c96dc && _0x46f6a9.chatTxt.indexOf("#koa:") > -1) {
      continue;
    }
    var _0x2223b1 = (this.chatLines.length - 1 - _0xfbb318) * -13 + _0x68a44a;
    var _0x4b4fee = a0_0x24806e > _0x46f6a9.chatFadeT ? 0 : 1;
    _0x46f6a9.chatA += (_0x4b4fee - _0x46f6a9.chatA) * 0.1;
    a0_0x1306ae.shadowOffsetX = 0;
    a0_0x1306ae.shadowOffsetY = 0;
    if (_0x46f6a9.chatA < 0.02) {
      if (_0x4b4fee < 0.02) {
        _0x46f6a9.chatTxt = "";
      }
      _0x48bef8.push(_0xfbb318);
      continue;
    }
    var _0x4eea39 = a0_0x1306ae.measureText(_0x46f6a9.chatTxt).width;
    var _0x252483 = 10;
    var _0x5128f5 = 1;
    var _0x1a2f26 = 1;
    a0_0x1306ae.globalAlpha = _0x46f6a9.chatA * 0.8;
    a0_0x1306ae.fillStyle = a0_0x4e8ba0(this.curBiome);
    a0_0x1306ae.fillRect(this.x - _0x5128f5 - _0x4eea39 / 2, _0x2223b1 + this.y - this.rad - 10 - _0x252483 / 2 - _0x1a2f26, _0x4eea39 + _0x5128f5 * 2, _0x252483 + _0x1a2f26 * 2);
    a0_0x1306ae.fillStyle = "#F1C34C";
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      a0_0x1306ae.shadowOffsetX = 1;
      a0_0x1306ae.shadowOffsetY = 1;
      a0_0x1306ae.shadowColor = "black";
    }
    a0_0x1306ae.globalAlpha = _0x46f6a9.chatA;
    a0_0x1306ae.fillText(_0x46f6a9.chatTxt, this.x, _0x2223b1 + this.y - this.rad - 10);
  }
  for (var _0xfbb318 = 0; _0xfbb318 < _0x48bef8.length; _0xfbb318++) {
    this.chatLines.splice(_0x48bef8[_0xfbb318], 1);
  }
  a0_0x1306ae.restore();
};
a0_0x42171b.prototype.getOutlineColor = function () {
  if (this.alwaysPlainOutline) {
    return a0_0x59eaa4;
  }
  if (this.isEdibleOutlined()) {
    return a0_0x52f121;
  }
  if (this.oType == a0_0x24738f && a0_0x2a6a35[this.animalType - 1] > 0 && this.id != a0_0x15e4d1) {
    return a0_0x1838b8;
  }
  var _0x1c98e9 = this.curBiome;
  if (this.flag_inWater) {
    _0x1c98e9 = a0_0x5986dd;
  } else if (this.flag_inLava) {
    return "#c64a00";
  }
  return a0_0x4e8ba0(_0x1c98e9);
};
a0_0x42171b.prototype.isEdibleOutlined = function () {
  if (this.oType == a0_0x24738f) {
    return a0_0x1823b0[this.animalType - 1] > 0 && this.id != a0_0x15e4d1;
  } else {
    return a0_0xfab2c7[this.oType - 1] > 0;
  }
};
a0_0x42171b.prototype.gotChat = function (_0xdf3478) {
  if (this.chatLines) {
    this.chatLines.push({
      chatTxt: _0xdf3478,
      chatFadeT: a0_0x24806e + 4000,
      chatA: 0
    });
    if (this.chatLines.length > 5) {
      this.chatLines.splice(this.chatLines.length - 1, 1);
    }
  }
};
a0_0x42171b.prototype.drawOutlinedCircle = function (_0x3e4fb8, _0x30df94) {
  var _0x53aa18 = this.getOutlineColor();
  var _0x38c0f1 = 1.5;
  if (a0_0x56bbb3 != a0_0xbf9ed5 || _0x53aa18 != a0_0x59eaa4) {
    a0_0x50fd5c(0, 0, this.rad, _0x53aa18);
  }
  a0_0x50fd5c(0, 0, Math.max(0, this.rad - _0x38c0f1), _0x30df94);
  if (_0x3e4fb8 && _0x3e4fb8.length > 0) {
    a0_0x1306ae.save();
    a0_0x1306ae.fillStyle = "black";
    a0_0x1306ae.fillText(_0x3e4fb8, -this.rad / 2, 0);
    a0_0x1306ae.restore();
  }
};
a0_0x42171b.prototype.drawOutlinedCircleRad = function (_0xf0d3d1, _0x2a7bfc, _0x627ddc) {
  var _0x51d001 = this.getOutlineColor();
  var _0x3839da = 1.5;
  if (a0_0x56bbb3 != a0_0xbf9ed5 || _0x51d001 != a0_0x59eaa4) {
    a0_0x50fd5c(0, 0, _0x627ddc, _0x51d001);
  }
  a0_0x50fd5c(0, 0, Math.max(0, _0x627ddc - _0x3839da), _0x2a7bfc);
};
a0_0x42171b.prototype.onLerpUpdate = function (_0x348e20) {};
a0_0x42171b.prototype.moveUpdate = function () {
  var _0x3bfeda = (a0_0x24806e - this.updateTime) / 1000 / a0_0x26bfcb;
  _0x3bfeda = _0x3bfeda < 0 ? 0 : _0x3bfeda > 1 ? 1 : _0x3bfeda;
  if ((this.dead || !this.drawMe) && _0x3bfeda >= 1) {
    a0_0x25de50.push(this);
  }
  this.onLerpUpdate(_0x3bfeda);
  this.x = _0x3bfeda * (this.nx - this.ox) + this.ox;
  this.y = _0x3bfeda * (this.ny - this.oy) + this.oy;
  this.rad += (this.nRad - this.rad) * 0.1;
  if (this.angle != undefined) {
    this.lerpAngle(_0x3bfeda);
  }
  return Math.min(1, _0x3bfeda);
};
a0_0x42171b.prototype.lerpAngle = function () {
  let _0x29ebb6 = (a0_0x24806e - a0_0x381abd) / 1000;
  let _0x3edc9f = Math.min(_0x29ebb6 / (a0_0x27d3af / 1000), 12);
  var _0x1b465f = this.angleDelta * 0.1 * _0x3edc9f;
  this.angleDelta -= _0x1b465f;
  this.angle += _0x1b465f;
};
a0_0x42171b.prototype.readCustomData_onUpdate = function (_0x364aa6) {};
a0_0x42171b.prototype.readCustomData_onNewlyVisible = function (_0x4219cd) {
  if (this.oType == a0_0x55cfa8 || this.oType == a0_0x226c22 || this.oType == a0_0x74644c) {
    this.innerRad = _0x4219cd.readUInt16() / 4;
  }
};
a0_0x42171b.prototype.setObjTypes = function (_0x1f0b96, _0x17fddd) {
  this.oType = _0x1f0b96;
};
a0_0x42171b.prototype.clientBatchDraw = false;
a0_0x42171b.prototype.clientBatchDrawID = false;
a0_0x42171b.prototype.worldUpd_readMsgNewlyVisible = function (_0x1d4943, _0x487fe4, _0x3c81e8) {
  this.setObjTypes(_0x487fe4, _0x3c81e8);
  var _0x2d70dd = _0x1d4943.readUInt32();
  var _0x2f0c41 = _0x1d4943.readUInt32() / 4;
  var _0x5a8706 = _0x1d4943.readUInt16() / 4;
  var _0x1358c = _0x1d4943.readUInt16() / 4;
  this.id = _0x2d70dd;
  this.ox = this.x = this.nx = _0x5a8706;
  this.oy = this.y = this.ny = _0x1358c;
  this.nRad = _0x2f0c41;
  this.oRad = this.rad = 0;
  if (_0x487fe4 == a0_0x3ec0e2 || _0x487fe4 == a0_0x3bf767 || _0x487fe4 == a0_0x4b7def || _0x487fe4 == a0_0x1e4fed || _0x487fe4 == a0_0x61214d || _0x487fe4 == a0_0x382193 || _0x487fe4 == a0_0xf1b509 || _0x487fe4 == a0_0x30cd21 || _0x487fe4 == a0_0x4c3cae || _0x487fe4 == a0_0x4f2b01) {
    this.animateRadOnSpawn = false;
  }
  if (!this.animateRadOnSpawn) {
    this.oRad = this.rad = _0x2f0c41;
  }
  var _0x1c02c2 = _0x1d4943.readUInt8();
  this.curBiome = _0x1c02c2;
  if (this.oType != a0_0x24738f) {
    this.mopeSeasonID = _0x1d4943.readUInt8();
    this.animalType = _0x1d4943.readUInt16();
    this.speciesType = _0x1d4943.readUInt16();
    this.speciesSubType = _0x1d4943.readUInt16();
  }
  var _0x17132e = _0x1d4943.readBitGroup();
  var _0x1e3559 = _0x17132e.getBool();
  var _0x549910 = _0x17132e.getBool();
  var _0x3d0a51 = _0x17132e.getBool();
  this.clientBatchDraw = _0x17132e.getBool();
  this.objGetsAngleUpdate = _0x3d0a51;
  if (this.clientBatchDraw) {
    this.clientBatchDrawID = _0x1d4943.readUInt16();
  }
  var _0x4cd62d = null;
  if (_0x1e3559) {
    this.spawnedByID = _0x1d4943.readUInt32();
    _0x4cd62d = a0_0x283a01[this.spawnedByID];
  }
  if (_0x4cd62d) {
    this.updateTime = a0_0x24806e;
    this.nx = this.x;
    this.ny = this.y;
    this.ox = _0x4cd62d.x;
    this.oy = _0x4cd62d.y;
    this.x = _0x4cd62d.x;
    this.y = _0x4cd62d.y;
  }
  if (_0x549910) {
    this.isRectangle = true;
    this.rectW = _0x1d4943.readUInt16();
    this.rectH = _0x1d4943.readUInt16();
  } else {
    var _0x16e496 = _0x1d4943.readUInt8() * 2;
    this.updateAngle(_0x16e496);
  }
  this.readUpdatedPropertyItem(a0_0x43730c, _0x1d4943);
  this.readUpdatedPropertyItem(a0_0x158157, _0x1d4943);
  this.readCustomData_onNewlyVisible(_0x1d4943);
};
a0_0x42171b.prototype.setRadius = function (_0x52abe0) {
  this.rad = _0x52abe0;
};
a0_0x42171b.prototype.easeAngleChanges = true;
a0_0x42171b.prototype.updateAngle = function (_0x5f192e) {
  var _0x4735d2 = this.oType == a0_0x382193 ? 180 : 90;
  if (!this.easeAngleChanges) {
    this.angle = a0_0x873ec7(_0x5f192e + _0x4735d2);
  } else {
    var _0x1773f5 = a0_0x873ec7(_0x5f192e + _0x4735d2);
    this.angleDelta = a0_0x8b0c15(this.angle, _0x1773f5);
    this.oAngle = this.angle;
    if (this.firstPosUpd) {
      this.oAngle = this.angle = _0x1773f5;
      this.angleDelta = 0;
    }
  }
};
a0_0x42171b.prototype.setMovedToPos = function (_0x5db414, _0xa44659) {
  this.updateTime = a0_0x24806e;
  this.ox = this.x;
  this.oy = this.y;
  this.nx = _0x5db414;
  this.ny = _0xa44659;
};
a0_0x42171b.prototype.setNewRad = function (_0x4462dd) {
  this.oRad = this.rad;
  this.nRad = _0x4462dd;
};
a0_0x42171b.prototype.worldUpd_readMsgUpdate = function (_0x2e6662) {
  var _0x3f2744 = _0x2e6662.readBitGroup();
  this.readUpdatedFlags(_0x3f2744);
  var _0x5da2e8 = _0x2e6662.readUInt8();
  for (var _0xa01764 = 0; _0xa01764 < _0x5da2e8; _0xa01764++) {
    var _0x8f1441 = _0x2e6662.readUInt16();
    this.readUpdatedPropertyItem(_0x8f1441, _0x2e6662);
  }
  this.readCustomData_onUpdate(_0x2e6662);
  this.firstPosUpd = false;
};
a0_0x42171b.prototype.readUpdatedPropertyItem = function (_0x4d48d7, _0x5e9dea) {
  if (_0x4d48d7 == a0_0x129de7) {
    var _0x590ab3 = _0x5e9dea.readUInt16() / 4;
    var _0x3eb20f = _0x5e9dea.readUInt16() / 4;
    this.setMovedToPos(_0x590ab3, _0x3eb20f);
  } else if (_0x4d48d7 == a0_0x312600) {
    var _0x1d7b77 = _0x5e9dea.readUInt16() / 10;
    this.setNewRad(_0x1d7b77);
  } else if (_0x4d48d7 == a0_0x241262) {
    var _0x327822 = _0x5e9dea.readUInt8() * 2;
    this.updateAngle(_0x327822);
  } else if (_0x4d48d7 == a0_0x43730c) {
    this.specType = _0x5e9dea.readUInt8();
  } else if (_0x4d48d7 == a0_0x158157) {
    this.specType2 = _0x5e9dea.readUInt8();
  } else if (_0x4d48d7 == a0_0x36b8e6) {
    var _0x325a59 = _0x5e9dea.readUInt8();
    this.setHpBar(_0x325a59);
  } else if (_0x4d48d7 == a0_0x1a02ae) {
    this.curBiome = _0x5e9dea.readUInt8();
  } else if (_0x4d48d7 == a0_0x3c7e75) {
    let _0x348b40 = _0x5e9dea.readUInt8() == 1;
  } else {
    this.readUpdatedProperty(_0x4d48d7, _0x5e9dea);
  }
};
var a0_0x2d7b7f = 0;
a0_0x42171b.prototype.readUpdatedFlags = function (_0x2fc609) {
  this.flag_hurt = _0x2fc609.getBool();
  this.flag_flying = _0x2fc609.getBool();
};
a0_0x42171b.prototype.readUpdatedProperty = function (_0x36b2b8, _0x4e8f9c) {};
a0_0x42171b.prototype.setHpBar = function (_0x5b5acf) {
  this.hpPer_n = _0x5b5acf;
  this.hpBarTimeoutT = +new Date() + 3000;
};
a0_0x42171b.prototype.killerId = 0;
a0_0x42171b.prototype.worldUpd_readMsgRemovedObj = function (_0x474113) {
  var _0x4fb754 = _0x474113.readUInt8() > 0;
  this.killerId = _0x4fb754 ? _0x474113.readUInt32() : 0;
  this.removeFromTheGame();
};
a0_0x42171b.prototype.removeFromTheGame = function () {
  var _0x252aa5 = this.killerId > 0 ? a0_0x283a01[this.killerId] : undefined;
  this.dead = true;
  this.updateTime = a0_0x24806e;
  if (this.oType == a0_0x382193) {
    this.ox = this.x;
    this.oy = this.y;
    this.nx = this.x;
    this.ny = this.y;
  } else if (_0x252aa5) {
    this.ox = this.x;
    this.oy = this.y;
    this.oRad = this.rad;
    this.nx = _0x252aa5.nx;
    this.ny = _0x252aa5.ny;
    this.nRad = Math.min(this.rad, _0x252aa5.rad);
    if (a0_0x15e4d1 == this.killerId) {
      if (this.oType == a0_0x24738f) {
        if (!a0_0x2cacc6) {
          a0_0x3b0427("audio/bite.mp3", 0.05, a0_0x5dcede(0.9, 1.1));
        }
      }
      if (this.oType == a0_0x3ab097 || this.oType == a0_0x3523dd || this.oType == a0_0x5b8e04) {
        if (!a0_0x2cacc6) {
          a0_0x3b0427("audio/bloop.mp3", 0.6, a0_0x5dcede(0.9, 1.1));
        }
      } else if (!a0_0x2cacc6) {
        a0_0x3b0427("audio/nom.mp3", 0.5);
      }
    }
    this.hp_n = 0;
  } else {
    this.ox = this.x;
    this.oy = this.y;
    this.oRad = this.rad;
    this.nx = this.x;
    this.ny = this.y;
    this.nRad = 0;
  }
  this.onRemovedFromGame();
};
a0_0x42171b.prototype.updateZ = function () {
  switch (this.oType) {
    case a0_0x379ef4:
    case a0_0x4522b4:
    case a0_0x349907:
      this.z = 1000000;
      break;
    case a0_0x520579:
      this.z = -220;
      break;
    case a0_0x1f3985:
    case a0_0x4b64fc:
      this.z = -210;
      break;
    case a0_0x3bf767:
    case a0_0x3ec0e2:
      this.z = -209;
      break;
    case a0_0x393078:
      this.z = -158;
      break;
    case a0_0x2b11cc:
      this.z = -140;
      break;
    case a0_0x16ab5b:
      this.z = -151;
      break;
    case a0_0x61214d:
    case a0_0x494c53:
      this.z = -160;
      break;
    case a0_0x1cdaba:
      this.z = -297;
      break;
    case a0_0xc343e9:
      this.z = -296;
      break;
    case a0_0x51be8a:
      this.z = -157;
      break;
    case a0_0x4b7def:
      this.z = -158;
      break;
    case a0_0x1e4fed:
      this.z = -156;
      break;
    case a0_0x116605:
      this.z = -155;
      break;
    case a0_0x4f2b01:
      this.z = -154;
      break;
    case a0_0x74644c:
      this.z = -150;
      break;
    case a0_0x226c22:
      this.z = -101;
      break;
    case a0_0x55cfa8:
      this.z = -100;
      break;
    case a0_0x112493:
    case a0_0xb1af09:
      this.z = -99;
      break;
    case a0_0x95405:
    case a0_0x4c3cae:
      this.z = 1000;
      break;
    case a0_0x17fc87:
      this.z = 1002;
      break;
    case a0_0x30cd21:
      this.z = 1002;
      break;
    case a0_0x36e46a:
    case a0_0xf1b509:
      this.z = 999;
      break;
    case a0_0x49afaf:
      this.z = 1003;
      break;
    case a0_0x244bcd:
    case a0_0x50e062:
    case a0_0x16a704:
      this.z = 1002 + this.rad;
      break;
    case a0_0x5dc060:
      this.z = 100015;
      break;
    case a0_0x5b8e04:
      this.z = 100015;
      break;
    case a0_0x11ab7f:
    case a0_0x3ad19b:
      this.z = 1010 + this.rad;
      if (this.specType2 == 1) {
        this.z += 1000;
      }
      break;
    case a0_0x139d19:
      this.z = 2000 + this.rad;
      break;
    case a0_0x588c89:
    case a0_0x3f9740:
      this.z = 1006;
      break;
    case a0_0x24738f:
      break;
    default:
      this.z = this.rad;
      break;
  }
};
a0_0x42171b.prototype.updateZ_onTree = function (_0x12fa07) {
  if (this.oType == a0_0x24738f && this.flag_eff_isOnTree) {
    this.z = _0x12fa07 + 1100;
  }
};
a0_0x42171b.prototype.showScaleEffectToPlayer = function () {
  var _0x527d47 = a0_0x283a01[a0_0x15e4d1];
  if (_0x527d47 && _0x527d47.flag_inHidingHole && _0x527d47.lastHidingHoleID == this.id) {
    return false;
  }
  return true;
};
a0_0x42171b.prototype.calculateZIndex = function () {
  this.updateZ();
  if (this.oType == a0_0x24738f) {
    if (this.flag_flying) {
      this.z = 100000;
      if (this.flag_isGrabbed) {
        this.z -= this.rad;
      }
      if (this.flag_eff_aniInClaws || this.flag_usingAbility) {
        this.z += 1000;
      }
    } else if (this.flag_isInArena) {
      this.z = 1000000 + this.rad;
    } else {
      this.updateZ_onTree(this.z);
      if (this.flag_eff_invincible) {
        this.z += 1000;
      }
    }
  } else {
    this.updateZ_onTree(this.z);
  }
};
a0_0x42171b.prototype.season = 1;
a0_0x42171b.prototype.mopeSeasonID = 0;
a0_0x42171b.prototype.skinThemeID = 0;
a0_0x42171b.prototype.getSkinImageObj = function (_0x3bd624) {
  var _0xa1b24c = "./assets/s/" + this.mopeSeasonID + "/" + _0x3bd624;
  if (this.skinThemeID > 0) {
    _0xa1b24c = "./assets/t/" + this.skinThemeID + "/" + _0x3bd624;
  }
  return a0_0x19ebc9(_0xa1b24c, function (_0x325da4) {
    console.log(_0x325da4.src);
  });
};
a0_0x42171b.prototype.getSkinImageObjForSeason = function (_0x4eb107, _0x1bda36) {
  if (!_0x1bda36) {}
  var _0xada261 = "./assets/s/" + _0x1bda36 + "/" + _0x4eb107;
  if (this.skinThemeID > 0) {
    _0xada261 = "./assets/t/" + this.skinThemeID + "/" + _0x4eb107;
  }
  return a0_0x19ebc9(_0xada261, function (_0x261f2f) {});
};
a0_0x42171b.prototype.getObjImageObjForSeason = function (_0x2580ec, _0x1112b6) {
  if (!_0x1112b6) {}
  var _0x3e1bfd = "./assets/s/" + _0x1112b6 + "/" + _0x2580ec;
  return a0_0x19ebc9(_0x3e1bfd, function (_0x57a7a6) {});
};
a0_0x42171b.prototype.onRemovedFromGame = function () {};
function a0_0x42171b(_0x50efb6) {
  this.oType = _0x50efb6;
  this.rPer = a0_0x5dcede(0, 1);
  this.spawnTime = a0_0x24806e;
  this.updateTime = a0_0x24806e;
  this.firstPosUpd = true;
  this.chatLines = [];
  switch (this.oType) {
    case a0_0x385d1d:
    case a0_0x3ad19b:
    case a0_0x11248d:
    case a0_0x1d4a42:
    case a0_0x11ab7f:
    case a0_0x3ab097:
    case a0_0x588c89:
    case a0_0x3f9740:
    case a0_0x49afaf:
    case a0_0x22b74a:
    case a0_0x12a9bd:
    case a0_0x266048:
    case a0_0x55cfa8:
    case a0_0x74644c:
    case a0_0x226c22:
    case a0_0x2008b0:
    case a0_0x23edee:
    case a0_0x58cf25:
    case a0_0x5a9119:
    case a0_0x40a196:
    case a0_0x2db118:
    case a0_0x4d474f:
    case a0_0x2ec460:
    case a0_0x36fcd2:
    case a0_0xcbb879:
    case a0_0x131826:
    case a0_0x572c92:
    case a0_0x48e29b:
    case a0_0x1ce793:
    case a0_0xa51864:
    case a0_0x18e157:
    case a0_0x2424ed:
    case a0_0x95405:
    case a0_0x36e46a:
    case a0_0x17fc87:
      this.doesDrawEffectScale = true;
      break;
    default:
      break;
  }
  if (this.oType == a0_0x55cfa8 || this.oType == a0_0x226c22 || this.oType == a0_0x74644c || this.oType == a0_0x49afaf) {
    this.drawEffectScale_Slow = true;
  }
}
window.GameObj = a0_0x42171b;
var a0_0xf025e7 = a0_0x4f18b2;
var a0_0x28626c = a0_0x42171b;
a0_0xf025e7.prototype = Object.create(a0_0x28626c.prototype);
a0_0xf025e7.prototype.constructor = a0_0xf025e7;
function a0_0x4f18b2() {
  this.objs = [];
  this.updateZ = function () {
    if (this.objs.length > 0) {
      this.objs[0].updateZ();
      this.z = this.objs[0].z;
    }
  };
  this.draw = function () {
    for (var _0x28fd37 = 0; _0x28fd37 < this.objs.length; _0x28fd37++) {
      var _0x405aa8 = this.objs[_0x28fd37];
      _0x405aa8.draw(true);
    }
    for (var _0x28fd37 = 0; _0x28fd37 < this.objs.length; _0x28fd37++) {
      var _0x405aa8 = this.objs[_0x28fd37];
      _0x405aa8.draw(false);
    }
  };
  this.addBatchedObj = function (_0x159791) {
    if (this.objs.length == 0) {
      this.oType = _0x159791.oType;
      this.objs = [];
    }
    this.objs.push(_0x159791);
  };
}
window.GameObjBatchDraw = a0_0x4f18b2;
var a0_0x41cceb = 1;
var a0_0x621981 = 2;
var a0_0x31a123 = 3;
var a0_0x368012 = 4;
var a0_0x2d5af4 = 5;
var a0_0x391884 = 6;
var a0_0x5ce3eb = 7;
var a0_0x2c2f52 = 8;
var a0_0x2a0a8a = 9;
var a0_0x1458da = 10;
var a0_0x13971c = 11;
var a0_0x5812ad = 12;
var a0_0x50d9f7 = 13;
var a0_0x59b763 = 14;
var a0_0x306fa0 = 15;
var a0_0x1d6a29 = 16;
var a0_0x200e1e = 17;
var a0_0x384a46 = 18;
var a0_0x59f431 = 19;
var a0_0x4441e0 = 20;
var a0_0x4a4da1 = 21;
var a0_0x187484 = 22;
var a0_0xbd6036 = 23;
var a0_0x17dc35 = 24;
var a0_0x2b355b = 25;
var a0_0x594c30 = 26;
var a0_0x182226 = 27;
var a0_0x1efea6 = 28;
var a0_0x2f54ae = 29;
var a0_0x5f1ae8 = 30;
var a0_0x303108 = 31;
var a0_0x1c04bf = 32;
var a0_0x1e02a7 = 33;
var a0_0x4f00b9 = 34;
var a0_0xb8200c = 35;
var a0_0x56a2ab = 36;
var a0_0x8a2dda = 37;
var a0_0x4b16c6 = 38;
var a0_0x525e00 = 39;
var a0_0x17ec36 = 40;
var a0_0x90abb = 41;
var a0_0x58b076 = 42;
var a0_0x5d0d4b = 43;
var a0_0x55a097 = 44;
var a0_0x120a91 = 45;
var a0_0x332990 = 46;
var a0_0x4f58e6 = 47;
var a0_0x54926b = 48;
var a0_0x3b5853 = 49;
var a0_0x22a451 = 50;
var a0_0x52bfa4 = 51;
var a0_0x357359 = 52;
var a0_0x45db7b = 53;
var a0_0x33f8d6 = 54;
var a0_0x56479a = 55;
var a0_0xd29085 = 56;
var a0_0x35d037 = 57;
var a0_0x31c0a8 = 58;
var a0_0x18e2b3 = 59;
var a0_0x36faeb = 60;
var a0_0x487fb5 = 61;
var a0_0x40fe0d = 62;
var a0_0x5c6ee3 = 63;
var a0_0x2c361c = 64;
var a0_0x23c69e = 65;
var a0_0xff40c0 = 66;
var a0_0x5ed01e = 67;
var a0_0x1e1209 = 68;
var a0_0x20f7bd = 69;
var a0_0x5aaf14 = 70;
var a0_0x53b0d7 = 71;
var a0_0xadcba8 = 72;
var a0_0x77ab87 = 73;
var a0_0x14b677 = 74;
var a0_0x5aa20b = 75;
var a0_0x16e6c0 = 76;
var a0_0x2f2687 = 77;
var a0_0x52a8a7 = 78;
var a0_0x1b8d24 = 79;
var a0_0x4444cb = 80;
var a0_0x3889a8 = 81;
var a0_0x5a237f = 82;
var a0_0x4dbc97 = 83;
var a0_0x67458 = 84;
var a0_0xee8954 = 85;
var a0_0x4d1599 = 86;
var a0_0x3950f4 = 87;
var a0_0x1e1e1f = 88;
var a0_0x35d611 = 89;
var a0_0x299d82 = 90;
var a0_0x38e019 = 91;
var a0_0x1ad6bd = 92;
var a0_0x273412 = 93;
var a0_0x5650e3 = 94;
var a0_0x3a4899 = 95;
var a0_0x407000 = 96;
var a0_0x4db8c8 = 97;
var a0_0x533584 = 98;
var a0_0x30f1d2 = 99;
var a0_0x5d0b67 = 100;
var a0_0x187b1f = 101;
var a0_0x854d95 = 102;
var a0_0x4a912e = 103;
var a0_0x47f399 = 104;
var a0_0x18f3b8 = 105;
var a0_0x465f60 = 106;
var a0_0x51bdbb = 107;
var a0_0x3edbb5 = 108;
var a0_0x58d479 = 109;
var a0_0x34f3ec = 110;
var a0_0xc8ae84 = 111;
var a0_0x2ea98a = 112;
a_birdMonster = 122;
function a0_0x43fa42(_0x791917) {
  var _0x54c0e2 = {};
  switch (_0x791917) {
    case a0_0x120a91:
      _0x54c0e2.aniName = "Snail";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "You're a super slow snail!";
      _0x54c0e2.aniCol = "#fcc02b";
      _0x54c0e2.skinName = "snail";
      break;
    case a0_0x41cceb:
      _0x54c0e2.aniName = "Mouse";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "";
      _0x54c0e2.aniCol = "#9BA9B9";
      _0x54c0e2.skinName = "mouse";
      break;
    case a0_0x621981:
      _0x54c0e2.aniName = "Rabbit";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to RABBIT! \nPress W to burrow a hole to hide in!";
      _0x54c0e2.aniCol = "#AA937E";
      _0x54c0e2.skinName = "rabbit";
      break;
    case a0_0x31a123:
      _0x54c0e2.aniName = "Pig";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to PIG!\n Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      _0x54c0e2.aniCol = "#DD6BD4";
      _0x54c0e2.skinName = "pig";
      break;
    case a0_0x368012:
      _0x54c0e2.aniName = "Fox";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to FOX! ,\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x54c0e2.aniCol = "#FF9D43";
      _0x54c0e2.skinName = "fox";
      break;
    case a0_0x2d5af4:
      _0x54c0e2.aniName = "Deer";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to DEER! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
      _0x54c0e2.aniCol = "#C4773E";
      _0x54c0e2.skinName = "deer";
      break;
    case a0_0x391884:
      _0x54c0e2.aniName = "Mole";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to MOLE!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
      _0x54c0e2.aniCol = "#4C4A45";
      _0x54c0e2.skinName = "mole";
      break;
    case a0_0x5ce3eb:
      _0x54c0e2.aniName = "Zebra";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to ZEBRA! \nPress W to kick side ways!";
      _0x54c0e2.aniCol = "#FFFFFF";
      _0x54c0e2.skinName = "zebra";
      break;
    case a0_0x2c2f52:
      _0x54c0e2.aniName = "Lion";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to LION!\n Press W to release a mighty ROAR (Rawr!)!";
      _0x54c0e2.aniCol = "#f8c923";
      _0x54c0e2.skinName = "lion";
      break;
    case a0_0x2a0a8a:
      _0x54c0e2.aniName = "CHEETAH";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to CHEETAH!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x54c0e2.aniCol = "#CAC05B";
      _0x54c0e2.skinName = "bigcat/cheetah";
      break;
    case a0_0x1458da:
      _0x54c0e2.aniName = "Bear";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x54c0e2.aniCol = "#99591C";
      _0x54c0e2.skinName = "bear";
      break;
    case a0_0x13971c:
      _0x54c0e2.aniName = "Croc";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to CROCODILE!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
      _0x54c0e2.aniCol = "#30F51C";
      _0x54c0e2.skinName = "croc";
      break;
    case a0_0x50d9f7:
      _0x54c0e2.aniName = "Hippo";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to HIPPO!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x54c0e2.aniCol = "#945A99";
      _0x54c0e2.skinName = "hippo";
      break;
    case a0_0x5812ad:
      _0x54c0e2.aniName = "Rhino";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to RHINO!\n Press W to CHARGE with your mighty horn!";
      _0x54c0e2.aniCol = "#94a3a9";
      _0x54c0e2.skinName = "rhino";
      break;
    case a0_0x306fa0:
      _0x54c0e2.aniName = "Shrimp";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "";
      _0x54c0e2.aniCol = "#f88e37";
      _0x54c0e2.skinName = "shrimp";
      break;
    case a0_0x1d6a29:
      _0x54c0e2.aniName = "Trout";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to TROUT!\nHint: Hold Left-click to RUN! (Uses extra water)";
      _0x54c0e2.aniCol = "#ac8686";
      _0x54c0e2.skinName = "trout";
      break;
    case a0_0x200e1e:
      _0x54c0e2.aniName = "Crab";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to CRAB!\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
      _0x54c0e2.aniCol = "#bf2408";
      _0x54c0e2.skinName = "crab";
      break;
    case a0_0x384a46:
      _0x54c0e2.aniName = "Squid";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to SQUID!\n Squids can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
      _0x54c0e2.aniCol = "#40dda4";
      _0x54c0e2.skinName = "squid";
      break;
    case a0_0x59f431:
      _0x54c0e2.aniName = "Shark";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to SHARK!\n A vicious predator of the oceans!";
      _0x54c0e2.aniCol = "#999fc6";
      _0x54c0e2.skinName = "shark";
      break;
    case a0_0x187484:
      _0x54c0e2.aniName = "Sea-horse";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to SEA HORSE!\n An agile hunter!";
      _0x54c0e2.aniCol = "#73BE2F";
      _0x54c0e2.skinName = "seahorse";
      break;
    case a0_0xbd6036:
      _0x54c0e2.aniName = "Jellyfish";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to JELLYFISH!\n A slowly-turning animal that can grow quite large!";
      _0x54c0e2.aniCol = "#FDB9BA";
      _0x54c0e2.skinName = "jellyfish";
      break;
    case a0_0x4a4da1:
      _0x54c0e2.aniName = "Turtle";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to TURTLE!\n Lives well on land & water! (On land, Press W to go into your shell!)";
      _0x54c0e2.aniCol = "#502E1A";
      _0x54c0e2.skinName = "turtle";
      break;
    case a0_0x4441e0:
      _0x54c0e2.aniName = "Stingray";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to STINGRAY!\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
      _0x54c0e2.aniCol = "#164336";
      _0x54c0e2.skinName = "stingray";
      break;
    case a0_0x17dc35:
      _0x54c0e2.aniName = "The Kraken";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to THE KRAKEN!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
      _0x54c0e2.aniCol = "#64a034";
      _0x54c0e2.skinName = "kraken";
      break;
    case a0_0x2b355b:
      _0x54c0e2.aniName = "Pufferfish";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to PUFFERFISH!\n (Hold W to inflate- become spiky, and dangerous to touch!)";
      _0x54c0e2.aniCol = "#6C5C2C";
      _0x54c0e2.skinName = "pufferfish";
      break;
    case a0_0x594c30:
      _0x54c0e2.aniName = "Killer Whale";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Killer Whale! \nWhales blow out water when diving! (And sometimes other loot!)";
      _0x54c0e2.aniCol = "#141414";
      _0x54c0e2.skinName = "killerwhale";
      break;
    case a0_0x182226:
      _0x54c0e2.aniName = "Swordfish";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n (Press W to rush with your sharp nose!)";
      _0x54c0e2.aniCol = "#689CD7";
      _0x54c0e2.skinName = "swordfish";
      break;
    case a0_0x1efea6:
      _0x54c0e2.aniName = "Gorilla";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Gorillas are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
      _0x54c0e2.aniCol = "#323232";
      _0x54c0e2.skinName = "gorilla";
      break;
    case a0_0x2f54ae:
      _0x54c0e2.aniName = "Octopus";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Octopus!\nHold W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
      _0x54c0e2.aniCol = "#ff8340";
      _0x54c0e2.skinName = "octopus";
      break;
    case a0_0x59b763:
      _0x54c0e2.aniName = "Dragon";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
      _0x54c0e2.aniCol = "#22FF8A";
      _0x54c0e2.skinName = "dragon";
      break;
    case a0_0x332990:
      _0x54c0e2.aniName = "Black Dragon";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
      _0x54c0e2.aniCol = "black";
      _0x54c0e2.skinName = "blackdragon";
      break;
    case a0_0x357359:
      _0x54c0e2.aniName = "Giant Spider";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Place web around the game to catch prey!";
      _0x54c0e2.aniCol = "black";
      _0x54c0e2.skinName = "giantSpider";
      break;
    case a0_0x22a451:
      _0x54c0e2.aniName = "Cobra";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
      _0x54c0e2.aniCol = "black";
      _0x54c0e2.skinName = "cobra";
      break;
    case a0_0x52bfa4:
      _0x54c0e2.aniName = "Boa Constrictor";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Coil and suffocate other animals!";
      _0x54c0e2.aniCol = "black";
      _0x54c0e2.skinName = "boaConstrictor";
      break;
    case a0_0x45db7b:
      _0x54c0e2.aniName = "T-REX";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
      _0x54c0e2.aniCol = "#862A2A";
      _0x54c0e2.skinName = "trex";
      break;
    case a0_0x33f8d6:
      _0x54c0e2.aniName = "Tiger";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Tiger!\n Tigers can launch an ambush attack (HOLD W to grow a bush) Release to attack!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "tiger";
      break;
    case a0_0x56479a:
      _0x54c0e2.aniName = "Giraffe";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Giraffe!\nGiraffe have huge legs and stomp anyone in their way!";
      _0x54c0e2.aniCol = "#E9BD23";
      _0x54c0e2.skinName = "giraffe";
      break;
    case a0_0xd29085:
      _0x54c0e2.aniName = "Eagle";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Eagle!\nEagles can fly up other animals in the air! !\n";
      _0x54c0e2.aniCol = "#5b400d";
      _0x54c0e2.skinName = "eagle";
      break;
    case a0_0x90abb:
      _0x54c0e2.aniName = "Arctic Fox";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x54c0e2.aniCol = "#CFCFCF";
      _0x54c0e2.skinName = "arctic/arcticfox";
      break;
    case a0_0x303108:
      _0x54c0e2.aniName = "Arctic Hare";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n \nPress W to burrow a hole to hide in!";
      _0x54c0e2.aniCol = "#D5D5D5";
      _0x54c0e2.skinName = "arctic/arctichare";
      break;
    case a0_0x1c04bf:
      _0x54c0e2.aniName = "The Yeti!";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
      _0x54c0e2.aniCol = "#839eb5";
      _0x54c0e2.skinName = "arctic/yeti";
      break;
    case a0_0x1e02a7:
      _0x54c0e2.aniName = "Chipmunk";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "";
      _0x54c0e2.aniCol = "#A77C30";
      _0x54c0e2.skinName = "arctic/chipmunk";
      break;
    case a0_0x4f00b9:
      _0x54c0e2.aniName = "Muskox";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Press W to charge with your horns! \nPlus move decently on ice!";
      _0x54c0e2.aniCol = "#231f18";
      _0x54c0e2.skinName = "arctic/muskox";
      break;
    case a0_0xb8200c:
      _0x54c0e2.aniName = "Penguin";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
      _0x54c0e2.aniCol = "#FFFFFF";
      _0x54c0e2.skinName = "arctic/penguin";
      break;
    case a0_0x56a2ab:
      _0x54c0e2.aniName = "Polar Bear";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
      _0x54c0e2.aniCol = "#e4e4e4";
      _0x54c0e2.skinName = "arctic/bear/bear";
      break;
    case a0_0x8a2dda:
      _0x54c0e2.aniName = "Seal";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Seals can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x54c0e2.aniCol = "#cfcfcf";
      _0x54c0e2.skinName = "arctic/seal";
      break;
    case a0_0x4b16c6:
      _0x54c0e2.aniName = "Snow leopard";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x54c0e2.aniCol = "#cfcfcf";
      _0x54c0e2.skinName = "arctic/snowleopard";
      break;
    case a0_0x525e00:
      _0x54c0e2.aniName = "Walrus";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x54c0e2.aniCol = "#633838";
      _0x54c0e2.skinName = "arctic/walrus";
      break;
    case a0_0x17ec36:
      _0x54c0e2.aniName = "Reindeer";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
      _0x54c0e2.aniCol = "#a68976";
      _0x54c0e2.skinName = "arctic/reindeer";
      break;
    case a0_0x5f1ae8:
      _0x54c0e2.aniName = "Wolf";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Wolf paws turn very well on ice!\n Press W to howl!";
      _0x54c0e2.aniCol = "#6B6B6B";
      _0x54c0e2.skinName = "arctic/wolf";
      break;
    case a0_0x58b076:
      _0x54c0e2.aniName = "Wolverine";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
      _0x54c0e2.aniCol = "#843A0F";
      _0x54c0e2.skinName = "arctic/wolverine";
      break;
    case a0_0x5d0d4b:
      _0x54c0e2.aniName = "Mammoth";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
      _0x54c0e2.aniCol = "#9d4717";
      _0x54c0e2.skinName = "arctic/mammoth";
      break;
    case a0_0x55a097:
      _0x54c0e2.aniName = "Donkey";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Press W to Kick any animal behind you";
      _0x54c0e2.aniCol = "#8c7c64";
      _0x54c0e2.skinName = "donkey";
      break;
    case a0_0x4f58e6:
      _0x54c0e2.aniName = "Sabertooth Tiger";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Sabertooth Tiger!\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x54c0e2.aniCol = "#945A99";
      _0x54c0e2.skinName = "sabertoothtiger";
      break;
    case a0_0x54926b:
      _0x54c0e2.aniName = "Elephant";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to " + _0x54c0e2.aniName + "!\n Use your long trunk to attack and eat food!";
      _0x54c0e2.aniCol = "#945A99";
      _0x54c0e2.skinName = "elephant";
      break;
    case a0_0x3b5853:
      _0x54c0e2.aniName = "Blue Whale";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Blue Whale!\n Smash with your powerful tail!";
      _0x54c0e2.aniCol = "#945A99";
      _0x54c0e2.skinName = "bluewhale";
      break;
    case a0_0x18e2b3:
      _0x54c0e2.aniName = "Duckling";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to a DUCK!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "duck/duckling";
      break;
    case a0_0x35d037:
      _0x54c0e2.aniName = "Hedgehog";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Hedgehog!\n (Hold W to become spiky, and dangerous to touch!)";
      _0x54c0e2.aniCol = "#5b400d";
      _0x54c0e2.skinName = "hedgehog";
      break;
    case a0_0x487fb5:
      _0x54c0e2.aniName = "King Crab";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to a KING CRAB!";
      _0x54c0e2.aniCol = "#971f0e";
      _0x54c0e2.skinName = "kingcrab";
      break;
    case a0_0x36faeb:
      _0x54c0e2.aniName = "Lemming";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "";
      _0x54c0e2.aniCol = "#A77C30";
      _0x54c0e2.skinName = "arctic/lemming";
      break;
    case a0_0x40fe0d:
      _0x54c0e2.aniName = "Frog";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Frog!!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "frog/frog";
      break;
    case a0_0x5c6ee3:
      _0x54c0e2.aniName = "Ostrich";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Ostrich! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "ostrich/ostrich";
      break;
    case a0_0x2c361c:
      _0x54c0e2.aniName = "Pelican";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Pelican! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "pelican/pelican";
      break;
    case a0_0x23c69e:
      _0x54c0e2.aniName = "Falcon";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Falcon! \nFly, and do a powerful dive attack! Aim it well.";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "falcon/falcon";
      break;
    case a0_0xff40c0:
      _0x54c0e2.aniName = "Snowy Owl";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Snowy Owl!\n Aim the crosshair, \n right click/W when it's on top of prey, to attack!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "snowyowl/snowyowl";
      break;
    case a0_0x20f7bd:
      _0x54c0e2.aniName = "Baby Ostrich";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.upgradeText = "UPGRADED to Baby Ostrich!!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "ostrich/baby-ostrich";
      break;
    case a0_0x1e1209:
      _0x54c0e2.aniName = "Phoenix";
      _0x54c0e2.upgradeText = "UPGRADED to Phoenix!\nCreate powerful fire tornados to burn your enemies alive!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "phoenix/phoenix";
      break;
    case a0_0x5aaf14:
      _0x54c0e2.aniName = "Sea Monster";
      _0x54c0e2.upgradeText = "UPGRADED to Sea Monster!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "seamonster";
      break;
    case a0_0x53b0d7:
      _0x54c0e2.aniName = "Land Monster";
      _0x54c0e2.upgradeText = "UPGRADED to Land Monster!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "landmonster";
      break;
    case a0_0xadcba8:
      _0x54c0e2.aniName = "Ice Monster";
      _0x54c0e2.upgradeText = "UPGRADED to Ice Monster!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "icemonster";
      break;
    case a0_0x77ab87:
      _0x54c0e2.aniName = "Dino Monster";
      _0x54c0e2.upgradeText = "UPGRADED to Dino Monster!";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "dinomonster";
      break;
    case a0_0x14b677:
      _0x54c0e2.aniName = "Pigeon";
      _0x54c0e2.upgradeText = "UPGRADED to Pigeon!\nHold W to fly around. ";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "pigeon/pigeon";
      break;
    case a0_0x5aa20b:
      _0x54c0e2.aniName = "Toucan";
      _0x54c0e2.upgradeText = "UPGRADED to Toucan!\nHold W to fly around. ";
      _0x54c0e2.aniCol = "#FF9000";
      _0x54c0e2.skinName = "toucan/toucan";
      break;
    default:
      _0x54c0e2.aniName = "(Animal)";
      _0x54c0e2.aniDesc = "";
      _0x54c0e2.aniCol = "#000000";
      _0x54c0e2.upgradeText = "UPGRADED!";
  }
  return _0x54c0e2;
}
function a0_0x4a48ff() {}
var a0_0x2b9582 = a0_0x3d1b55;
var a0_0x28626c = a0_0x42171b;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x3d1b55.prototype.abilityType = a0_0x57a669;
a0_0x3d1b55.prototype.showHalloweenSkins = true;
a0_0x3d1b55.prototype.updateZ = function () {
  if (this.abilityType == a0_0x4f85ee || this.abilityType == a0_0x1e7306 || this.abilityType == a0_0x4958f1 || this.abilityType == a0_0x35ed85 || this.abilityType == a0_0x40e81e || this.abilityType == a0_0x613643 || this.abilityType == a0_0xbe0a7a) {
    this.z = 100002;
  } else if (this.abilityType == a0_0xbe0a7a || this.abilityType == a0_0x40e81e || this.abilityType == a0_0x1ef640 || this.abilityType == a0_0x408e12 || this.abilityType == a0_0x467fd7 || this.abilityType == a0_0x3c1b23 || this.abilityType == a0_0x8c90d || this.abilityType == a0_0x5f08f0 || this.abilityType == a0_0x18378d || this.abilityType == a0_0x3c8d32 || this.abilityType == a0_0x170fbe || this.abilityType == a0_0x1ff953 || this.abilityType == a0_0x54617e || this.abilityType == a0_0xe77a75 || this.abilityType == a0_0x3d933d || this.abilityType == a0_0x24a1c7 || this.abilityType == a0_0x38fdc0 || this.abilityType == a0_0x4a2102) {
    this.z = 2000;
  } else if (this.abilityType == a0_0x3b8ebb) {
    this.z = 1002;
  } else if (this.abilityType == a0_0x3ab024) {
    this.z = 10001;
  } else if (this.abilityType == a0_0x3279d5) {
    if (this.specType == 1) {
      this.z = 10001;
    } else if (this.specType == 2) {
      this.z = 1013;
    } else if (this.specType == 3) {
      this.z = 100000;
    }
  } else if (this.abilityType == a0_0x419227) {
    this.z = 1013;
  } else {
    this.z = -152;
  }
  if (this.abilityType == a0_0xe0d8c7) {
    if (this.specType == 2) {
      this.z = 10000 - this.rad;
    } else {
      this.z = 1001;
    }
  }
};
a0_0x3d1b55.prototype.customDraw = function (_0x2d69e1) {
  switch (this.abilityType) {
    case a0_0x12424a:
      a0_0x50fd5c(0, 0, this.rad, "#7EBCC0");
      break;
    case a0_0x36fde4:
    case a0_0x6b5569:
      {
        break;
      }
    case a0_0x66185c:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.4;
        a0_0x50fd5c(0, 0, this.rad, "#7EBCC0");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        a0_0x1306ae.strokeStyle = "white";
        a0_0x1306ae.beginPath();
        var _0x5c3ed8 = 10;
        a0_0x1306ae.translate(-5, this.rad * -0.7);
        a0_0x1306ae.moveTo(0, -_0x5c3ed8);
        a0_0x1306ae.lineTo(0, _0x5c3ed8);
        a0_0x1306ae.moveTo(-_0x5c3ed8, -_0x5c3ed8);
        a0_0x1306ae.lineTo(_0x5c3ed8, _0x5c3ed8);
        a0_0x1306ae.moveTo(_0x5c3ed8, -_0x5c3ed8);
        a0_0x1306ae.lineTo(-_0x5c3ed8, _0x5c3ed8);
        a0_0x1306ae.moveTo(-_0x5c3ed8, 0);
        a0_0x1306ae.lineTo(_0x5c3ed8, 0);
        a0_0x1306ae.lineWidth = 3;
        a0_0x1306ae.stroke();
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x1a796c:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "#755A2A");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x170fbe:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x141967 = this.getSkinImageObj("img/ability_sabertoothJawAttack.png");
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad - 2.5;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x141967, 0, 0, _0x141967.width * _0x4f95da, _0x141967.height, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2 * _0x4f95da, _0x6dba32 * 2);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x408e12:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x141967 = this.getSkinImageObj("img/ability_claw.png");
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad - 2.5;
          a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
          a0_0x1306ae.drawImage(_0x141967, 0, 0, _0x141967.width * _0x4f95da, _0x141967.height, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2 * _0x4f95da, _0x6dba32 * 2);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x613643:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.1;
        a0_0x50fd5c(0, 0, this.rad, "#5B7EC7");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x5d0db0 = "img";
        var _0x141967 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.speciesType + "/tail.png");
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad * 0.65;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 1.25;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3c1b23:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.1;
        a0_0x50fd5c(0, 0, this.rad, "#5B7EC7");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x5d0db0 = "skins/ocean/bluewhale/" + this.speciesType;
        _0x5d0db0 += "/" + this.speciesSubType;
        var _0x141967 = this.getSkinImageObjForSeason(_0x5d0db0 + "/ability_whaleTailHit.png", this.mopeSeasonID);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad * 0.85;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 1.25;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x40e81e:
      {
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.save();
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x38f943 = 1.5;
        var _0x4faa44 = 1;
        var _0x1333f3 = _0x4faa44 * Math.sin(Math.PI * 2 / _0x38f943 * _0x128284);
        var _0x236437 = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha *= _0x1333f3 * 0.6;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        if (this.specType2 == 0) {
          a0_0x50fd5c(0, 0, this.rad, "#96661C");
        } else {
          a0_0x50fd5c(0, 0, this.rad, "#e0dfde");
        }
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        var _0x1e35d6 = this.specType2 == 1 ? "arctic" : "land";
        var _0x41ba93 = "skins/" + _0x1e35d6 + "/bear/" + this.speciesType + "/ability.png";
        var _0x141967 = this.getSkinImageObj(_0x41ba93);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x4c1593 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
          var _0x142bc0 = -(-0.5 + _0x4c1593) * a0_0x5c63e1;
          var _0x4e3b8c = this.angle;
          a0_0x1306ae.rotate(this.angle + _0x142bc0 * (this.specType == 0 ? 1 : -1));
          var _0x6dba32 = -this.rad * 1;
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.8;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3 + _0x6dba32, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0xbe0a7a:
      {
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.save();
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x38f943 = 1.5;
        var _0x4faa44 = 1;
        var _0x1333f3 = _0x4faa44 * Math.sin(Math.PI * 2 / _0x38f943 * _0x128284);
        var _0x236437 = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha *= _0x1333f3 * 0.6;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        if (this.specType2 == 0) {
          a0_0x50fd5c(0, 0, this.rad, "#96661C");
        } else {
          a0_0x50fd5c(0, 0, this.rad, "#e0dfde");
        }
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        var _0x5d0db0 = "skins/desert/gobibear/" + this.speciesType + "/claw" + Math.min(this.specType, 1);
        var _0x141967 = this.getSkinImageObj(_0x5d0db0 + ".png");
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x4c1593 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
          var _0x142bc0 = -(-0.5 + _0x4c1593) * a0_0x873ec7(90);
          var _0x4e3b8c = this.angle;
          a0_0x1306ae.rotate(this.angle + _0x142bc0 * (this.specType == 0 ? 1 : -1));
          var _0x6dba32 = -this.rad * 1;
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.8;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3 + _0x6dba32, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x4a2102:
      {
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x63b494 = a0_0x423a9f(_0x128284, 1, 0.1, 1);
        var _0x55d837 = 0;
        var _0x38f943 = 2;
        var _0x4faa44 = 1.5;
        _0x55d837 = _0x4faa44 * Math.sin(Math.PI * 2 / _0x38f943 * _0x128284);
        var _0x27fff5 = 1;
        for (i = 0; i < _0x27fff5; i++) {
          if (this.drawRad === undefined) {
            this.drawRad = new Array();
            this.drawAngle = new Array();
          }
          if (this.drawRad[i] == undefined) {
            this.drawRad.push(a0_0x39b824(5, 10) / 10);
            this.drawAngle.push(a0_0x873ec7(a0_0x39b824(1, 360)));
          }
          var _0x3f8b52 = this.rad * this.drawRad[i];
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(this.drawAngle[i]);
          a0_0x1306ae.save();
          var _0x5113bd = a0_0x1306ae.globalAlpha;
          a0_0x1306ae.globalAlpha = 0.1 - _0x63b494;
          a0_0x1306ae.restore();
          a0_0x1306ae.save();
          a0_0x1306ae.fillStyle = "white";
          a0_0x1306ae.globalAlpha = 0.3 - _0x63b494;
          var _0x1c4fa8 = -_0x3f8b52 * 0.6;
          var _0x5cd06f = -_0x3f8b52 * 0.5 + this.rPer * 10;
          var _0x47ed25 = Math.max(0, _0x3f8b52 * 0.65 + _0x55d837) + 2;
          a0_0x50fd5c(_0x1c4fa8, _0x5cd06f, _0x47ed25, "#654321");
          var _0x1c4fa8 = _0x3f8b52 * 0.5;
          var _0x5cd06f = -_0x3f8b52 * 0.5 - this.rPer * 10;
          var _0x47ed25 = Math.max(0, _0x3f8b52 * 0.73 - _0x55d837);
          a0_0x50fd5c(_0x1c4fa8, _0x5cd06f, _0x47ed25, "#654321");
          var _0x1c4fa8 = _0x3f8b52 * 0.6;
          var _0x5cd06f = _0x3f8b52 * 0.5;
          var _0x47ed25 = Math.max(0, _0x3f8b52 * 0.78 + _0x55d837);
          a0_0x50fd5c(_0x1c4fa8, _0x5cd06f, _0x47ed25, "#654321");
          var _0x1c4fa8 = -_0x3f8b52 * 0.5;
          var _0x5cd06f = _0x3f8b52 * 0.5 + this.rPer * 10;
          var _0x47ed25 = Math.max(0, _0x3f8b52 * 0.6 + this.rPer - _0x55d837);
          a0_0x50fd5c(_0x1c4fa8, _0x5cd06f, _0x47ed25, "#654321");
          a0_0x1306ae.restore();
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x3cb689:
      a0_0x1306ae.globalAlpha = 0.5;
      a0_0x50fd5c(0, 0, this.rad, "red");
      break;
    case a0_0x4f85ee:
      break;
    case a0_0x4b6abd:
      break;
    case a0_0x1ecf89:
      break;
    case a0_0x218bc9:
    case a0_0x18d55c:
    case a0_0x1a3045:
    case a0_0x15b02:
    case a0_0x1e7306:
    case a0_0x477380:
    case a0_0xe68ed1:
    case a0_0x15a2bd:
    case a0_0x2059ce:
    case a0_0x57c6f9:
      break;
    case a0_0xe0d8c7:
      if (this.specType == 2) {
        var _0x49bda1 = "closed";
        var _0x1b19ab = "flytrap";
        var _0x5893c6 = "img/desert/" + _0x1b19ab + "/mouth/" + _0x49bda1 + ".png";
        var _0x141967 = this.getSkinImageObj(_0x5893c6);
        if (_0x141967) {
          var _0x6dba32 = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.globalAlpha = 0.9;
          a0_0x1306ae.rotate(this.angle - a0_0x873ec7(-90));
          a0_0x1306ae.drawImage(_0x141967, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
          a0_0x1306ae.restore();
        }
      } else {}
      break;
    case a0_0x279b53:
      if (this.specType2 == 1) {
        var _0x128284 = a0_0x24806e - this.spawnTime;
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(this.angle - -a0_0x5c63e1);
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.9;
        if (_0x128284 < 200) {
          var _0x2ebe6e = 1 + Math.trunc(_0x128284 / 50);
          var _0x5893c6 = "skins/desert/camel/201/spit" + this.specType + "_pop" + _0x2ebe6e + ".png";
          var _0x141967 = this.getSkinImageObjForSeason(_0x5893c6, 1);
          if (_0x141967) {
            var _0x6dba32 = this.rad;
            a0_0x1306ae.save();
            a0_0x1306ae.drawImage(_0x141967, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
          }
        } else {
          var _0x5893c6 = "skins/desert/camel/201/spit" + this.specType + "_pop4.png";
          var _0x141967 = this.getSkinImageObjForSeason(_0x5893c6, 1);
          if (_0x141967) {
            var _0x6dba32 = this.rad;
            a0_0x1306ae.save();
            a0_0x1306ae.drawImage(_0x141967, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
          }
        }
        a0_0x1306ae.restore();
      } else {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "black");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x35ed85:
      {
        this.drawEffectScale_Slow = true;
        this.doesDrawEffectScale = true;
        a0_0x1306ae.globalAlpha = 0.2;
        a0_0x50fd5c(0, 0, this.rad * 0.85, "white");
        var _0x5090e7 = this.specType == 3 ? "_e" : "";
        var _0x141967 = this.getSkinImageObj("img/target" + _0x5090e7 + ".png");
        if (_0x141967) {
          var _0x6dba32 = this.rad;
          a0_0x1306ae.save();
          a0_0x1306ae.globalAlpha = 0.5;
          a0_0x1306ae.drawImage(_0x141967, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
          a0_0x1306ae.restore();
        }
        a0_0x1306ae.save();
        if (this.is1v1Target == 1 && this.timerTxt != null) {
          a0_0x1306ae.globalAlpha = 1;
          this.timerTxt.x = 0;
          this.timerTxt.y = 0;
          this.timerTxt.draw();
        } else if (this.is1v1Target == 2 && this.timerTxt != null) {
          a0_0x1306ae.globalAlpha = 1;
          this.timerTxt.x = 0;
          this.timerTxt.y = 0;
          this.timerTxt.draw();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x4958f1:
      {
        a0_0x1306ae.globalAlpha = 0.5;
      }
      break;
    case a0_0x5f08f0:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.05;
        a0_0x50fd5c(0, 0, this.rad, "#B32E10");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x5d0db0 = "skins/ocean/kingcrab/" + this.speciesType;
        var _0x1bede9 = this.mopeSeasonID;
        var _0x141967 = this.getSkinImageObjForSeason(_0x5d0db0 + "/ability_crabSmash" + this.specType + ".png", _0x1bede9);
        if (_0x141967) {
          var _0x4c1593 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 200, 0, 1);
          var _0x13274b = this.specType == 1 ? -1 : 1;
          var _0x142bc0 = -(-0.2 + _0x4c1593) * a0_0x873ec7(_0x13274b * -90);
          _0x142bc0 = _0x13274b * (0.3 + _0x4c1593) + a0_0x873ec7(_0x13274b * -30);
          var _0x6dba32 = this.rad * 0.6;
          a0_0x1306ae.rotate(this.angle + _0x142bc0);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2 * 0.7;
          var _0x53f5cb = _0x6dba32 * 2;
          var _0x3e70ef = 0.75;
          var _0x467ac3 = 0.95;
          if (this.specType == 1) {
            _0x3e70ef = 0.25;
            _0x467ac3 = 0.95;
          }
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x8c90d:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.05;
        a0_0x50fd5c(0, 0, this.rad, "#E4E7C8");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x5d0db0 = "skins/land/elephant/" + this.speciesType;
        var _0x141967 = this.getSkinImageObj(_0x5d0db0 + "/ability_elephantTrunkSmack.png");
        console.log(_0x5d0db0);
        if (_0x141967) {
          var _0x4c1593 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
          var _0x142bc0 = -(-0.5 + _0x4c1593) * a0_0x5c63e1;
          var _0x6dba32 = this.rad * 0.6;
          a0_0x1306ae.rotate(this.angle + _0x142bc0);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2 * 0.7;
          var _0x53f5cb = _0x6dba32 * 2;
          var _0x3e70ef = 0.75;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x467fd7:
      {}
      break;
    case a0_0x18378d:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.25;
        a0_0x50fd5c(0, 0, this.rad, "#44d31f");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x141967 = this.getSkinImageObjForSeason("skins/land/croc/" + this.speciesType + "/" + this.speciesSubType + "/ability.png", this.mopeSeasonID);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad * 0.6;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2.5;
          var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
          a0_0x1306ae.rotate(Math.PI);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad * 0.5;
          var _0x4eb155 = _0x6dba32 * 2.5;
          var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3c8d32:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.25;
        a0_0x50fd5c(0, 0, this.rad, "#44d31f");
        var _0x1bede9 = this.speciesType === 1 || this.speciesType === 2 ? 1 : this.mopeSeasonID;
        var _0x5d0db0 = "skins/land/boaconstrictor/" + this.speciesType;
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x141967 = this.getSkinImageObjForSeason(_0x5d0db0 + "/ability_boabite.png", _0x1bede9);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad * 0.6;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2.5;
          var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
          a0_0x1306ae.rotate(Math.PI);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad * 0.5;
          var _0x4eb155 = _0x6dba32 * 2.5;
          var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x37cec6:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.1;
        a0_0x50fd5c(0, 0, this.rad, "#755A2A");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x5d0db0 = "skins/land/";
        var _0x1bede9 = this.mopeSeasonID;
        var _0x141967 = this.getSkinImageObjForSeason(_0x5d0db0 + "/tiger/" + this.speciesType + "/ability_tigerJump.png", _0x1bede9);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 100);
          var _0x6dba32 = this.rad * 1.1;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 1;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0xe77a75:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.05;
        a0_0x50fd5c(0, 0, this.rad, "#44d31f");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x2641f9 = this.getSkinImageObj("img/ability_pounce2.png");
        var _0x509c70 = this.getSkinImageObj("img/ability_pounce1.png");
        if (_0x2641f9 && _0x509c70) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad * 0.4;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2.5;
          var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x2641f9, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
          _0x6dba32 = this.rad * 0.6;
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad * 0.5;
          var _0x4eb155 = _0x6dba32 * 2.5;
          var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.95;
          a0_0x1306ae.drawImage(_0x509c70, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x54617e:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.05;
        a0_0x50fd5c(0, 0, this.rad, "#E4E7C8");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x1f3e7b = "skins/land/tiger/" + this.speciesType + "/ability_tigerSlash" + this.specType + ".png";
        var _0x141967 = this.getSkinImageObj(_0x1f3e7b);
        if (_0x141967) {
          var _0x4c1593 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
          var _0x142bc0 = (this.specType == 1 ? 1 : -1) * (-0.6 + _0x4c1593) * a0_0x873ec7(90);
          var _0x6dba32 = this.rad * 1.2;
          a0_0x1306ae.rotate(this.angle + _0x142bc0);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2 * 0.7;
          var _0x53f5cb = _0x6dba32 * 2;
          var _0x3e70ef = 0.2;
          var _0x467ac3 = 0.5;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x24a1c7:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        var _0x1bede9 = this.mopeSeasonID;
        var _0x9e16f4 = _0x1bede9 === 1 ? "" : this.specType;
        var _0x2f655e = "skins/land/zebra/" + this.speciesType + "/kick" + _0x9e16f4 + ".png";
        var _0x141967 = this.getSkinImageObjForSeason(_0x2f655e, _0x1bede9);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x6dba32 = this.rad * 0.6;
          a0_0x1306ae.rotate(this.angle);
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 3 * _0x4f95da;
          var _0x3e70ef = 0.3;
          var _0x467ac3 = 1;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3d933d:
      {
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.save();
        let _0x59e736 = 1;
        var _0x236437 = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha *= _0x59e736 * 0.6;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(this.rad * 0.3, 0, this.rad * (0.9 + _0x59e736 * 0.12), "#E4E7C8");
        a0_0x50fd5c(-this.rad * 0.3, 0, this.rad * (1.05 + _0x59e736 * 0.09), "#E4E7C8");
        a0_0x1306ae.globalAlpha = _0x236437;
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        let _0x332675 = "skins/land/giraffe/" + this.speciesType;
        if (this.speciesType == 202) {
          _0x332675 += "/" + this.speciesSubType;
        }
        _0x332675 += "/stomp.png";
        var _0x141967 = this.getSkinImageObj(_0x332675);
        if (_0x141967) {
          var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          var _0x4e3b8c = this.angle;
          a0_0x1306ae.rotate(_0x4e3b8c);
          var _0x6dba32 = -this.rad * 1;
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 3;
          var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.7;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3 + _0x6dba32, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x38fdc0:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        a0_0x1306ae.rotate(this.angle);
        var _0x1bede9 = this.mopeSeasonID;
        var _0x141967 = this.getSkinImageObjForSeason("skins/ocean/shark/" + this.speciesType + "/ability.png", _0x1bede9);
        if (_0x141967) {
          var _0x63b494 = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
          a0_0x1306ae.globalAlpha = 0.9;
          var _0x6dba32 = -this.rad * 1.75;
          var _0x1df6cb = 0;
          var _0x3a8199 = this.rad;
          var _0x4eb155 = _0x6dba32 * 2;
          var _0x53f5cb = _0x6dba32 * 2 * _0x63b494;
          var _0x3e70ef = 0.5;
          var _0x467ac3 = 0.9;
          a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3 + _0x6dba32, _0x4eb155, _0x53f5cb);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x510b20:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
        var _0x6dba32 = this.rad;
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x38f943 = 2.2;
        var _0x1f5ed6 = Math.cos(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
        var _0x506dea = Math.sin(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.3;
        a0_0x50fd5c(0, 0, _0x6dba32, a0_0xcf4b9b);
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
        a0_0x50fd5c(0 + _0x1f5ed6 / 4.5 + this.rPer, 1 + _0x506dea / 1.5, Math.max(0, _0x6dba32 - 14), "#de9d23");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3ab024:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
        var _0x6dba32 = this.rad;
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x38f943 = 2.2;
        var _0x1f5ed6 = Math.cos(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
        var _0x506dea = Math.sin(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.3;
        a0_0x50fd5c(0, 0, _0x6dba32, "#2CAAC4");
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
        a0_0x50fd5c(0 + _0x1f5ed6 / 4.5 + this.rPer, 1 + _0x506dea / 1.5, Math.max(0, _0x6dba32 - 14), "#29A0BA");
        a0_0x50fd5c(0 + _0x1f5ed6 / 1.5 - this.rPer * 2, _0x506dea, Math.max(0, _0x6dba32 - 38.5 + _0x506dea / 5), "#2B8CAA");
        a0_0x50fd5c(0 + _0x1f5ed6 / 1.5 - this.rPer * 2, _0x506dea, Math.max(0, _0x6dba32 - 54.5 + _0x506dea / 11), "#28829E");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3279d5:
      {
        if (this.specType == 0 || this.specType == 2 || this.specType == 3) {
          a0_0x1306ae.save();
          a0_0x1306ae.globalAlpha = 0.3;
          var _0x530e61 = "";
          var _0x141967 = this.getSkinImageObj("skins/pelican/" + this.speciesType + "/ability_pelican" + _0x530e61 + ".png");
          if (_0x141967) {
            var _0x6dba32 = -this.rad * 1.5;
            a0_0x1306ae.rotate(this.angle);
            var _0x1df6cb = 0;
            var _0x3a8199 = this.rad;
            var _0x4eb155 = _0x6dba32;
            var _0x53f5cb = _0x6dba32;
            var _0x3e70ef = 0.5;
            var _0x467ac3 = 0.5;
            a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3 + _0x6dba32, _0x4eb155, _0x53f5cb);
          }
          a0_0x1306ae.restore();
        }
        break;
      }
    case a0_0x1ff953:
      {
        if (this.specType == 0) {
          a0_0x1306ae.save();
          var _0x5113bd = a0_0x1306ae.globalAlpha;
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
          a0_0x1306ae.globalAlpha = _0x5113bd * 1;
          var _0x141967 = this.getSkinImageObjForSeason("skins/land/trex/" + this.speciesType + "/ability_trexBite.png", this.mopeSeasonID);
          if (_0x141967) {
            var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
            var _0x6dba32 = this.rad * 0.6;
            a0_0x1306ae.rotate(this.angle);
            var _0x1df6cb = 0;
            var _0x3a8199 = this.rad;
            var _0x4eb155 = _0x6dba32 * 2.5;
            var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
            var _0x3e70ef = 0.5;
            var _0x467ac3 = 0.95;
            a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
            a0_0x1306ae.rotate(Math.PI);
            var _0x1df6cb = 0;
            var _0x3a8199 = this.rad * 0.5;
            var _0x4eb155 = _0x6dba32 * 2.5;
            var _0x53f5cb = _0x6dba32 * 2.5 * _0x4f95da;
            var _0x3e70ef = 0.5;
            var _0x467ac3 = 0.95;
            a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x3a8199 + _0x53f5cb * -_0x467ac3, _0x4eb155, _0x53f5cb);
          }
          var _0x141967 = this.getSkinImageObj("skins/land/trex/" + this.speciesType + "/trex-head.png", this.mopeSeasonID);
          if (_0x141967) {
            var _0x4f95da = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
            var _0x6dba32 = this.rad * 1.5;
            a0_0x1306ae.rotate(a0_0x873ec7(180));
            var _0x1df6cb = 0;
            var _0x3a8199 = this.rad;
            var _0x4eb155 = _0x6dba32 * 2;
            var _0x53f5cb = _0x6dba32 * 2 * _0x4f95da;
            var _0x3e70ef = 0.5;
            var _0x467ac3 = -1.25;
            a0_0x1306ae.drawImage(_0x141967, _0x1df6cb + _0x4eb155 * -_0x3e70ef, _0x467ac3 * _0x6dba32, _0x4eb155, _0x53f5cb);
          }
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x9aae16:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "#6D7471");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x421bce:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "#6D7471");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x4247e2:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "#6D7471");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0xae3632:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "#f2f2f2");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x3b8ebb:
      {
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.8;
        var _0x141967 = this.getSkinImageObj("img/wave.png");
        if (_0x141967) {
          var _0x6dba32 = this.rad;
          a0_0x1306ae.drawImage(_0x141967, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x5c291b:
      {
        if (this.animalType !== undefined && this.animalType == a0_0x50d9f7 && this.speciesType == 204) {
          a0_0x1306ae.save();
          var _0x5113bd = a0_0x1306ae.globalAlpha;
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.9;
          var _0x1bede9 = 1;
          var _0x141967 = this.getSkinImageObjForSeason("skins/land/hippo/204/roar.png", _0x1bede9);
          if (_0x141967) {
            var _0x6dba32 = this.rad;
            a0_0x1306ae.drawImage(_0x141967, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
          }
          a0_0x1306ae.restore();
        } else {
          a0_0x1306ae.save();
          var _0x5113bd = a0_0x1306ae.globalAlpha;
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.2;
          a0_0x50fd5c(0, 0, this.rad, "#746B3E");
          a0_0x1306ae.restore();
        }
      }
      break;
    case a0_0x289513:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
        a0_0x50fd5c(0, 0, this.rad, "#62C5FF");
        a0_0x1306ae.globalAlpha = _0x5113bd * 1;
        a0_0x1306ae.strokeStyle = "#62C5FF";
        a0_0x1306ae.beginPath();
        var _0x279456 = this.rad * -0.7;
        var _0x2205f5 = -5;
        var _0x465e08 = 10;
        a0_0x1306ae.moveTo(_0x279456, _0x2205f5);
        a0_0x1306ae.lineTo(_0x279456 - _0x465e08 * 0.4, _0x2205f5 + _0x465e08);
        a0_0x1306ae.lineTo(_0x279456 + _0x465e08 * 0.4, _0x2205f5 + _0x465e08 * 0.7);
        a0_0x1306ae.lineTo(_0x279456 + _0x465e08 * 0.4 * 0.5, _0x2205f5 + _0x465e08 * 2);
        a0_0x1306ae.lineWidth = 3;
        a0_0x1306ae.stroke();
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x30b1e4:
      {
        if (a0_0x59c93b || a0_0x56bbb3 != 3) {
          var _0x2c8f83 = this.getSkinImageObj("img/whirlpool2.png");
          if (_0x2c8f83) {
            var _0x6dba32 = this.rad;
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.5;
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
          } else {
            a0_0x50fd5c(0, 0, this.rad, "#2D93B0");
          }
        } else {
          a0_0x1306ae.save();
          var _0x6dba32 = Math.max(0, this.rad - 30);
          var _0x5113bd = a0_0x1306ae.globalAlpha;
          var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x38f943 = 2.2;
          var _0x1f5ed6 = Math.cos(Math.PI * 2 / _0x38f943 * _0x128284) * 10.5;
          var _0x506dea = Math.sin(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.05;
          a0_0x50fd5c(0 + _0x1f5ed6 + 15 - this.rPer, 0 + _0x506dea + 20 - this.rPer, Math.max(0, _0x6dba32 - 6), "white");
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.1;
          a0_0x50fd5c(0 + _0x1f5ed6 + 15 - this.rPer, 0 + _0x506dea / 2 - this.rPer, Math.max(0, _0x6dba32 - 6), "#2D93B0");
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
          a0_0x50fd5c(0 + _0x1f5ed6 / 1.5 - this.rPer * 2, _0x506dea, Math.max(0, _0x6dba32 - 54.5 + _0x506dea / 11), "#28829E");
          a0_0x1306ae.restore();
          a0_0x1306ae.save();
          var _0x5113bd = a0_0x1306ae.globalAlpha;
          var _0x6dba32 = Math.max(0, this.rad - 30);
          var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
          var _0x38f943 = 3.2;
          var _0x1f5ed6 = Math.cos(Math.PI * 2 / _0x38f943 * _0x128284) * 50;
          var _0x506dea = Math.sin(Math.PI * 2 / _0x38f943 * _0x128284) * 50;
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.05;
          a0_0x50fd5c(0, 0, _0x6dba32, "#2CAAC4");
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
          a0_0x50fd5c(0 + _0x1f5ed6 / 2 - this.rPer, 0 + _0x506dea / 2 - this.rPer, Math.max(0, _0x6dba32 * 0.95), "#2D93B0");
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.25;
          a0_0x50fd5c(0 + _0x1f5ed6 / 4.5 + this.rPer, 1 + _0x506dea / 1.5, Math.max(0, _0x6dba32 * 0.85), "#28829E");
          a0_0x1306ae.restore();
          var _0x2c8f83 = this.getSkinImageObj("img/whirlpool2.png");
          if (_0x2c8f83) {
            var _0x6dba32 = this.rad - 30;
            var _0xfd12e = 5 / 60;
            var _0x36e54f = 1000 / _0xfd12e;
            var _0x4f95da = (a0_0x24806e - this.spawnTime) % _0x36e54f / _0x36e54f;
            var _0x34cdda = _0x4f95da * 2 * Math.PI;
            _0xfd12e = 8 / 60;
            _0x36e54f = 1000 / _0xfd12e;
            _0x4f95da = (a0_0x24806e - this.spawnTime) % _0x36e54f / _0x36e54f;
            rotation2 = _0x4f95da * 2 * Math.PI;
            a0_0x1306ae.save();
            a0_0x1306ae.rotate(_0x34cdda);
            var _0x5113bd = a0_0x1306ae.globalAlpha;
            a0_0x1306ae.globalAlpha = 0.1;
            var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
            var _0x38f943 = 2.2;
            var _0x1f5ed6 = Math.cos(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
            var _0x506dea = Math.sin(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
            a0_0x1306ae.globalAlpha = 0.2;
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32 - _0x1f5ed6 + 30 / 2.2, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.1;
            a0_0x1306ae.rotate(rotation2 * 0.8);
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32 - _0x1f5ed6 / 2.2, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.2;
            a0_0x1306ae.rotate(rotation2);
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32 - _0x1f5ed6 - 20 / 2.2, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.2;
            a0_0x1306ae.rotate(rotation2);
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32 - _0x1f5ed6 / 2.2, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.2;
            a0_0x1306ae.rotate(_0x34cdda);
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32 - _0x1f5ed6 / 2.2, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
            a0_0x1306ae.save();
            a0_0x1306ae.globalAlpha = 0.2;
            a0_0x1306ae.rotate(_0x34cdda);
            a0_0x1306ae.drawImage(_0x2c8f83, -_0x6dba32 - _0x1f5ed6 / 2.2, -_0x6dba32, _0x6dba32 * 2, _0x6dba32 * 2);
            a0_0x1306ae.restore();
          }
        }
      }
      break;
    case a0_0x31a080:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
        var _0x6dba32 = Math.max(0, this.rad - 30);
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x38f943 = 2.2;
        var _0x1f5ed6 = Math.cos(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
        var _0x506dea = Math.sin(Math.PI * 2 / _0x38f943 * _0x128284) * 6.5;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.4;
        a0_0x50fd5c(0, 0, _0x6dba32, "#2CAAC4");
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.7;
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x50fd5c(0 + _0x1f5ed6 / 2 - this.rPer, 0 + _0x506dea / 2 - this.rPer, Math.max(0, _0x6dba32 - 6), "#2D93B0");
        }
        a0_0x50fd5c(0 + _0x1f5ed6 / 4.5 + this.rPer, 1 + _0x506dea / 1.5, Math.max(0, _0x6dba32 - 14), "#29A0BA");
        a0_0x50fd5c(0 + _0x1f5ed6 / 1.5 - this.rPer * 2, _0x506dea, Math.max(0, _0x6dba32 - 38.5 + _0x506dea / 5), "#2B8CAA");
        a0_0x50fd5c(0 + _0x1f5ed6 / 1.5 - this.rPer * 2, _0x506dea, Math.max(0, _0x6dba32 - 54.5 + _0x506dea / 11), "#28829E");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x45e5c9:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
        }
        var _0x55d837 = 0;
        var _0x128284 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x38f943 = 6;
        var _0x4faa44 = 1.5;
        _0x55d837 = _0x4faa44 * Math.sin(Math.PI * 2 / _0x38f943 * _0x128284);
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.7;
        var _0x332d0c = 4;
        a0_0x1306ae.fillStyle = "black";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        if (a0_0x56bbb3 != a0_0xbf9ed5) {
          a0_0x1306ae.fillStyle = "black";
          a0_0x1306ae.globalAlpha = _0x5113bd * 0.5;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x332d0c + _0x55d837), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x55d837), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x55d837), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x55d837), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x55d837), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.beginPath();
        }
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x305b9b:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.25;
        a0_0x50fd5c(0, 0, this.rad, "#9F8641");
        a0_0x1306ae.restore();
      }
      break;
    case a0_0x4a103d:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.25;
        a0_0x50fd5c(0, 0, this.rad, "#785228");
        a0_0x1306ae.restore();
      }
      break;
    default:
      {
        a0_0x1306ae.save();
        var _0x5113bd = a0_0x1306ae.globalAlpha;
        a0_0x1306ae.globalAlpha = _0x5113bd * 0.15;
        a0_0x50fd5c(0, 0, this.rad, "black");
        a0_0x1306ae.restore();
      }
      break;
  }
};
a0_0x3d1b55.prototype.setObjTypes = function (_0x39a923, _0x4ad755) {
  this.oType = _0x39a923;
  this.abilityType = _0x4ad755;
};
a0_0x3d1b55.prototype.skinThemeID = 0;
a0_0x3d1b55.prototype.mopeSeasonID = 0;
a0_0x3d1b55.prototype.readCustomData_onNewlyVisible = function (_0x3fc9a1) {
  this.specType = _0x3fc9a1.readUInt8();
  this.specType2 = _0x3fc9a1.readUInt8();
  this.skinThemeID = _0x3fc9a1.readUInt8();
  this.mopeSeasonID = _0x3fc9a1.readUInt8();
  if (this.abilityType == a0_0x66185c || this.abilityType == a0_0x421bce || this.abilityType == a0_0x3b8ebb || this.abilityType == a0_0x5c291b || this.abilityType == a0_0x4a103d) {
    this.rad = this.oRad = 0;
  }
};
a0_0x3d1b55.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x394f5b = this.timer;
  this.setTimer(_0x394f5b);
};
a0_0x3d1b55.prototype.timerTxt = null;
a0_0x3d1b55.prototype.setTimer = function (_0x3e7e51) {
  var _0x79741a = "" + _0x3e7e51;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x993fcb(20, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0x79741a);
  } else {
    this.timerTxt.setFontSize(20);
    this.timerTxt.setText(_0x79741a);
  }
};
function a0_0x3d1b55() {
  a0_0x3d1b55.superClass.call(this, a0_0x382193);
  a0_0x3d1b55.prototype.easeAngleChanges = false;
  if (this.abilityType == a0_0xe0d8c7) {
    this.doesDrawEffectScale = this.drawEffectScale_Slow = true;
  }
}
window.AbilityObj = a0_0x3d1b55;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3d1b55, a0_0x382193);
var a0_0x2b9582 = a0_0x4b9354;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x4b9354.prototype.customDraw = function (_0x1691c9) {
  a0_0x1306ae.save();
  var _0x3779f2 = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.rotate(this.angle);
  a0_0x1306ae.globalAlpha = _0x3779f2 * 0.05;
  a0_0x50fd5c(0, 0, this.rad, "#E4E7C8");
  a0_0x1306ae.globalAlpha = _0x3779f2 * 1;
  var _0x4adebb = "skins/land/elephant/" + this.speciesType;
  if (this.speciesType == 0) {
    _0x4adebb += "/" + this.speciesSubType;
  }
  var _0x48291f = this.getSkinImageObj(_0x4adebb + "/ability_elephantTrunkSmack.png");
  if (_0x48291f) {
    var _0x1bbb19 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
    var _0x410dcf = -(-0.5 + _0x1bbb19) * a0_0x5c63e1;
    var _0x43a166 = this.rad * 0.6;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(_0x410dcf);
    var _0x590f33 = 0;
    var _0x44c44 = this.rad;
    var _0x575f22 = _0x43a166 * 2 * 0.7;
    var _0x35bb2c = _0x43a166 * 2;
    var _0x34ce7f = 0.75;
    var _0x48cbb0 = 0.95;
    a0_0x1306ae.drawImage(_0x48291f, _0x590f33 + _0x575f22 * -_0x34ce7f, _0x44c44 + _0x35bb2c * -_0x48cbb0, _0x575f22, _0x35bb2c);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
function a0_0x4b9354() {
  a0_0x4b9354.superClass.call(this);
}
window.AbilityObjElephant = a0_0x4b9354;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4b9354, a0_0x382193, a0_0x8c90d);
var a0_0x2b9582 = a0_0x34e564;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x34e564.prototype.customDraw = function (_0xaf14f3) {
  var _0x34c3c4 = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.save();
  var _0x1f0614 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x4de1d2 = 1.5;
  var _0x5f2017 = 1;
  var _0x3ba979 = _0x5f2017 * Math.sin(Math.PI * 2 / _0x4de1d2 * _0x1f0614);
  var _0x279f3c = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha *= _0x3ba979 * 0.6;
  a0_0x1306ae.rotate(this.angle);
  a0_0x1306ae.globalAlpha = _0x34c3c4 * 0.15;
  if (this.specType2 == 0 && this.aniSpecies) {
    a0_0x50fd5c(0, 0, this.rad, "#96661C");
  } else {
    a0_0x50fd5c(0, 0, this.rad, "#e0dfde");
  }
  a0_0x1306ae.restore();
  a0_0x1306ae.save();
  var _0xaa003a = "skins/";
  if (this.animalType === 36) {
    _0xaa003a += "arctic/bear/" + this.aniSpecies + "/slash.png";
  } else {
    _0xaa003a += "land/bear/" + this.speciesType + "/" + this.speciesSubType + "/ability.png";
  }
  var _0x49a91c = this.getSkinImageObj(_0xaa003a);
  if (_0x49a91c) {
    var _0x412913 = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
    var _0x3fc724 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
    var _0x2d3453 = -(-0.5 + _0x3fc724) * a0_0x5c63e1;
    var _0x4e6629 = this.angle;
    a0_0x1306ae.rotate(this.angle + _0x2d3453 * (this.specType == 0 ? 1 : -1));
    var _0x250f36 = -this.rad * 1;
    var _0x4865d2 = 0;
    var _0x3802d7 = this.rad;
    var _0x53c331 = _0x250f36 * 2;
    var _0x59a0ea = _0x250f36 * 2 * _0x412913;
    var _0x9ff997 = 0.5;
    var _0x3700ce = 0.8;
    a0_0x1306ae.drawImage(_0x49a91c, _0x4865d2 + _0x53c331 * -_0x9ff997, _0x3802d7 + _0x59a0ea * -_0x3700ce + _0x250f36, _0x53c331, _0x59a0ea);
  }
  a0_0x1306ae.restore();
};
a0_0x34e564.prototype.getSkinImageObj = function (_0x2149c7) {
  var _0x4b2203 = this.mopeSeasonID;
  if (this.animalType === 36) {
    _0x4b2203 = this.speciesType === 201 ? 1 : this.mopeSeasonID;
  }
  return this.getSkinImageObjForSeason(_0x2149c7, _0x4b2203);
};
a0_0x34e564.prototype.readCustomData_onNewlyVisible = function (_0x1b21ac) {
  a0_0x34e564.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1b21ac);
  this.aniSpecies = _0x1b21ac.readUInt8();
};
function a0_0x34e564() {
  a0_0x34e564.superClass.call(this);
}
window.BearSlash = a0_0x34e564;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x34e564, a0_0x382193, a0_0x40e81e);
var a0_0x2b9582 = a0_0x2449e7;
var a0_0x28626c = a0_0x42171b;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x2449e7.prototype.animalType = a0_0x41cceb;
a0_0x2449e7.prototype.animalSpecies = 0;
a0_0x2449e7.prototype.animalSubSpecies = 0;
a0_0x2449e7.prototype.nickName = "";
a0_0x2449e7.prototype.skinImgName = null;
a0_0x2449e7.prototype.skinNotLoadedColor = "#75ce67";
a0_0x2449e7.prototype.flag_fullAlpha = false;
a0_0x2449e7.prototype.flag_lowWat = false;
a0_0x2449e7.prototype.flag_tailBitten = false;
a0_0x2449e7.prototype.flag_underWater = false;
a0_0x2449e7.prototype.flag_eff_stunned = false;
a0_0x2449e7.prototype.flag_eff_frozen = false;
a0_0x2449e7.prototype.flag_eff_virusInfection = false;
a0_0x2449e7.prototype.flag_usingAbility = false;
a0_0x2449e7.prototype.flag_eff_invincible = false;
a0_0x2449e7.prototype.flag_eff_healing = a0_0x2449e7.prototype.flag_eff_poison = a0_0x2449e7.prototype.flag_eff_bleeding = false;
a0_0x2449e7.prototype.flag_eff_hot = false;
a0_0x2449e7.prototype.flag_eff_aloeveraHealing = false;
a0_0x2449e7.prototype.flag_iceSliding = false;
a0_0x2449e7.prototype.underwaterA = 0;
4;
a0_0x2449e7.prototype.nickNameA = 0;
a0_0x2449e7.prototype.bleedingA = 0;
a0_0x2449e7.prototype.stunA = 0;
a0_0x2449e7.prototype.frozenEffA = a0_0x2449e7.prototype.onFireEffA = a0_0x2449e7.prototype.effA_healing = a0_0x2449e7.prototype.effA_hot = 0;
a0_0x2449e7.prototype.effA_aloeveraHealing = a0_0x2449e7.prototype.effA_poison = a0_0x2449e7.prototype.effA_bleeding = a0_0x2449e7.prototype.effA_stunk = 0;
a0_0x2449e7.prototype.effA_constricted = a0_0x2449e7.prototype.effA_slimed = a0_0x2449e7.prototype.effA_webStuck = 0;
a0_0x2449e7.prototype.effA_speared = 0;
a0_0x2449e7.prototype.effA_dirtStuck = 0;
a0_0x2449e7.prototype.nameA = 0;
a0_0x2449e7.prototype.loadedSkinImg = null;
a0_0x2449e7.prototype.outlineW = null;
a0_0x2449e7.prototype.teamID = 0;
a0_0x2449e7.prototype.wins1v1 = 0;
a0_0x2449e7.prototype.birdNoAnimationFlyWingAngle = -0.2;
a0_0x2449e7.prototype.getNameSize = function () {
  return 10;
};
a0_0x2449e7.prototype.setNick = function (_0x282d6a) {
  this.nickName = _0x282d6a;
  if (this.nickTXT == null) {
    this.nickTXT = new a0_0x993fcb(this.getNameSize(), "white");
    this.nickTXT.strokeW = 1.5;
    this.nickTXT.multiLine = true;
    this.nickTXT.renderScale = 5;
    this.nickTXT.setText(this.nickName);
  } else {
    this.nickTXT.setFontSize(this.getNameSize());
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x2449e7.prototype.getOutlineColor = function () {
  var _0x23463a = this.curBiome;
  if (this.id > 0) {
    var _0x346c04 = a0_0x283a01[a0_0x15e4d1];
    if (this.alwaysPlainOutline) {
      return a0_0x59eaa4;
    }
    var _0x1dd21a = a0_0x17b807 != a0_0x5a32c9 || _0x346c04 && _0x346c04.teamID != this.teamID && this.teamID != 0;
    if (_0x1dd21a) {
      if (this.isEdibleOutlined()) {
        return a0_0x52f121;
      }
      if (a0_0x2a6a35[this.animalType - 1] > 0 && this.id != a0_0x15e4d1) {
        return a0_0x1838b8;
      }
    }
    if (this.flag_inWater) {
      _0x23463a = a0_0x5986dd;
    }
    if (a0_0x211683 != null && this.id == a0_0x211683.id && !a0_0x59c93b) {
      return "cyan";
    }
  }
  return a0_0x4e8ba0(_0x23463a);
};
a0_0x2449e7.prototype.drawEyeAtPos = function (_0x413a6d, _0x43e597) {
  var _0x4bb9bd = 4.5;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(_0x413a6d, _0x43e597, _0x4bb9bd, 0, Math.PI * 2);
  a0_0x1306ae.fillStyle = "black";
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.fillStyle = "white";
  var _0x50c463 = _0x413a6d - 2;
  var _0x4e00ec = _0x43e597 - 1;
  a0_0x1306ae.arc(_0x50c463, _0x4e00ec, _0x4bb9bd * 0.22, 0, Math.PI * 2);
  a0_0x1306ae.fill();
};
a0_0x2449e7.prototype.animalInfo = function () {
  var _0x13f0bd = {};
  switch (this.animalType) {
    case a0_0x120a91:
      _0x13f0bd.aniName = "Snail";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "You're a super slow snail!";
      _0x13f0bd.aniCol = "#fcc02b";
      _0x13f0bd.skinName = "snail";
      break;
    case a0_0x41cceb:
      _0x13f0bd.aniName = "Mouse";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "You're a tiny mouse, eat food to grow!";
      _0x13f0bd.aniCol = "#9BA9B9";
      _0x13f0bd.skinName = "mouse";
      break;
    case a0_0x621981:
      _0x13f0bd.aniName = "Rabbit";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to RABBIT! \nPress W to burrow a hole to hide in!";
      _0x13f0bd.aniCol = "#AA937E";
      _0x13f0bd.skinName = "rabbit";
      break;
    case a0_0x31a123:
      _0x13f0bd.aniName = "Pig";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to PIG!\n Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      _0x13f0bd.aniCol = "#DD6BD4";
      _0x13f0bd.skinName = "pig";
      break;
    case a0_0x368012:
      _0x13f0bd.aniName = "Fox";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to FOX! ,\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x13f0bd.aniCol = "#FF9D43";
      _0x13f0bd.skinName = "fox";
      break;
    case a0_0x2d5af4:
      _0x13f0bd.aniName = "Deer";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to DEER! \nPress W to dig up food! \nDig in mud for better food!\n Hint:Check water areas for new food sources!";
      _0x13f0bd.aniCol = "#C4773E";
      _0x13f0bd.skinName = "deer";
      break;
    case a0_0x391884:
      _0x13f0bd.aniName = "Mole";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to MOLE!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
      _0x13f0bd.aniCol = "#4C4A45";
      _0x13f0bd.skinName = "mole";
      break;
    case a0_0x5ce3eb:
      _0x13f0bd.aniName = "Zebra";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to ZEBRA! \nPress W to kick side ways!";
      _0x13f0bd.aniCol = "#FFFFFF";
      _0x13f0bd.skinName = "zebra";
      break;
    case a0_0x2c2f52:
      _0x13f0bd.aniName = "Lion";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to LION!\n Press W to release a mighty ROAR (Rawr!)!";
      _0x13f0bd.aniCol = "#f8c923";
      _0x13f0bd.skinName = "lion";
      break;
    case a0_0x1458da:
      _0x13f0bd.aniName = "Bear";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
      _0x13f0bd.aniCol = "#99591C";
      _0x13f0bd.skinName = "bear";
      break;
    case a0_0x13971c:
      _0x13f0bd.aniName = "Croc";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to CROCODILE!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
      _0x13f0bd.aniCol = "#30F51C";
      _0x13f0bd.skinName = "croc";
      break;
    case a0_0x50d9f7:
      _0x13f0bd.aniName = "Hippo";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to HIPPO!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x13f0bd.aniCol = "#945A99";
      _0x13f0bd.skinName = "hippo";
      break;
    case a0_0x5812ad:
      _0x13f0bd.aniName = "Rhino";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to RHINO!\n Press W to CHARGE with your mighty horn!";
      _0x13f0bd.aniCol = "#94a3a9";
      _0x13f0bd.skinName = "rhino";
      break;
    case a0_0x306fa0:
      _0x13f0bd.aniName = "Shrimp";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.aniCol = "#f88e37";
      _0x13f0bd.skinName = "shrimp";
      _0x13f0bd.upgradeText = "You're a tiny shrimp, eat food to grow bigger!";
      break;
    case a0_0x1d6a29:
      _0x13f0bd.aniName = "Trout";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to TROUT!\nHint: Hold Left-click to RUN! (Uses extra water)";
      _0x13f0bd.aniCol = "#ac8686";
      _0x13f0bd.skinName = "trout";
      break;
    case a0_0x200e1e:
      _0x13f0bd.aniName = "Crab";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to CRAB!\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
      _0x13f0bd.aniCol = "#bf2408";
      _0x13f0bd.skinName = "crab";
      break;
    case a0_0x384a46:
      _0x13f0bd.aniName = "Squid";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to SQUID!\n Squids can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
      _0x13f0bd.aniCol = "#40dda4";
      _0x13f0bd.skinName = "squid";
      break;
    case a0_0x59f431:
      _0x13f0bd.aniName = "Shark";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to SHARK!\n A vicious predator of the oceans!";
      _0x13f0bd.aniCol = "#999fc6";
      _0x13f0bd.skinName = "shark";
      break;
    case a0_0x187484:
      _0x13f0bd.aniName = "Sea-horse";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to SEA HORSE!\n An agile hunter!";
      _0x13f0bd.aniCol = "#73BE2F";
      _0x13f0bd.skinName = "seahorse";
      break;
    case a0_0xbd6036:
      _0x13f0bd.aniName = "Jellyfish";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to JELLYFISH!\n A slowly-turning animal that can grow quite large!";
      _0x13f0bd.aniCol = "#FDB9BA";
      _0x13f0bd.skinName = "jellyfish";
      break;
    case a0_0x4a4da1:
      _0x13f0bd.aniName = "Turtle";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to TURTLE!\n Lives well on land & water! (On land, Press W to go into your shell!)";
      _0x13f0bd.aniCol = "#502E1A";
      _0x13f0bd.skinName = "turtle";
      break;
    case a0_0x4441e0:
      _0x13f0bd.aniName = "Stingray";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to STINGRAY!\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
      _0x13f0bd.aniCol = "#164336";
      _0x13f0bd.skinName = "stingray";
      break;
    case a0_0x17dc35:
      _0x13f0bd.aniName = "The Kraken";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to THE KRAKEN!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
      _0x13f0bd.aniCol = "#64a034";
      _0x13f0bd.skinName = "kraken";
      break;
    case a0_0x2b355b:
      _0x13f0bd.aniName = "Pufferfish";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to PUFFERFISH!\n (Hold W to inflate- become spiky, and dangerous to touch!)";
      _0x13f0bd.aniCol = "#6C5C2C";
      _0x13f0bd.skinName = "pufferfish";
      break;
    case a0_0x594c30:
      _0x13f0bd.aniName = "Killer Whale";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Killer Whale! \nWhales blow out water when diving! (And sometimes other loot!)";
      _0x13f0bd.aniCol = "#141414";
      _0x13f0bd.skinName = "killerwhale";
      break;
    case a0_0x182226:
      _0x13f0bd.aniName = "Swordfish";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n (Press W to rush with your sharp nose!)";
      _0x13f0bd.aniCol = "#689CD7";
      _0x13f0bd.skinName = "swordfish";
      break;
    case a0_0x1efea6:
      _0x13f0bd.aniName = "Gorilla";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Gorillas are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
      _0x13f0bd.aniCol = "#323232";
      _0x13f0bd.skinName = "gorilla";
      break;
    case a0_0x2f54ae:
      _0x13f0bd.aniName = "Octopus";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Octopus!\nHold W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
      _0x13f0bd.aniCol = "#ff8340";
      _0x13f0bd.skinName = "octopus";
      break;
    case a0_0x59b763:
      _0x13f0bd.aniName = "Dragon";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
      _0x13f0bd.aniCol = "#22FF8A";
      _0x13f0bd.skinName = "dragon";
      break;
    case a0_0x332990:
      _0x13f0bd.aniName = "Black Dragon";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
      _0x13f0bd.aniCol = "black";
      _0x13f0bd.skinName = "blackdragon";
      break;
    case a0_0x357359:
      _0x13f0bd.aniName = "Giant Spider";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Place web around the game to catch prey!";
      _0x13f0bd.aniCol = "black";
      _0x13f0bd.skinName = "giantSpider";
      break;
    case a0_0x22a451:
      _0x13f0bd.aniName = "Cobra";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
      _0x13f0bd.aniCol = "black";
      _0x13f0bd.skinName = "cobra";
      break;
    case a0_0x52bfa4:
      _0x13f0bd.aniName = "Boa Constrictor";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Coil and suffocate other animals!";
      _0x13f0bd.aniCol = "black";
      _0x13f0bd.skinName = "boaConstrictor";
      break;
    case a0_0x45db7b:
      _0x13f0bd.aniName = "T-REX";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
      _0x13f0bd.aniCol = "#862A2A";
      _0x13f0bd.skinName = "trex";
      break;
    case a0_0x56479a:
      _0x13f0bd.aniName = "Giraffe";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Giraffe!\nGiraffe have huge legs and stomp anyone in their way!";
      _0x13f0bd.aniCol = "#E9BD23";
      _0x13f0bd.skinName = "giraffe";
      break;
    case a0_0xd29085:
      _0x13f0bd.aniName = "Eagle";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Eagle!\nEagles can fly up other animals in the air! !\n";
      _0x13f0bd.aniCol = "#5b400d";
      _0x13f0bd.skinName = "eagle";
      break;
    case a0_0x90abb:
      _0x13f0bd.aniName = "Arctic Fox";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
      _0x13f0bd.aniCol = "#CFCFCF";
      _0x13f0bd.skinName = "arctic/arcticfox";
      break;
    case a0_0x303108:
      _0x13f0bd.aniName = "Arctic Hare";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n \nPress W to burrow a hole to hide in!";
      _0x13f0bd.aniCol = "#D5D5D5";
      _0x13f0bd.skinName = "arctic/arctichare";
      break;
    case a0_0x1c04bf:
      _0x13f0bd.aniName = "The Yeti!";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n So it really exists... \n Hold W to turn into snow, release W to freeeeeze!";
      _0x13f0bd.aniCol = "#839eb5";
      _0x13f0bd.skinName = "arctic/yeti";
      break;
    case a0_0x1e02a7:
      _0x13f0bd.aniName = "Chipmunk";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "";
      _0x13f0bd.aniCol = "#A77C30";
      _0x13f0bd.skinName = "arctic/chipmunk";
      break;
    case a0_0x4f00b9:
      _0x13f0bd.aniName = "Muskox";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Press W to charge with your horns! \nPlus move decently on ice!";
      _0x13f0bd.aniCol = "#231f18";
      _0x13f0bd.skinName = "arctic/muskox";
      break;
    case a0_0xb8200c:
      _0x13f0bd.aniName = "Penguin";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
      _0x13f0bd.aniCol = "#FFFFFF";
      _0x13f0bd.skinName = "arctic/penguin";
      break;
    case a0_0x56a2ab:
      _0x13f0bd.aniName = "Polar Bear";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
      _0x13f0bd.aniCol = "#e4e4e4";
      _0x13f0bd.skinName = "arctic/bear/bear";
      break;
    case a0_0x8a2dda:
      _0x13f0bd.aniName = "Seal";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Seals can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x13f0bd.aniCol = "#cfcfcf";
      _0x13f0bd.skinName = "arctic/seal";
      break;
    case a0_0x4b16c6:
      _0x13f0bd.aniName = "Snow leopard";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Press W to get a speed boost! (Every 8 seconds)!";
      _0x13f0bd.aniCol = "#cfcfcf";
      _0x13f0bd.skinName = "arctic/snowleopard";
      break;
    case a0_0x525e00:
      _0x13f0bd.aniName = "Walrus";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
      _0x13f0bd.aniCol = "#633838";
      _0x13f0bd.skinName = "arctic/walrus";
      break;
    case a0_0x17ec36:
      _0x13f0bd.aniName = "Reindeer";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
      _0x13f0bd.aniCol = "#a68976";
      _0x13f0bd.skinName = "arctic/reindeer";
      break;
    case a0_0x5f1ae8:
      _0x13f0bd.aniName = "Wolf";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Wolf paws turn very well on ice!\n Press W to howl!";
      _0x13f0bd.aniCol = "#6B6B6B";
      _0x13f0bd.skinName = "arctic/wolf";
      break;
    case a0_0x58b076:
      _0x13f0bd.aniName = "Wolverine";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
      _0x13f0bd.aniCol = "#843A0F";
      _0x13f0bd.skinName = "arctic/wolverine";
      break;
    case a0_0x5d0d4b:
      _0x13f0bd.aniName = "Mammoth";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
      _0x13f0bd.aniCol = "#9d4717";
      _0x13f0bd.skinName = "arctic/mammoth";
      break;
    case a0_0x55a097:
      _0x13f0bd.aniName = "Donkey";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Press W to Kick any animal behind you";
      _0x13f0bd.aniCol = "#8c7c64";
      _0x13f0bd.skinName = "donkey";
      break;
    case a0_0x4f58e6:
      _0x13f0bd.aniName = "Sabertooth Tiger";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Sabertooth Tiger!\nSabertooth Tigers are great swimmers, dominate the Lakes/Oceans/Mud!";
      _0x13f0bd.aniCol = "#945A99";
      _0x13f0bd.skinName = "sabertoothtiger";
      break;
    case a0_0x54926b:
      _0x13f0bd.aniName = "Elephant";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to " + _0x13f0bd.aniName + "!\n Use your long trunk to attack and eat food!";
      _0x13f0bd.aniCol = "#945A99";
      _0x13f0bd.skinName = "elephant";
      break;
    case a0_0x3b5853:
      _0x13f0bd.aniName = "Blue Whale";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Blue Whale!\n Smash with your powerful tail!";
      _0x13f0bd.aniCol = "#945A99";
      _0x13f0bd.skinName = "bluewhale";
      break;
    case a0_0x35d037:
      _0x13f0bd.aniName = "Hedgehog";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Hedgehog!\n (Hold W to become spiky, and dangerous to touch!)";
      _0x13f0bd.aniCol = "#5b400d";
      _0x13f0bd.skinName = "hedgehog";
      break;
    case a0_0x487fb5:
      _0x13f0bd.aniName = "King Crab";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to a KING CRAB!";
      _0x13f0bd.aniCol = "#971f0e";
      _0x13f0bd.skinName = "kingcrab";
      break;
    case a0_0x36faeb:
      _0x13f0bd.aniName = "Lemming";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "";
      _0x13f0bd.aniCol = "#A77C30";
      _0x13f0bd.skinName = "arctic/lemming";
      break;
    case a0_0x40fe0d:
      _0x13f0bd.aniName = "Frog";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Frog!!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "frog/frog";
      break;
    case a0_0x5c6ee3:
      _0x13f0bd.aniName = "Ostrich";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Ostrich! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "ostrich/ostrich";
      break;
    case a0_0x2c361c:
      _0x13f0bd.aniName = "Pelican";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Pelican! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "pelican/pelican";
      break;
    case a0_0x23c69e:
      _0x13f0bd.aniName = "Falcon";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Falcon! \nFly, and do a powerful dive attack! Aim it well.";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "falcon/falcon";
      break;
    case a0_0xff40c0:
      _0x13f0bd.aniName = "Snowy Owl";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Snowy Owl!\n Aim the crosshair, \n right click/W when it's on top of prey, to attack!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "snowyowl/snowyowl";
      break;
    case a0_0x20f7bd:
      _0x13f0bd.aniName = "Baby Ostrich";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.upgradeText = "UPGRADED to Baby Ostrich!!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "ostrich/ostrich-baby";
      break;
    case a0_0x1e1209:
      _0x13f0bd.aniName = "Phoenix";
      _0x13f0bd.upgradeText = "UPGRADED to Phoenix!\nCreate powerful fire tornados to burn your enemies alive!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "phoenix/phoenix";
      break;
    case a0_0x5aaf14:
      _0x13f0bd.aniName = "Sea Monster";
      _0x13f0bd.upgradeText = "UPGRADED to Sea Monster!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "seamonster";
      break;
    case a0_0x53b0d7:
      _0x13f0bd.aniName = "Land Monster";
      _0x13f0bd.upgradeText = "UPGRADED to Land Monster!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "landmonster";
      break;
    case a0_0xadcba8:
      _0x13f0bd.aniName = "Ice Monster";
      _0x13f0bd.upgradeText = "UPGRADED to Ice Monster!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "icemonster";
      break;
    case a0_0x77ab87:
      _0x13f0bd.aniName = "Dino Monster";
      _0x13f0bd.upgradeText = "UPGRADED to Dino Monster!";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "dinomonster";
      break;
    case a0_0x14b677:
      _0x13f0bd.aniName = "Pigeon";
      _0x13f0bd.upgradeText = "UPGRADED to Pigeon!\nHold right click (or W) to fly!\n";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "pigeon/pigeon";
      break;
    case a0_0x5aa20b:
      _0x13f0bd.aniName = "Toucan";
      _0x13f0bd.upgradeText = "UPGRADED to Toucan!\nHold right click (or W) to fly!(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)";
      _0x13f0bd.aniCol = "#FF9000";
      _0x13f0bd.skinName = "toucan/toucan";
      break;
    default:
      _0x13f0bd.aniName = "(Animal)";
      _0x13f0bd.aniDesc = "";
      _0x13f0bd.aniCol = "#000000";
      _0x13f0bd.upgradeText = "UPGRADED!";
  }
  return _0x13f0bd;
};
a0_0x2449e7.prototype.loadAnimalSkinImg = function () {
  var _0x555207 = this.getSkinName();
  this.loadedSkinImg = null;
  if (_0x555207 && !a0_0x2bafdc) {
    this.loadedSkinImg = this.getSkinImageObj("skins/" + _0x555207 + ".png");
  }
};
a0_0x2449e7.prototype.loadAnimalSkinImgAsync = async function () {
  var _0x4b4206 = this.getSkinName();
  this.loadedSkinImg = await this.getSkinImageObjAsync("skins/" + _0x4b4206 + ".png");
};
a0_0x2449e7.prototype.getIdealOpacity = function () {
  if (this.flag_usingDiveAbility || this.flag_underWater || this.flag_usingAbility && (this.animalType == a0_0x391884 || this.animalType == a0_0x2f54ae || this.animalType == a0_0x1c04bf)) {
    return 0;
  } else {
    return 1;
  }
};
a0_0x2449e7.prototype.isAnimalInside1v1Arena = function () {
  if (a0_0x38d11f != null && a0_0x59c93b) {
    if (a0_0x38d11f.p1ID == this.id || a0_0x38d11f.p2ID == this.id) {
      return true;
    }
  } else if (a0_0x15fdd0[this.id] || a0_0x15fdd0[a0_0x15e4d1] && a0_0x15e4d1 == this.id) {
    return true;
  }
  return false;
};
a0_0x2449e7.prototype.setStealth = function () {
  if (this.isAnimalInside1v1Arena() || this.flag_isInArena) {
    this.idealOp = 0.9;
  } else if (this.flag_stealth || this.flag_inHidingHole) {
    this.idealOp = 0.2;
  }
};
a0_0x2449e7.prototype.setOpacityForFlyingAnimals = function (_0x82b684) {
  if (this.gabbedByAniID == this.id || this.grabbedAniID == this.id) {
    return;
  }
  if (this.id != a0_0x15e4d1) {
    this.idealOp = 0.6;
  }
};
a0_0x2449e7.prototype.getImageDataKey = function () {
  return this.animalType + "__" + this.animalSpecies + "__" + this.animalSubSpecies + "__" + this.animalPremiumSkin + "__" + this.mopeSeasonID + "__" + this.skinThemeID;
};
const a0_0x3b3c74 = {};
const a0_0x160e7b = "cached_animal_image_data_keys";
const a0_0x5beb74 = () => {
  if (a0_0x530c0d) {
    const _0x521366 = localStorage.getItem(a0_0x160e7b);
    console.error("KEYS:", _0x521366);
    if (_0x521366) {
      JSON.parse(_0x521366).forEach(_0x1128b4 => {
        a0_0x3b3c74[_0x1128b4] = localStorage.getItem(_0x1128b4);
      });
    }
  }
};
a0_0x2449e7.prototype.getUpgradeImagePath = function () {
  let _0x594493 = this.animalInfo().skinName;
  let _0xa0f9 = "";
  if (!_0x594493 || _0x594493.toLowerCase().includes("scorpion") || this.animalSpecies == 200) {
    _0xa0f9 = this.getSkinImagePath("skins/" + this.getSkinName()) + ".png";
  } else {
    _0xa0f9 = this.getSkinImagePath("skins/" + _0x594493 + ".png");
  }
  return _0xa0f9;
};
a0_0x2449e7.prototype.getImageData = async function () {
  const _0x481118 = this.getImageDataKey();
  if (_0x481118 in a0_0x3b3c74) {
    return a0_0x3b3c74[_0x481118];
  }
  this.flag_fullAlpha = true;
  this.buttonScaleF = 1;
  this.imgSizeF = 1;
  var _0x39262f = this.animalInfo();
  var _0xeab058 = _0x39262f.aniCol;
  this.skinImgName = _0x39262f.skinName;
  this.skinNotLoadedColor = _0xeab058;
  await this.loadAnimalSkinImgAsync();
  this.draw();
  return new Promise(async (_0x4f27e1, _0x2c9d26) => {
    const _0x424cb4 = document.createElement("canvas");
    const _0x93c8b2 = 140;
    const _0x30378d = 110;
    _0x424cb4.width = _0x93c8b2;
    _0x424cb4.height = _0x93c8b2;
    const _0x36111e = window.ctx;
    window.ctx = _0x424cb4.getContext("2d");
    this.w = _0x30378d;
    this.h = _0x30378d;
    this.rad = _0x30378d / 2;
    this.skinRad = _0x30378d / 2;
    this.idealOp = 1;
    this.underwaterA = 0;
    window.ctx.translate(_0x93c8b2 / 2, _0x93c8b2 / 2);
    window.ctx.globalAlpha = 1;
    this.draw();
    const _0xaa37b8 = _0x424cb4.toDataURL();
    window.ctx = _0x36111e;
    a0_0x3b3c74[_0x481118] = _0xaa37b8;
    if (a0_0x530c0d) {
      try {
        localStorage.setItem(a0_0x160e7b, JSON.stringify(Object.keys(a0_0x3b3c74)));
        localStorage.setItem(_0x481118``, _0xaa37b8);
      } catch (_0x4fa0eb) {}
    }
    return _0x4f27e1(_0xaa37b8);
  });
};
a0_0x2449e7.prototype.idealOp = 1;
a0_0x2449e7.prototype.customDraw = function (_0x4d1cbe) {
  this.preLoad();
  var _0x489346 = this.animalInfo();
  var _0x575910 = _0x489346.aniCol;
  this.skinImgName = _0x489346.skinName;
  this.skinNotLoadedColor = _0x575910;
  switch (this.animalType) {
    case a0_0x2b355b:
    case a0_0x4f00b9:
    case a0_0x182226:
    case a0_0x4a4da1:
    case a0_0x13971c:
      tailLen = this.rad * 0.16;
      break;
  }
  this.loadAnimalSkinImg();
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle);
  var _0x27ca16 = 0;
  var _0x505e4c = (a0_0x24806e - this.spawnTime) / 1000;
  if (this.flag_eff_wobbling) {
    var _0x1984e4 = a0_0x423a9f(_0x505e4c, 1.25, 0.1, 2);
    this.rad += _0x1984e4;
  }
  this.idealOp = this.getIdealOpacity();
  this.setStealth();
  if (this.flag_flying) {
    this.setOpacityForFlyingAnimals();
  }
  if (this.flag_fullAlpha) {
    a0_0x1306ae.globalAlpha = 1;
  } else {
    this.underwaterA += (this.idealOp - this.underwaterA) * 0.1;
    a0_0x1306ae.globalAlpha *= this.underwaterA;
  }
  if (this.flag_eff_invincible) {
    var _0x341be1 = 1;
    var _0x1ab652 = 0.3;
    var _0x1a74be = 1;
    var _0x53e204 = (_0x1a74be - _0x1ab652) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x1ab652 + _0x53e204 + _0x53e204 * Math.sin(Math.PI * 2 / _0x341be1 * ((a0_0x24806e - this.spawnTime) / 1000));
  }
  this.outlineW = 2 + _0x27ca16;
  if (!this.dead && !this.flag_underWater && (this.animalType != a0_0x391884 || !this.flag_usingAbility)) {
    if (!this.flag_underWater) {
      var _0xfdf8f2 = this.getOutlineColor();
      if (this.killerId == 0 && (!this.flag_flying || this.id != a0_0x15e4d1) && (a0_0x56bbb3 != a0_0xbf9ed5 || _0xfdf8f2 == a0_0x52f121 || _0xfdf8f2 == a0_0x1838b8)) {
        if (this.teamID > 0 && a0_0x1a5043 != null && a0_0x17b807 == a0_0x5a32c9) {
          a0_0x1306ae.save();
          a0_0x1306ae.globalAlpha = this.isAnimalInside1v1Arena() ? 0.3 : this.idealOp;
          a0_0x50fd5c(0, 0, this.rad + 2, a0_0x1a5043.getTeamColor(this.teamID));
          a0_0x1306ae.restore();
        }
        this.drawAnimalUnderSkinCircle(_0xfdf8f2);
      } else {
        this.outlineW = 0;
      }
    }
  }
  this.drawUnderEffects();
  if (this.canDrawAnimalSkin()) {
    this.drawAnimalSkin(_0xfdf8f2);
  }
  this.drawUnderWater();
  if (this.animalPremiumSkin != 0 && !this.flag_eff_shivering) {
    this.sparkleAnim();
  }
  a0_0x1306ae.restore();
  this.drawTopEffects();
  this.drawLowWaterDrop();
  if (!this.flag_isInArena) {
    if (this.id == a0_0x15e4d1 && this.flag_viewing1v1Invite) {} else if (!this.flag_usingDiveAbility) {
      this.drawNickName(a0_0x331fda == null ? this.idealOp : 0.2);
    }
  }
  this.drawZombieEffect();
};
a0_0x2449e7.prototype.canDrawAnimalSkin = function () {
  return true;
};
a0_0x2449e7.prototype.drawZombieEffect = function () {
  if (this.effecT_isZombie) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.6;
    a0_0x50fd5c(0, 0, this.skinRad, "#B6CF40");
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.drawLowWaterDrop = function () {
  if (this.flag_lowWat) {
    var _0x4e4cd7 = 1.2;
    var _0x3b48c7 = 0.2;
    var _0x489136 = 0.8;
    var _0x2ea492 = (_0x489136 - _0x3b48c7) * 0.5;
    var _0x4f7003 = _0x3b48c7 + _0x2ea492 + _0x2ea492 * Math.sin(Math.PI * 2 / _0x4e4cd7 * (a0_0x24806e / 1000));
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x4f7003;
    if (this.animalType == a0_0x332990 || this.animalType == a0_0x1e1209 || this.animalType == a0_0x53b0d7 || this.animalType == a0_0x5aa20b && this.animalSpecies == 4) {
      a0_0x1306ae.fillStyle = a0_0xcf4b9b;
    } else if (this.animalType == a0_0x5aaf14) {
      a0_0x1306ae.fillStyle = a0_0x52e0b8;
    } else if (this.animalType == a0_0x407000) {
      a0_0x1306ae.fillStyle = a0_0xad74f7;
    } else {
      a0_0x1306ae.fillStyle = a0_0x41d6b3;
    }
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, this.rad + 5, 5, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.sparkleInterval = 5;
a0_0x2449e7.prototype.sparklDuration = 3;
a0_0x2449e7.prototype.sparkleNext = 0;
a0_0x2449e7.prototype.sparkleAniT = 0;
a0_0x2449e7.prototype.setSparkleInterval = function (_0x425e11, _0x1590fd) {
  this.sparkleInterval = _0x425e11;
  this.sparklDuration = _0x1590fd;
  this.setSparkleXY();
};
a0_0x2449e7.prototype.seSparkle = function () {
  this.sparkleAniT = +new Date() + this.sparklDuration * 1000;
  this.sparkleNext = this.sparkleAniT + this.sparkleInterval * 1000;
  this.setSparkleXY();
};
a0_0x2449e7.prototype.isMouseHovering = false;
a0_0x2449e7.prototype.sparkleAnim = function () {
  if (this.animalPremiumSkin && (a0_0x24806e - this.spawnTime) / 1000 > 5) {
    if (this.id > 0 || this.id == 0 && this.isMouseHovering) {
      if (+new Date() > this.sparkleNext) {
        this.seSparkle();
        this.setSparkleXY();
      }
    }
    if (this.sparkleAniT > +new Date()) {
      this.showSparkling();
    }
  }
};
a0_0x2449e7.prototype.sparkleAng = 0;
a0_0x2449e7.prototype.sparkleX = 0;
a0_0x2449e7.prototype.sparkleY = 0;
a0_0x2449e7.prototype.setSparkleXY = function () {
  var _0x8cdcf7 = this.rad / 2;
  var _0x3f951f = _0x8cdcf7 * 0.3;
  var _0x3a272e = _0x8cdcf7;
  var _0x3060d4 = a0_0x39b824(_0x3f951f, _0x3a272e);
  var _0x57f4f8 = a0_0x39b824(_0x3f951f, _0x3a272e);
  _0x3060d4 *= Math.random() * 10 > 5 ? -1 : 1;
  _0x57f4f8 *= Math.random() * 10 > 5 ? -1 : 1;
  this.sparkleX = _0x3060d4;
  this.sparkleY = _0x57f4f8;
};
a0_0x2449e7.prototype.showSparkling = function () {
  var _0x25d208 = 5;
  a0_0x1306ae.save();
  var _0x442b24 = 1.5;
  var _0x33155a = 0.3;
  var _0x444f0e = 1;
  var _0x223460 = (_0x444f0e - _0x33155a) * 0.5;
  a0_0x1306ae.globalAlpha *= _0x33155a + _0x223460 + _0x223460 * Math.sin(Math.PI * 2 / _0x442b24 * ((a0_0x24806e - this.spawnTime) / 1000));
  this.sparkleAng += 0.5;
  var _0xc8e6c7 = 1;
  var _0x556123 = 0;
  a0_0x1306ae.fillStyle = "#faffb6";
  for (i = 0; i < 3; i++) {
    a0_0x1306ae.save();
    a0_0x1306ae.translate(this.sparkleX, this.sparkleY);
    a0_0x1306ae.rotate(a0_0x873ec7(this.sparkleAng));
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(a0_0x873ec7(_0x556123));
    a0_0x1306ae.scale(_0xc8e6c7 * 0.5, _0x25d208);
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, _0xc8e6c7, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
    _0x556123 += 60;
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.sparkleX, this.sparkleY, _0xc8e6c7, 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
};
a0_0x2449e7.prototype.shakeOffsetX = 0;
a0_0x2449e7.prototype.shakeOffsetY = 0;
a0_0x2449e7.prototype.updateNick = function () {
  if (a0_0x13885f && this.flag_can1v1) {
    let _0x2afcfe = "\n(wins:" + this.wins1v1 + ")";
    this.nickTXT.setText(this.nickName + _0x2afcfe);
    this.winsAddedInNick = true;
  } else if (this.winsAddedInNick) {
    this.winsAddedInNick = false;
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x2449e7.prototype.drawAnimalSkin = function (_0x149dfb) {
  a0_0x1306ae.save();
  this.updateNick();
  if (this.flag_eff_shivering) {
    var _0x10578c = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x3cf7c3 = 0.1;
    var _0x516ba4 = this.rad * this.shiverF;
    this.shakeOffsetX = _0x516ba4 * Math.sin(Math.PI * 2 / _0x3cf7c3 * _0x10578c);
    var _0x3cf7c3 = 0.05;
    var _0x516ba4 = this.rad * this.shiverF;
    this.shakeOffsetY = _0x516ba4 * Math.sin(Math.PI * 2 / _0x3cf7c3 * _0x10578c);
    a0_0x1306ae.translate(-this.shakeOffsetX, -this.shakeOffsetY);
  }
  this.drawPropsUnderSkin();
  this.beforeDrawAnimalSkin();
  if (this.id > 0) {
    this.drawUnderSkinTail(_0x149dfb);
  }
  this.drawUnderSkinImgOutline();
  this.drawUnderSkinImg();
  this.drawSkinImg();
  this.drawOnTopOfSkinImg();
  this.drawPropsTopOfSkin();
  this.drawStatueEffect();
  a0_0x1306ae.restore();
};
a0_0x2449e7.prototype.drawStatueEffect = function () {
  if (this.flag_eff_statue) {
    var _0x5b3a2f = null;
    switch (this.eff_statueType) {
      case 1:
        _0x5b3a2f = "snowball";
        break;
      case 2:
        _0x5b3a2f = "goldball";
        break;
    }
    if (_0x5b3a2f) {
      var _0x271fbf = this.getSkinImageObj("img/" + _0x5b3a2f + ".png");
      if (_0x271fbf) {
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha = a0_0x15e4d1 == this.id ? 0.7 : 1;
        var _0x271d3f = this.rad * 1.2;
        a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
        a0_0x1306ae.drawImage(_0x271fbf, -_0x271d3f, -_0x271d3f, _0x271d3f * 2, _0x271d3f * 2);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x2449e7.prototype.drawElectroStunEffect = function () {
  if (this.flag_eff_electroStun === true) {
    var _0x2c421a = Math.trunc(a0_0x24806e / 250) % 4;
    let _0x5aa3f2 = "skins/land/birdmonster/0/stun/" + _0x2c421a + ".png";
    var _0x422d17 = this.getSkinImageObj(_0x5aa3f2);
    if (_0x422d17) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1;
      var _0x325927 = this.rad * 1.2;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x422d17, -_0x325927, -_0x325927, _0x325927 * 2, _0x325927 * 2);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x2449e7.prototype.propsEnabled = false;
a0_0x2449e7.prototype.drawPropsUnderSkin = function (_0x439671) {
  if (this.propsEnabled) {
    if (this.animalType == a0_0x41cceb) {}
  }
};
a0_0x2449e7.prototype.drawPropsTopOfSkin = function (_0xa64a90) {
  if (this.propsEnabled) {
    if (this.animalType == a0_0x41cceb) {
      this.drawProp("scarfs", 1);
      this.drawProp("glasses", 0);
      this.drawProp("hats", 1);
    }
  }
};
a0_0x2449e7.prototype.drawProp = function (_0x7c31a1, _0x704944) {
  var _0x4162bc = this.skinScale;
  var _0x546b95 = this.skinRad + 0.9;
  var _0x190c8e = this.getSkinImageObj("props/" + this.animalType + "/" + _0x7c31a1 + "/" + _0x704944 + ".png");
  if (_0x190c8e) {
    a0_0x1306ae.drawImage(_0x190c8e, -_0x546b95 * _0x4162bc, -_0x546b95 * _0x4162bc, _0x546b95 * 2 * _0x4162bc, _0x546b95 * 2 * _0x4162bc);
  }
};
a0_0x2449e7.prototype.beforeDrawAnimalSkin = function (_0x4f6619) {};
a0_0x2449e7.prototype.drawUnderSkinTail = function (_0x1ebf75) {
  if (this.killerId > 0 || this.flag_underWater) {
    return;
  }
  if (this.animalType != a0_0x621981 && this.animalType != a0_0x41cceb && this.animalType != a0_0x200e1e) {
    var _0x22bd19 = this.animalInfo();
    var _0x4ceca7 = _0x22bd19.aniCol;
    var _0x4eba55 = this.rad * 0.1;
    var _0x5d1845 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x516334 = 5;
    var _0x1ee86a = 4;
    var _0x2b81aa = _0x1ee86a * Math.sin(Math.PI * 2 / _0x516334 * _0x5d1845);
    var _0x1d615c = this.outlineW * 2.5;
    var _0x466c03 = 25;
    var _0x400e71 = Math.PI / 180;
    if (this.flag_tailBitten) {
      a0_0x1306ae.fillStyle = a0_0x1838b8;
    } else {
      var _0x455ade = this.animalType;
      if (a0_0x6c0301[_0x455ade - 1] > 0 && this.id != a0_0x15e4d1) {
        a0_0x1306ae.fillStyle = a0_0x52f121;
      } else {
        a0_0x1306ae.fillStyle = _0x1ebf75;
      }
    }
    if (a0_0x56bbb3 != a0_0xbf9ed5 || a0_0x1306ae.fillStyle == a0_0x59eaa4) {
      a0_0x1306ae.beginPath();
      a0_0x1306ae.moveTo((this.rad - this.outlineW + 1) * Math.cos((270 + _0x466c03 / 2 + _0x1d615c) * _0x400e71), (this.rad - this.outlineW + 1) * Math.sin((270 + _0x466c03 / 2) * _0x400e71));
      a0_0x1306ae.lineTo((this.rad - this.outlineW + 1) * Math.cos((270 - _0x466c03 / 2 - _0x1d615c) * _0x400e71), (this.rad - this.outlineW + 1) * Math.sin((270 - _0x466c03 / 2) * _0x400e71));
      a0_0x1306ae.lineTo((this.rad + _0x4eba55 + this.outlineW) * Math.cos((270 + _0x2b81aa) * _0x400e71), (this.rad + _0x4eba55 + this.outlineW) * Math.sin((270 + _0x2b81aa) * _0x400e71));
      a0_0x1306ae.lineTo((this.rad - this.outlineW + 1) * Math.cos((270 + _0x466c03 / 2 + _0x1d615c) * _0x400e71), (this.rad - this.outlineW + 1) * Math.sin((270 + _0x466c03 / 2) * _0x400e71));
      a0_0x1306ae.fill();
    }
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      if (!this.loadedSkinImg || this.flag_tailBitten) {
        a0_0x1306ae.fillStyle = this.flag_tailBitten ? a0_0x1838b8 : _0x4ceca7;
        a0_0x1306ae.beginPath();
        a0_0x1306ae.moveTo((this.rad - this.outlineW) * Math.cos((270 + _0x466c03 / 2) * _0x400e71), (this.rad - this.outlineW) * Math.sin((270 + _0x466c03 / 2) * _0x400e71));
        a0_0x1306ae.lineTo((this.rad - this.outlineW) * Math.cos((270 - _0x466c03 / 2) * _0x400e71), (this.rad - this.outlineW) * Math.sin((270 - _0x466c03 / 2) * _0x400e71));
        a0_0x1306ae.lineTo((this.rad + _0x4eba55) * Math.cos((270 + _0x2b81aa) * _0x400e71), (this.rad + _0x4eba55) * Math.sin((270 + _0x2b81aa) * _0x400e71));
        a0_0x1306ae.lineTo((this.rad - this.outlineW) * Math.cos((270 + _0x466c03 / 2) * _0x400e71), (this.rad - this.outlineW) * Math.sin((270 + _0x466c03 / 2) * _0x400e71));
        a0_0x1306ae.fill();
      }
    }
  }
};
a0_0x2449e7.prototype.drawAnimalUnderSkinCircle = function (_0x414e8c) {
  if (!this.flag_isGrabbed) {
    if (this.playerNumberFor1v1Arena == 1) {
      _0x414e8c = "cyan";
    } else if (this.playerNumberFor1v1Arena == 2) {
      _0x414e8c = "yellow";
    } else if (this.flag_eff_isOnSpiderWeb) {
      _0x414e8c = "white";
    }
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = this.isAnimalInside1v1Arena() ? 0.3 : this.idealOp;
    a0_0x50fd5c(0, 0, this.rad, _0x414e8c);
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.devMode_num = 0;
a0_0x2449e7.prototype.hasMultipleSpecies = function () {
  return false;
};
a0_0x2449e7.prototype.drawNickName = function (_0x57f2c0) {
  if (_0x57f2c0 == 0) {
    return;
  }
  var _0x297b73 = _0x57f2c0;
  this.nickNameA += (_0x297b73 - this.nickNameA) * 0.1;
  if (this.nickName && this.nickTXT && !a0_0x17133c) {
    a0_0x1306ae.save();
    if (this.dead) {
      a0_0x1306ae.globalAlpha *= 1 - this.moveUpdF;
    } else {
      a0_0x1306ae.globalAlpha = 1;
    }
    a0_0x1306ae.globalAlpha *= this.nickNameA;
    this.nickTXT.x = 0;
    this.nickTXT.y = this.rad + 9;
    var _0x4bba1a = "#FFFFFF";
    if (this.flag_isDevMode) {
      if (!this.flag_hideDevPrint) {
        switch (this.devMode_num) {
          case 8:
            if (a0_0x211683 != null && a0_0x211683.id == this.id) {
              _0x4bba1a = "cyan";
            } else {
              _0x4bba1a = "yellow";
            }
            break;
          case 1:
            _0x4bba1a = "#e23ca6";
            break;
          case 2:
            _0x4bba1a = "#a715e6";
            break;
          case 3:
            _0x4bba1a = "#db1b18";
            break;
          case 4:
            _0x4bba1a = "#62b0c8";
            break;
          case 5:
            _0x4bba1a = "#18db38";
            break;
          case 6:
            _0x4bba1a = "#000000";
            break;
          default:
            break;
        }
      }
    }
    this.nickTXT.setColor(_0x4bba1a);
    this.nickTXT.draw();
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.drawHealthBar = function () {
  a0_0x2449e7.superClass.prototype.drawHealthBar.call(this);
  this.drawInfectionBar();
};
a0_0x2449e7.prototype.drawInfectionBar = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0xcfcd42 = a0_0x24806e < this.infectionBarTimeoutT ? 1 : 0;
  this.infectionBarA += (_0xcfcd42 - this.infectionBarA) * 0.04;
  if (this.infectionBarA > 0.001) {
    this.infectionPer += (this.infectionPer_n - this.infectionPer) * 0.1;
    this.drawBar("red", this.infectionBarA, this.infectionPer, 2, 6.5);
  }
};
a0_0x2449e7.prototype.drawUnderWater = function () {
  if (this.flag_usingDiveAbility || this.flag_underWater || this.flag_usingAbility && this.animalType == a0_0x391884) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
    this.drawWhenUnderwater();
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.drawUnderSkinImgOutline = function () {
  if (this.flag_eff_stunk) {
    a0_0x1306ae.save();
    var _0x4c9162 = 1;
    var _0x376dfd = 0.3;
    var _0x362a31 = 1;
    var _0x292fb1 = (_0x362a31 - _0x376dfd) * 0.5;
    var _0x3f1de6 = _0x376dfd + _0x292fb1 + _0x292fb1 * Math.sin(Math.PI * 2 / _0x4c9162 * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= _0x3f1de6;
    var _0x293aea = 2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * _0x3f1de6, "brown");
    a0_0x1306ae.restore();
  }
  if (this.flag_iceSliding) {
    var _0x4bd536 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x4c9162 = 0.75;
    var _0x540e54 = 1;
    var _0x34207a = _0x540e54 * Math.sin(Math.PI * 2 / _0x4c9162 * _0x4bd536);
    var _0x2e0608 = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha *= 0.8 - _0x34207a * 0.2;
    a0_0x50fd5c(0, this.rad * 0.3, this.rad * (0.9 + _0x34207a * 0.15), "#7BB7BB");
    a0_0x50fd5c(0, -this.rad * 0.3, this.rad * (1.05 + _0x34207a * 0.1), "#7BB7BB");
    a0_0x1306ae.globalAlpha = _0x2e0608;
  }
  if (this.flag_usingAbility && (this.animalType == a0_0x2d5af4 || this.animalType == a0_0x17ec36)) {
    var _0x4bd536 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x4c9162 = 1.5;
    var _0x540e54 = 1;
    var _0x34207a = _0x540e54 * Math.sin(Math.PI * 2 / _0x4c9162 * _0x4bd536);
    var _0x2e0608 = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha *= 0.8;
    a0_0x50fd5c(0, this.rad * 0.3, this.rad * (0.9 + _0x34207a * 0.12), "#7F582B");
    a0_0x50fd5c(0, -this.rad * 0.3, this.rad * (1.05 + _0x34207a * 0.09), "#7F582B");
    a0_0x1306ae.globalAlpha = _0x2e0608;
  }
  var _0x5252b4 = this.flag_eff_frozen || this.flag_cold ? 1 : 0;
  this.frozenEffA += (_0x5252b4 - this.frozenEffA) * 0.1;
  if (this.frozenEffA > 0.01) {
    var _0x2e0608 = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha *= this.frozenEffA;
    var _0x293aea = 1.6;
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * this.frozenEffA, "white");
    a0_0x1306ae.globalAlpha = _0x2e0608;
  }
  var _0x5252b4 = this.flag_eff_healing ? 1 : 0;
  this.effA_healing += (_0x5252b4 - this.effA_healing) * 0.1;
  if (this.effA_healing > 0.01) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha *= this.effA_healing;
    var _0x293aea = 2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * this.effA_healing, "purple");
    a0_0x1306ae.restore();
  }
  this.effect_aloeveraHeal(true);
  this.effect_sanitized(true);
  var _0x5252b4 = this.flag_eff_hot ? 1 : 0;
  this.effA_hot += (_0x5252b4 - this.effA_hot) * 0.1;
  if (this.effA_hot > 0.01) {
    a0_0x1306ae.save();
    var _0x4c9162 = 1.2;
    var _0x376dfd = 0.3;
    var _0x362a31 = 1;
    var _0x292fb1 = (_0x362a31 - _0x376dfd) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x376dfd + _0x292fb1 + _0x292fb1 * Math.sin(Math.PI * 2 / _0x4c9162 * ((a0_0x24806e - this.spawnTime) / 1000));
    var _0x293aea = 2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * this.effA_hot, "rgba(249, 212, 77, 0.5)");
    a0_0x1306ae.restore();
  }
  var _0x5252b4 = this.flag_eff_poison ? 1 : 0;
  this.effA_poison += (_0x5252b4 - this.effA_poison) * 0.1;
  if (this.effA_poison > 0.01) {
    a0_0x1306ae.save();
    var _0x4c9162 = 1.2;
    var _0x376dfd = 0.3;
    var _0x362a31 = 1;
    var _0x292fb1 = (_0x362a31 - _0x376dfd) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x376dfd + _0x292fb1 + _0x292fb1 * Math.sin(Math.PI * 2 / _0x4c9162 * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= this.effA_poison;
    var _0x293aea = 2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * this.effA_poison, "#7FF600");
    a0_0x1306ae.restore();
  }
  var _0x5252b4 = this.flag_eff_bleeding || this.flag_eff_wobbling ? 1 : 0;
  this.effA_bleeding += (_0x5252b4 - this.effA_bleeding) * 0.1;
  if (this.effA_bleeding > 0.01) {
    a0_0x1306ae.save();
    var _0x4c9162 = 1.2;
    var _0x376dfd = 0.3;
    var _0x362a31 = 1;
    var _0x292fb1 = (_0x362a31 - _0x376dfd) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x376dfd + _0x292fb1 + _0x292fb1 * Math.sin(Math.PI * 2 / _0x4c9162 * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= this.effA_bleeding;
    var _0x293aea = 2.6;
    var _0x2b1c6c = this.flag_eff_wobbling ? "brown" : "red";
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * this.effA_bleeding, _0x2b1c6c);
    a0_0x1306ae.restore();
  }
  var _0x5252b4 = this.flag_eff_slimed ? 1 : 0;
  this.effA_slimed += (_0x5252b4 - this.effA_slimed) * 0.1;
  if (this.effA_slimed > 0.01) {
    a0_0x1306ae.save();
    var _0x4c9162 = 1.2;
    var _0x376dfd = 0.3;
    var _0x362a31 = 1;
    var _0x292fb1 = (_0x362a31 - _0x376dfd) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x376dfd + _0x292fb1 + _0x292fb1 * Math.sin(Math.PI * 2 / _0x4c9162 * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= this.effA_slimed;
    var _0x293aea = 2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x293aea * this.effA_slimed, "grey");
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.drawUnderSkinImg = function () {};
a0_0x2449e7.prototype.drawUnderwaterBubbles = function () {
  a0_0x1306ae.save();
  var _0x4d66fc = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x24cd65 = 1.5;
  var _0x70eb5 = 1;
  var _0x49d15d = _0x70eb5 * Math.sin(Math.PI * 2 / _0x24cd65 * _0x4d66fc);
  if (this.animalType == a0_0x13971c) {
    a0_0x1306ae.globalAlpha *= 0.3;
  }
  var _0x2c8d2e = this.flag_inWater ? "#4E71C3" : "#7E6A35";
  if (this.animalType == a0_0x1e1209) {
    _0x2c8d2e = "#f9d43b";
  }
  a0_0x1306ae.fillStyle = _0x2c8d2e;
  var _0x3224d4 = this.rad * 0.2;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x3224d4 + _0x49d15d), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x3224d4 - _0x49d15d), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x3224d4 + _0x49d15d), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x3224d4 - _0x49d15d), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
};
a0_0x2449e7.prototype.drawUnderwaterCustomization = function (_0x46c15f, _0x23422b) {
  a0_0x1306ae.save();
  var _0x3f2c1a = (a0_0x24806e - this.spawnTime) / 1000;
  if (this.animalType == a0_0x59f431) {
    a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
    a0_0x1306ae.fillStyle = "#73799b";
    a0_0x1306ae.beginPath();
    var _0x1a95ed = this.rad;
    var _0x3bdba5 = _0x1a95ed * 0.25;
    a0_0x1306ae.moveTo(_0x1a95ed * -0.07, _0x3bdba5);
    a0_0x1306ae.lineTo(0, _0x3bdba5 - _0x1a95ed * 0.5);
    a0_0x1306ae.lineTo(_0x1a95ed * 0.35, _0x3bdba5);
    a0_0x1306ae.closePath();
    a0_0x1306ae.fill();
  } else if (this.animalType == a0_0x594c30) {
    a0_0x50fd5c(0, this.rad * 0.2, this.rad * 0.12, "#4D4D4D");
  } else if (this.animalType == a0_0x3b5853) {
    a0_0x50fd5c(0, this.rad * 0.45, this.rad * 0.08, "#202A65");
  } else if (this.animalType == a0_0x487fb5) {
    var _0x5a8d48 = a0_0x423a9f(_0x3f2c1a, 1, 1, 1);
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(a0_0x873ec7(40));
    a0_0x1306ae.scale(1, 2);
    a0_0x1306ae.globalAlpha = 0.08;
    a0_0x50fd5c(this.rad * 1, this.rad * 0.2, this.rad * 0.1 + this.rad * 0.1 * _0x5a8d48, "#B32E10");
    a0_0x1306ae.globalAlpha = 0.2;
    a0_0x50fd5c(this.rad * 1, this.rad * 0.2, this.rad * 0.15, "#B32E10");
    a0_0x1306ae.restore();
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.rotate(a0_0x873ec7(-40));
    a0_0x1306ae.scale(1, 2);
    a0_0x1306ae.globalAlpha = 0.08;
    a0_0x50fd5c(this.rad * -1, this.rad * 0.2, this.rad * 0.1 + this.rad * 0.1 * -_0x5a8d48, "#B32E10");
    a0_0x1306ae.globalAlpha = 0.2;
    a0_0x50fd5c(this.rad * -1, this.rad * 0.2, this.rad * 0.15, "#B32E10");
    a0_0x1306ae.restore();
  } else if (this.animalType == a0_0x17dc35) {
    a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
    a0_0x50fd5c(this.rad * 0.4, this.rad * 0.75, this.rad * 0.12, "#598b30");
    a0_0x50fd5c(this.rad * 0.65, this.rad * 0.55, this.rad * 0.1, "#64a034");
    a0_0x50fd5c(this.rad * -0.4, this.rad * 0.75, this.rad * 0.12, "#64a034");
    a0_0x50fd5c(this.rad * -0.65, this.rad * 0.55, this.rad * 0.1, "#598b30");
  } else if (this.animalType == a0_0x45db7b) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.2;
    a0_0x1306ae.scale(1, 2);
    a0_0x50fd5c(0, this.rad * 0.24, this.rad * 0.08, "#202A65");
    a0_0x50fd5c(0, this.rad * -0.02, this.rad * 0.06, "#202A65");
    a0_0x50fd5c(0, this.rad * -0.28, this.rad * 0.05, "#202A65");
    a0_0x50fd5c(0, this.rad * -0.54, this.rad * 0.04, "#202A65");
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x2449e7.prototype.drawWhenUnderwater = function () {
  this.drawUnderwaterCustomization(1, 1);
  this.drawUnderwaterBubbles();
};
a0_0x2449e7.prototype.shiveringStartT = 0;
a0_0x2449e7.prototype.flag_eff_shivering = false;
a0_0x2449e7.prototype.flag_inHidingHole = false;
a0_0x2449e7.prototype.effect_shivering = function () {
  if (this.shiveringStartT == 0 && this.flag_eff_shivering) {
    this.shiveringStartT = +new Date();
  } else if (!this.flag_eff_shivering) {
    this.shiveringStartT = 0;
  }
  if (this.flag_eff_shivering) {
    var _0x5db19a = (+new Date() - this.shiveringStartT) * 10;
    if (_0x5db19a % 10 == 0) {
      this.eff_shiver_shakeX = Math.round(Math.random() * 10);
      this.eff_shiver_shakeX = Math.round(Math.random() * 10);
    }
  }
};
if (this.effA_healing > 0.01) {
  a0_0x1306ae.save();
  var a0_0x44d47c = 0.3;
  a0_0x1306ae.globalAlpha *= a0_0x44d47c * this.effA_healing;
  a0_0x50fd5c(0, 0, Math.max(0, this.rad - this.outlineW), "#ef24ed");
  a0_0x1306ae.restore();
}
a0_0x2449e7.prototype.effect_sanitized = function (_0x5a9b03) {
  var _0x20dee8 = this.flag_eff_sanitized ? 0.9 : 0;
  if (this.effA__sanitized == undefined) {
    this.effA__sanitized = 0;
  }
  this.effA__sanitized += (_0x20dee8 - this.effA__sanitized) * 0.1;
  if (this.effA__sanitized > 0.01) {
    var _0x2a875a = 0.3;
    var _0x27f073 = 0.8;
    var _0x2970b7 = 0.2;
    var _0xea059 = 0.4;
    var _0x34607a = (_0xea059 - _0x2970b7) * 0.5;
    var _0x11d248 = _0x2970b7 + _0x34607a + _0x34607a * Math.sin(Math.PI * 2 / _0x27f073 * ((a0_0x24806e - this.spawnTime) / 1000));
    if (_0x5a9b03) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha *= _0x11d248;
      var _0x17a8f1 = 2.6;
      a0_0x50fd5c(0, 0, this.rad + _0x17a8f1 * this.effA__sanitized, "white");
      a0_0x1306ae.restore();
    } else {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha *= _0x11d248;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad), "#bbc94d");
      a0_0x1306ae.restore();
    }
  }
};
a0_0x2449e7.prototype.effect_aloeveraHeal = function (_0xaf95fe) {
  var _0x4e632c = this.flag_eff_aloeveraHealing ? 0.9 : 0;
  if (this.effA_aloeveraHealing == undefined) {
    this.effA_aloeveraHealing = 0;
  }
  this.effA_aloeveraHealing += (_0x4e632c - this.effA_aloeveraHealing) * 0.1;
  if (this.effA_aloeveraHealing > 0.01) {
    var _0x42ffaf = 0.3;
    var _0x3282a0 = 0.8;
    var _0x3adc03 = 0.2;
    var _0xc6130b = 0.4;
    var _0x41fe35 = (_0xc6130b - _0x3adc03) * 0.5;
    var _0x2f225d = _0x3adc03 + _0x41fe35 + _0x41fe35 * Math.sin(Math.PI * 2 / _0x3282a0 * ((a0_0x24806e - this.spawnTime) / 1000));
    if (_0xaf95fe) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha *= _0x2f225d;
      var _0x1cfed3 = 2.6;
      a0_0x50fd5c(0, 0, this.rad + _0x1cfed3 * this.effA_aloeveraHealing, "#bbc94d");
      a0_0x1306ae.restore();
    } else {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha *= _0x2f225d;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad), "#bbc94d");
      a0_0x1306ae.restore();
    }
  }
};
a0_0x2449e7.prototype.effect_sweatPoisoned = function () {
  var _0x147f82 = this.flag_eff_sweatPoisoned ? 1 : 0;
  if (this.effA_sweatPoisoned == undefined) {
    this.effA_sweatPoisoned = 0;
  }
  this.effA_sweatPoisoned += (_0x147f82 - this.effA_sweatPoisoned) * 0.1;
  if (this.effA_sweatPoisoned > 0.01) {
    a0_0x1306ae.save();
    var _0xdeed72 = 0.3;
    var _0x1fc375 = 1.2;
    var _0x1157f1 = 0.3;
    var _0x22a85a = 1;
    var _0x17b71b = (_0x22a85a - _0x1157f1) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x1157f1 + _0x17b71b + _0x17b71b * Math.sin(Math.PI * 2 / _0x1fc375 * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x50fd5c(0, 0, Math.max(0, this.rad - this.outlineW), a0_0x124aeb);
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.skinRad = 0;
a0_0x2449e7.prototype.skinScale = 0;
a0_0x2449e7.prototype.setSkinScale = function () {
  var _0x17e925 = 500 / 340;
  var _0x301de8 = this.rad - this.outlineW;
  this.skinRad = _0x301de8;
  this.skinScale = _0x17e925;
};
a0_0x2449e7.prototype.getAniRadius = function (_0x306640) {
  return _0x306640;
};
a0_0x2449e7.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x3fc9d5 = this.skinScale;
  var _0x618868 = this.getAniRadius(this.skinRad);
  if (this.loadedSkinImg) {
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x618868 * _0x3fc9d5, -_0x618868 * _0x3fc9d5, _0x618868 * 2 * _0x3fc9d5, _0x618868 * 2 * _0x3fc9d5);
  } else {
    a0_0x1306ae.fillStyle = this.skinNotLoadedColor;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - this.outlineW), 0, Math.PI * 2);
    a0_0x1306ae.fill();
  }
};
a0_0x2449e7.prototype.preLoad = function () {};
a0_0x2449e7.prototype.shiverF = 0.02;
a0_0x2449e7.prototype.drawSkinImg = function () {
  this.basicDrawSkinImg();
  this.drawSkinCustomization();
};
a0_0x2449e7.prototype.drawSkinCustomization = function () {};
a0_0x2449e7.prototype.drawOnTopOfSkinImg = function () {
  if (!this.loadedSkinImg) {
    a0_0x1306ae.save();
    var _0x47875a = Math.max(1, this.rad / 25);
    a0_0x1306ae.scale(_0x47875a, _0x47875a);
    this.drawEyeAtPos(6, this.rad * 0.32);
    this.drawEyeAtPos(-6, this.rad * 0.32);
    a0_0x1306ae.restore();
  }
  if (this.animalType == a0_0x5812ad) {
    a0_0x1306ae.fillStyle = "#E5CF79";
    a0_0x1306ae.beginPath();
    var _0x30256e = this.rad - this.outlineW;
    var _0x3a0a2e = _0x30256e * 1;
    a0_0x1306ae.moveTo(_0x30256e * -0.16, _0x3a0a2e);
    a0_0x1306ae.lineTo(0, _0x30256e * (this.flag_usingAbility ? 1.41 : 0.7));
    a0_0x1306ae.lineTo(_0x30256e * 0.153, _0x3a0a2e);
    a0_0x1306ae.closePath();
    a0_0x1306ae.fill();
  }
  if (this.flag_usingAbility && this.animalType == a0_0x1c04bf) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
    var _0x3d98df = this.getSkinImageObj("img/snowball.png");
    if (_0x3d98df) {
      var _0x30256e = this.rad;
      a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
      a0_0x1306ae.drawImage(_0x3d98df, -_0x30256e, -_0x30256e, _0x30256e * 2, _0x30256e * 2);
    } else {
      this.drawOutlinedCircle("", "white");
    }
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.drawUnderEffects = function () {
  if (this.flag_eff_dirty) {
    if (this.effA_dirtStuck > 0.01) {
      a0_0x1306ae.save();
      var _0x33a074 = 0.9;
      a0_0x1306ae.globalAlpha *= _0x33a074 * this.effA_dirtStuck;
      var _0xd08c37 = this.getImageObjForPath("img/dirt/dirt_below.png");
      if (_0xd08c37) {
        var _0x22db0b = this.skinScale;
        var _0x433d2d = this.skinRad - 2;
        a0_0x1306ae.drawImage(_0xd08c37, -_0x433d2d * _0x22db0b, -_0x433d2d * _0x22db0b, _0x433d2d * 2 * _0x22db0b, _0x433d2d * 2 * _0x22db0b);
      }
      a0_0x1306ae.restore();
    }
  }
};
var a0_0x52bc57 = 1;
var a0_0x2dcdbf = 0.5;
a0_0x2449e7.prototype.maskStartT = 0;
a0_0x2449e7.prototype.wasWearingMask = false;
a0_0x2449e7.prototype.drawProtectiveMask = function () {
  if (!this.flag_eff_wearingMask) {
    this.wasWearingMask = false;
    return;
  }
  if (!this.wasWearingMask) {
    this.wasWearingMask = true;
    this.maskStartT = a0_0x24806e;
  }
  a0_0x1306ae.save();
  var _0x2cc916 = this.getSkinImageObj("img/viralpandemic/mask.png");
  var _0x1f3a2d = this.getSkinImageObj("img/viralpandemic/mask-outline.png");
  if (_0x2cc916 && _0x1f3a2d) {
    var _0x18676d = this.rad * 0.7 + this.rPer;
    var _0x4c8664 = _0x18676d * 0.1;
    if (this.animalType == a0_0x77ab87) {
      _0x4c8664 = _0x18676d * 0.2;
    } else if (this.animalType == a0_0x45db7b) {
      _0x18676d = this.rad * 0.6;
      _0x4c8664 = _0x18676d * 1;
    } else if (this.animalType == a0_0x17dc35 || this.animalType == a0_0x487fb5 || this.animalType == a0_0x1c04bf || this.animalType == a0_0x2f54ae) {
      _0x4c8664 = _0x18676d * -0.05;
    } else if (this.animalType == a0_0x357359) {
      _0x4c8664 = _0x18676d * -0.2;
    } else if (this.animalType == a0_0x533584) {
      _0x4c8664 = _0x18676d * 0;
    } else if (this.animalType == a0_0x52a8a7 || this.animalType == a0_0x5c6ee3 || this.animalType == a0_0x1458da || this.animalType == a0_0x56a2ab || this.animalType == a0_0x4db8c8) {
      _0x18676d = this.rad * 0.5;
      _0x4c8664 = _0x18676d * 0.4;
    } else if (this.animalType == a0_0x23c69e) {
      _0x18676d = this.rad * 0.5;
      _0x4c8664 = _0x18676d * 0.6;
      if (this.flag_usingAbility) {
        _0x4c8664 = _0x18676d * 1.3;
      }
    } else if (this.animalType == a0_0xd29085) {
      _0x18676d = this.rad * 0.55;
      _0x4c8664 = _0x18676d * 0.5;
      if (this.flag_usingAbility) {
        _0x4c8664 = _0x18676d * 1;
      }
    } else if (this.animalType == a0_0x1ad6bd) {
      _0x18676d = this.rad * 0.43;
      _0x4c8664 = _0x18676d * 1;
      if (this.flag_usingAbility) {
        if (this.specType == 1) {
          _0x18676d = this.rad * 0.45;
          _0x4c8664 = _0x18676d * 1.3;
        } else if (this.specType == 2) {
          _0x18676d = this.rad * 0.5;
          _0x4c8664 = _0x18676d * 1.9;
        }
      }
    } else if (this.animalType == a0_0x2c361c) {
      _0x18676d = this.rad * 0.5;
      _0x4c8664 = _0x18676d * 0.55;
      if (this.flag_usingAbility) {
        _0x4c8664 = _0x18676d * 0.8;
      }
    } else if (this.animalType == a0_0x5aa20b) {
      _0x18676d = this.rad * 0.55;
      _0x4c8664 = _0x18676d * 0;
      if (this.flag_usingAbility) {
        _0x4c8664 = _0x18676d * 0.5;
      }
    } else if (this.animalType == a0_0xff40c0) {
      _0x18676d = this.rad * 0.4;
      _0x4c8664 = _0x18676d * 1.1;
      if (this.flag_usingAbility) {
        _0x18676d = this.rad * 0.5;
        _0x4c8664 = _0x18676d * a0_0x52bc57;
      }
    } else if (this.animalType == a0_0x16e6c0) {
      _0x18676d = this.rad * 0.5;
      _0x4c8664 = _0x18676d * 0.5;
      if (this.flag_usingAbility) {
        _0x18676d = this.rad * 0.5;
        _0x4c8664 = _0x18676d * 1;
      }
    } else if (this.animalType == a0_0x3889a8) {
      _0x18676d = this.rad * 0.4;
      _0x4c8664 = _0x18676d * 1;
      if (this.flag_usingAbility) {
        _0x18676d = this.rad * 0.5;
        _0x4c8664 = _0x18676d * 1;
      }
    } else if (this.animalType == a0_0x2f2687) {
      _0x18676d = this.rad * 0.4;
      _0x4c8664 = _0x18676d * 1;
      if (this.flag_usingAbility) {
        a0_0x1306ae.restore();
        return;
      }
    }
    var _0x19fd37 = 1;
    var _0x27b8cf = (a0_0x24806e - this.maskStartT) / 1000;
    if (_0x27b8cf > 80) {
      var _0x40c164 = 1;
      var _0x5a818f = 0.3;
      var _0x2b1a90 = 0.5;
      var _0x4f8cff = (_0x2b1a90 - _0x5a818f) * 0.5;
      var _0x19fd37 = _0x5a818f + _0x4f8cff + _0x4f8cff * Math.sin(Math.PI * 2 / _0x40c164 * (a0_0x24806e / 1000));
    }
    var _0x21d912 = 0.8;
    if (this.flag_inHidingHole) {
      _0x21d912 = 0.6;
    } else if (this.flag_underWater) {
      _0x21d912 = this.idealOp;
    }
    a0_0x1306ae.globalAlpha = _0x21d912 * _0x19fd37;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x2cc916, -_0x18676d, _0x4c8664, _0x18676d * 2, _0x18676d * 2);
    a0_0x1306ae.drawImage(_0x1f3a2d, -_0x18676d, _0x4c8664, _0x18676d * 2, _0x18676d * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x2449e7.prototype.drawTopEffects = function () {
  this.effect_aloeveraHeal();
  var _0x319988 = this.flag_eff_stunned ? 1 : 0;
  this.stunA += (_0x319988 - this.stunA) * 0.1;
  if (this.stunA > 0.01) {
    a0_0x1306ae.save();
    var _0x233b7d = 2.5;
    var _0x10b814 = a0_0x24806e % (_0x233b7d * 1000) / (_0x233b7d * 1000);
    a0_0x1306ae.rotate(_0x10b814 * (Math.PI * 2));
    a0_0x1306ae.globalAlpha *= this.stunA;
    var _0x73f2a = this.rad * 0.2;
    var _0x3df1d6 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x31e0eb = 1;
    var _0x2359e0 = 0.5 + _0x73f2a * 0.07;
    var _0x155e4b = _0x2359e0 * Math.sin(Math.PI * 2 / _0x31e0eb * _0x3df1d6);
    a0_0x1306ae.fillStyle = "#F3D444";
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * -0.22, this.rad * -0.22, Math.max(0, _0x73f2a + _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.22, this.rad * -0.22, Math.max(0, _0x73f2a - _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.22, this.rad * 0.22, Math.max(0, _0x73f2a + _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * -0.22, this.rad * 0.22, Math.max(0, _0x73f2a - _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
  var _0x319988 = this.flag_eff_onFire ? 1 : 0;
  this.onFireEffA += (_0x319988 - this.onFireEffA) * 0.1;
  if (this.onFireEffA > 0.01) {
    var _0x31e0eb = 1;
    var _0x4fc97d = 0.15;
    var _0x56705d = 0.4;
    var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.5;
    var _0xcaa260 = _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * (a0_0x24806e / 1000));
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha *= _0xcaa260 * this.onFireEffA;
    a0_0x50fd5c(0, 0, Math.max(0, this.rad), "orange");
    a0_0x1306ae.restore();
    var _0x17987e = 1;
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      var _0x31e0eb = 1;
      var _0x4fc97d = 0.5;
      var _0x56705d = 1;
      var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.5;
      var _0x155e4b = _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * (a0_0x24806e / 1000));
      var _0x462a7f = Math.trunc(a0_0x24806e / 100) % 5;
      var _0x4cef4d = Math.trunc(a0_0x24806e / 150) % 5;
      var _0x562a16 = this.getImageObjForPath("gameobj/70/0/" + _0x462a7f + ".png", _0x17987e);
      var _0x464ee = this.getImageObjForPath("gameobj/70/0/" + _0x4cef4d + ".png", _0x17987e);
      if (_0x562a16 || _0x464ee) {
        var _0x286db7 = 0 - this.rad * 0.3;
        var _0x23253a = this.rad * 0.2 - this.rad * 0.3;
        var _0xd09dd6 = this.rad * 1 * (2 + _0x155e4b * 2) / 3;
        var _0x4583e3 = this.rad * 1 * _0x155e4b;
        var _0x765ae1 = 0.5;
        var _0x31176a = 0.95;
        a0_0x1306ae.save();
        if (_0x562a16) {
          a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x155e4b;
          a0_0x1306ae.drawImage(_0x562a16, _0x286db7 + _0xd09dd6 * -_0x765ae1, _0x23253a + _0x4583e3 * -_0x31176a, _0xd09dd6, _0x4583e3);
        }
        if (_0x464ee) {
          a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x155e4b;
          a0_0x1306ae.drawImage(_0x464ee, _0x286db7 + this.rad * 0.5 + _0xd09dd6 * -_0x765ae1, _0x23253a + this.rad * 0.5 + _0x4583e3 * -_0x31176a, _0xd09dd6, _0x4583e3);
        }
        a0_0x1306ae.restore();
      }
    } else {
      var _0x31e0eb = 1;
      var _0x4fc97d = 0.5;
      var _0x56705d = 1;
      var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.5;
      var _0x155e4b = _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * (a0_0x24806e / 1000));
      var _0x562a16 = this.getImageObjForPath("gameobj/70/0.png", _0x17987e);
      if (_0x562a16) {
        var _0x286db7 = 0 - this.rad * 0.3;
        var _0x23253a = this.rad * 0.2 - this.rad * 0.3;
        var _0xd09dd6 = this.rad * 1 * (2 + _0x155e4b * 2) / 3;
        var _0x4583e3 = this.rad * 1 * _0x155e4b;
        var _0x765ae1 = 0.5;
        var _0x31176a = 0.95;
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x155e4b;
        a0_0x1306ae.drawImage(_0x562a16, _0x286db7 + _0xd09dd6 * -_0x765ae1, _0x23253a + _0x4583e3 * -_0x31176a, _0xd09dd6, _0x4583e3);
        a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x155e4b;
        a0_0x1306ae.drawImage(_0x562a16, _0x286db7 + this.rad * 0.5 + _0xd09dd6 * -_0x765ae1, _0x23253a + this.rad * 0.5 + _0x4583e3 * -_0x31176a, _0xd09dd6, _0x4583e3);
        a0_0x1306ae.restore();
      }
    }
  }
  if (this.frozenEffA > 0.01 && this.flag_eff_frozen) {
    a0_0x1306ae.save();
    var _0x233b7d = 7;
    var _0x10b814 = a0_0x24806e % (_0x233b7d * 1000) / (_0x233b7d * 1000);
    a0_0x1306ae.rotate(_0x10b814 * (Math.PI * 2));
    a0_0x1306ae.globalAlpha *= this.frozenEffA;
    var _0x73f2a = this.rad * 0.2;
    var _0x3df1d6 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x31e0eb = 1;
    var _0x2359e0 = 0.5 + _0x73f2a * 0.07;
    var _0x155e4b = _0x2359e0 * Math.sin(Math.PI * 2 / _0x31e0eb * _0x3df1d6);
    a0_0x1306ae.fillStyle = "white";
    var _0x864680 = this.rad * 0.27;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(-_0x864680, -_0x864680, Math.max(0, _0x73f2a + _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(_0x864680, -_0x864680, Math.max(0, _0x73f2a - _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(_0x864680, _0x864680, Math.max(0, _0x73f2a + _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(-_0x864680, _0x864680, Math.max(0, _0x73f2a - _0x155e4b), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
  if (this.frozenEffA > 0.01) {
    a0_0x1306ae.save();
    var _0x3a7130 = 0.3;
    a0_0x1306ae.globalAlpha *= _0x3a7130 * this.frozenEffA;
    a0_0x50fd5c(0, 0, Math.max(0, this.rad - this.outlineW), "white");
    a0_0x1306ae.restore();
  }
  if (this.effA_healing > 0.01) {
    a0_0x1306ae.save();
    var _0x3a7130 = 0.3;
    a0_0x1306ae.globalAlpha *= _0x3a7130 * this.effA_healing;
    a0_0x50fd5c(0, 0, Math.max(0, this.rad - this.outlineW), "#ef24ed");
    a0_0x1306ae.restore();
  }
  this.effect_sweatPoisoned();
  if (this.effA_hot > 0.01) {
    a0_0x1306ae.save();
    var _0x3a7130 = 0.3;
    var _0x31e0eb = 1.2;
    var _0x4fc97d = 0.3;
    var _0x56705d = 1;
    var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x50fd5c(0, 0, Math.max(0, this.rad - this.outlineW), "rgba(249, 212, 77, 0.3)");
    a0_0x1306ae.restore();
  }
  if (this.effA_poison > 0.01) {
    a0_0x1306ae.save();
    var _0x3a7130 = 0.3;
    a0_0x1306ae.globalAlpha *= _0x3a7130 * this.effA_poison;
    var _0x31e0eb = 1.2;
    var _0x4fc97d = 0.3;
    var _0x56705d = 1;
    var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.5;
    a0_0x1306ae.globalAlpha *= _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x50fd5c(0, 0, Math.max(0, this.rad - this.outlineW), "#9FDA00");
    a0_0x1306ae.restore();
  }
  var _0x319988 = this.flag_eff_bleeding ? 0.8 : 0;
  this.effA_bleeding += (_0x319988 - this.effA_bleeding) * 0.1;
  if (this.effA_bleeding > 0.01) {
    a0_0x1306ae.save();
    var _0x31e0eb = 1.2;
    var _0x4fc97d = 0.3;
    var _0x56705d = 1;
    var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.3;
    a0_0x1306ae.globalAlpha *= _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= this.effA_bleeding;
    var _0x33f809 = -2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x33f809 * this.effA_bleeding, "red");
    a0_0x1306ae.restore();
  }
  var _0x319988 = this.flag_eff_slimed ? 0.8 : 0;
  this.effA_slimed += (_0x319988 - this.effA_slimed) * 0.1;
  if (this.effA_slimed > 0.01) {
    a0_0x1306ae.save();
    var _0x31e0eb = 1.2;
    var _0x4fc97d = 0.3;
    var _0x56705d = 1;
    var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.3;
    a0_0x1306ae.globalAlpha *= _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= this.effA_slimed;
    var _0x33f809 = -2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x33f809 * this.effA_slimed, "grey");
    a0_0x1306ae.restore();
  }
  var _0x319988 = this.flag_eff_stunk ? 0.8 : 0;
  this.effA_stunk += (_0x319988 - this.effA_stunk) * 0.1;
  if (this.effA_stunk > 0.01) {
    a0_0x1306ae.save();
    var _0x31e0eb = 1.2;
    var _0x4fc97d = 0.3;
    var _0x56705d = 1;
    var _0x3dbd24 = (_0x56705d - _0x4fc97d) * 0.3;
    a0_0x1306ae.globalAlpha *= _0x4fc97d + _0x3dbd24 + _0x3dbd24 * Math.sin(Math.PI * 2 / _0x31e0eb * ((a0_0x24806e - this.spawnTime) / 1000));
    a0_0x1306ae.globalAlpha *= this.effA_stunk;
    var _0x33f809 = -2.6;
    a0_0x50fd5c(0, 0, this.rad + _0x33f809 * this.effA_stunk, "brown");
    a0_0x1306ae.restore();
  }
  if (this.animalType == a0_0x357359 && this.flag_usingAbility) {
    var _0x31e0eb = 0.75;
    var _0x2359e0 = 1;
    var _0x155e4b = _0x2359e0 * Math.sin(Math.PI * 2 / _0x31e0eb * _0x3df1d6);
    var _0x400e2e = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha *= 0.8 - _0x155e4b * 0.2;
    a0_0x50fd5c(this.rad * 0.15, -this.rad * 1.27, this.rad * (0.1 + _0x155e4b * 0.05), "#efefef");
    a0_0x50fd5c(-this.rad * 0.15, -this.rad * 1.27, this.rad * (0.1 - _0x155e4b * 0.05), "#efefef");
    a0_0x1306ae.globalAlpha = _0x400e2e;
  }
  var _0x319988 = this.flag_webStuck ? 1 : 0;
  this.effA_webStuck += (_0x319988 - this.effA_webStuck) * 0.02;
  if (this.effA_webStuck > 0.01) {
    a0_0x1306ae.save();
    var _0x3a7130 = 0.9;
    a0_0x1306ae.globalAlpha *= _0x3a7130 * this.effA_webStuck;
    var _0x562a16 = this.getImageObjForPath("img/web/" + this.eff_webStuckType + "/spiderWeb_stuck.png", 1);
    if (_0x562a16) {
      var _0x3a8b8b = this.rad * 1.3;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x562a16, -_0x3a8b8b, -_0x3a8b8b, _0x3a8b8b * 2, _0x3a8b8b * 2);
    }
    a0_0x1306ae.restore();
  }
  this.effectDirt();
  var _0x319988 = this.flag_constricted ? 1 : 0;
  this.effA_constricted += (_0x319988 - this.effA_constricted) * 0.04;
  if (this.effA_constricted > 0.01) {
    a0_0x1306ae.save();
    var _0x3a7130 = 0.9;
    a0_0x1306ae.globalAlpha *= _0x3a7130 * this.effA_constricted;
    var _0x9ea1ab = "skins/land/boaconstrictor/" + this.eff_constrictedSpecies;
    if (this.eff_constrictedSubSpecies !== undefined && this.eff_constrictedSubSpecies > 0) {
      _0x9ea1ab += "/" + this.eff_constrictedSubSpecies;
    }
    var _0x4cf46f = this.eff_constrictedSpecies === 1 || this.eff_constrictedSpecies === 2 ? 1 : this.mopeSeasonID;
    console.log("constrict img: " + _0x9ea1ab);
    var _0x562a16 = this.getSkinImageObjForSeason(_0x9ea1ab + "/constrict.png", _0x4cf46f);
    if (_0x562a16) {
      var _0x3a8b8b = this.rad * 1.3;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x562a16, -_0x3a8b8b, -_0x3a8b8b, _0x3a8b8b * 2, _0x3a8b8b * 2);
    }
    a0_0x1306ae.restore();
  }
  this.drawProtectiveMask();
  this.drawElectroStunEffect();
};
a0_0x2449e7.prototype.effectDirt = function () {
  if (this.eff_dirtType == 0 || this.eff_dirtType == undefined) {
    return;
  }
  if (this.effA_dirtStuck == undefined) {
    this.effA_dirtStuck = 0;
  }
  var _0x4b6f86 = this.flag_eff_dirty ? 1 : 0;
  this.effA_dirtStuck += (_0x4b6f86 - this.effA_dirtStuck) * 0.02;
  if (this.effA_dirtStuck > 0.01) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    var _0x17b90f = 0.9;
    a0_0x1306ae.globalAlpha *= _0x17b90f * this.effA_dirtStuck;
    var _0x57ede3 = this.getImageObjForPath("img/dirt/" + this.eff_dirtType + "/0.png");
    if (_0x57ede3) {
      var _0x15af09 = this.skinScale;
      var _0x979a00 = this.skinRad;
      a0_0x1306ae.drawImage(_0x57ede3, -_0x979a00 * _0x15af09, -_0x979a00 * _0x15af09, _0x979a00 * 2 * _0x15af09, _0x979a00 * 2 * _0x15af09);
    }
    var _0x57ede3 = this.getImageObjForPath("img/dirt/" + this.eff_dirtType + "/1.png");
    if (_0x57ede3) {
      var _0x15af09 = this.skinScale;
      var _0x979a00 = this.skinRad;
      a0_0x1306ae.drawImage(_0x57ede3, -_0x979a00 * _0x15af09, -_0x979a00 * _0x15af09, _0x979a00 * 2 * _0x15af09, _0x979a00 * 2 * _0x15af09);
    }
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.getSpeciesPath = function (_0x5d83b0) {
  return _0x5d83b0 + "/" + this.animalSpecies;
};
a0_0x2449e7.prototype.getWing = function (_0x25e0f2, _0x15bc98, _0x216bd9) {
  var _0x2e0f61 = "skins/" + (_0x216bd9 ? this.getSpeciesPath(_0x25e0f2) + "/" : _0x25e0f2 + "/");
  _0x2e0f61 += _0x25e0f2 + "_wing" + _0x15bc98 + ".png";
  return _0x2e0f61;
};
a0_0x2449e7.prototype.getHead = function (_0x4fe996, _0x59575f) {
  var _0x131621 = "skins/" + (_0x59575f ? this.getSpeciesPath(_0x4fe996) + "/" : _0x4fe996 + "/");
  _0x131621 += _0x4fe996 + "_head.png";
  return _0x131621;
};
a0_0x2449e7.prototype.getSkinName = function () {
  var _0x5de838 = this.skinImgName;
  switch (this.animalType) {
    case a0_0x2b355b:
    case a0_0x4f00b9:
    case a0_0x182226:
    case a0_0x4a4da1:
    case a0_0x120a91:
    case a0_0x22a451:
    case a0_0x52bfa4:
    case a0_0x35d037:
      var _0x27cce2 = "";
      if (this.flag_usingAbility) {
        _0x5de838 = _0x27cce2 + _0x5de838 + "2";
      }
      break;
    case a0_0x33f8d6:
      this.z = this.z * 2;
      if (this.flag_usingAbility && this.specType == 4) {
        _0x5de838 = _0x5de838 + "2";
      }
      break;
  }
  return this.getPremiumSkin(_0x5de838);
};
a0_0x2449e7.prototype.getPremiumSkinFolder = function () {
  switch (this.animalPremiumSkin) {
    case 1:
      return "premium/golden/";
    case 2:
      return "premium/locked/";
  }
  return "";
};
a0_0x2449e7.prototype.getPremiumSkin = function (_0x5e594a) {
  return this.getPremiumSkinFolder() + _0x5e594a;
};
a0_0x2449e7.prototype.onAnimalSpeciesSet = function () {};
a0_0x2449e7.prototype.setObjTypes = function (_0x4a760f, _0x350aff) {
  this.oType = _0x4a760f;
  this.animalType = _0x350aff;
};
a0_0x2449e7.prototype.readCustomData_onNewlyVisible = function (_0x33fa53) {
  a0_0x2449e7.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x33fa53);
  var _0x1ad5f0 = _0x33fa53.readString();
  this.nickName = _0x1ad5f0 && _0x1ad5f0.length > 0 ? _0x1ad5f0 : "mope.io";
  this.animalSpecies = _0x33fa53.readUInt16();
  this.animalSubSpecies = _0x33fa53.readUInt16();
  this.animalPremiumSkin = _0x33fa53.readUInt8();
  this.skinThemeID = _0x33fa53.readUInt8();
  this.mopeSeasonID = _0x33fa53.readUInt8();
  this.onAnimalSpeciesSet();
  if (this.animalPremiumSkin > 0) {
    this.setSparkleInterval(a0_0x39b824(5, 10), a0_0x39b824(2, 3));
  }
  this.setNick(this.nickName);
  var _0x27a8b3 = _0x33fa53.readBitGroup();
  this.readUpdatedFlags(_0x27a8b3);
  if (this.flag_webStuck) {
    this.readUpdatedProperty(a0_0x18f893, _0x33fa53);
  }
  if (this.flag_isInArena) {
    this.readUpdatedProperty(a0_0x100f83, _0x33fa53);
  }
  if (this.flag_isDevMode) {
    this.readUpdatedProperty(a0_0x3e10bf, _0x33fa53);
  }
  this.readUpdatedProperty(a0_0x39ee27, _0x33fa53);
  this.readUpdatedProperty(a0_0x21aa4a, _0x33fa53);
};
a0_0x2449e7.prototype.custom_canvas = null;
a0_0x2449e7.prototype.drawCanvas = function () {
  if (!this.custom_canvas) {
    this.custom_canvas = document.createElement("canvas");
    var _0x347a09 = this.rad * 20;
    var _0x415e5f = this.rad * 20;
    this.custom_canvas.width = _0x347a09;
    this.custom_canvas.height = _0x415e5f;
    var _0x10326a = this.custom_canvas.getContext("2d");
    _0x10326a.save();
    _0x10326a.filter = "blur(4px)";
    _0x10326a.globalAlpha = 1;
    _0x10326a.fillStyle = "black";
    _0x10326a.fillRect(0, 0, this.custom_canvas.width * 2, this.custom_canvas.height * 2);
    _0x10326a.globalCompositeOperation = "xor";
    _0x10326a.beginPath();
    _0x10326a.arc(_0x347a09 / 2, _0x347a09 / 2, this.rad + 5, 0, Math.PI * 2);
    _0x10326a.fillStyle = "red";
    _0x10326a.fill();
    _0x10326a.restore();
  }
  if (this.custom_canvas != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.drawImage(this.custom_canvas, -this.custom_canvas.width / 2, -this.custom_canvas.height / 2, this.custom_canvas.width, this.custom_canvas.height);
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.updateAngle = function (_0x5d739d) {
  var _0x3e1975 = a0_0x873ec7(_0x5d739d - 90);
  this.angleDelta = a0_0x8b0c15(this.angle, _0x3e1975);
  this.oAngle = this.angle;
  if (this.firstPosUpd) {
    this.oAngle = this.angle = _0x3e1975;
    this.angleDelta = 0;
  }
};
a0_0x2449e7.prototype.readUpdatedFlags = function (_0xd6f16) {
  a0_0x2449e7.superClass.prototype.readUpdatedFlags.call(this, _0xd6f16);
  this.flag_lowWat = _0xd6f16.getBool();
  this.flag_underWater = _0xd6f16.getBool();
  this.flag_usingDiveAbility = _0xd6f16.getBool();
  this.flag_eff_invincible = _0xd6f16.getBool();
  this.flag_usingAbility = _0xd6f16.getBool();
  this.flag_tailBitten = _0xd6f16.getBool();
  this.flag_eff_stunned = _0xd6f16.getBool();
  this.flag_iceSliding = _0xd6f16.getBool();
  this.flag_eff_frozen = _0xd6f16.getBool();
  this.flag_eff_onFire = _0xd6f16.getBool();
  this.flag_eff_healing = _0xd6f16.getBool();
  this.flag_eff_poison = _0xd6f16.getBool();
  this.flag_constricted = _0xd6f16.getBool();
  this.flag_webStuck = _0xd6f16.getBool();
  this.flag_stealth = _0xd6f16.getBool();
  this.flag_eff_bleeding = _0xd6f16.getBool();
  this.flag_flying = _0xd6f16.getBool();
  this.flag_isGrabbed = _0xd6f16.getBool();
  this.flag_eff_aniInClaws = _0xd6f16.getBool();
  this.flag_eff_stunk = _0xd6f16.getBool();
  this.flag_cold = _0xd6f16.getBool();
  this.flag_inWater = _0xd6f16.getBool();
  this.flag_inLava = _0xd6f16.getBool();
  this.flag_canClimbHill = _0xd6f16.getBool();
  this.flag_isClimbingHill = _0xd6f16.getBool();
  this.flag_isDevMode = _0xd6f16.getBool();
  this.flag_eff_slimed = _0xd6f16.getBool();
  this.flag_eff_wobbling = _0xd6f16.getBool();
  this.flag_eff_hot = _0xd6f16.getBool();
  this.flag_eff_sweatPoisoned = _0xd6f16.getBool();
  this.flag_eff_shivering = _0xd6f16.getBool();
  this.flag_inHidingHole = _0xd6f16.getBool();
  this.flag_eff_grabbedByFlytrap = _0xd6f16.getBool();
  this.flag_eff_aloeveraHealing = _0xd6f16.getBool();
  this.flag_eff_tossedInAir = _0xd6f16.getBool();
  this.flag_eff_isOnSpiderWeb = _0xd6f16.getBool();
  this.flag_fliesLikeDragon = _0xd6f16.getBool();
  this.flag_eff_isInMud = _0xd6f16.getBool();
  this.flag_eff_statue = _0xd6f16.getBool();
  this.flag_eff_isOnTree = _0xd6f16.getBool();
  this.flag_eff_isUnderTree = _0xd6f16.getBool();
  this.flag_speared = _0xd6f16.getBool();
  this.flag_eff_dirty = _0xd6f16.getBool();
  this.flag_eff_virusInfection = _0xd6f16.getBool();
  this.flag_eff_wearingMask = _0xd6f16.getBool();
  this.flag_eff_sanitized = _0xd6f16.getBool();
  this.flag_viewing1v1Invite = _0xd6f16.getBool();
  this.flag_can1v1 = _0xd6f16.getBool();
  this.flag_isInArena = _0xd6f16.getBool();
  if (this.flag_isDevMode) {
    this.flag_hideDevPrint = _0xd6f16.getBool();
  }
  this.flag_eff_electroStun = _0xd6f16.getBool();
};
a0_0x2449e7.prototype.eff_webStuckType = 0;
a0_0x2449e7.prototype.readUpdatedProperty = function (_0x32c2b2, _0x9529df) {
  if (_0x32c2b2 == a0_0x39ee27) {
    this.wins1v1 = _0x9529df.readUInt16();
  } else if (_0x32c2b2 == a0_0x3e10bf) {
    this.devMode_num = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0x100f83) {
    this.playerNumberFor1v1Arena = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0x339c41) {
    this.diveType = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0xc63a07) {
    this.eff_statueType = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0x1a8c34) {
    this.eff_constrictedSpecies = _0x9529df.readUInt16();
  } else if (_0x32c2b2 == a0_0x454b34) {
    this.eff_constrictedSubSpecies = _0x9529df.readUInt16();
  } else if (_0x32c2b2 == a0_0x18f893) {
    this.eff_webStuckType = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0x31ad82) {
    this.eff_dirtType = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0x5403b1) {
    let _0x204a7a = _0x9529df.readUInt8();
    if (this.infectionBarA < 0.001) {
      this.infectionPer = _0x204a7a;
    }
    this.infectionPer_n = _0x204a7a;
    this.infectionBarTimeoutT = +new Date() + 3000;
  } else if (_0x32c2b2 == a0_0x5e1756) {
    this.lastHidingHoleID = _0x9529df.readUInt32();
    this.hidingHoleVisibilityRad = _0x9529df.readUInt16() / 4;
  } else if (_0x32c2b2 == a0_0x5b3148) {
    let _0x29c148 = _0x9529df.readUInt8();
    if (this.infectionBarA < 0.001) {
      this.infectionPer = _0x29c148;
    }
    this.infectionPer_n = _0x29c148;
    this.infectionBarTimeoutT = +new Date() + 3000;
  } else if (_0x32c2b2 == a0_0x5b3130) {
    this.lava = _0x9529df.readUInt8();
  } else if (_0x32c2b2 == a0_0x212f58) {
    let _0x9a3ead = _0x9529df.readUInt16() / 4;
    let _0x492fe1 = _0x9529df.readUInt16() / 4;
    if (_0x9a3ead > 0 && _0x492fe1 > 0) {
      this.hasDevTarget = a0_0x15e4d1 == this.id;
      this.target_ox = this.devTargetX;
      this.target_oy = this.devTargetY;
      this.target_nx = _0x9a3ead;
      this.target_ny = _0x492fe1;
    } else {
      this.hasDevTarget = false;
    }
  } else if (_0x32c2b2 == a0_0x21aa4a) {
    this.teamID = _0x9529df.readUInt8();
  } else {
    this.customUpdatedProperty(_0x32c2b2, _0x9529df);
  }
};
a0_0x2449e7.prototype.devTargetX = 0;
a0_0x2449e7.prototype.devTargetY = 0;
a0_0x2449e7.prototype.target_ox = 0;
a0_0x2449e7.prototype.target_oy = 0;
a0_0x2449e7.prototype.target_nx = 0;
a0_0x2449e7.prototype.target_ny = 0;
a0_0x2449e7.prototype.hasDevTarget = false;
a0_0x2449e7.prototype.onLerpUpdate = function (_0x3f0609) {
  if (this.hasDevTarget) {
    this.devTargetX = _0x3f0609 * (this.target_nx - this.target_ox) + this.target_ox;
    this.devTargetY = _0x3f0609 * (this.target_ny - this.target_oy) + this.target_oy;
  }
};
a0_0x2449e7.prototype.beforeCustomDraw = function (_0x2f0152) {
  if (this.hasDevTarget) {
    console.log(this.devTargetX + ":" + this.devTargetY);
    a0_0x1306ae.save();
    a0_0x1306ae.strokeStyle = "yellow";
    a0_0x1306ae.lineWidth = 2;
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(this.x, this.y);
    a0_0x1306ae.lineTo(this.devTargetX, this.devTargetY);
    a0_0x1306ae.stroke();
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.customUpdatedProperty = function (_0x26265f, _0x246c67) {};
a0_0x2449e7.prototype.diveType = 0;
a0_0x2449e7.prototype.lastHidingHoleID = 0;
a0_0x2449e7.prototype.hidingHoleVisibilityRad = 0;
a0_0x2449e7.prototype.winsAddedInNick = false;
function a0_0x2449e7(_0x27a060, _0x1defb3) {
  a0_0x2449e7.superClass.call(this, a0_0x24738f);
  this.animalType = _0x1defb3;
}
a0_0x2449e7.prototype.getAbilityInfo = function (_0x26773a) {
  if (this.animalType == a0_0x56a2ab) {
    var _0x11a1bf = {
      abilName: "Claw Slash!",
      abilImg: "skins/arctic/bear/" + this.animalSpecies + "/clawslash.png",
      skinThemeID: this.skinThemeID,
      mopeSeasonID: this.mopeSeasonID
    };
    return _0x11a1bf;
  } else {
    return a0_0x5285b4(_0x26773a);
  }
};
a0_0x2449e7.prototype.calculateZIndex = function () {
  this.updateZ();
  if (a0_0x59c93b && a0_0x15e4d1 == this.id) {
    this.z = 2000 + this.rad;
  } else if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying) {
    this.z = 100000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    } else {
      this.z += this.rad;
    }
    if (this.flag_eff_aniInClaws) {
      this.z += 1000;
    }
    if (this.specType2 == 100) {
      this.z = 1014;
    }
  } else if (this.flag_underWater || this.flag_usingAbility && this.animalType == a0_0x391884) {
    this.z = -151;
  } else {
    if (this.flag_usingAbility && (this.animalType == a0_0xd29085 || this.animalType == a0_0x2c361c || this.animalType == a0_0xee8954)) {
      this.z = 10001 + this.rad;
    } else if (this.flag_canClimbHill && this.animalType != a0_0xee8954 || this.animalType == a0_0x1458da || this.animalType == a0_0x5812ad || this.animalType == a0_0x1efea6 || this.animalType == a0_0x56a2ab || this.animalType == a0_0x200e1e || this.animalType == a0_0x4a4da1 || this.animalType == a0_0x8a2dda || this.animalType == a0_0x525e00 || this.animalType == a0_0x1c04bf || this.animalType == a0_0x4f58e6 || this.animalType == a0_0x52bfa4 || this.animalType == a0_0x357359) {
      this.z = 1000 + this.rad;
    } else if (this.animalType == a0_0x332990) {
      this.z = 1009 + this.rad;
    } else if (this.animalType == a0_0x45db7b) {
      this.z = 1008 + (this.flag_usingAbility ? 1 : 0) + this.rad;
    } else {
      this.z = this.rad * 1.5;
    }
    if (this.flag_fliesLikeDragon || this.flag_isInArena) {
      this.z += 2000;
    }
  }
  this.updateZ_onTree(this.z);
};
a0_0x2449e7.prototype.canDrawDark = function () {
  if (this.flag_inHidingHole) {
    return true;
  }
  return false;
};
var a0_0x486db9 = null;
a0_0x2449e7.prototype.drawDark = function () {
  if (!this.canDrawDark()) {
    console.log("cant draw darkness!");
    return;
  }
  if (a0_0x486db9 == null) {
    a0_0x486db9 = document.createElement("canvas");
    var _0x102e25 = this.rad * 10;
    var _0x3025e0 = this.rad * 10;
    a0_0x486db9.width = _0x102e25;
    a0_0x486db9.height = _0x3025e0;
    var _0x3b3011 = a0_0x486db9.getContext("2d");
    _0x3b3011.save();
    _0x3b3011.filter = "blur(2px)";
    _0x3b3011.globalAlpha = 1;
    _0x3b3011.fillStyle = "black";
    _0x3b3011.fillRect(0, 0, a0_0x486db9.width, a0_0x486db9.height);
    _0x3b3011.globalCompositeOperation = "xor";
    _0x3b3011.beginPath();
    _0x3b3011.arc(_0x102e25 / 2, _0x102e25 / 2, this.rad - 3, 0, Math.PI * 2);
    _0x3b3011.fillStyle = "blue";
    _0x3b3011.fill();
    _0x3b3011.restore();
  }
  if (a0_0x486db9 != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.drawImage(a0_0x486db9, -a0_0x486db9.width / 2, -a0_0x486db9.height / 2, a0_0x486db9.width, a0_0x486db9.height);
    a0_0x1306ae.restore();
  }
};
a0_0x2449e7.prototype.skinThemeID = 0;
a0_0x2449e7.prototype.getSkinImagePath = function (_0x3cc71d) {
  var _0x2dc5da = "";
  if (this.skinThemeID != 0 && (this.animalSpecies == 0 || this.animalSpecies == 1 && this.animalType == a0_0x18f3b8)) {
    _0x2dc5da = "./assets/t/" + this.skinThemeID + "/" + _0x3cc71d;
  } else {
    var _0x5159b6 = _0x3cc71d.includes("_dive") ? 2 : this.mopeSeasonID;
    _0x2dc5da = "./assets/s/" + _0x5159b6 + "/" + _0x3cc71d;
  }
  return _0x2dc5da;
};
a0_0x2449e7.prototype.getSkinImagePathForShop = function (_0x954093) {
  var _0x2fdf8f = "";
  if (this.skinThemeID != 0 && this.animalSpecies == 0) {
    _0x2fdf8f = "./assets/t/" + this.skinThemeID + "/skins/" + _0x954093;
  } else {
    _0x2fdf8f = "./assets/s/" + this.mopeSeasonID + "/skins/" + _0x954093;
  }
  return _0x2fdf8f;
};
a0_0x2449e7.prototype.getSkinImageObj = function (_0x30184e) {
  if (a0_0x2bafdc) {
    return;
  }
  var _0x339ea6 = this.getSkinImagePath(_0x30184e);
  return a0_0x19ebc9(_0x339ea6, function (_0x2f3d43) {
    console.log(_0x2f3d43.src);
  });
};
a0_0x2449e7.prototype.getSkinImageObjAsync = async function (_0x328b86) {
  var _0x3dd208 = this.getSkinImagePath(_0x328b86);
  return a0_0xd211df(_0x3dd208);
};
a0_0x2449e7.prototype.getImagePath = function (_0x288ad3, _0xdbe0f6) {
  const _0x5bb530 = _0xdbe0f6 === undefined ? this.mopeSeasonID : _0xdbe0f6;
  var _0x4f3414 = "";
  _0x4f3414 = "./assets/s/" + _0x5bb530 + "/" + _0x288ad3;
  return _0x4f3414;
};
a0_0x2449e7.prototype.getImageObjForPath = function (_0x3900a6, _0x2bfb88) {
  var _0x4661e1 = this.getImagePath(_0x3900a6, _0x2bfb88);
  return a0_0x19ebc9(_0x4661e1, function (_0x5c5180) {
    console.log(_0x5c5180.src);
  });
};
a0_0x2449e7.prototype.setRadius = function (_0x1bf855) {
  this.rad = _0x1bf855;
};
window.Animal = a0_0x2449e7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2449e7, a0_0x24738f);
var a0_0x2b9582 = a0_0x3daf2;
var a0_0x28626c = a0_0x42171b;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x3daf2.prototype.animalType = a0_0x41cceb;
a0_0x3daf2.prototype.animalSpecies = 0;
a0_0x3daf2.prototype.animalSubSpecies = 0;
a0_0x3daf2.prototype.segmentNum = 0;
a0_0x3daf2.prototype.updateZ = function () {
  this.z = 30 - this.segmentNum;
};
a0_0x3daf2.prototype.customDraw = function (_0x195a8b) {
  a0_0x1306ae.save();
  var _0x5655eb = this.segmentNum;
  var _0x32b7ce = this.getSkinImageObj("skins/deathworm/segment_" + _0x5655eb + ".png");
  if (_0x32b7ce) {
    var _0x3e9fb9 = this.rad * 2;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x32b7ce, -_0x3e9fb9, -_0x3e9fb9, _0x3e9fb9 * 2, _0x3e9fb9 * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x3daf2.prototype.readCustomData_onNewlyVisible = function (_0x402083) {
  a0_0x3daf2.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x402083);
  this.segmentNum = _0x402083.readUInt8();
  this.animalSpecies = _0x402083.readUInt8();
  this.animalSubSpecies = _0x402083.readUInt8();
  this.animalPremiumSkin = _0x402083.readUInt8();
  console.log("segment num: " + this.segmentNum);
};
function a0_0x3daf2(_0x370d99, _0x584a14) {
  a0_0x3daf2.superClass.call(this, a0_0x211475);
  this.animalType = _0x584a14;
}
window.AnimalBody = a0_0x3daf2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3daf2, a0_0x211475);
var a0_0x28626c = a0_0x42171b;
a0_0x3ec204.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3ec204.prototype.constructor = a0_0x3ec204;
a0_0x3ec204.superClass = a0_0x28626c;
a0_0x3ec204.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x3ec204.prototype.readUpdatedProperty = function (_0x6c7bf6, _0xb33c62) {
  if (_0x6c7bf6 == a0_0x288bec) {
    this.webTransparency = _0xb33c62.readUInt8();
  }
};
a0_0x3ec204.prototype.readCustomData_onNewlyVisible = function (_0x367a57) {
  this.webTransparency = _0x367a57.readUInt8();
  this.webType = _0x367a57.readUInt8();
};
a0_0x3ec204.prototype.customDraw = function (_0x2de76d) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha *= this.webTransparency / 100 * 0.9;
  var _0x237f48 = this.getSkinImageObj("img/web/" + this.webType + "/spiderWeb.png");
  if (_0x237f48) {
    var _0x153d5f = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x237f48, -_0x153d5f, -_0x153d5f, _0x153d5f * 2, _0x153d5f * 2);
  }
  a0_0x1306ae.restore();
};
function a0_0x3ec204() {
  a0_0x3ec204.superClass.call(this, a0_0x49afaf);
  this.webTransparency = 0;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
window.SpiderWeb = a0_0x3ec204;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3ec204, a0_0x49afaf);
var a0_0x28626c = a0_0x2449e7;
a0_0x311886.prototype = Object.create(a0_0x28626c.prototype);
a0_0x311886.prototype.constructor = a0_0x311886;
a0_0x311886.superClass = a0_0x28626c;
a0_0x311886.prototype.animalInfo = function () {
  var _0x585922 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x585922.aniName = "Octopus";
      break;
    case 111:
      _0x585922.aniName = "Classic Octopus";
      break;
    case 112:
      _0x585922.aniName = "Gold-trim Octopus";
      break;
    case 200:
      _0x585922.aniName = "Vampire Squid";
      break;
    case 201:
      _0x585922.aniName = "Fuchsia Tiger";
      break;
    case 202:
      _0x585922.aniName = "Na Kika";
      break;
  }
  _0x585922.skinName = this.getSkinName();
  _0x585922.aniDesc = "";
  _0x585922.upgradeText = "UPGRADED to " + _0x585922.aniName + "!\nPress W to use your 'Disguise' ability!\n(Hint: wait for prey to bite you- they get stunned!)";
  _0x585922.aniCol = "#ff8340";
  return _0x585922;
};
a0_0x311886.prototype.getSkinName = function () {
  let _0x3d95db = this.getSpeciesPath() + "/octopus";
  _0x3d95db += this.specType == 0 ? "" : 1;
  return _0x3d95db;
};
a0_0x311886.prototype.getSpeciesPath = function () {
  return "ocean/octopus/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x311886.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x311886.prototype.getAbilityInfo = function (_0x2614c8) {
  var _0x55c5df = {
    abilName: "Disguise"
  };
  _0x55c5df.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x55c5df.skinThemeID = this.skinThemeID;
  _0x55c5df.mopeSeasonID = this.mopeSeasonID;
  return _0x55c5df;
};
a0_0x311886.prototype.drawUnderSkinImg = function () {
  if (this.animalSpecies == 200) {
    return;
  }
  var _0x1da158 = 500 / 340;
  var _0x412fc0 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/head.png");
  if (_0x412fc0) {
    a0_0x1306ae.save();
    var _0x5c170e = 1.1;
    var _0x186b9e = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x412fc0, -_0x186b9e * _0x1da158, -_0x186b9e * _0x5c170e * _0x1da158, _0x186b9e * 2 * _0x1da158, _0x186b9e * 2 * _0x1da158);
    a0_0x1306ae.restore();
  }
};
a0_0x311886.prototype.readCustomData_onNewlyVisible = function (_0x5bdbd6) {
  a0_0x311886.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5bdbd6);
  var _0x5c505c = _0x5bdbd6.readUInt8() > 0;
  if (_0x5c505c) {
    var _0x85cd9f = _0x5bdbd6.readUInt8() > 0;
    var _0x3a123c = _0x5bdbd6.readUInt16();
    this.createDisguiseAniObj(_0x85cd9f, _0x3a123c);
  }
};
a0_0x311886.prototype.customUpdatedProperty = function (_0x5b558f, _0xa996ae) {
  if (_0x5b558f == a0_0x25ae06) {
    var _0x44d7ac = _0xa996ae.readUInt8() > 0;
    if (_0x44d7ac) {
      var _0x3701da = _0xa996ae.readUInt8() > 0;
      var _0x2874ff = _0xa996ae.readUInt16();
      this.octoDisguiseObjT = !_0x3701da ? _0x2874ff : 0;
      this.createDisguiseAniObj(_0x3701da, _0x2874ff);
    } else {
      this.octoDrawObj = null;
    }
  }
};
a0_0x311886.prototype.createDisguiseAniObj = function (_0x23283f, _0x3ab8f4) {
  if (this.octoDrawObj == null) {
    var _0x2ca281 = _0x23283f ? a0_0x24738f : _0x3ab8f4;
    var _0x555e56 = _0x23283f ? _0x3ab8f4 : null;
    var _0x5ee3e2 = a0_0x5d394a.createGameObjOfOType(_0x2ca281, _0x555e56);
    if (_0x23283f) {
      _0x5ee3e2.animalType = _0x555e56;
    }
    _0x5ee3e2.oRad = this.oRad;
    _0x5ee3e2.nRad = this.nRad;
    _0x5ee3e2.curBiome = this.curBiome;
    this.octoDrawObj = _0x5ee3e2;
  }
};
a0_0x311886.prototype.drawUnderSkinImgOutline = function () {
  a0_0x311886.superClass.prototype.drawUnderSkinImgOutline.call(this);
};
a0_0x311886.prototype.drawOnTopOfSkinImg = function () {
  a0_0x311886.superClass.prototype.drawOnTopOfSkinImg.call(this);
  if (this.flag_usingAbility && this.octoDrawObj != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
    if (this.octoDisguiseObjT == a0_0x12a9bd) {
      this.octoDrawObj.nRad = 25;
    } else if (this.octoDisguiseObjT == a0_0x2008b0) {
      this.octoDrawObj.nRad = 17;
    } else if (this.octoDisguiseObjT == a0_0xb1af09) {
      this.octoDrawObj.nRad = 15;
    } else if (this.octoDisguiseObjT == a0_0x74644c) {
      this.octoDrawObj.nRad = 15;
      this.octoDrawObj.innerRad = 35;
    } else {
      this.octoDrawObj.nRad = this.rad;
    }
    this.octoDrawObj.mopeSeasonID = 1;
    this.octoDrawObj.draw();
    a0_0x1306ae.restore();
  }
};
a0_0x311886.prototype.drawWhenUnderwater = function () {
  a0_0x311886.superClass.prototype.drawWhenUnderwater.call(this);
};
a0_0x311886.prototype.octoDisguiseObjT = 0;
a0_0x311886.prototype.octoIsAnimal = false;
a0_0x311886.prototype.drawHealthBar = function () {
  if (this.flag_usingAbility && this.octoDrawObj != null) {
    if (this.octoIsAnimal) {
      a0_0x311886.superClass.prototype.drawNickName.call(this, 1);
      this.octoDrawObj.curBiome = this.curBiome;
      this.hpPer_n = 2;
      this.hpPer = 25;
      this.hpBarA = 1;
    } else {
      return;
    }
  }
  a0_0x1306ae.save();
  var _0x246381 = a0_0x24806e < this.hpBarTimeoutT ? 1 : 0;
  this.hpBarA += (_0x246381 - this.hpBarA) * 0.04;
  if (this.hpBarA > 0.001) {
    this.hpPer += (this.hpPer_n - this.hpPer) * 0.1;
    var _0x216fcc = Math.max(1, this.rad / 25);
    var _0x5ded42 = _0x216fcc * 20;
    var _0x520233 = _0x216fcc * 5;
    var _0x234857 = 0;
    var _0x4e7c46 = -this.rad - _0x216fcc * 10;
    a0_0x1306ae.globalAlpha *= this.hpBarA;
    a0_0x1306ae.fillStyle = "rgba(0,0,0,0.35)";
    a0_0x1306ae.fillRect(_0x234857 - _0x5ded42 / 2, _0x4e7c46 - _0x520233 / 2, _0x5ded42, _0x520233);
    a0_0x1306ae.fillStyle = "#16D729";
    var _0x115c5e = _0x5ded42 * (this.hpPer / 100);
    if (this.flag_usingAbility && this.octoIsAnimal) {
      _0x115c5e = _0x5ded42 * (25 / 100);
    }
    a0_0x1306ae.fillRect(_0x234857 - _0x5ded42 / 2, _0x4e7c46 - _0x520233 / 2, _0x115c5e, _0x520233);
  }
  a0_0x1306ae.restore();
};
function a0_0x311886() {
  a0_0x311886.superClass.call(this, a0_0x24738f);
}
window.Octopus = a0_0x311886;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x311886, a0_0x24738f, a0_0x2f54ae);
var a0_0x28626c = a0_0x2449e7;
a0_0x299a47.prototype = Object.create(a0_0x28626c.prototype);
a0_0x299a47.prototype.constructor = a0_0x299a47;
a0_0x299a47.superClass = a0_0x28626c;
a0_0x299a47.prototype.animalData = {};
a0_0x299a47.prototype.animalInfo = function () {
  if (this.animalData[this.animalSpecies] == undefined) {
    const _0x298019 = this.animalSpecies === 0 ? "Bald Eagle" : this.animalSpecies === 1 ? "Golden Eagle" : this.animalSpecies === 2 ? "Harpy Eagle!" : this.animalSpecies === 3 ? "Greater Spotted Eagle!" : this.animalSpecies == 111 ? "Classic Eagle" : "Gold-trim Eagle";
    this.animalData[this.animalSpecies] = {
      info: {
        aniName: _0x298019,
        aniCol: "#5b400d",
        upgradeText: "UPGRADED to " + _0x298019 + "!\nEagles can fly up other animals in the air!\n" + (this.animalSpecies === 1 ? "(Can even pick monsters!)" : this.animalSpecies === 2 ? "(picks anything including Black Dragon)" : this.animalSpecies === 3 ? "(picks everything!)" : "")
      },
      ability: {
        abilName: "Fly with prey",
        abilImg: "skins/land/eagle/" + this.animalSpecies + "/eagle.png",
        speciesType: this.animalSpecies,
        skinThemeID: this.skinThemeID,
        mopeSeasonID: this.mopeSeasonID
      },
      skin: (() => {
        const _0x37c573 = this.mopeSeasonID === 2 && this.animalSpecies === 0 && this.animalSubSpecies > 0 ? "/" + this.animalSubSpecies : "";
        const _0x14671f = "land/eagle/" + this.animalSpecies + _0x37c573 + "/eagle";
        return {
          path: ["" + _0x14671f, _0x14671f + "1", _0x14671f + "2", _0x14671f + "3"],
          wing1: "skins/" + _0x14671f + "_wing1.png",
          wing2: "skins/" + _0x14671f + "_wing2.png",
          head: "skins/" + _0x14671f + "_head.png",
          head1: "skins/" + _0x14671f + "_head1.png",
          head2: "skins/" + _0x14671f + "_head2.png"
        };
      })()
    };
  }
  this.animalData[this.animalSpecies].info.skinName = this.getSkinName();
  return this.animalData[this.animalSpecies].info;
};
a0_0x299a47.prototype.getSkinName = function () {
  return this.animalData[this.animalSpecies].skin.path[this.specType];
};
a0_0x299a47.prototype.getWing = function (_0x15f45c) {
  if (_0x15f45c == 1) {
    return this.animalData[this.animalSpecies].skin.wing1;
  } else {
    return this.animalData[this.animalSpecies].skin.wing2;
  }
};
a0_0x299a47.prototype.getHead = function () {
  if (this.specType == 1) {
    return this.animalData[this.animalSpecies].skin.head2;
  } else {
    return this.animalData[this.animalSpecies].skin.head;
  }
};
a0_0x299a47.prototype.getAbilityInfo = function (_0xdeda01) {
  return this.animalData[this.animalSpecies].ability;
};
a0_0x299a47.prototype.ANIMATION_NAME = "eagle";
a0_0x299a47.prototype.drawUnderSkinImg = function () {
  if (this.mopeSeasonID !== 0) {
    return;
  }
  if (this.flag_flying && !this.flag_isGrabbed) {
    a0_0x1306ae.save();
    var _0x21c94f = a0_0xae444c(this.ANIMATION_NAME, this.spawnTime);
    if (_0x21c94f !== undefined && _0x21c94f != null) {
      this.theFrame = _0x21c94f;
    }
    var _0x183c8d = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x483010 = this.getSkinImageObj(this.getWing(1));
    if (_0x483010) {
      a0_0x1306ae.save();
      var _0x592ddb = -(-0.2 + _0x183c8d) * a0_0x5c63e1;
      var _0x5ac363 = this.rad * 0.8;
      a0_0x1306ae.rotate(_0x592ddb);
      var _0x4fb830 = 0;
      var _0x1a3f05 = this.rad;
      var _0x4ae31c = _0x5ac363 * 2 * 0.7;
      var _0xf44936 = _0x5ac363 * 2;
      var _0x2b24fa = -0.2;
      var _0x1273ad = 1.2;
      a0_0x1306ae.drawImage(_0x483010, _0x4fb830 + _0x4ae31c * -_0x2b24fa, _0x1a3f05 + _0xf44936 * -_0x1273ad, _0x4ae31c, _0xf44936);
      a0_0x1306ae.restore();
    }
    var _0x483010 = this.getSkinImageObj(this.getWing(2));
    if (_0x483010) {
      a0_0x1306ae.save();
      var _0x592ddb = -(-0.2 + _0x183c8d) * a0_0x873ec7(-90);
      var _0x5ac363 = this.rad * 0.8;
      a0_0x1306ae.rotate(_0x592ddb);
      var _0x4fb830 = 0;
      var _0x1a3f05 = this.rad;
      var _0x4ae31c = _0x5ac363 * 2 * 0.7;
      var _0xf44936 = _0x5ac363 * 2;
      var _0x2b24fa = 1.2;
      var _0x1273ad = 1.2;
      a0_0x1306ae.drawImage(_0x483010, _0x4fb830 + _0x4ae31c * -_0x2b24fa, _0x1a3f05 + _0xf44936 * -_0x1273ad, _0x4ae31c, _0xf44936);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
};
a0_0x299a47.prototype.drawSkinCustomization = function () {
  if (this.mopeSeasonID == 0) {
    return;
  }
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x5e3218 = 500 / 340;
  {
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x13179a = a0_0xae444c(this.ANIMATION_NAME, this.spawnTime);
      if (_0x13179a !== undefined && _0x13179a != null) {
        this.theFrame = _0x13179a;
      }
      var _0x3c9dd9 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x1af7d6 = this.getSkinImageObj(this.getWing(1));
      if (_0x1af7d6) {
        a0_0x1306ae.save();
        var _0x114fe6 = -(-0.2 + _0x3c9dd9) * a0_0x5c63e1;
        var _0xb03ba2 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x114fe6);
        var _0x5729c8 = 0;
        var _0x59f876 = this.rad;
        var _0x18f94b = _0xb03ba2 * 2 * 0.62;
        var _0x426c30 = _0xb03ba2 * 2.5;
        var _0x2285d1 = 0.2;
        var _0x543157 = 1.7;
        a0_0x1306ae.drawImage(_0x1af7d6, _0x5729c8 + _0x18f94b * -_0x2285d1, _0x59f876 + _0x426c30 * -_0x543157, _0x18f94b, _0x426c30);
        a0_0x1306ae.restore();
      }
      var _0x1af7d6 = this.getSkinImageObj(this.getWing(2));
      if (_0x1af7d6) {
        a0_0x1306ae.save();
        var _0x114fe6 = -(-0.2 + _0x3c9dd9) * a0_0x873ec7(-90);
        var _0xb03ba2 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x114fe6);
        var _0x5729c8 = 0;
        var _0x59f876 = this.rad;
        var _0x18f94b = _0xb03ba2 * 2 * 0.62;
        var _0x426c30 = _0xb03ba2 * 2.5;
        var _0x2285d1 = 0.8;
        var _0x543157 = 1.7;
        a0_0x1306ae.drawImage(_0x1af7d6, _0x5729c8 + _0x18f94b * -_0x2285d1, _0x59f876 + _0x426c30 * -_0x543157, _0x18f94b, _0x426c30);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    } else if (this.specType == 1 && this.mopeSeasonID != 0) {
      a0_0x1306ae.save();
      var _0x1b6931 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x3c9dd9 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x1b6931, 0.7, 0.3, 2) : 0;
      var _0x1af7d6 = this.getSkinImageObj(this.getWing(1));
      if (_0x1af7d6) {
        a0_0x1306ae.save();
        var _0x114fe6 = -(-0.2 + _0x3c9dd9) * a0_0x873ec7(45);
        var _0xb03ba2 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(15) + _0x114fe6);
        var _0x5729c8 = 0;
        var _0x59f876 = this.rad;
        var _0x18f94b = _0xb03ba2 * 2 * 0.8;
        var _0x426c30 = _0xb03ba2 * 2.2;
        var _0x2285d1 = 0;
        var _0x543157 = 1.5;
        a0_0x1306ae.drawImage(_0x1af7d6, _0x5729c8 + _0x18f94b * -_0x2285d1, _0x59f876 + _0x426c30 * -_0x543157, _0x18f94b, _0x426c30);
        a0_0x1306ae.restore();
      }
      var _0x1af7d6 = this.getSkinImageObj(this.getWing(2));
      if (_0x1af7d6) {
        a0_0x1306ae.save();
        var _0x114fe6 = -(-0.2 + _0x3c9dd9) * a0_0x873ec7(-45);
        var _0xb03ba2 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-15) + _0x114fe6);
        var _0x5729c8 = 0;
        var _0x59f876 = this.rad;
        var _0x18f94b = _0xb03ba2 * 2 * 0.8;
        var _0x426c30 = _0xb03ba2 * 2.2;
        var _0x2285d1 = 1;
        var _0x543157 = 1.5;
        a0_0x1306ae.drawImage(_0x1af7d6, _0x5729c8 + _0x18f94b * -_0x2285d1, _0x59f876 + _0x426c30 * -_0x543157, _0x18f94b, _0x426c30);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x4632cc = -0.05;
      if (this.flag_flying) {
        _0x4632cc = 0.1;
      } else if (this.animalSpecies == 2) {
        _0x4632cc = -0.075;
      }
      var _0x354cf5 = this.getSkinImageObj(this.getHead());
      if (_0x354cf5) {
        a0_0x1306ae.save();
        var _0xb03ba2 = this.rad;
        a0_0x1306ae.drawImage(_0x354cf5, -_0xb03ba2 * _0x5e3218, (-_0xb03ba2 + _0xb03ba2 * _0x4632cc) * _0x5e3218, _0xb03ba2 * 2 * _0x5e3218, _0xb03ba2 * 2 * _0x5e3218);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x299a47() {
  a0_0x299a47.superClass.call(this, a0_0x24738f);
}
window.Eagle = a0_0x299a47;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x299a47, a0_0x24738f, a0_0xd29085);
var a0_0x28626c = a0_0x2449e7;
a0_0x1a6e16.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1a6e16.prototype.constructor = a0_0x1a6e16;
a0_0x1a6e16.superClass = a0_0x28626c;
a0_0x1a6e16.prototype.getSkinName = function () {
  return "land/ostrich/" + this.animalSpecies + this.getSubSpecies() + "/ostrich";
};
a0_0x1a6e16.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 204) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x1a6e16.prototype.animalInfo = function () {
  var _0x3ab13c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3ab13c.aniName = "Ostrich!";
      break;
    case 1:
      _0x3ab13c.aniName = "Golden Ostrich!";
      break;
    case 2:
      _0x3ab13c.aniName = "Ruffled Ostrich!";
      break;
    case 111:
      _0x3ab13c.aniName = "Classic Ostrich";
      break;
    case 202:
      _0x3ab13c.aniName = "Sunset Ostrich";
      break;
    case 204:
      _0x3ab13c.aniName = "Necromancer Ostrich!";
      break;
  }
  _0x3ab13c.skinName = "land/ostrich/" + this.animalSpecies + this.getSubSpecies() + "/ostrich";
  _0x3ab13c.aniDesc = "";
  _0x3ab13c.upgradeText = "UPGRADED to " + _0x3ab13c.aniName + "! Lay eggs to hatch babies! \nCommand babies by placing your crosshair (right-click/W)-\n They can attack prey!";
  _0x3ab13c.aniCol = "#FF9000";
  return _0x3ab13c;
};
a0_0x1a6e16.prototype.getAbilityInfo = function (_0x3e625c) {
  var _0x327537 = {
    abilName: "Command Babies!",
    abilImg: "skins/land/ostrich/" + this.animalSpecies + "/ostrich-baby.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x327537;
};
a0_0x1a6e16.prototype.getSkinImageObj = function (_0xd434b2) {
  var _0x5c573e = this.animalSpecies === 1 || this.animalSpecies === 2 || this.animalSpecies === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0xd434b2, _0x5c573e);
};
function a0_0x1a6e16() {
  a0_0x1a6e16.superClass.call(this, a0_0x24738f);
}
window.Ostrich = a0_0x1a6e16;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1a6e16, a0_0x24738f, a0_0x5c6ee3);
var a0_0x28626c = a0_0x2449e7;
a0_0x3e58f7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3e58f7.prototype.constructor = a0_0x3e58f7;
a0_0x3e58f7.superClass = a0_0x28626c;
a0_0x3e58f7.prototype.getSkinName = function () {
  return "land/ostrich/" + this.animalSpecies + "/ostrich-baby";
};
a0_0x3e58f7.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x15e4d1) {
    return false;
  }
  var _0x1f9a48 = a0_0x283a01[a0_0x15e4d1];
  if (_0x1f9a48) {
    var _0xe07271 = _0x1f9a48.animalType;
    if (_0xe07271 == a0_0x50d9f7 || _0xe07271 == a0_0x52bfa4 || _0xe07271 == a0_0x594c30) {
      return false;
    }
  }
  return a0_0x3e58f7.superClass.prototype.isEdibleOutlined.call(this);
  ;
};
a0_0x3e58f7.prototype.getSkinImageObj = function (_0x2453e1) {
  var _0x1c33cf = this.animalSpecies === 1 || this.animalSpecies === 2 || this.animalSpecies === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x2453e1, _0x1c33cf);
};
a0_0x3e58f7.prototype.readCustomData_onNewlyVisible = function (_0x3520d5) {
  a0_0x3e58f7.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3520d5);
  this.mommyID = _0x3520d5.readUInt32();
};
function a0_0x3e58f7() {
  a0_0x3e58f7.superClass.call(this, a0_0x24738f);
}
window.OstrichBaby = a0_0x3e58f7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3e58f7, a0_0x24738f, a0_0x20f7bd);
var a0_0xc328b3 = a0_0xc328b3;
var a0_0x28626c = a0_0x2449e7;
a0_0xc328b3.prototype = Object.create(a0_0x28626c.prototype);
a0_0xc328b3.prototype.constructor = a0_0xc328b3;
a0_0xc328b3.superClass = a0_0x28626c;
a0_0xc328b3.prototype.getSkinName = function () {
  var _0x12d98a = this.getSpeciesPath("land/falcon") + "/falcon";
  _0x12d98a += this.specType == 0 ? "" : this.specType;
  return _0x12d98a;
};
a0_0xc328b3.prototype.animalInfo = function () {
  var _0x36f529 = {};
  var _0x4470ed = "";
  switch (this.animalSpecies) {
    case 0:
      _0x36f529.aniName = "Falcon";
      break;
    case 1:
      _0x36f529.aniName = "Predator";
      break;
    case 2:
      _0x36f529.aniName = "Shaheen";
      _0x4470ed = "\n(Shaheen flies longer and swoop everything!)";
      break;
    case 111:
      _0x36f529.aniName = "Classic Falcon";
      break;
    case 112:
      _0x36f529.aniName = "Gold-trim Falcon";
      break;
    case 202:
      _0x36f529.aniName = "Meteor Falcon";
      break;
  }
  _0x36f529.upgradeText = "UPGRADED to " + _0x36f529.aniName + "! \nFly, and do a powerful dive attack! Aim it well." + _0x4470ed;
  _0x36f529.aniCol = "#FF9000";
  _0x36f529.skinName = "land/falcon/" + this.animalSpecies + "/falcon" + (this.specType == 0 ? "" : this.specType);
  return _0x36f529;
};
a0_0xc328b3.prototype.getWing = function (_0x50fedd, _0x3f9e84, _0x5e81e1) {
  _0x5e81e1 = true;
  var _0x12626e = "skins/land/" + (_0x5e81e1 ? this.getSpeciesPath(_0x50fedd) + "/" : _0x50fedd + "/");
  _0x12626e += _0x50fedd + "_wing" + _0x3f9e84 + ".png";
  return _0x12626e;
};
a0_0xc328b3.prototype.getHead = function (_0x147f13, _0x51c358, _0x4f63bb) {
  _0x4f63bb = true;
  var _0x505216 = "skins/land/" + (_0x4f63bb ? this.getSpeciesPath(_0x147f13) + "/" : _0x147f13 + "/");
  _0x505216 += _0x147f13 + "_head.png";
  return _0x505216;
};
a0_0xc328b3.prototype.getAbilityInfo = function (_0x428d55) {
  var _0x1f7cd8 = {
    abilName: "Sky dive",
    abilImg: "skins/land/falcon/" + this.animalSpecies + "/falcon_ability.png",
    speciesType: this.animalSpecies,
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x1f7cd8;
};
a0_0xc328b3.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x1dfabf = "skins";
  var _0x1d1a62 = 500 / 340;
  if (this.flag_flying && !this.flag_isGrabbed && this.specType == 1) {
    a0_0x1306ae.save();
    var _0x1efcac = a0_0xae444c("bird", this.spawnTime);
    if (_0x1efcac !== undefined && _0x1efcac != null) {
      this.theFrame = _0x1efcac;
    }
    var _0x56c1ff = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x3d3a6c = this.getSkinImageObj(this.getWing("falcon", 1, false));
    if (_0x3d3a6c) {
      a0_0x1306ae.save();
      var _0x1c460e = -(-0.2 + _0x56c1ff) * a0_0x873ec7(80);
      var _0xe45ab0 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(25) + _0x1c460e);
      var _0x137656 = 0;
      var _0x2c7010 = this.rad;
      var _0x3552ae = _0xe45ab0 * 2 * 0.65;
      var _0x5857e4 = _0xe45ab0 * 2.5;
      var _0x378720 = 0;
      var _0x427210 = 1.5;
      a0_0x1306ae.drawImage(_0x3d3a6c, _0x137656 + _0x3552ae * -_0x378720, _0x2c7010 + _0x5857e4 * -_0x427210, _0x3552ae, _0x5857e4);
      a0_0x1306ae.restore();
    }
    var _0x3d3a6c = this.getSkinImageObj(this.getWing("falcon", 2, false));
    if (_0x3d3a6c) {
      a0_0x1306ae.save();
      var _0x1c460e = -(-0.2 + _0x56c1ff) * a0_0x873ec7(-80);
      var _0xe45ab0 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-25) + _0x1c460e);
      var _0x137656 = 0;
      var _0x2c7010 = this.rad;
      var _0x3552ae = _0xe45ab0 * 2 * 0.65;
      var _0x5857e4 = _0xe45ab0 * 2.5;
      var _0x378720 = 1;
      var _0x427210 = 1.5;
      a0_0x1306ae.drawImage(_0x3d3a6c, _0x137656 + _0x3552ae * -_0x378720, _0x2c7010 + _0x5857e4 * -_0x427210, _0x3552ae, _0x5857e4);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  } else if (this.flag_flying && this.specType == 2) {
    a0_0x1306ae.save();
    var _0x2fe1a5 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x56c1ff = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x2fe1a5, 0.7, 0.3, 2) : 0;
    var _0x3d3a6c = this.getSkinImageObj(this.getWing("falcon", 1, false));
    if (_0x3d3a6c) {
      a0_0x1306ae.save();
      var _0x1c460e = - -0.2 * a0_0x873ec7(25);
      var _0xe45ab0 = this.rad * 0.8;
      a0_0x1306ae.rotate(_0x1c460e);
      var _0x137656 = 0;
      var _0x2c7010 = this.rad;
      var _0x3552ae = _0xe45ab0 * 2 * 0.7;
      var _0x5857e4 = _0xe45ab0 * 2.2;
      var _0x378720 = 0;
      var _0x427210 = 1.5;
      a0_0x1306ae.drawImage(_0x3d3a6c, _0x137656 + _0x3552ae * -_0x378720, _0x2c7010 + _0x5857e4 * -_0x427210, _0x3552ae, _0x5857e4);
      a0_0x1306ae.restore();
    }
    var _0x3d3a6c = this.getSkinImageObj(this.getWing("falcon", 2, false));
    if (_0x3d3a6c) {
      a0_0x1306ae.save();
      var _0x1c460e = - -0.2 * a0_0x873ec7(-25);
      var _0xe45ab0 = this.rad * 0.8;
      a0_0x1306ae.rotate(_0x1c460e);
      var _0x137656 = 0;
      var _0x2c7010 = this.rad;
      var _0x3552ae = _0xe45ab0 * 2 * 0.7;
      var _0x5857e4 = _0xe45ab0 * 2.2;
      var _0x378720 = 1;
      var _0x427210 = 1.5;
      a0_0x1306ae.drawImage(_0x3d3a6c, _0x137656 + _0x3552ae * -_0x378720, _0x2c7010 + _0x5857e4 * -_0x427210, _0x3552ae, _0x5857e4);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  } else if (this.flag_flying && this.specType == 3) {
    a0_0x1306ae.save();
    var _0x2fe1a5 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x56c1ff = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x2fe1a5, 0.5, 0.4, 2) : 0;
    var _0x3d3a6c = this.getSkinImageObj(this.getWing("falcon", 1, true));
    if (_0x3d3a6c) {
      a0_0x1306ae.save();
      var _0x1c460e = -(-0.2 + _0x56c1ff) * a0_0x873ec7(45);
      var _0xe45ab0 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(15) + _0x1c460e);
      var _0x137656 = 0;
      var _0x2c7010 = this.rad;
      var _0x3552ae = _0xe45ab0 * 2 * 1;
      var _0x5857e4 = _0xe45ab0 * 2.2;
      var _0x378720 = 0;
      var _0x427210 = 1.5;
      a0_0x1306ae.drawImage(_0x3d3a6c, _0x137656 + _0x3552ae * -_0x378720, _0x2c7010 + _0x5857e4 * -_0x427210, _0x3552ae, _0x5857e4);
      a0_0x1306ae.restore();
    }
    var _0x3d3a6c = this.getSkinImageObj(this.getWing("falcon", 2, true));
    if (_0x3d3a6c) {
      a0_0x1306ae.save();
      var _0x1c460e = -(-0.2 + _0x56c1ff) * a0_0x873ec7(-45);
      var _0xe45ab0 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-15) + _0x1c460e);
      var _0x137656 = 0;
      var _0x2c7010 = this.rad;
      var _0x3552ae = _0xe45ab0 * 2 * 1;
      var _0x5857e4 = _0xe45ab0 * 2.2;
      var _0x378720 = 1;
      var _0x427210 = 1.5;
      a0_0x1306ae.drawImage(_0x3d3a6c, _0x137656 + _0x3552ae * -_0x378720, _0x2c7010 + _0x5857e4 * -_0x427210, _0x3552ae, _0x5857e4);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x10a61c = this.getSkinImageObj(this.getHead("/falcon", true));
    if (_0x10a61c) {
      a0_0x1306ae.save();
      var _0xe45ab0 = this.rad * (this.specType == 3 ? 1.2 : 1);
      var _0x2c53be = _0xe45ab0 * 0.2;
      if (this.specType == 3) {
        _0x2c53be = _0xe45ab0 * -0.15;
      }
      a0_0x1306ae.drawImage(_0x10a61c, -_0xe45ab0 * _0x1d1a62, (-_0xe45ab0 + _0x2c53be) * _0x1d1a62, _0xe45ab0 * 2 * _0x1d1a62, _0xe45ab0 * 2 * _0x1d1a62);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0xc328b3() {
  a0_0xc328b3.superClass.call(this, a0_0x24738f);
}
window.Falcon = a0_0xc328b3;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xc328b3, a0_0x24738f, a0_0x23c69e);
var a0_0x28626c = a0_0x2449e7;
a0_0x433020.prototype = Object.create(a0_0x28626c.prototype);
a0_0x433020.prototype.constructor = a0_0x433020;
a0_0x433020.superClass = a0_0x28626c;
a0_0x433020.prototype.animalInfo = function () {
  var _0x33b2bb = {};
  switch (this.animalSpecies) {
    case 0:
      _0x33b2bb.aniName = "Snowy Owl";
      break;
    case 111:
      _0x33b2bb.aniName = "Classic Snowy Owl!";
      break;
    case 112:
      _0x33b2bb.aniName = "Gold-trim Snowy Owl";
      break;
    case 201:
      _0x33b2bb.aniName = "Owlrigami";
      break;
  }
  _0x33b2bb.skinName = this.getSkinName();
  _0x33b2bb.aniDesc = "";
  _0x33b2bb.upgradeText = "UPGRADED to " + _0x33b2bb.aniName + "!\nAim the crosshair\nright-click / press W when its on top of prey to attack";
  _0x33b2bb.aniCol = "#633838";
  return _0x33b2bb;
};
a0_0x433020.prototype.getSkinName = function () {
  let _0x1c56a8 = this.getSpeciesPath() + "/snowyowl";
  _0x1c56a8 += this.specType == 0 ? "" : this.specType;
  return _0x1c56a8;
};
a0_0x433020.prototype.getSpeciesPath = function () {
  return "arctic/snowyowl/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x433020.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x433020.prototype.getWing = function (_0x2e9eb7) {
  var _0x43c5ff = "skins/" + this.getSpeciesPath();
  _0x43c5ff += "/snowyowl_wing" + _0x2e9eb7 + ".png";
  return _0x43c5ff;
};
a0_0x433020.prototype.getHead = function () {
  var _0x26da6f = "skins/" + this.getSpeciesPath();
  _0x26da6f += "/snowyowl_head.png";
  return _0x26da6f;
};
a0_0x433020.prototype.getAbilityInfo = function (_0x4b38e3) {
  var _0x121526 = {
    abilName: "Target Prey!"
  };
  _0x121526.abilImg = "skins/" + this.getSpeciesPath() + "/snowyowl.png";
  _0x121526.skinThemeID = this.skinThemeID;
  _0x121526.mopeSeasonID = this.mopeSeasonID;
  return _0x121526;
};
a0_0x433020.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x59f448 = "skins";
  var _0x465309 = 500 / 340;
  if (this.flag_flying && !this.flag_isGrabbed && this.specType == 1) {
    a0_0x1306ae.save();
    var _0x3e6672 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x16fbb4 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x3e6672, 0.7, 0.4, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x392932 = this.getSkinImageObj(this.getWing(1));
    if (_0x392932) {
      a0_0x1306ae.save();
      var _0x577383 = -(-0.2 + _0x16fbb4) * a0_0x873ec7(80);
      var _0x580e4e = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(25) + _0x577383);
      var _0x21cf8c = 0;
      var _0x20b548 = this.rad;
      var _0x3f9dde = _0x580e4e * 2 * 0.65;
      var _0x22e6c1 = _0x580e4e * 2.5;
      var _0x2355c5 = 0;
      var _0x3aaf78 = 1.5;
      a0_0x1306ae.drawImage(_0x392932, _0x21cf8c + _0x3f9dde * -_0x2355c5, _0x20b548 + _0x22e6c1 * -_0x3aaf78, _0x3f9dde, _0x22e6c1);
      a0_0x1306ae.restore();
    }
    var _0x392932 = this.getSkinImageObj(this.getWing(2));
    if (_0x392932) {
      a0_0x1306ae.save();
      var _0x577383 = -(-0.2 + _0x16fbb4) * a0_0x873ec7(-80);
      var _0x580e4e = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-25) + _0x577383);
      var _0x21cf8c = 0;
      var _0x20b548 = this.rad;
      var _0x3f9dde = _0x580e4e * 2 * 0.65;
      var _0x22e6c1 = _0x580e4e * 2.5;
      var _0x2355c5 = 1;
      var _0x3aaf78 = 1.5;
      a0_0x1306ae.drawImage(_0x392932, _0x21cf8c + _0x3f9dde * -_0x2355c5, _0x20b548 + _0x22e6c1 * -_0x3aaf78, _0x3f9dde, _0x22e6c1);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  } else if (this.flag_flying && this.specType == 2) {
    a0_0x1306ae.save();
    var _0x3e6672 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x16fbb4 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x3e6672, 0.7, 0.3, 2) : 0;
    var _0x392932 = this.getSkinImageObj(this.getWing(1));
    if (_0x392932) {
      a0_0x1306ae.save();
      var _0x577383 = -(-0.2 + _0x16fbb4) * a0_0x873ec7(45);
      var _0x580e4e = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(15) + _0x577383);
      var _0x21cf8c = 0;
      var _0x20b548 = this.rad;
      var _0x3f9dde = _0x580e4e * 2 * 0.7;
      var _0x22e6c1 = _0x580e4e * 2.2;
      var _0x2355c5 = 0;
      var _0x3aaf78 = 1.5;
      a0_0x1306ae.drawImage(_0x392932, _0x21cf8c + _0x3f9dde * -_0x2355c5, _0x20b548 + _0x22e6c1 * -_0x3aaf78, _0x3f9dde, _0x22e6c1);
      a0_0x1306ae.restore();
    }
    var _0x392932 = this.getSkinImageObj(this.getWing(2));
    if (_0x392932) {
      a0_0x1306ae.save();
      var _0x577383 = -(-0.2 + _0x16fbb4) * a0_0x873ec7(-45);
      var _0x580e4e = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-15) + _0x577383);
      var _0x21cf8c = 0;
      var _0x20b548 = this.rad;
      var _0x3f9dde = _0x580e4e * 2 * 0.7;
      var _0x22e6c1 = _0x580e4e * 2.2;
      var _0x2355c5 = 1;
      var _0x3aaf78 = 1.5;
      a0_0x1306ae.drawImage(_0x392932, _0x21cf8c + _0x3f9dde * -_0x2355c5, _0x20b548 + _0x22e6c1 * -_0x3aaf78, _0x3f9dde, _0x22e6c1);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  } else if (this.flag_flying && this.specType == 3) {
    a0_0x1306ae.save();
    var _0x3e6672 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x16fbb4 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x3e6672, 0.5, 0.5, 2) : 0;
    var _0x392932 = this.getSkinImageObj(this.getWing(1));
    if (_0x392932) {
      a0_0x1306ae.save();
      var _0x577383 = -(-0.2 + _0x16fbb4) * a0_0x873ec7(45);
      var _0x580e4e = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(25) + _0x577383);
      var _0x21cf8c = 0;
      var _0x20b548 = this.rad;
      var _0x3f9dde = _0x580e4e * 2 * 0.7;
      var _0x22e6c1 = _0x580e4e * 2.2;
      var _0x2355c5 = 0;
      var _0x3aaf78 = 1.5;
      a0_0x1306ae.drawImage(_0x392932, _0x21cf8c + _0x3f9dde * -_0x2355c5, _0x20b548 + _0x22e6c1 * -_0x3aaf78, _0x3f9dde, _0x22e6c1);
      a0_0x1306ae.restore();
    }
    var _0x392932 = this.getSkinImageObj(this.getWing(2));
    if (_0x392932) {
      a0_0x1306ae.save();
      var _0x577383 = -(-0.2 + _0x16fbb4) * a0_0x873ec7(-45);
      var _0x580e4e = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-25) + _0x577383);
      var _0x21cf8c = 0;
      var _0x20b548 = this.rad;
      var _0x3f9dde = _0x580e4e * 2 * 0.7;
      var _0x22e6c1 = _0x580e4e * 2.2;
      var _0x2355c5 = 1;
      var _0x3aaf78 = 1.5;
      a0_0x1306ae.drawImage(_0x392932, _0x21cf8c + _0x3f9dde * -_0x2355c5, _0x20b548 + _0x22e6c1 * -_0x3aaf78, _0x3f9dde, _0x22e6c1);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x1e94f8 = this.getSkinImageObj(this.getHead());
    if (_0x1e94f8) {
      a0_0x1306ae.save();
      var _0x580e4e = this.rad;
      a0_0x1306ae.drawImage(_0x1e94f8, -_0x580e4e * _0x465309, (-_0x580e4e + _0x580e4e * 0.1) * _0x465309, _0x580e4e * 2 * _0x465309, _0x580e4e * 2 * _0x465309);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x433020() {
  a0_0x433020.superClass.call(this, a0_0x24738f);
}
window.SnowyOwl = a0_0x433020;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x433020, a0_0x24738f, a0_0xff40c0);
var a0_0x1cbe01 = a0_0x1cbe01;
var a0_0x28626c = a0_0x2449e7;
a0_0x1cbe01.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1cbe01.prototype.constructor = a0_0x1cbe01;
a0_0x1cbe01.superClass = a0_0x28626c;
a0_0x1cbe01.prototype.animalInfo = function () {
  const _0x303712 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x303712.aniName = "Pelican";
      break;
    case 111:
      _0x303712.aniName = "Classic Pelican";
      break;
    case 112:
      _0x303712.aniName = "Gold-trim Pelican";
      break;
  }
  _0x303712.upgradeText = "UPGRADED to " + _0x303712.aniName + "! \nPick up water (and prey!) in your mouth,\nfly, and drop water on prey! (press W again)";
  _0x303712.skinName = this.getSkinName();
  return _0x303712;
};
a0_0x1cbe01.prototype.getSpeciesPath = function (_0x2ab25a) {
  return "pelican/" + this.animalSpecies;
};
a0_0x1cbe01.prototype.getSkinName = function () {
  return this.getSpeciesPath("pelican") + "/pelican" + (this.specType == 0 ? "" : this.specType);
};
a0_0x1cbe01.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x11d29b = 500 / 340;
  var _0x4f45cf = this.rad - this.outlineW;
  var _0x28e1e5 = "skins";
  if (this.flag_flying) {
    var _0x14a2d4 = "";
    _0x14a2d4 = "pelican";
    a0_0x1306ae.save();
    var _0x15d5e9 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x39b3e4 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x15d5e9, 0.9, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x53c2d8 = this.getSkinImageObj(this.getWing("pelican", 1, true));
    if (_0x53c2d8) {
      a0_0x1306ae.save();
      var _0xd00d5d = -(-0.2 + _0x39b3e4) * a0_0x5c63e1;
      var _0x4f45cf = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(45) + _0xd00d5d);
      var _0x540625 = 0;
      var _0xd7705c = this.rad;
      var _0x3f3bcc = _0x4f45cf * 2 * 0.6;
      var _0x522419 = _0x4f45cf * 2.3;
      var _0x557228 = 0;
      var _0x49d0de = 1.7;
      a0_0x1306ae.drawImage(_0x53c2d8, _0x540625 + _0x3f3bcc * -_0x557228, _0xd7705c + _0x522419 * -_0x49d0de, _0x3f3bcc, _0x522419);
      a0_0x1306ae.restore();
    }
    var _0x53c2d8 = this.getSkinImageObj(this.getWing("pelican", 2, true));
    if (_0x53c2d8) {
      a0_0x1306ae.save();
      var _0xd00d5d = -(-0.2 + _0x39b3e4) * a0_0x873ec7(-90);
      var _0x4f45cf = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0xd00d5d);
      var _0x540625 = 0;
      var _0xd7705c = this.rad;
      var _0x3f3bcc = _0x4f45cf * 2 * 0.6;
      var _0x522419 = _0x4f45cf * 2.3;
      var _0x557228 = 1;
      var _0x49d0de = 1.7;
      a0_0x1306ae.drawImage(_0x53c2d8, _0x540625 + _0x3f3bcc * -_0x557228, _0xd7705c + _0x522419 * -_0x49d0de, _0x3f3bcc, _0x522419);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  } else if (this.specType == 1) {
    var _0x14a2d4 = "";
    _0x14a2d4 = "pelican";
    a0_0x1306ae.save();
    var _0x15d5e9 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x39b3e4 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x15d5e9, 0.9, 0.3, 2) : 0;
    var _0x53c2d8 = this.getSkinImageObj(this.getWing("pelican", 11, true));
    if (_0x53c2d8) {
      a0_0x1306ae.save();
      var _0xd00d5d = -(-0.2 + _0x39b3e4) * a0_0x873ec7(45);
      var _0x4f45cf = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(45) + _0xd00d5d);
      var _0x540625 = 0;
      var _0xd7705c = this.rad;
      var _0x3f3bcc = _0x4f45cf * 2 * 0.7;
      var _0x522419 = _0x4f45cf * 2.2;
      var _0x557228 = 0;
      var _0x49d0de = 1.7;
      a0_0x1306ae.drawImage(_0x53c2d8, _0x540625 + _0x3f3bcc * -_0x557228, _0xd7705c + _0x522419 * -_0x49d0de, _0x3f3bcc, _0x522419);
      a0_0x1306ae.restore();
    }
    var _0x53c2d8 = this.getSkinImageObj(this.getWing("pelican", 21, true));
    if (_0x53c2d8) {
      a0_0x1306ae.save();
      var _0xd00d5d = -(-0.2 + _0x39b3e4) * a0_0x873ec7(-45);
      var _0x4f45cf = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0xd00d5d);
      var _0x540625 = 0;
      var _0xd7705c = this.rad;
      var _0x3f3bcc = _0x4f45cf * 2 * 0.7;
      var _0x522419 = _0x4f45cf * 2.2;
      var _0x557228 = 1;
      var _0x49d0de = 1.7;
      a0_0x1306ae.drawImage(_0x53c2d8, _0x540625 + _0x3f3bcc * -_0x557228, _0xd7705c + _0x522419 * -_0x49d0de, _0x3f3bcc, _0x522419);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
  if (this.specType != 0 && !this.flag_isGrabbed) {
    if (this.specType == 2) {
      var _0x3a34b3 = _0x28e1e5 + "/" + this.getSpeciesPath("pelican") + "/ability_pelican.png";
      var _0x20af66 = this.getSkinImageObj(_0x3a34b3);
      if (_0x20af66) {
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(a0_0x873ec7(180));
        var _0x4f45cf = this.rad * 0.3;
        var _0x1b444c = this.rad * 1;
        a0_0x1306ae.drawImage(_0x20af66, -_0x4f45cf * _0x11d29b, -_0x4f45cf - _0x1b444c * _0x11d29b, _0x4f45cf * 2 * _0x11d29b, _0x4f45cf * 2 * _0x11d29b);
        a0_0x1306ae.restore();
      }
    }
    var _0x5172cc = this.getSkinImageObj(this.getHead("pelican", true));
    if (_0x5172cc) {
      a0_0x1306ae.save();
      var _0x4f45cf = this.rad * 1;
      var _0x1b444c = -this.rad * 0.3;
      a0_0x1306ae.drawImage(_0x5172cc, -_0x4f45cf * _0x11d29b, -_0x4f45cf + _0x1b444c * _0x11d29b, _0x4f45cf * 2 * _0x11d29b, _0x4f45cf * 2 * _0x11d29b);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x1cbe01() {
  a0_0x1cbe01.superClass.call(this, a0_0x24738f);
}
window.Pelican = a0_0x1cbe01;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1cbe01, a0_0x24738f, a0_0x2c361c);
var a0_0x28626c = a0_0x2449e7;
a0_0x124b0c.prototype = Object.create(a0_0x28626c.prototype);
a0_0x124b0c.prototype.constructor = a0_0x124b0c;
a0_0x124b0c.superClass = a0_0x28626c;
a0_0x124b0c.prototype.updateZ = function () {
  this.z = 1003 + this.rad;
};
a0_0x124b0c.prototype.getSkinName = function () {
  var _0x20bc18 = "";
  if (this.flag_usingAbility && !this.flag_underWater) {
    _0x20bc18 = "2";
  }
  return "frog/frog" + _0x20bc18;
};
a0_0x124b0c.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && !this.flag_underWater) {
    var _0x3f4ecf = this.rad - this.outlineW;
    var _0x2a96be = 500 / 340;
    var _0x2e0bdc = this.getSkinImageObj("./skins/frog/frogLegs.png");
    if (_0x2e0bdc) {
      a0_0x1306ae.drawImage(_0x2e0bdc, -_0x3f4ecf * _0x2a96be, (-_0x3f4ecf - _0x3f4ecf) * _0x2a96be, _0x3f4ecf * 2 * _0x2a96be, _0x3f4ecf * 2 * _0x2a96be);
    }
  }
};
a0_0x124b0c.prototype.canDrawAnimalSkin = function () {
  return !this.flag_underWater;
};
a0_0x124b0c.prototype.drawUnderWater = function () {
  if (this.flag_underWater) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.2;
    a0_0x1306ae.scale(1, 1.5);
    a0_0x50fd5c(0, 0, this.rad * 0.5, "#598b30");
    a0_0x50fd5c(0, this.rad * -0.6, this.rad * 0.3, "#64a034");
    a0_0x1306ae.restore();
  }
};
function a0_0x124b0c() {
  a0_0x124b0c.superClass.call(this, a0_0x24738f);
}
window.Frog = a0_0x124b0c;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x124b0c, a0_0x24738f, a0_0x40fe0d);
var a0_0x2b9582 = a0_0x44b812;
var a0_0x28626c = a0_0x2449e7;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x44b812.prototype.isAttacking = false;
a0_0x44b812.prototype.objSkinPath = {};
a0_0x44b812.prototype.getSkinName = function () {
  return this.objSkinPath[this.getSkinIndex()].skin;
};
a0_0x44b812.prototype.getSkinIndex = function () {
  if (this.animalSpecies == 2 && (this.isAttacking || this.flag_usingAbility)) {
    return 3;
  }
  return this.animalSpecies;
};
a0_0x44b812.prototype.setSkinPath = function () {};
a0_0x44b812.prototype.onAnimalSpeciesSet = function () {
  let _0x46c6f2 = this.animalSpecies;
  let _0x5bf2f5 = "";
  let {
    skin: _0x34ab74,
    wing1: _0x3d8bf4,
    wing2: _0x4d36c1,
    head: _0x5594fe
  } = {
    skin: "duck/" + _0x46c6f2 + "/duck" + _0x5bf2f5,
    wing1: "skins/duck/" + _0x46c6f2 + "/duck_wing1.png",
    wing2: "skins/duck/" + _0x46c6f2 + "/duck_wing2.png",
    head: "skins/duck/" + _0x46c6f2 + "/duck_head.png"
  };
  this.objSkinPath[_0x46c6f2] = {
    skin: _0x34ab74,
    wing1: _0x3d8bf4,
    wing2: _0x4d36c1,
    head: _0x5594fe
  };
  if (_0x46c6f2 === 2) {
    _0x5bf2f5 = 1;
    ({
      skin: _0x34ab74,
      wing1: _0x3d8bf4,
      wing2: _0x4d36c1,
      head: _0x5594fe
    } = {
      skin: "duck/" + _0x46c6f2 + "/duck" + _0x5bf2f5,
      wing1: "skins/duck/" + _0x46c6f2 + "/duck_wing1.png",
      wing2: "skins/duck/" + _0x46c6f2 + "/duck_wing2.png",
      head: "skins/duck/" + _0x46c6f2 + "/duck_head.png"
    });
    this.objSkinPath[3] = {
      skin: _0x34ab74,
      wing1: _0x3d8bf4,
      wing2: _0x4d36c1,
      head: _0x5594fe
    };
  }
};
a0_0x2b9582.prototype.drawSkinCustomization = function () {
  if (this.isAttacking && this.animalSpecies == 2) {
    this.angryGooseAnimation();
  }
  if (this.flag_usingAbility && this.animalSpecies == 2) {
    this.flyingAnimation();
  }
};
a0_0x44b812.prototype.angryGooseAnimation = function () {
  var _0x1806ea = this.skinScale;
  a0_0x1306ae.save();
  var _0x451173 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x396d84 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x451173, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
  var _0x4986cb = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing1);
  if (_0x4986cb) {
    a0_0x1306ae.save();
    var _0x36d6c1 = -(-0.2 + _0x396d84) * a0_0x873ec7(15);
    var _0x1f3371 = this.rad * 0.8;
    a0_0x1306ae.rotate(a0_0x873ec7(15) + _0x36d6c1);
    var _0x5527ab = 0;
    var _0x457478 = this.rad;
    var _0x4c7ddf = _0x1f3371 * 2 * 0.7;
    var _0x112517 = _0x1f3371 * 2.2;
    var _0x78110b = 0;
    var _0x495b07 = 1.5;
    a0_0x1306ae.drawImage(_0x4986cb, _0x5527ab + _0x4c7ddf * -_0x78110b, _0x457478 + _0x112517 * -_0x495b07, _0x4c7ddf, _0x112517);
    a0_0x1306ae.restore();
  }
  var _0x4986cb = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing2);
  if (_0x4986cb) {
    a0_0x1306ae.save();
    var _0x36d6c1 = -(-0.2 + _0x396d84) * a0_0x873ec7(-15);
    var _0x1f3371 = this.rad * 0.8;
    a0_0x1306ae.rotate(a0_0x873ec7(-15) + _0x36d6c1);
    var _0x5527ab = 0;
    var _0x457478 = this.rad;
    var _0x4c7ddf = _0x1f3371 * 2 * 0.7;
    var _0x112517 = _0x1f3371 * 2.2;
    var _0x78110b = 1;
    var _0x495b07 = 1.5;
    a0_0x1306ae.drawImage(_0x4986cb, _0x5527ab + _0x4c7ddf * -_0x78110b, _0x457478 + _0x112517 * -_0x495b07, _0x4c7ddf, _0x112517);
    a0_0x1306ae.restore();
  }
  var _0x10a74f = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].head);
  if (_0x10a74f) {
    a0_0x1306ae.save();
    var _0x1f3371 = this.rad * 1;
    var _0x373bb6 = -this.rad * 0.1;
    a0_0x1306ae.drawImage(_0x10a74f, -_0x1f3371 * _0x1806ea, -_0x1f3371 + _0x373bb6 * _0x1806ea, _0x1f3371 * 2 * _0x1806ea, _0x1f3371 * 2 * _0x1806ea);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x44b812.prototype.skinScale = 500 / 340;
a0_0x44b812.prototype.flyingAnimation = function () {
  var _0x4a3b0f = this.skinScale;
  if (this.flag_flying && !this.flag_isGrabbed) {
    a0_0x1306ae.save();
    var _0x13d158 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x93c635 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x13d158, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x39c320 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing1);
    if (_0x39c320) {
      a0_0x1306ae.save();
      var _0x35ce63 = -(-0.2 + _0x93c635) * a0_0x5c63e1;
      var _0x4e6751 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x35ce63);
      var _0x2eafa7 = 0;
      var _0x5941ff = this.rad;
      var _0x3a2920 = _0x4e6751 * 2 * 0.62;
      var _0x561ca5 = _0x4e6751 * 2.5;
      var _0x5e46d2 = 0.2;
      var _0x51f0ca = 1.7;
      a0_0x1306ae.drawImage(_0x39c320, _0x2eafa7 + _0x3a2920 * -_0x5e46d2, _0x5941ff + _0x561ca5 * -_0x51f0ca, _0x3a2920, _0x561ca5);
      a0_0x1306ae.restore();
    }
    var _0x39c320 = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].wing2);
    if (_0x39c320) {
      a0_0x1306ae.save();
      var _0x35ce63 = -(-0.2 + _0x93c635) * a0_0x873ec7(-90);
      var _0x4e6751 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x35ce63);
      var _0x2eafa7 = 0;
      var _0x5941ff = this.rad;
      var _0x3a2920 = _0x4e6751 * 2 * 0.62;
      var _0x561ca5 = _0x4e6751 * 2.5;
      var _0x5e46d2 = 0.8;
      var _0x51f0ca = 1.7;
      a0_0x1306ae.drawImage(_0x39c320, _0x2eafa7 + _0x3a2920 * -_0x5e46d2, _0x5941ff + _0x561ca5 * -_0x51f0ca, _0x3a2920, _0x561ca5);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x4bb4dd = this.getSkinImageObj(this.objSkinPath[this.getSkinIndex()].head);
    if (_0x4bb4dd) {
      a0_0x1306ae.save();
      var _0x4e6751 = this.rad;
      a0_0x1306ae.drawImage(_0x4bb4dd, -_0x4e6751 * _0x4a3b0f, (-_0x4e6751 + _0x4e6751 * 0.1) * _0x4a3b0f, _0x4e6751 * 2 * _0x4a3b0f, _0x4e6751 * 2 * _0x4a3b0f);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x44b812.prototype.readCustomData_onNewlyVisible = function (_0x3c78d3) {
  a0_0x44b812.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3c78d3);
  this.isAttacking = _0x3c78d3.readUInt8();
};
a0_0x44b812.prototype.readCustomData_onUpdate = function (_0x392d81) {
  a0_0x44b812.superClass.prototype.readCustomData_onUpdate.call(this, _0x392d81);
  this.isAttacking = _0x392d81.readUInt8();
};
function a0_0x44b812() {
  a0_0x28626c.call(this, a0_0x24738f);
}
window.Duck = a0_0x44b812;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x44b812, a0_0x24738f, a0_0x31c0a8);
var a0_0x28626c = a0_0x2449e7;
a0_0x25088f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x25088f.prototype.constructor = a0_0x25088f;
a0_0x25088f.superClass = a0_0x28626c;
a0_0x25088f.prototype.setSkinPath = function () {
  this.objSkinPath = "duck/duckling";
};
a0_0x25088f.prototype.getSkinName = function () {
  return this.objSkinPath;
};
function a0_0x25088f() {
  a0_0x25088f.superClass.call(this, a0_0x24738f);
}
window.Duckling = a0_0x25088f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x25088f, a0_0x24738f, a0_0x18e2b3);
var a0_0x28626c = a0_0x2449e7;
a0_0x15148d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x15148d.prototype.constructor = a0_0x15148d;
a0_0x15148d.superClass = a0_0x28626c;
a0_0x15148d.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
a0_0x15148d.prototype.canUseTailslap = false;
a0_0x15148d.prototype.tailState = 0;
a0_0x15148d.prototype.getSkinName = function () {
  return "volcano/blackdragon/" + this.animalSpecies + "/blackdragon";
};
a0_0x15148d.prototype.leftWingAnim = null;
a0_0x15148d.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0xf519d3 = 500 / 340;
  var _0x201621 = this.lava;
  var _0x2baf1a = 50;
  if (_0x201621 < _0x2baf1a) {
    var _0x42c6bb = _0x201621 / _0x2baf1a;
    var _0x4d0040 = this.getSkinImageObj("skins/volcano/blackdragon/" + this.animalSpecies + "/wings.png");
    if (_0x4d0040) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1 - _0x42c6bb;
      var _0x121876 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x4d0040, -_0x121876 * _0xf519d3, -_0x121876 * _0xf519d3, _0x121876 * 2 * _0xf519d3, _0x121876 * 2 * _0xf519d3);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x15148d.prototype.animalInfo = function () {
  var _0x5e94d0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5e94d0.aniName = "Black Dragon";
      break;
    case 1:
      _0x5e94d0.aniName = "Golden Black Dragon";
      break;
    case 2:
      _0x5e94d0.aniName = "Azure Bringer";
      break;
    case 111:
      _0x5e94d0.aniName = "Classic Black Dragon";
      break;
    case 204:
      _0x5e94d0.aniName = "Violet Dusk Black Dragon";
      break;
    default:
      break;
  }
  _0x5e94d0.aniCol = "#FF9000";
  _0x5e94d0.skinName = this.getSkinName();
  _0x5e94d0.upgradeText = "UPGRADED to " + _0x5e94d0.aniName;
  _0x5e94d0.upgradeText += "!\n Black dragons drink lava instead of water! Black dragons only heal on healing stones/lava!";
  _0x5e94d0.aniCol = "black";
  return _0x5e94d0;
};
a0_0x15148d.prototype.getAbilityInfo = function (_0x21b0e4) {
  var _0x562c5f = {
    abilName: "Multi Fireballs"
  };
  var _0x12519f = 0;
  switch (this.animalSpecies) {
    case 0:
      _0x12519f = 1;
      break;
    case 1:
      _0x12519f = 2;
      break;
    case 2:
      _0x12519f = 7;
      break;
  }
  _0x562c5f.speciesType = _0x12519f;
  _0x562c5f.abilImg = "img/fire/" + _0x12519f + "/0.png";
  _0x562c5f.skinThemeID = this.skinThemeID;
  _0x562c5f.mopeSeasonID = this.mopeSeasonID;
  return _0x562c5f;
};
function a0_0x15148d() {
  this.lava = 100;
  a0_0x15148d.superClass.call(this, a0_0x24738f);
}
window.BlackDragon = a0_0x15148d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x15148d, a0_0x24738f, a0_0x332990);
var a0_0x224836 = a0_0x224836;
var a0_0x28626c = a0_0x2449e7;
a0_0x224836.prototype = Object.create(a0_0x28626c.prototype);
a0_0x224836.prototype.constructor = a0_0x224836;
a0_0x224836.superClass = a0_0x28626c;
a0_0x224836.prototype.getSkinName = function () {
  return "/honeybee/0/" + this.animalSubSpecies + "/honeybee" + (this.specType == 0 || this.specType == undefined ? "" : this.specType);
};
a0_0x224836.prototype.drawSkinCustomization = function () {
  a0_0x1306ae.save();
  var _0x4ae96b = a0_0x24806e - this.spawnTime;
  let _0x161f78 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b && !a0_0x58297a;
  let _0x28d2a3 = _0x161f78 ? a0_0x325bbc.honeybee[_0x4ae96b % a0_0x325bbc.honeybee.length] : 0;
  var _0x3558cc = frame2 = _0x28d2a3;
  var _0x44a5f9 = this.rad * 0.6;
  var _0x59d535 = 30;
  var _0x8b61f7 = 2;
  var _0x2e337b = 20;
  var _0x1890ad = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing2.png");
  if (_0x1890ad) {
    a0_0x1306ae.save();
    var _0x56c2cd = -(-_0x8b61f7 + frame2) * a0_0x873ec7(-(_0x59d535 - 5));
    a0_0x1306ae.globalAlpha = 0.6;
    a0_0x1306ae.rotate(a0_0x873ec7(-_0x2e337b + 10) + _0x56c2cd);
    var _0x4265cc = 0;
    var _0x1c6d21 = this.rad;
    var _0x3d5191 = _0x44a5f9 * 2 * 0.7;
    var _0xb077d6 = _0x44a5f9 * 2.3;
    var _0x11de55 = 0.5;
    var _0x3da4a4 = 1.6;
    a0_0x1306ae.drawImage(_0x1890ad, _0x4265cc + _0x3d5191 * -_0x11de55, _0x1c6d21 + _0xb077d6 * -_0x3da4a4, _0x3d5191, _0xb077d6);
    a0_0x1306ae.restore();
  }
  var _0x1890ad = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing1.png");
  if (_0x1890ad) {
    a0_0x1306ae.save();
    var _0x56c2cd = -(-_0x8b61f7 + frame2) * a0_0x873ec7(_0x59d535 - 5);
    a0_0x1306ae.globalAlpha = 0.6;
    a0_0x1306ae.rotate(a0_0x873ec7(_0x2e337b - 10) + _0x56c2cd);
    var _0x4265cc = 0;
    var _0x1c6d21 = this.rad;
    var _0x3d5191 = _0x44a5f9 * 2.3 * 0.7;
    var _0xb077d6 = _0x44a5f9 * 2.3;
    var _0x11de55 = 0.5;
    var _0x3da4a4 = 1.6;
    a0_0x1306ae.drawImage(_0x1890ad, _0x4265cc + _0x3d5191 * -_0x11de55, _0x1c6d21 + _0xb077d6 * -_0x3da4a4, _0x3d5191, _0xb077d6);
    a0_0x1306ae.restore();
  }
  var _0x1890ad = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing1.png");
  if (_0x1890ad) {
    a0_0x1306ae.save();
    var _0x56c2cd = -(-_0x8b61f7 + _0x3558cc) * a0_0x873ec7(_0x59d535);
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.rotate(a0_0x873ec7(_0x2e337b) + _0x56c2cd);
    var _0x4265cc = 0;
    var _0x1c6d21 = this.rad;
    var _0x3d5191 = _0x44a5f9 * 2 * 0.7;
    var _0xb077d6 = _0x44a5f9 * 2.3;
    var _0x11de55 = 0.5;
    var _0x3da4a4 = 1.7;
    a0_0x1306ae.drawImage(_0x1890ad, _0x4265cc + _0x3d5191 * -_0x11de55, _0x1c6d21 + _0xb077d6 * -_0x3da4a4, _0x3d5191, _0xb077d6);
    a0_0x1306ae.restore();
  }
  var _0x1890ad = this.getSkinImageObj("skins/honeybee/0/" + this.animalSubSpecies + "/honeybee_wing2.png");
  if (_0x1890ad) {
    a0_0x1306ae.save();
    var _0x56c2cd = -(-_0x8b61f7 + _0x3558cc) * a0_0x873ec7(-_0x59d535);
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.rotate(a0_0x873ec7(-_0x2e337b) + _0x56c2cd);
    var _0x4265cc = 0;
    var _0x1c6d21 = this.rad;
    var _0x3d5191 = _0x44a5f9 * 2 * 0.7;
    var _0xb077d6 = _0x44a5f9 * 2.3;
    var _0x11de55 = 0.5;
    var _0x3da4a4 = 1.7;
    a0_0x1306ae.drawImage(_0x1890ad, _0x4265cc + _0x3d5191 * -_0x11de55, _0x1c6d21 + _0xb077d6 * -_0x3da4a4, _0x3d5191, _0xb077d6);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
function a0_0x224836() {
  a0_0x224836.superClass.call(this, a0_0x24738f);
}
window.Honeybee = a0_0x224836;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x224836, a0_0x24738f, a0_0x5ed01e);
var a0_0x38afd1 = a0_0x38afd1;
var a0_0x28626c = a0_0x2449e7;
a0_0x38afd1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x38afd1.prototype.constructor = a0_0x38afd1;
a0_0x38afd1.superClass = a0_0x28626c;
a0_0x38afd1.prototype.animalInfo = function () {
  var _0x3bd85a = {};
  var _0x279f15 = this.animalSpecies;
  switch (this.animalSpecies) {
    case 0:
      _0x3bd85a.aniName = "The Phoenix";
      break;
    case 1:
      _0x3bd85a.aniName = "Golden Phoenix";
      break;
    case 2:
      _0x3bd85a.aniName = "Alpha Phoenix";
      break;
    case 111:
      _0x3bd85a.aniName = "Classic Phoenix";
      break;
    case 200:
      _0x279f15 = "/" + this.animalSubSpecies;
      switch (this.animalSubSpecies) {
        case 0:
          _0x3bd85a.aniName = "Aqua Phoenix";
          break;
        case 1:
          _0x3bd85a.aniName = "Ice Phoenix";
          break;
        case 2:
          _0x3bd85a.aniName = "Ash Phoenix";
          break;
        case 3:
          _0x3bd85a.aniName = "Red Giant Phoenix";
          break;
      }
      break;
  }
  _0x3bd85a.aniCol = "#FF9000";
  _0x3bd85a.skinName = this.getSkinName();
  _0x3bd85a.upgradeText = "UPGRADED to " + _0x3bd85a.aniName + "!\nPhoenix shoot Firetornados to burn their prey alive!";
  return _0x3bd85a;
};
a0_0x38afd1.prototype.getSkinImageObj = function (_0x389ae0) {
  if (a0_0x2bafdc) {
    return;
  }
  var _0x320f3 = this.animalSpecies === 1 || this.animalSpecies === 2 || this.animalSpecies === 200 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x389ae0, _0x320f3);
};
a0_0x38afd1.prototype.getAbilityInfo = function (_0x5f5438) {
  var _0xe8cb5c = {};
  var _0x12995e = this.animalSpecies;
  if (this.animalSpecies == 200) {
    _0x12995e += "/" + this.animalSubSpecies;
  }
  _0xe8cb5c.abilName = "Fire Tornado!";
  _0xe8cb5c.abilImg = "skins/volcano/phoenix/" + _0x12995e + "/firetornado.png";
  _0xe8cb5c.skinThemeID = this.skinThemeID;
  _0xe8cb5c.mopeSeasonID = this.mopeSeasonID;
  return _0xe8cb5c;
};
a0_0x38afd1.prototype.getSkinName = function () {
  var _0x152c35 = this.animalSpecies;
  if (this.animalSpecies == 200) {
    _0x152c35 += "/" + this.animalSubSpecies;
  }
  return "/volcano/phoenix/" + _0x152c35 + "/phoenix" + (this.specType == 0 || this.specType == undefined ? "" : this.specType);
};
a0_0x38afd1.prototype.getSkinPart = function (_0x1a7b22) {
  var _0x5f3fa9 = this.animalSpecies;
  if (this.animalSpecies == 200) {
    _0x5f3fa9 += "/" + this.animalSubSpecies;
  }
  return this.getSkinImageObj("skins/volcano/phoenix/" + _0x5f3fa9 + "/" + _0x1a7b22 + ".png");
};
a0_0x38afd1.prototype.drawSkinImg = function () {
  if (a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b && !a0_0x45af98 && this.animalSpecies != 200) {
    var _0x390418 = 500 / 340;
    var _0x28f07b = this.rad - this.outlineW;
    var _0x46e1c9 = this.getSkinPart("phoenix_body");
    var _0xe3a32e = this.getSkinPart("phoenix_head");
    var _0x4e015f = Math.trunc(a0_0x24806e / 166) % 6;
    var _0x4bd6ff = this.getSkinPart("/tail_mid/tail_mid_" + _0x4e015f);
    if (_0x4bd6ff) {
      a0_0x1306ae.drawImage(_0x4bd6ff, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    var _0x4e015f = Math.trunc(a0_0x24806e / 166) % 6;
    var _0x16192f = Math.trunc(a0_0x24806e / 250) % 6;
    var _0x2a8e5f = this.getSkinPart("/tail/tail_" + _0x4e015f);
    var _0x1bd91d = this.getSkinPart("tail_flipped/tail_" + _0x16192f);
    if (_0x2a8e5f) {
      a0_0x1306ae.drawImage(_0x2a8e5f, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    if (_0x1bd91d) {
      a0_0x1306ae.drawImage(_0x1bd91d, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    if (_0x46e1c9) {
      a0_0x1306ae.drawImage(_0x46e1c9, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    var _0x16e2e7 = Math.trunc(a0_0x24806e / 125) % 8;
    var _0x368910 = Math.trunc(a0_0x24806e / 150) % 8;
    var _0x19eb85 = this.getSkinPart("wing_flame_orange/wing_flame_orange_" + _0x16e2e7);
    var _0x47a314 = this.getSkinPart("wing_flame_yellow/wing_flame_yellow_" + _0x368910);
    if (_0x19eb85) {
      a0_0x1306ae.drawImage(_0x19eb85, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    if (_0x47a314) {
      a0_0x1306ae.drawImage(_0x47a314, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    var _0x3bc884 = this.getSkinPart("wing_flame_orange_flipped/wing_flame_orange_" + _0x16e2e7);
    var _0x2aebaa = this.getSkinPart("wing_flame_yellow_flipped/wing_flame_yellow_" + _0x368910);
    if (_0x3bc884) {
      a0_0x1306ae.drawImage(_0x3bc884, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    if (_0x2aebaa) {
      a0_0x1306ae.drawImage(_0x2aebaa, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
    if (_0xe3a32e) {
      a0_0x1306ae.drawImage(_0xe3a32e, -_0x28f07b * _0x390418, -_0x28f07b * _0x390418, _0x28f07b * 2 * _0x390418, _0x28f07b * 2 * _0x390418);
    }
  } else {
    a0_0x38afd1.superClass.prototype.drawSkinImg.call(this);
  }
};
a0_0x38afd1.prototype.drawWhenUnderwater = function () {
  var _0x5afa33 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x336e6c = 1.5;
  var _0x3919e2 = 1;
  var _0xe13697 = _0x3919e2 * Math.sin(Math.PI * 2 / _0x336e6c * _0x5afa33);
  var _0xf814cf = "#f9d43b";
  a0_0x1306ae.globalAlpha = 0.3;
  a0_0x1306ae.fillStyle = _0xf814cf;
  var _0x19c929 = this.flag_underWater ? this.rad * 0.15 : this.rad * 0.1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x19c929 + _0xe13697), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x19c929 - _0xe13697), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x19c929 + _0xe13697), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x19c929 - _0xe13697), 0, Math.PI * 2);
  a0_0x1306ae.fill();
};
function a0_0x38afd1() {
  a0_0x38afd1.superClass.call(this, a0_0x24738f);
}
window.Phoenix = a0_0x38afd1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x38afd1, a0_0x24738f, a0_0x1e1209);
var a0_0x550924 = a0_0x550924;
var a0_0x28626c = a0_0x2449e7;
a0_0x550924.prototype = Object.create(a0_0x28626c.prototype);
a0_0x550924.prototype.constructor = a0_0x550924;
a0_0x550924.superClass = a0_0x28626c;
a0_0x550924.prototype.animalInfo = function () {
  var _0x126f1f = {};
  switch (this.animalSpecies) {
    case 0:
      _0x126f1f.aniName = "Pigeon";
      break;
    case 1:
      _0x126f1f.aniName = "Rare White Dove";
      _0x126f1f.upgradeText += "\n(Doves fly faster!)";
      break;
    case 111:
      _0x126f1f.aniName = "Classic Pigeon";
      break;
    case 112:
      _0x126f1f.aniName = "Gold-trim Pigeon";
      break;
    case 202:
      _0x126f1f.aniName = "Thug Pigeon";
      break;
  }
  _0x126f1f.aniCol = "#FF9000";
  _0x126f1f.skinName = this.getSkinName();
  _0x126f1f.upgradeText = "UPGRADED to " + _0x126f1f.aniName + "!\nHold W to fly around. ";
  return _0x126f1f;
};
a0_0x550924.prototype.getSkinName = function () {
  let _0x1ee7d8 = this.getSpeciesPath() + "/pigeon";
  _0x1ee7d8 += this.specType == 0 ? "" : this.specType;
  return _0x1ee7d8;
};
a0_0x550924.prototype.getSpeciesPath = function () {
  return "land/pigeon/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x550924.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x550924.prototype.getWing = function (_0x1dc293) {
  var _0x38ecbb = "skins/" + this.getSpeciesPath();
  _0x38ecbb += "/pigeon_wing" + _0x1dc293 + ".png";
  return _0x38ecbb;
};
a0_0x550924.prototype.getHead = function () {
  var _0x5cce44 = "skins/" + this.getSpeciesPath();
  _0x5cce44 += "/pigeon_head.png";
  return _0x5cce44;
};
a0_0x550924.prototype.theFrame = 0;
a0_0x550924.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x2a5e46 = "skins";
  {
    var _0x37e5e9 = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x3126ed = a0_0xae444c("bird", this.spawnTime);
      if (_0x3126ed !== undefined && _0x3126ed != null) {
        this.theFrame = _0x3126ed;
      }
      var _0x36cdda = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x3c4ed9 = this.getSkinImageObj(this.getWing(1));
      if (_0x3c4ed9) {
        a0_0x1306ae.save();
        var _0x5ef1af = -(-0.2 + _0x36cdda) * a0_0x5c63e1;
        var _0x331693 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x4973e3 + _0x5ef1af);
        var _0x5ea5f3 = 0;
        var _0x2404c8 = this.rad;
        var _0xabdad7 = _0x331693 * 2 * 0.62;
        var _0x3de5d3 = _0x331693 * 2.5;
        var _0x12fefe = 0.2;
        var _0x261157 = 1.7;
        a0_0x1306ae.drawImage(_0x3c4ed9, _0x5ea5f3 + _0xabdad7 * -_0x12fefe, _0x2404c8 + _0x3de5d3 * -_0x261157, _0xabdad7, _0x3de5d3);
        a0_0x1306ae.restore();
      }
      var _0x3c4ed9 = this.getSkinImageObj(this.getWing(2));
      if (_0x3c4ed9) {
        a0_0x1306ae.save();
        var _0x5ef1af = -(-0.2 + _0x36cdda) * a0_0x873ec7(-90);
        var _0x331693 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x5ef1af);
        var _0x5ea5f3 = 0;
        var _0x2404c8 = this.rad;
        var _0xabdad7 = _0x331693 * 2 * 0.62;
        var _0x3de5d3 = _0x331693 * 2.5;
        var _0x12fefe = 0.8;
        var _0x261157 = 1.7;
        a0_0x1306ae.drawImage(_0x3c4ed9, _0x5ea5f3 + _0xabdad7 * -_0x12fefe, _0x2404c8 + _0x3de5d3 * -_0x261157, _0xabdad7, _0x3de5d3);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x244c16 = this.getSkinImageObj(this.getHead());
      if (_0x244c16) {
        a0_0x1306ae.save();
        var _0x331693 = this.rad;
        a0_0x1306ae.drawImage(_0x244c16, -_0x331693 * _0x37e5e9, (-_0x331693 + _0x331693 * 0.1) * _0x37e5e9, _0x331693 * 2 * _0x37e5e9, _0x331693 * 2 * _0x37e5e9);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x550924() {
  a0_0x550924.superClass.call(this, a0_0x24738f);
}
window.Pigeon = a0_0x550924;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x550924, a0_0x24738f, a0_0x14b677);
var a0_0x27b8d7 = a0_0x27b8d7;
var a0_0x28626c = a0_0x2449e7;
a0_0x27b8d7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x27b8d7.prototype.constructor = a0_0x27b8d7;
a0_0x27b8d7.superClass = a0_0x28626c;
a0_0x27b8d7.prototype.getSpeciesPath = function (_0x16a948) {
  var _0x1659ec = "/land/" + _0x16a948 + "/" + this.animalSpecies + (this.animalSpecies == 4 ? "/" + this.animalSubSpecies : "");
  return _0x1659ec;
};
a0_0x27b8d7.prototype.getWing = function (_0x16176c, _0x45e455, _0x5f3c0b) {
  var _0x11b187 = "skins/";
  switch (this.animalSpecies) {
    case 5:
    case 6:
    case 200:
    case 220:
      _0x11b187 += this.getSpeciesPath(_0x16176c);
      break;
    default:
      _0x11b187 += "land/" + _0x16176c;
  }
  switch (_0x45e455) {
    case 1:
      _0x11b187 += "/" + _0x16176c + "_wing1.png";
      break;
    case 2:
      _0x11b187 += "/" + _0x16176c + "_wing2.png";
      break;
  }
  return _0x11b187;
};
a0_0x27b8d7.prototype.animalInfo = function () {
  var _0x4ce008 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4ce008.aniName = "Toco Toucan";
      break;
    case 1:
      _0x4ce008.aniName = "Choco Toucan";
      break;
    case 2:
      _0x4ce008.aniName = "Keel-Billed Toucan";
      break;
    case 3:
      _0x4ce008.aniName = "Fiery Toucan";
      break;
    case 4:
      switch (this.animalSubSpecies) {
        case 0:
          _0x4ce008.aniName = "Lava Toucan";
          break;
        case 1:
          _0x4ce008.aniName = "Ice Toucan";
          break;
        case 2:
          _0x4ce008.aniName = "Aqua Toucan";
          break;
      }
      break;
    case 5:
      _0x4ce008.aniName = "Rare Toucan";
      break;
    case 6:
      _0x4ce008.aniName = "Prisma Toucan";
      break;
    case 100:
      _0x4ce008.aniName = "The Dapper";
      break;
    case 111:
      _0x4ce008.aniName = "Classic Toucan";
      break;
    case 200:
      _0x4ce008.aniName = "Ice Toucan";
      break;
    case 112:
      _0x4ce008.aniName = "Gold-trim Toucan";
      break;
    case 202:
      _0x4ce008.aniName = "Corpse Flower Toucan";
      break;
    case 220:
      _0x4ce008.aniName = "Molten Toucan";
      break;
  }
  _0x4ce008.upgradeText = "UPGRADED to " + _0x4ce008.aniName + "!\nHold right click (or W) to fly!\n(HINT: Start flying from a fruit tree or bush to throw fruit upon landing!)";
  _0x4ce008.aniCol = "#FF9000";
  _0x4ce008.skinName = this.getSpeciesPath("toucan") + "/toucan";
  return _0x4ce008;
};
a0_0x27b8d7.prototype.getSkinName = function () {
  var _0x255d76 = this.getSpeciesPath("toucan") + "/toucan" + (this.specType == 0 ? "" : this.specType);
  return _0x255d76;
};
a0_0x27b8d7.prototype.drawSkinCustomization = function () {
  var _0x432649 = 500 / 340;
  if (!this.flag_usingAbility) {
    this.drawBeak();
    return;
  }
  {
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x3086c1 = a0_0xae444c("bird", this.spawnTime);
      if (_0x3086c1 !== undefined && _0x3086c1 != null) {
        this.theFrame = _0x3086c1;
      }
      var _0x638e15 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x24265a = this.getSkinImageObj(this.getWing("toucan", 1, true));
      if (_0x24265a) {
        a0_0x1306ae.save();
        var _0x2d25bf = -(-0.2 + _0x638e15) * a0_0x5c63e1;
        var _0x483720 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x2d25bf);
        var _0x48f73a = 0;
        var _0x1f509d = this.rad;
        var _0x5d3f96 = _0x483720 * 2 * 0.62;
        var _0x132f4d = _0x483720 * 2.5;
        var _0x3f9cef = 0.2;
        var _0x2f7a69 = 1.7;
        a0_0x1306ae.drawImage(_0x24265a, _0x48f73a + _0x5d3f96 * -_0x3f9cef, _0x1f509d + _0x132f4d * -_0x2f7a69, _0x5d3f96, _0x132f4d);
        a0_0x1306ae.restore();
      }
      var _0x24265a = this.getSkinImageObj(this.getWing("toucan", 2, true));
      if (_0x24265a) {
        a0_0x1306ae.save();
        var _0x2d25bf = -(-0.2 + _0x638e15) * a0_0x873ec7(-90);
        var _0x483720 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x2d25bf);
        var _0x48f73a = 0;
        var _0x1f509d = this.rad;
        var _0x5d3f96 = _0x483720 * 2 * 0.62;
        var _0x132f4d = _0x483720 * 2.5;
        var _0x3f9cef = 0.8;
        var _0x2f7a69 = 1.7;
        a0_0x1306ae.drawImage(_0x24265a, _0x48f73a + _0x5d3f96 * -_0x3f9cef, _0x1f509d + _0x132f4d * -_0x2f7a69, _0x5d3f96, _0x132f4d);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x356088 = this.getSkinImageObj(this.getHead("toucan", true));
      if (_0x356088) {
        a0_0x1306ae.save();
        var _0x483720 = this.rad;
        a0_0x1306ae.drawImage(_0x356088, -_0x483720 * _0x432649, (-_0x483720 + _0x483720 * 0.1) * _0x432649, _0x483720 * 2 * _0x432649, _0x483720 * 2 * _0x432649);
        a0_0x1306ae.restore();
      }
      this.drawBeak();
    }
  }
};
a0_0x27b8d7.prototype.drawBeak = function () {
  if (this.mopeSeasonID != 2) {
    return;
  }
  var _0x589dec = 500 / 340;
  var _0x123d41 = this.flag_flying && !this.flag_isGrabbed ? 0.25 : 0.1;
  var _0xb1124b = "skins/" + this.getSpeciesPath("toucan") + "/toucan_beak.png";
  var _0x19a7cc = this.getSkinImageObj(_0xb1124b);
  if (_0x19a7cc) {
    a0_0x1306ae.save();
    var _0x4c521d = this.rad;
    a0_0x1306ae.drawImage(_0x19a7cc, -_0x4c521d * _0x589dec, (-_0x4c521d + _0x4c521d * _0x123d41) * _0x589dec, _0x4c521d * 2 * _0x589dec, _0x4c521d * 2 * _0x589dec);
    a0_0x1306ae.restore();
  }
};
function a0_0x27b8d7() {
  a0_0x27b8d7.superClass.call(this, a0_0x24738f);
  this.doesDrawEffectScale = false;
}
window.Toucan = a0_0x27b8d7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x27b8d7, a0_0x24738f, a0_0x5aa20b);
var a0_0x1bd041 = a0_0x1bd041;
var a0_0x28626c = a0_0x2449e7;
a0_0x1bd041.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1bd041.prototype.constructor = a0_0x1bd041;
a0_0x1bd041.superClass = a0_0x28626c;
a0_0x1bd041.prototype.animalInfo = function () {
  var _0x2f627f = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2f627f.aniName = "Tiger";
      break;
    case 1:
      _0x2f627f.aniName = "Rare White Tiger";
      break;
    case 111:
      _0x2f627f.aniName = "Classic Tiger";
      break;
    case 112:
      _0x2f627f.aniName = "Gold-trim Tiger";
      break;
    case 204:
      _0x2f627f.aniName = "Chimera Tiger";
      break;
  }
  _0x2f627f.aniDesc = "";
  _0x2f627f.upgradeText = "UPGRADED to " + _0x2f627f.aniName + "!\n Tigers can launch an ambush attack (HOLD W to grow a bush)!";
  _0x2f627f.aniCol = "#FF9000";
  _0x2f627f.skinName = this.getSkinName();
  return _0x2f627f;
};
a0_0x1bd041.prototype.getSkinName = function () {
  let _0x3c64c4 = this.getSpeciesPath() + "/tiger";
  _0x3c64c4 += this.specType == 0 ? "" : this.specType;
  return _0x3c64c4;
};
a0_0x1bd041.prototype.getSpeciesPath = function () {
  return "land/tiger/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1bd041.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x1bd041.prototype.getSkinImageObj = function (_0x66cfc3) {
  var _0x560fb7 = this.animalSpecies === 204 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x66cfc3, _0x560fb7);
};
function a0_0x1bd041() {
  a0_0x1bd041.superClass.call(this, a0_0x24738f);
}
window.Tiger = a0_0x1bd041;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1bd041, a0_0x24738f, a0_0x33f8d6);
var a0_0x28626c = a0_0x2449e7;
a0_0x1946b1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1946b1.prototype.constructor = a0_0x1946b1;
a0_0x1946b1.superClass = a0_0x28626c;
a0_0x1946b1.prototype.animalInfo = function () {
  var _0x2f70b3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2f70b3.aniName = "Cobra";
      break;
    case 100:
      _0x2f70b3.aniName = "Wyrmous";
      break;
    case 111:
      _0x2f70b3.aniName = "Classic Cobra";
      break;
    case 112:
      _0x2f70b3.aniName = "Gold-trim Cobra";
      break;
    case 200:
      _0x2f70b3.aniName = "Celestial Cobra";
      break;
  }
  _0x2f70b3.skinName = this.getSkinName();
  _0x2f70b3.aniDesc = "";
  _0x2f70b3.upgradeText = "UPGRADED to " + _0x2f70b3.aniName + "!\n Hold W to Spit venom, and poison animals with your bite!";
  _0x2f70b3.aniCol = "black";
  return _0x2f70b3;
};
a0_0x1946b1.prototype.getAbilityInfo = function (_0x170a3a) {
  var _0x16fd70 = {
    abilName: "Venom Spit",
    abilImg: "skins/land/cobra/" + this.animalSpecies + "/cobra2.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x16fd70;
};
a0_0x1946b1.prototype.getSkinName = function () {
  let _0x29866c = this.getSpeciesPath() + "/cobra";
  _0x29866c += this.flag_usingAbility ? "2" : "";
  return _0x29866c;
};
a0_0x1946b1.prototype.getSpeciesPath = function () {
  return "land/cobra/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1946b1.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x1946b1.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    return;
  }
  var _0x1b8b33 = this.rad - this.outlineW;
  var _0x55794e = 500 / 340;
  var _0x557faa = "skins/" + this.getSpeciesPath() + "/tongue.png";
  var _0x46980d = this.getSkinImageObj(_0x557faa);
  var _0x481e7a = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x952c88 = a0_0x56bbb3 == a0_0xbf9ed5 ? 0 : a0_0x423a9f(_0x481e7a, 0.5, 5, 0.5);
  var _0x352da0 = a0_0x56bbb3 == a0_0xbf9ed5 ? 0 : 5;
  if (_0x46980d) {
    a0_0x1306ae.drawImage(_0x46980d, -_0x1b8b33 * _0x55794e, -(_0x1b8b33 + _0x352da0 + _0x952c88) * _0x55794e, _0x1b8b33 * 2 * _0x55794e, _0x1b8b33 * 2 * _0x55794e);
  }
};
function a0_0x1946b1() {
  a0_0x1946b1.superClass.call(this, a0_0x24738f);
}
window.Cobra = a0_0x1946b1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1946b1, a0_0x24738f, a0_0x22a451);
var a0_0x24398f = a0_0x24398f;
var a0_0x28626c = a0_0x42171b;
a0_0x24398f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x24398f.prototype.constructor = a0_0x24398f;
a0_0x24398f.superClass = a0_0x28626c;
a0_0x24398f.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x24398f.prototype.customDraw = function (_0x37f798) {
  if (a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b) {
    var _0x363560 = Math.trunc(a0_0x24806e / 120) % 5;
    let _0x243301 = "gameobj/" + this.oType + "/" + this.speciesType + "/" + _0x363560 + ".png";
    var _0x285b2e = this.getSkinImageObj(_0x243301);
    if (_0x285b2e) {
      var _0x1c153e = 0;
      var _0x6d6555 = this.rad * 0.4;
      var _0x3c9174 = this.rad * 2 * 4 / 3;
      var _0x5ef327 = this.rad * 2;
      var _0x1042d9 = 0.5;
      var _0x574d3a = 0.95;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(a0_0x873ec7(0));
      a0_0x1306ae.drawImage(_0x285b2e, _0x1c153e + _0x3c9174 * -_0x1042d9, _0x6d6555 + _0x5ef327 * -_0x574d3a, _0x3c9174, _0x5ef327);
      a0_0x1306ae.restore();
    }
  } else {
    let _0x53a73b = "gameobj/" + this.oType + "/" + this.speciesType + "/0.png";
    var _0x285b2e = this.getSkinImageObj(_0x53a73b);
    if (_0x285b2e) {
      var _0x1c153e = 0;
      var _0x6d6555 = this.rad * 0.4;
      var _0x3c9174 = this.rad * 2 * 4 / 3;
      var _0x5ef327 = this.rad * 2;
      var _0x1042d9 = 0.5;
      var _0x574d3a = 0.95;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(a0_0x873ec7(0));
      a0_0x1306ae.drawImage(_0x285b2e, _0x1c153e + _0x3c9174 * -_0x1042d9, _0x6d6555 + _0x5ef327 * -_0x574d3a, _0x3c9174, _0x5ef327);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x24398f.prototype.readCustomData_onNewlyVisible = function (_0x44295b) {
  a0_0x24398f.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x44295b);
  this.speciesType = _0x44295b.readUInt16();
  this.speciesSubType = _0x44295b.readUInt16();
};
function a0_0x24398f() {
  a0_0x24398f.superClass.call(this, a0_0x5e3593);
  this.webTransparency = 0;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
window.Fire = a0_0x24398f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x24398f, a0_0x5e3593);
var a0_0x28626c = a0_0x42171b;
a0_0x22f3d7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x22f3d7.prototype.constructor = a0_0x22f3d7;
a0_0x22f3d7.superClass = a0_0x28626c;
a0_0x22f3d7.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x22f3d7.prototype.ANIMATION_NAME = "fireball";
a0_0x22f3d7.prototype.customDraw = function (_0x124a10) {
  if (a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b) {
    let _0x322676 = a0_0xae444c(this.ANIMATION_NAME, this.spawnTime);
    if (_0x322676 == null || _0x322676 == NaN) {
      _0x322676 = 0;
    }
    var _0x26f021 = Math.trunc(a0_0x24806e / 120) % 5;
    let _0x44037a = "gameobj/" + this.oType + "/" + this.speciesType + "/" + _0x26f021 + ".png";
    var _0x1dde4c = this.getSkinImageObj(_0x44037a);
    if (_0x1dde4c) {
      var _0x586f6b = 0;
      var _0x4facff = this.rad * 0.4;
      var _0x1c5cee = this.rad * 2 * (2 + _0x322676 * 2) / 3;
      var _0x3e5c8f = this.rad * 3.5 * _0x322676;
      var _0x9dcb4f = 0.5;
      var _0x177435 = 0.95;
      a0_0x1306ae.save();
      {
        a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x322676;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.drawImage(_0x1dde4c, _0x586f6b + _0x1c5cee * -_0x9dcb4f, _0x4facff + _0x3e5c8f * -_0x177435, _0x1c5cee, _0x3e5c8f);
      }
      a0_0x1306ae.restore();
    }
  } else {
    let _0x28ddd4 = "gameobj/" + this.oType + "/" + this.speciesType + "/0.png";
    var _0x1dde4c = this.getSkinImageObj(_0x28ddd4);
    if (_0x1dde4c) {
      var _0x586f6b = 0;
      var _0x4facff = this.rad * 0.4;
      var _0x1c5cee = this.rad * 2 * 4 / 3;
      var _0x3e5c8f = this.rad * 3.5;
      var _0x9dcb4f = 0.5;
      var _0x177435 = 0.95;
      a0_0x1306ae.save();
      {
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.drawImage(_0x1dde4c, _0x586f6b + _0x1c5cee * -_0x9dcb4f, _0x4facff + _0x3e5c8f * -_0x177435, _0x1c5cee, _0x3e5c8f);
      }
      a0_0x1306ae.restore();
    }
  }
};
a0_0x22f3d7.prototype.readCustomData_onNewlyVisible = function (_0x43a955) {
  a0_0x22f3d7.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x43a955);
  this.speciesType = _0x43a955.readUInt16();
  this.speciesSubType = _0x43a955.readUInt16();
};
function a0_0x22f3d7() {
  a0_0x22f3d7.superClass.call(this, a0_0x588c89);
}
window.FireBall = a0_0x22f3d7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x22f3d7, a0_0x588c89);
var a0_0x28626c = a0_0x42171b;
a0_0x4c9ca5.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4c9ca5.prototype.constructor = a0_0x4c9ca5;
a0_0x4c9ca5.superClass = a0_0x28626c;
a0_0x4c9ca5.prototype.nickName = "mope.io";
a0_0x4c9ca5.prototype.fadeAway = false;
a0_0x4c9ca5.prototype.webTransparency = 100;
a0_0x4c9ca5.prototype.carcassType = 0;
a0_0x4c9ca5.prototype.updateZ = function () {
  if (this.flag_flying) {
    this.z = 100000 + this.rad / 10;
  } else {
    this.z = -100;
  }
};
a0_0x4c9ca5.prototype.getNameSize = function () {
  return 6;
};
a0_0x4c9ca5.prototype.setNick = function (_0x1dad71) {
  _0x1dad71 = a0_0x1159b4(_0x1dad71);
  this.nickName = _0x1dad71;
  if (this.nickTXT == null) {
    this.nickTXT = new a0_0x993fcb(this.getNameSize(), "#FFFFFF");
    this.nickTXT.strokeW = 1.5;
    this.nickTXT.renderScale = 5;
    this.nickTXT.setText(this.nickName);
  } else {
    this.nickTXT.setFontSize(this.getNameSize());
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x4c9ca5.prototype.customDraw = function (_0x363c70) {
  a0_0x1306ae.save();
  var _0x48d6c2 = 0.3;
  if (this.fadeAway) {
    var _0x352b47 = this.webTransparency / 100;
    a0_0x1306ae.globalAlpha = _0x352b47;
    _0x48d6c2 = Math.min(_0x48d6c2, _0x352b47);
  } else {
    a0_0x1306ae.globalAlpha = 0.8;
  }
  var _0x47dd5f = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.carcassType + ".png");
  if (_0x47dd5f) {
    var _0x241cf2 = this.rad;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x47dd5f, -_0x241cf2, -_0x241cf2, _0x241cf2 * 2, _0x241cf2 * 2);
  }
  a0_0x1306ae.restore();
  this.drawNickName(_0x48d6c2);
};
a0_0x4c9ca5.prototype.drawNickName = function (_0x2e6a22) {
  if (!this.spawnedFromDeadAni) {
    return;
  }
  if (this.nickName && this.nickTXT && !a0_0x17133c) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x2e6a22;
    this.nickTXT.x = 0;
    this.nickTXT.y = this.rad;
    this.nickTXT.draw();
    a0_0x1306ae.restore();
  }
};
a0_0x4c9ca5.prototype.spawnedFromDeadAni = false;
a0_0x4c9ca5.prototype.readCustomData_onNewlyVisible = function (_0x181b0b) {
  this.spawnedFromDeadAni = _0x181b0b.readUInt8() == 1;
  this.animalType = _0x181b0b.readUInt16();
  this.animalHomeBiome = _0x181b0b.readUInt8();
  this.carcassType = this.lookupCarcassType();
  var _0x57af58 = _0x181b0b.readString();
  this.fadeAway = _0x181b0b.readUInt8() == 1;
  if (this.fadeAway) {
    this.webTransparency = _0x181b0b.readUInt16();
  }
  if (this.spawnedFromDeadAni) {
    this.setNick(_0x57af58 ? _0x57af58 : "mope.io");
  }
};
const a0_0x10127b = 0;
const a0_0xfbcd1b = 1;
const a0_0x1f3f7b = 2;
const a0_0x36d75f = 3;
const a0_0x412f83 = 4;
const a0_0x5b3e37 = 5;
const a0_0x41f44d = 6;
const a0_0xde9f05 = 7;
const a0_0xef42ef = 8;
const a0_0x2edfa6 = 9;
const a0_0x1d6132 = 10;
const a0_0x537d3a = 11;
const a0_0x42133a = 12;
const a0_0x51c46e = 13;
const a0_0x4f4d15 = 14;
const a0_0x4eccb9 = 15;
const a0_0x2330e6 = 16;
const a0_0x42287e = 17;
const a0_0x130467 = 18;
const a0_0x159487 = 19;
const a0_0xf31904 = 20;
a0_0x4c9ca5.prototype.lookupCarcassType = function () {
  const _0x36de51 = {
    [a0_0x4eccb9]: [a0_0x59b763, a0_0x53b0d7],
    [a0_0x412f83]: [a0_0x182226],
    [a0_0x5b3e37]: [a0_0x487fb5],
    [a0_0x412f83]: [a0_0x182226],
    [a0_0x1f3f7b]: [a0_0x52bfa4, a0_0x22a451],
    [a0_0x2edfa6]: [a0_0x4a4da1],
    [a0_0x1d6132]: [a0_0x4f00b9, a0_0x273412],
    [a0_0x130467]: [a0_0x5812ad],
    [a0_0x159487]: [a0_0x54926b],
    [a0_0xf31904]: [a0_0x5d0d4b],
    [a0_0x42287e]: [a0_0x357359],
    [a0_0xef42ef]: [a0_0x384a46],
    [a0_0xde9f05]: [a0_0x2f54ae, a0_0x5aaf14, a0_0x17dc35],
    [a0_0x42133a]: [a0_0x306fa0],
    [a0_0x4f4d15]: [a0_0x45db7b, a0_0x77ab87],
    [a0_0x51c46e]: [a0_0x200e1e],
    [a0_0x537d3a]: [a0_0x187484],
    [a0_0x2330e6]: [a0_0x332990, a0_0x5d0b67],
    [a0_0x41f44d]: [a0_0x594c30, a0_0x59f431, a0_0x3b5853, a0_0x8a2dda],
    [a0_0xfbcd1b]: [a0_0x2f2687, a0_0xd29085, a0_0x34f3ec, a0_0x23c69e, a0_0x1e1209, a_birdMonster, a0_0x2c361c, a0_0x14b677, a0_0x5aa20b, a0_0xff40c0, a0_0x16e6c0, a0_0x1ad6bd, a0_0x3889a8, a0_0x58d479, a0_0xb8200c, a0_0x1b8d24, a0_0x147c8e, a0_0x5c6ee3, a0_0x20f7bd, a0_0x52a8a7, a0_0x4444cb, a0_0x407000]
  };
  if (_0x36de51 instanceof Array) {
    const _0x1ce448 = Object.keys(_0x36de51);
    for (let _0x22477d = 0; _0x22477d < _0x1ce448.length; _0x22477d++) {
      const _0x3710e0 = _0x1ce448[_0x22477d];
      if (_0x36de51[_0x3710e0].includes(this.animalType)) {
        return _0x3710e0;
      }
    }
  }
  if (this.animalHomeBiome == a0_0x5986dd) {
    return a0_0x36d75f;
  }
  return a0_0x10127b;
};
a0_0x4c9ca5.prototype.readUpdatedProperty = function (_0x5c5080, _0x1b1379) {
  if (_0x5c5080 == a0_0x31d07e) {
    this.flag_flying = _0x1b1379.readUInt8() == 1;
  } else if (_0x5c5080 == a0_0x55b0da) {
    this.webTransparency = _0x1b1379.readUInt16();
  }
};
function a0_0x4c9ca5() {
  a0_0x4c9ca5.superClass.call(this, a0_0x339a13);
  this.shrinkedRad = 0;
}
window.AnimalCarcass = a0_0x4c9ca5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4c9ca5, a0_0x339a13);
var a0_0x28626c = a0_0x42171b;
a0_0x55ceb8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x55ceb8.prototype.constructor = a0_0x55ceb8;
a0_0x55ceb8.superClass = a0_0x28626c;
a0_0x55ceb8.prototype.chilliType = 0;
a0_0x55ceb8.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x55ceb8.prototype.setSkinPath = function () {
  var _0x14f3cb = "chilli";
  _0x14f3cb += this.isEdibleOutlined() ? "_e" : "";
  this.objSkinPath = "gameobj/" + this.oType + "/" + this.chilliType + "/" + _0x14f3cb + ".png";
};
a0_0x55ceb8.prototype.customDraw = function (_0x5bb6ac) {
  a0_0x1306ae.save();
  var _0x703345 = this.getSkinImageObj(this.objSkinPath);
  if (_0x703345) {
    var _0x1a06a8 = this.rad;
    if (this.specType2 == 1) {
      if (this.angle == 0) {
        this.angle = this.rPer * Math.PI * 2;
      }
      this.angle += 0.4;
      a0_0x1306ae.rotate(this.angle);
    } else if (this.specType2 == 2) {
      a0_0x1306ae.rotate(this.angle);
    } else {
      a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    }
    a0_0x1306ae.drawImage(_0x703345, -_0x1a06a8, -_0x1a06a8, _0x1a06a8 * 2, _0x1a06a8 * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x55ceb8.prototype.readCustomData_onNewlyVisible = function (_0x5ee18a) {
  this.chilliType = _0x5ee18a.readUInt8();
};
function a0_0x55ceb8() {
  a0_0x55ceb8.superClass.call(this, a0_0x5d75d7);
  this.doesDrawEffectScale = false;
}
window.Chilli = a0_0x55ceb8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x55ceb8, a0_0x5d75d7);
var a0_0x29f713 = a0_0x29f713;
var a0_0x28626c = a0_0x2449e7;
a0_0x29f713.prototype = Object.create(a0_0x28626c.prototype);
a0_0x29f713.prototype.constructor = a0_0x29f713;
a0_0x29f713.superClass = a0_0x28626c;
a0_0x29f713.prototype.objSkinSpotsCanvas = null;
a0_0x29f713.prototype.animalInfo = function () {
  var _0xcd1807 = {};
  this.animalName = "";
  switch (this.animalSpecies) {
    case 0:
      _0xcd1807.aniName = "Cheetah";
      _0xcd1807.upgradeText = "UPGRADED to Cheetah!\n Press W to get a speed boost!";
      this.animalName = "cheetah";
      break;
    case 1:
      _0xcd1807.aniName = "Jaguar";
      _0xcd1807.upgradeText = "UPGRADED to JAGUAR!\n Press W to get a speed boost!\n(Jaguars can climb hills!)";
      this.animalName = "jaguar";
      break;
    case 2:
      _0xcd1807.aniName = "Leopard";
      _0xcd1807.upgradeText = "UPGRADED to LEOPARD!\n Press W to get a speed boost!\n(Leopards can dive longer)";
      this.animalName = "leopard";
      break;
    case 3:
      _0xcd1807.aniName = "Black Panther";
      _0xcd1807.upgradeText = "UPGRADED to Black Panther!\n Press W to get a speed boost!\n(Black Panthers are fast on mud)";
      this.animalName = "blackpanther";
      break;
    case 100:
      _0xcd1807.aniName = "Big Cookie";
      _0xcd1807.upgradeText = "UPGRADED to Big Cookie!\n Press W to get a speed boost!\n(Big Cookies are fast on mud)";
      this.animalName = "100/bigcat";
      break;
    case 111:
      _0xcd1807.aniName = "Classic Cheetah";
      _0xcd1807.upgradeText = "UPGRADED to Classic Cheetah!\n Press W to get a speed boost!";
      this.animalName = "cheetah";
      break;
    case 112:
      _0xcd1807.aniName = "Gold-trim Cheetah";
      _0xcd1807.upgradeText = "UPGRADED to Gold-trim Cheetah!\n Press W to get a speed boost!";
      this.animalName = "cheetah";
      break;
    case 202:
      _0xcd1807.aniName = "C.M.Y.K NeoN Cheetak";
      _0xcd1807.upgradeText = "UPGRADED to C.M.Y.K NeoN Cheetak!\n Press W to get a speed boost!\n(C.M.Y.K NeoN Cheetaks are fast on mud)";
      this.animalName = "cheetah";
      break;
    case 204:
      _0xcd1807.aniName = "Genie Cheetah";
      _0xcd1807.upgradeText = "UPGRADED to Genie Cheetah!\n Press W to get a speed boost!\n(Genie Cheetah are fast on mud)";
      this.animalName = "genie_cheetah";
      break;
  }
  _0xcd1807.aniCol = "#CAC05B";
  _0xcd1807.skinName = this.getSkinName();
  return _0xcd1807;
};
a0_0x29f713.prototype.getSkinName = function () {
  return this.getSpeciesPath() + "/" + this.animalName;
};
a0_0x29f713.prototype.getSpeciesPath = function () {
  return "land/bigcat/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x29f713.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x29f713() {
  a0_0x29f713.superClass.call(this, a0_0x24738f);
}
window.BigCat = a0_0x29f713;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x29f713, a0_0x24738f, a0_0x2a0a8a);
function a0_0x5de34a(_0x54230f, _0x24bcf1, _0x471180, _0x2c7b8e, _0x898c35, _0x2c1697, _0x3c4c00) {
  var _0x4309bf = a0_0x2c02fa;
  this.x = _0x54230f;
  this.y = _0x24bcf1;
  this.w = _0x471180;
  this.h = _0x2c7b8e;
  this.label = _0x898c35;
  this.font = Number(_0x2c1697) ? Number(_0x2c1697) : 30;
  this.isVisible = true;
  this.hoverColor = "#16932A";
  this.defaultColor = "#0aa633";
  this.alpha = 1;
  this.txtAlpha = 1;
  this.ctx = _0x3c4c00 === undefined || _0x3c4c00 == null ? a0_0x1306ae : _0x3c4c00;
  this.labelColor = "white";
  this.buttonTXT = new a0_0x993fcb(12, this.labelColor);
  this.buttonTXT.renderScale = 1.5;
  this.drawButtonRect = true;
  this.isHighLighted = false;
  this.showLabeleOnHover = false;
  this.textShadow = false;
  this.buttonScaleF = 1;
  this.strokeWidth = _0x4309bf * 4;
  this.setLabelColor = function (_0x547326) {
    this.buttonTXT = new a0_0x993fcb(12, _0x547326);
    this.buttonTXT.renderScale = 1.5;
  };
  this.testPosHitsButton = function (_0xd47e96, _0x3b3f39) {
    var _0x4f21ab = this.x;
    var _0xb36311 = this.x + this.w;
    var _0x1ab107 = this.y;
    var _0x525879 = this.y + this.h;
    if (_0xd47e96 < _0x4f21ab || _0xd47e96 > _0xb36311) {
      return false;
    }
    if (_0x3b3f39 < _0x1ab107 || _0x3b3f39 > _0x525879) {
      return false;
    } else {
      return true;
    }
  };
  this.setPosAndSize = function (_0x50c4f0, _0x51cf1e, _0x263721, _0x5cd2f2, _0x3fe141, _0x37c6ff) {
    this.w = _0x263721;
    this.h = _0x5cd2f2;
    this.x = _0x50c4f0 + _0x263721 * (0.5 - _0x3fe141);
    this.y = _0x51cf1e + _0x5cd2f2 * (0.5 - _0x37c6ff);
  };
  this.draw = function () {
    if (!this.isVisible) {
      return;
    }
    this.update();
    this.ctx.save();
    this.ctx.translate(this.x, this.y);
    this.ctx.scale(this.buttonScaleF, this.buttonScaleF);
    var _0x40b44a = this.alpha;
    if (this.drawButtonRect) {
      this.ctx.fillStyle = this.defaultColor;
      this.ctx.strokeStyle = "#116c17";
      this.ctx.lineWidth = this.strokeWidth;
      this.roundRect(0, 0, this.w, this.h, 5, true, true);
      if (this.isHighLighted) {
        this.ctx.fillStyle = this.hoverColor;
        this.roundRect(0, 0, this.w, this.h, 5, true, false);
      }
    }
    if (!this.showLabeleOnHover) {
      this.ctx.globalAlpha = this.txtAlpha;
      this.drawText(this.w / 2, this.h / 2);
    } else if (this.isHighLighted && this.showLabeleOnHover) {
      this.drawTextOnHowever();
    }
    this.ctx.restore();
    this.onAfterDraw();
  };
  this.drawTextOnHowever = function () {
    this.drawText(this.w / 2, this.h / 2);
  };
  this.beforeDrawText = function () {};
  this.drawText = function (_0x58e3e9, _0x4927f7) {
    this.buttonTXT.setText(this.label);
    this.buttonTXT.strokeW = this.isHighLighted && !this.textShadow ? 0 : 1;
    this.buttonTXT.setFontSize(this.font);
    this.buttonTXT.setColor(this.labelColor);
    this.buttonTXT.x = _0x58e3e9;
    this.buttonTXT.y = _0x4927f7;
    this.beforeDrawText();
    this.buttonTXT.draw();
  };
  this.roundRect = function (_0x2ecc99, _0x4c8dc9, _0x588de7, _0x575b1d, _0x280891, _0x126e97, _0x411b64) {
    if (typeof _0x411b64 == "undefined") {
      _0x411b64 = true;
    }
    if (typeof _0x280891 === "undefined") {
      _0x280891 = 5;
    }
    if (typeof _0x280891 === "number") {
      _0x280891 = {
        tl: _0x280891,
        tr: _0x280891,
        br: _0x280891,
        bl: _0x280891
      };
    } else {
      var _0x40505b = {
        tl: 0,
        tr: 0,
        br: 0,
        bl: 0
      };
      for (var _0x3b511c in _0x40505b) {
        _0x280891[_0x3b511c] = _0x280891[_0x3b511c] || _0x40505b[_0x3b511c];
      }
    }
    this.ctx.globalAlpha = this.alpha;
    this.ctx.lineWidth = 2;
    this.ctx.beginPath();
    this.ctx.moveTo(_0x2ecc99 + _0x280891.tl, _0x4c8dc9);
    this.ctx.lineTo(_0x2ecc99 + _0x588de7 - _0x280891.tr, _0x4c8dc9);
    this.ctx.quadraticCurveTo(_0x2ecc99 + _0x588de7, _0x4c8dc9, _0x2ecc99 + _0x588de7, _0x4c8dc9 + _0x280891.tr);
    this.ctx.lineTo(_0x2ecc99 + _0x588de7, _0x4c8dc9 + _0x575b1d - _0x280891.br);
    this.ctx.quadraticCurveTo(_0x2ecc99 + _0x588de7, _0x4c8dc9 + _0x575b1d, _0x2ecc99 + _0x588de7 - _0x280891.br, _0x4c8dc9 + _0x575b1d);
    this.ctx.lineTo(_0x2ecc99 + _0x280891.bl, _0x4c8dc9 + _0x575b1d);
    this.ctx.quadraticCurveTo(_0x2ecc99, _0x4c8dc9 + _0x575b1d, _0x2ecc99, _0x4c8dc9 + _0x575b1d - _0x280891.bl);
    this.ctx.lineTo(_0x2ecc99, _0x4c8dc9 + _0x280891.tl);
    this.ctx.quadraticCurveTo(_0x2ecc99, _0x4c8dc9, _0x2ecc99 + _0x280891.tl, _0x4c8dc9);
    this.ctx.closePath();
    if (_0x126e97) {
      this.ctx.fill();
    }
    if (_0x411b64) {
      this.ctx.stroke();
    }
  };
  this.onClick = function () {};
  this.onMouseMove = function () {};
  this.onMouseIn = function () {};
  this.onMouseOut = function () {};
  this.isMouseIn = false;
  this.setMouseRawPos = function (_0x2f5a0b, _0x2d88d8) {
    this.rawX = _0x2f5a0b;
    this.rawY = _0x2d88d8;
    if (this.testPosHitsButton(this.rawX, this.rawY)) {
      if (!this.isMouseIn) {
        this.isMouseIn = true;
        this.onMouseIn();
      }
    } else if (this.isMouseIn) {
      this.isMouseIn = false;
      this.onMouseOut();
    }
  };
  this.update = function () {};
  this.onInterfaceReset = function () {
    a0_0xb5f48(this.label + ".onInterfaceReset");
  };
  this.onAfterDraw = function () {};
}
window.InterfaceButton = a0_0x5de34a;
a0_0x46e67b.prototype = {
  mode: 0,
  state: 0,
  myPlayer: null
};
a0_0x46e67b.prototype.chatAllowed = true;
a0_0x46e67b.prototype.isHalloween = false;
a0_0x46e67b.prototype.stamp = 0;
a0_0x46e67b.prototype.interface = function () {};
a0_0x46e67b.prototype.drawMap = function () {};
a0_0x46e67b.prototype.interfaceReset = function () {};
a0_0x46e67b.prototype.main = function (_0x2668fe) {};
a0_0x46e67b.prototype.onInit = function (_0x1a4498) {};
a0_0x46e67b.prototype.drawCustomObjs = function (_0x19171e) {};
a0_0x46e67b.prototype.worldUpdate = function (_0x5f1b3c) {};
a0_0x46e67b.prototype.setPlayer = function () {
  this.myPlayer = a0_0x283a01[a0_0x15e4d1];
};
function a0_0x46e67b() {}
window.GameMode = a0_0x46e67b;
var a0_0x28626c = a0_0x46e67b;
a0_0x3983b8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3983b8.prototype.constructor = a0_0x3983b8;
a0_0x3983b8.superClass = a0_0x28626c;
a0_0x3983b8.prototype.safeArea = null;
function a0_0x3983b8(_0x3b8218) {
  this.mode = _0x3b8218;
  this.stamp = +new Date();
  this.chatAllowed = true;
  this.createInterfaceButtons();
}
a0_0x3983b8.prototype.wastedPopups = [];
a0_0x3983b8.prototype.playerDisplayNum = 0;
a0_0x3983b8.prototype.setServerPlayerCount = function () {
  a0_0x595a8f.setText(a0_0x4b4fe7(a0_0x70cda0) + " online");
  if (a0_0x2ad00) {
    a0_0x2ad00.setPlayersCount(a0_0x70cda0);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x3983b8.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0x17b807) {
    return;
  }
  if (a0_0x371a9b) {
    for (var _0x5b338c = this.wastedPopups.length - 1; _0x5b338c >= 0; _0x5b338c--) {
      var _0x2f267e = this.wastedPopups[_0x5b338c];
      _0x2f267e.draw();
      if (_0x2f267e.timedOut) {
        this.wastedPopups.splice(_0x5b338c, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x1306ae.drawImage(this.endScreenCanvas, a0_0x2bf7a6 / 2 - this.endScreenCanvas.width / 2, a0_0x2b523d * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x371a9b || isGhost) {
      a0_0x5307a8(true);
    }
  }
  this.drawInterfaceButtons();
};
a0_0x3983b8.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  if (this.interfaceButtons) {
    for (var _0x23c6f5 = 0; _0x23c6f5 < this.interfaceButtons.length; _0x23c6f5++) {
      var _0x30f1de = this.interfaceButtons[_0x23c6f5];
      _0x30f1de.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x3983b8.prototype.onInit = function () {};
a0_0x3983b8.prototype.playercount = 0;
a0_0x3983b8.prototype.setPlayerCount = function (_0x3ceaf3) {
  this.playercount = _0x3ceaf3;
};
a0_0x3983b8.prototype.showPlayerCount = function () {
  a0_0x1306ae.save();
  var _0x4ece95 = a0_0x2bf7a6 / 2;
  var _0x312d47 = a0_0x2c02fa * 50;
  var _0x15aa04 = a0_0x2c02fa * 300;
  a0_0x1306ae.globalAlpha = 0.35;
  a0_0x1306ae.fillStyle = "black";
  var _0x8d5803 = a0_0x2c02fa * 30;
  a0_0x1306ae.fillRect(_0x4ece95 - _0x15aa04 / 2, _0x8d5803, _0x15aa04, _0x312d47);
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = "white";
  a0_0x1306ae.font = a0_0x2c02fa * 30 + "px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  a0_0x1306ae.shadowOffsetX = 1;
  a0_0x1306ae.shadowOffsetY = 1;
  a0_0x1306ae.shadowColor = "black";
  _0x8d5803 += a0_0x2c02fa * 25;
  var _0x472467 = " player";
  if (this.playercount > 1) {
    _0x472467 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x472467 += " alive!";
  } else if (this.state == a0_0x30d29a || this.state == battleRoyal_ready) {
    _0x472467 += " joined";
  }
  a0_0x1306ae.fillText(this.playercount + _0x472467, _0x4ece95, _0x8d5803);
  a0_0x1306ae.restore();
};
a0_0x3983b8.prototype.lbCanvas = null;
a0_0x3983b8.prototype.leaderboard = function (_0x29d080) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x29d080) {
    var _0x232f05 = this.lbCanvas.getContext("2d");
    var _0x3c5a85 = 55;
    var _0x3cc75f = 22;
    _0x3c5a85 = _0x3c5a85 + _0x3cc75f * _0x29d080.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x3c5a85;
    _0x232f05.globalAlpha = 0.2;
    _0x232f05.fillStyle = "#000000";
    _0x232f05.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x232f05.globalAlpha = 1;
    _0x232f05.fillStyle = "#FFFFFF";
    var _0x1884b0 = a0_0xa8227f.name;
    _0x232f05.font = "24px Arial";
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      _0x232f05.shadowOffsetX = 1;
      _0x232f05.shadowOffsetY = 1;
    }
    _0x232f05.shadowColor = "black";
    _0x232f05.fillText(_0x1884b0, this.lbCanvas.width / 2 - _0x232f05.measureText(_0x1884b0).width / 2, 40);
    var _0x33a83c;
    _0x232f05.textAlign = "left";
    _0x232f05.font = "17px Arial";
    _0x33a83c = 0;
    for (; _0x33a83c < _0x29d080.length; ++_0x33a83c) {
      _0x1884b0 = a0_0x17133c ? "" : _0x29d080[_0x33a83c].name || "mope.io";
      _0x1884b0 += " (" + a0_0x1e543a(_0x29d080[_0x33a83c].xp) + ")";
      _0x232f05.fillStyle = "#FFFFFF";
      _0x232f05.fillText(_0x1884b0, 15, 65 + _0x3cc75f * _0x33a83c);
    }
  }
};
a0_0x3983b8.prototype.drawLeaderboard = function () {
  if (a0_0x371a9b) {
    if (!a0_0x19ab74) {
      if (a0_0x10e951) {
        if (a0_0x10e951.width) {
          a0_0x1306ae.drawImage(a0_0x10e951, a0_0x2b523d * 10, a0_0x2b523d * 10, a0_0x10e951.width * a0_0x2c02fa, a0_0x10e951.height * a0_0x2c02fa);
        }
      }
    }
  }
};
a0_0x3983b8.prototype.btnPlayAgain = null;
a0_0x3983b8.prototype.showStats = true;
a0_0x3983b8.prototype.interfaceButtons = [];
a0_0x3983b8.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x3983b8.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x675a1b = 0; _0x675a1b < this.interfaceButtons.length; _0x675a1b++) {
      var _0x514e7b = this.interfaceButtons[_0x675a1b];
      if (_0x514e7b.isVisible) {
        _0x514e7b.draw();
      }
    }
  }
};
a0_0x3983b8.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x3983b8.prototype.readPlayerStats = function (_0x3a6901) {
  var _0x3f6aa5 = [];
  _0x3f6aa5.rank = _0x3a6901.readUInt16();
  _0x3f6aa5.timeAlive = _0x3a6901.readUInt16();
  _0x3f6aa5.totalKills = _0x3a6901.readUInt16();
  _0x3f6aa5.topRank = _0x3a6901.readUInt16();
  _0x3f6aa5.maxXP = _0x3a6901.readUInt32();
  _0x3f6aa5.killedBy = _0x3a6901.readString();
  return _0x3f6aa5;
};
a0_0x3983b8.prototype.playerInfo = function (_0x262148) {
  if (isGhost && !a0_0x31e3ca) {
    var _0x58331a = this.readPlayerStats(_0x262148);
    this.buildEndScreenHTML(_0x58331a);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
a0_0x3983b8.prototype.playerWorldUpdate = function (_0x23bd0f) {};
a0_0x3983b8.prototype.worldUpdate = function (_0x526cb9) {};
a0_0x3983b8.prototype.drawMap = function () {
  if (a0_0x371a9b) {
    if (a0_0x59c93b) {
      return;
    }
    if (a0_0x2ad00) {
      a0_0x2ad00.drawMap();
    }
    this.drawLeaderboard();
  }
};
a0_0x3983b8.prototype.pieChartCanvas = null;
a0_0x3983b8.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x3983b8.prototype.endScreenDisplayed = false;
a0_0x3983b8.prototype.buildEndScreenHTML = function (_0x20a1a2) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x5671f5 = "";
  _0x5671f5 += "<div class='msg'>YOU WERE #" + _0x20a1a2.rank + "</div>";
  _0x5671f5 += "<div class='row'>";
  _0x5671f5 += "<div class='label'>Killed by:</div>";
  _0x5671f5 += "<div class='value2'>" + _0x20a1a2.killedBy + "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "<div class='row'>";
  _0x5671f5 += "<div class='col1'>";
  _0x5671f5 += "<div class='label'>Time alive:</div>";
  _0x5671f5 += "<div class='value'>" + a0_0x48a798(_0x20a1a2.timeAlive) + "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "<div class='col2'>";
  _0x5671f5 += "<div class='label'>Total kills:</div>";
  _0x5671f5 += "<div class='value'>" + _0x20a1a2.totalKills + "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "<div class='row'>";
  _0x5671f5 += "<div class='col1'>";
  _0x5671f5 += "<div class='label'>Top rank:</div>";
  _0x5671f5 += "<div class='value'>" + _0x20a1a2.topRank + "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "<div class='col2'>";
  _0x5671f5 += "<div class='label'>Max xp:</div>";
  _0x5671f5 += "<div class='value'>" + a0_0x1e543a(_0x20a1a2.maxXP) + "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "<div style='clear:both;'></div>";
  _0x5671f5 += "<div class='btnDiv'>";
  _0x5671f5 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x5671f5 += "</div>";
  _0x5671f5 += "<div style='clear:both;'></div>";
  var _0x3ae21d = document.getElementById("endScreen");
  if (_0x3ae21d) {
    _0x3ae21d.innerHTML = _0x5671f5;
    _0x3ae21d.style.display = "block";
  }
  if (!a0_0x371a9b || isGhost) {
    a0_0x203acc();
  }
};
a0_0x3983b8.prototype.endScreenCanvas = null;
a0_0x3983b8.prototype.buildEndScreen = function (_0x37c4d1, _0x2843a0) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x89231e = this.endScreenCanvas.getContext("2d");
  var _0x2f89a4 = 55;
  var _0x290070 = 40;
  var _0x22dcfc = 5;
  var _0xb48665 = 240;
  var _0x168165 = 420;
  _0x2f89a4 = _0xb48665 + _0x22dcfc * 2;
  this.endScreenCanvas.width = _0x168165 + _0x22dcfc * 2;
  this.endScreenCanvas.height = _0x2f89a4;
  _0x89231e.globalAlpha = 0.2;
  _0x89231e.fillStyle = "#000000";
  _0x89231e.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x89231e.fillStyle = "#000000";
  _0x89231e.fillRect(_0x22dcfc, _0x22dcfc, this.endScreenCanvas.width - _0x22dcfc * 2, this.endScreenCanvas.height - _0x22dcfc * 2);
  var _0x27b874 = _0x22dcfc;
  _0x89231e.globalAlpha = 1;
  _0x89231e.fillStyle = "#FFFFFF";
  _0x89231e.font = "30px Arial";
  _0x27b874 += 55;
  var _0x18c033 = "Final Stats";
  _0x89231e.font = "30px Arial";
  _0x89231e.fillText(_0x18c033, this.endScreenCanvas.width / 2 - _0x89231e.measureText(_0x18c033).width / 2, _0x27b874);
  _0x89231e.font = "20px Arial";
  _0x27b874 += 45;
  _0x18c033 = "You were #" + _0x2843a0.rank;
  _0x89231e.fillText(_0x18c033, this.endScreenCanvas.width / 2 - _0x89231e.measureText(_0x18c033).width / 2, _0x27b874);
  _0x27b874 += 40;
  var _0x122f26 = a0_0x48a798(_0x2843a0.timeAlive);
  var _0x345485 = _0x22dcfc + 15;
  a0_0x4743f7(_0x89231e, "Killed by", _0x2843a0.killedBy, _0x345485, _0x27b874);
  _0x27b874 += 40;
  a0_0x4743f7(_0x89231e, "Time Alive", a0_0x48a798(_0x2843a0.timeAlive), _0x345485, _0x27b874);
  _0x345485 += 210;
  a0_0x4743f7(_0x89231e, "Total Kills", _0x2843a0.totalKills, _0x345485, _0x27b874);
  _0x27b874 += 40;
  _0x345485 = _0x22dcfc + 15;
  a0_0x4743f7(_0x89231e, "Top rank", _0x2843a0.topRank, _0x345485, _0x27b874);
  _0x345485 += 210;
  a0_0x4743f7(_0x89231e, "Max XP", a0_0x1e543a(_0x2843a0.maxXP), _0x345485, _0x27b874);
  _0x27b874 += 50;
};
a0_0x3983b8.prototype.lastWastedPopupT = 0;
a0_0x3983b8.prototype.onPlayerWasted = function (_0xafb10e) {
  if ((a0_0x24806e - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x24806e;
    var _0x1c4714 = new a0_0x3c1415(_0xafb10e + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0x1c4714);
  }
};
a0_0x3983b8.prototype.lastWastedPopupT = 0;
a0_0x3983b8.prototype.msgDisplayPlayersOnMiniMap = function (_0x2387ae) {
  a0_0x5cbbcf = [];
  var _0x43b7a1 = _0x2387ae.readUInt16();
  for (var _0x183199 = 0; _0x183199 < _0x43b7a1; _0x183199++) {
    a0_0x5cbbcf.push({
      id: _0x2387ae.readUInt32(),
      x: _0x2387ae.readUInt32() / 100,
      y: _0x2387ae.readUInt32() / 100,
      rad: 3
    });
  }
};
a0_0x3983b8.prototype.msgDisplayPumpkinsOnMiniMap = function (_0x44530c) {
  a0_0x3f0fbe = [];
  var _0x71e86d = _0x44530c.readUInt16();
  for (var _0x3437ae = 0; _0x3437ae < _0x71e86d; _0x3437ae++) {
    a0_0x3f0fbe.push({
      x: _0x44530c.readUInt16() / 4,
      y: _0x44530c.readUInt16() / 4,
      type: 0,
      rad: 2
    });
  }
};
window.FreeForAll = a0_0x3983b8;
var a0_0x28626c = a0_0x46e67b;
a0_0x55adbd.prototype = Object.create(a0_0x28626c.prototype);
a0_0x55adbd.prototype.constructor = a0_0x55adbd;
a0_0x55adbd.superClass = a0_0x28626c;
a0_0x55adbd.prototype.safeArea = null;
var a0_0x46b1c5 = false;
function a0_0x55adbd(_0x90662b) {
  this.mode = a0_0x37f513;
  this.chatAllowed = true;
  this.createInterfaceButtons();
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
  console.log("@@@@@@@@@@@@@@@@@@@@@@@@@@ zombie mode @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
}
a0_0x55adbd.prototype.wastedPopups = [];
a0_0x55adbd.prototype.playerDisplayNum = 0;
a0_0x55adbd.prototype.setServerPlayerCount = function () {
  if (this.playerDisplayNum == 0) {
    a0_0x595a8f.setText(a0_0x4b4fe7(a0_0x70cda0) + " mopers");
  } else {
    a0_0x595a8f.setText(a0_0x4b4fe7(a0_0xbb87b5) + " on server");
  }
  if (a0_0x2ad00) {
    a0_0x2ad00.setPlayersCount(a0_0x70cda0);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x55adbd.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0x17b807) {
    return;
  }
  if (a0_0x371a9b) {
    for (var _0x52bc0f = this.wastedPopups.length - 1; _0x52bc0f >= 0; _0x52bc0f--) {
      var _0x3c587e = this.wastedPopups[_0x52bc0f];
      _0x3c587e.draw();
      if (_0x3c587e.timedOut) {
        this.wastedPopups.splice(_0x52bc0f, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x1306ae.drawImage(this.endScreenCanvas, a0_0x2bf7a6 / 2 - this.endScreenCanvas.width / 2, a0_0x2b523d * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x371a9b || isGhost) {
      a0_0x5307a8(true);
    }
  }
  this.drawInterfaceButtons();
};
a0_0x55adbd.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  a0_0x5387c4 = null;
  a0_0x4a3e24 = null;
  if (this.interfaceButtons) {
    for (var _0x5df6a9 = 0; _0x5df6a9 < this.interfaceButtons.length; _0x5df6a9++) {
      var _0x314cf5 = this.interfaceButtons[_0x5df6a9];
      _0x314cf5.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x55adbd.prototype.onInit = function () {};
a0_0x55adbd.prototype.playercount = 0;
a0_0x55adbd.prototype.setPlayerCount = function (_0x5f4e6e) {
  this.playercount = _0x5f4e6e;
};
a0_0x55adbd.prototype.showPlayerCount = function () {
  a0_0x1306ae.save();
  var _0x4c0937 = a0_0x2bf7a6 / 2;
  var _0x306bae = a0_0x2c02fa * 50;
  var _0x53420e = a0_0x2c02fa * 300;
  a0_0x1306ae.globalAlpha = 0.35;
  a0_0x1306ae.fillStyle = "black";
  var _0x40707 = a0_0x2c02fa * 30;
  a0_0x1306ae.fillRect(_0x4c0937 - _0x53420e / 2, _0x40707, _0x53420e, _0x306bae);
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = "white";
  a0_0x1306ae.font = a0_0x2c02fa * 30 + "px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  a0_0x1306ae.shadowOffsetX = 1;
  a0_0x1306ae.shadowOffsetY = 1;
  a0_0x1306ae.shadowColor = "black";
  _0x40707 += a0_0x2c02fa * 25;
  var _0x204c90 = " player";
  if (this.playercount > 1) {
    _0x204c90 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x204c90 += " alive!";
  } else if (this.state == a0_0x30d29a || this.state == battleRoyal_ready) {
    _0x204c90 += " joined";
  }
  a0_0x1306ae.fillText(this.playercount + _0x204c90, _0x4c0937, _0x40707);
  a0_0x1306ae.restore();
};
a0_0x55adbd.prototype.lbCanvas = null;
a0_0x55adbd.prototype.leaderboard = function (_0xcadc0) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0xcadc0) {
    var _0x4fdcad = this.lbCanvas.getContext("2d");
    var _0x332723 = 55;
    var _0x5e9585 = 22;
    _0x332723 = _0x332723 + _0x5e9585 * _0xcadc0.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x332723;
    _0x4fdcad.globalAlpha = 0.2;
    _0x4fdcad.fillStyle = "#000000";
    _0x4fdcad.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x4fdcad.globalAlpha = 1;
    _0x4fdcad.fillStyle = "#FFFFFF";
    var _0x37ec8a = a0_0xa8227f.name;
    _0x4fdcad.font = "24px Arial";
    if (!options_lowGraphics) {
      _0x4fdcad.shadowOffsetX = 1;
      _0x4fdcad.shadowOffsetY = 1;
    }
    _0x4fdcad.shadowColor = "black";
    _0x4fdcad.fillText(_0x37ec8a, this.lbCanvas.width / 2 - _0x4fdcad.measureText(_0x37ec8a).width / 2, 40);
    var _0xbd5316;
    _0x4fdcad.textAlign = "left";
    _0x4fdcad.font = "17px Arial";
    _0xbd5316 = 0;
    for (; _0xbd5316 < _0xcadc0.length; ++_0xbd5316) {
      _0x37ec8a = a0_0x17133c ? "" : _0xcadc0[_0xbd5316].name || "mope.io";
      _0x37ec8a += " (" + a0_0x1e543a(_0xcadc0[_0xbd5316].xp) + ")";
      _0x4fdcad.fillStyle = "#FFFFFF";
      _0x4fdcad.fillText(_0x37ec8a, 15, 65 + _0x5e9585 * _0xbd5316);
    }
  }
};
a0_0x55adbd.prototype.drawLeaderboard = function () {
  if (a0_0x371a9b) {
    if (this.pieChartCanvas != null) {
      if (this.pieChartCanvas.width) {
        a0_0x1306ae.drawImage(this.pieChartCanvas, a0_0x2b523d * 20, a0_0x2b523d * 20, this.pieChartCanvas.width, this.pieChartCanvas.height);
      }
    }
  }
  a0_0x3e587f();
};
a0_0x55adbd.prototype.btnPlayAgain = null;
a0_0x55adbd.prototype.showStats = true;
a0_0x55adbd.prototype.interfaceButtons = [];
a0_0x55adbd.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x55adbd.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x23b7eb = 0; _0x23b7eb < this.interfaceButtons.length; _0x23b7eb++) {
      var _0x3fd083 = this.interfaceButtons[_0x23b7eb];
      if (_0x3fd083.isVisible) {
        _0x3fd083.draw();
      }
    }
  }
};
a0_0x55adbd.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x55adbd.prototype.readPlayerStats = function (_0x46244b) {
  var _0x47ec8c = [];
  _0x47ec8c.rank = _0x46244b.readUInt16();
  _0x47ec8c.timeAlive = _0x46244b.readUInt16();
  _0x47ec8c.totalKills = _0x46244b.readUInt16();
  _0x47ec8c.topRank = _0x46244b.readUInt16();
  _0x47ec8c.maxXP = _0x46244b.readUInt32();
  _0x47ec8c.killedBy = _0x46244b.readString();
  return _0x47ec8c;
};
a0_0x55adbd.prototype.playerInfo = function (_0x2920ee) {
  if (isGhost && !a0_0x31e3ca) {
    var _0x5bafaa = this.readPlayerStats(_0x2920ee);
    this.buildEndScreenHTML(_0x5bafaa);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
a0_0x55adbd.prototype.worldUpdate = function (_0x4d6d9f) {
  var _0x3383a5 = minimapW / 200;
  var _0x491c30 = minimapH / 200;
  var _0x1086fa = _0x4d6d9f.readUInt32() * _0x3383a5;
  var _0xbac0d6 = _0x4d6d9f.readUInt32() * _0x491c30;
  var _0x4fffc0 = _0x4d6d9f.readUInt32() * 5;
  a0_0x5387c4 = {
    x: _0x1086fa,
    y: _0xbac0d6,
    rad: _0x4fffc0 * (minimapW / a0_0x3acc86)
  };
  this.nonZombiePlayersCount = _0x4d6d9f.readUInt16();
  this.zombieCount = _0x4d6d9f.readUInt16();
  if (!a0_0x46b1c5) {
    this.zombiePlayers = [];
    for (i = 0; i < this.zombieCount; i++) {
      var _0x1086fa = _0x4d6d9f.readUInt16() / 4;
      var _0xbac0d6 = _0x4d6d9f.readUInt16() / 4;
      var _0x332b27 = _0x4d6d9f.readUInt16() / 10;
      this.zombiePlayers.push({
        x: _0x1086fa,
        y: _0xbac0d6,
        rad: _0x332b27
      });
    }
  }
};
var a0_0x4a3e24 = null;
function a0_0x3e587f() {
  if (!a0_0x4a3e24) {
    a0_0x4a3e24 = document.createElement("canvas");
  }
  a0_0x4a3e24.width = minimapW;
  a0_0x4a3e24.height = minimapH;
  var _0x2f831c = a0_0x4a3e24.getContext("2d");
  _0x2f831c.clearRect(0, 0, a0_0x4a3e24.width, a0_0x4a3e24.height);
  _0x2f831c.save();
  var _0x2af398 = Math.max(3, a0_0x5387c4.rad);
  var _0x218726 = a0_0x5387c4.x;
  var _0x4601e0 = a0_0x5387c4.y;
  _0x2f831c.translate(_0x218726, _0x4601e0);
  _0x2f831c.save();
  _0x2f831c.globalAlpha = 1;
  a0_0x3d7293(_0x2f831c, 0, 0, a0_0x5387c4.rad, 5, "white");
  _0x2f831c.restore();
  var _0x1d1cae = a0_0x2c02fa * minimapW * 1.5;
  var _0x5a74bb = a0_0x2c02fa * minimapH * 1.5;
  var _0x2d49ea = 1;
  var _0x1f5357 = "red";
  a0_0x451b3b(_0x2f831c, a0_0x5387c4.rad, Math.PI * 0, _0x1f5357, _0x2d49ea, _0x1d1cae, _0x5a74bb);
  a0_0x451b3b(_0x2f831c, a0_0x5387c4.rad, Math.PI * 0.5, _0x1f5357, _0x2d49ea, _0x1d1cae, _0x5a74bb);
  a0_0x451b3b(_0x2f831c, a0_0x5387c4.rad, Math.PI * 1, _0x1f5357, _0x2d49ea, _0x1d1cae, _0x5a74bb);
  a0_0x451b3b(_0x2f831c, a0_0x5387c4.rad, Math.PI * 1.5, _0x1f5357, _0x2d49ea, _0x1d1cae, _0x5a74bb);
  _0x2f831c.restore();
  if (a0_0x4a3e24) {
    a0_0x1306ae.drawImage(a0_0x4a3e24, a0_0x2bf7a6 - (a0_0x2b523d * 10 + a0_0x105b76.width * a0_0x2c02fa), a0_0x2b523d * 10, minimapW * a0_0x2c02fa, minimapH * a0_0x2c02fa);
  }
}
a0_0x55adbd.prototype.drawZombiePlayers = function () {
  if (this.zombiePlayers) {
    for (t = 0; t < this.zombiePlayers.length; t++) {
      a0_0x2494d3(this.zombiePlayers[t], "#adff32", 1);
    }
  }
};
a0_0x55adbd.prototype.drawMap = function () {
  this.buildPieChart();
  if (!a0_0x46b1c5) {
    this.drawZombiePlayers();
  }
};
a0_0x55adbd.prototype.pieChartCanvas = null;
a0_0x55adbd.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x55adbd.prototype.buildPieChart = function () {
  if (this.pieChartCanvas == null) {
    this.pieChartCanvas = document.createElement("canvas");
  }
  if (this.pieChartCanvas == null) {
    return;
  }
  var _0x30e05d = this.pieChartCanvas.getContext("2d");
  var _0x8cb2a7 = {
    0: this.nonZombiePlayersCount,
    1: this.zombieCount
  };
  a0_0x4da0d1 = a0_0x46b1c5 ? 1 : 0;
  var _0x4253b6 = new a0_0x299cc9({
    pad: 30,
    canvas: this.pieChartCanvas,
    data: _0x8cb2a7,
    colors: this.teamColors
  });
  var _0x1f4a88 = 55;
  var _0x312664 = 40;
  var _0x44977b = 5;
  var _0x30d49d = 200;
  var _0x111979 = 200;
  _0x1f4a88 = _0x30d49d + _0x44977b * 2;
  this.pieChartCanvas.width = _0x111979 + _0x44977b * 2;
  this.pieChartCanvas.height = _0x1f4a88;
  _0x4253b6.draw();
  _0x30e05d.globalAlpha = 0.2;
  var _0x352503 = _0x44977b;
  _0x30e05d.globalAlpha = 0.5;
  _0x30e05d.fillStyle = "white";
  _0x30e05d.font = "20px Arial";
  var _0x352503 = 200;
  str = a0_0xa8227f.name;
  _0x30e05d.fillText(str, this.pieChartCanvas.width / 2 - _0x30e05d.measureText(str).width / 2 - 15, _0x352503);
};
a0_0x55adbd.prototype.endScreenDisplayed = false;
a0_0x55adbd.prototype.buildEndScreenHTML = function (_0x12c22c) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x1cfa26 = "";
  _0x1cfa26 += "<div class='msg'>YOU WERE #" + _0x12c22c.rank + "</div>";
  _0x1cfa26 += "<div class='row'>";
  _0x1cfa26 += "<div class='label'>Killed by:</div>";
  _0x1cfa26 += "<div class='value2'>" + _0x12c22c.killedBy + "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "<div class='row'>";
  _0x1cfa26 += "<div class='col1'>";
  _0x1cfa26 += "<div class='label'>Time alive:</div>";
  _0x1cfa26 += "<div class='value'>" + a0_0x48a798(_0x12c22c.timeAlive) + "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "<div class='col2'>";
  _0x1cfa26 += "<div class='label'>Total kills:</div>";
  _0x1cfa26 += "<div class='value'>" + _0x12c22c.totalKills + "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "<div class='row'>";
  _0x1cfa26 += "<div class='col1'>";
  _0x1cfa26 += "<div class='label'>Top rank:</div>";
  _0x1cfa26 += "<div class='value'>" + _0x12c22c.topRank + "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "<div class='col2'>";
  _0x1cfa26 += "<div class='label'>Max xp:</div>";
  _0x1cfa26 += "<div class='value'>" + a0_0x1e543a(_0x12c22c.maxXP) + "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "<div style='clear:both;'></div>";
  _0x1cfa26 += "<div class='btnDiv'>";
  _0x1cfa26 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x1cfa26 += "</div>";
  _0x1cfa26 += "<div style='clear:both;'></div>";
  var _0x2e8457 = document.getElementById("endScreen");
  if (_0x2e8457) {
    _0x2e8457.innerHTML = _0x1cfa26;
    _0x2e8457.style.display = "block";
  }
  if (!a0_0x371a9b || isGhost) {
    a0_0x203acc();
  }
};
a0_0x55adbd.prototype.endScreenCanvas = null;
a0_0x55adbd.prototype.buildEndScreen = function (_0x5e1059, _0x5986b9) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x3d7950 = this.endScreenCanvas.getContext("2d");
  var _0x1d75d7 = 55;
  var _0x312971 = 40;
  var _0x3d0802 = 5;
  var _0x1c6cdc = 240;
  var _0x5379e8 = 420;
  _0x1d75d7 = _0x1c6cdc + _0x3d0802 * 2;
  this.endScreenCanvas.width = _0x5379e8 + _0x3d0802 * 2;
  this.endScreenCanvas.height = _0x1d75d7;
  _0x3d7950.globalAlpha = 0.2;
  _0x3d7950.fillStyle = "#000000";
  _0x3d7950.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x3d7950.fillStyle = "#000000";
  _0x3d7950.fillRect(_0x3d0802, _0x3d0802, this.endScreenCanvas.width - _0x3d0802 * 2, this.endScreenCanvas.height - _0x3d0802 * 2);
  var _0x5a0471 = _0x3d0802;
  _0x3d7950.globalAlpha = 1;
  _0x3d7950.fillStyle = "#FFFFFF";
  _0x3d7950.font = "30px Arial";
  _0x5a0471 += 55;
  var _0x1dc69c = "Final Stats";
  _0x3d7950.font = "30px Arial";
  _0x3d7950.fillText(_0x1dc69c, this.endScreenCanvas.width / 2 - _0x3d7950.measureText(_0x1dc69c).width / 2, _0x5a0471);
  _0x3d7950.font = "20px Arial";
  _0x5a0471 += 45;
  _0x1dc69c = "You were #" + _0x5986b9.rank;
  _0x3d7950.fillText(_0x1dc69c, this.endScreenCanvas.width / 2 - _0x3d7950.measureText(_0x1dc69c).width / 2, _0x5a0471);
  _0x5a0471 += 40;
  var _0x328584 = a0_0x48a798(_0x5986b9.timeAlive);
  var _0x4f7601 = _0x3d0802 + 15;
  a0_0x4743f7(_0x3d7950, "Killed by", _0x5986b9.killedBy, _0x4f7601, _0x5a0471);
  _0x5a0471 += 40;
  a0_0x4743f7(_0x3d7950, "Time Alive", a0_0x48a798(_0x5986b9.timeAlive), _0x4f7601, _0x5a0471);
  _0x4f7601 += 210;
  a0_0x4743f7(_0x3d7950, "Total Kills", _0x5986b9.totalKills, _0x4f7601, _0x5a0471);
  _0x5a0471 += 40;
  _0x4f7601 = _0x3d0802 + 15;
  a0_0x4743f7(_0x3d7950, "Top rank", _0x5986b9.topRank, _0x4f7601, _0x5a0471);
  _0x4f7601 += 210;
  a0_0x4743f7(_0x3d7950, "Max XP", a0_0x1e543a(_0x5986b9.maxXP), _0x4f7601, _0x5a0471);
  _0x5a0471 += 50;
};
function a0_0x451b3b(_0x52bec1, _0x3903d2, _0x32c90e, _0x24b3a3, _0x2e618b, _0x2432b0, _0x20a5fb) {
  _0x52bec1.save();
  _0x52bec1.globalAlpha = _0x2e618b;
  _0x52bec1.fillStyle = _0x24b3a3;
  _0x52bec1.rotate(_0x32c90e);
  _0x52bec1.save();
  _0x52bec1.strokeStyle = "white";
  _0x52bec1.beginPath();
  _0x52bec1.arc(0, 0, _0x3903d2, 0, Math.PI * 0.5, false);
  _0x52bec1.stroke();
  _0x52bec1.restore();
  _0x52bec1.save();
  _0x52bec1.beginPath();
  _0x52bec1.arc(0, 0, _0x3903d2, 0, Math.PI * 0.5, false);
  _0x52bec1.lineTo(0, _0x2432b0);
  _0x52bec1.lineTo(_0x20a5fb, _0x2432b0);
  _0x52bec1.lineTo(_0x20a5fb, 0);
  _0x52bec1.closePath();
  _0x52bec1.fill();
  _0x52bec1.restore();
  _0x52bec1.restore();
}
a0_0x55adbd.prototype.lastWastedPopupT = 0;
a0_0x55adbd.prototype.onPlayerWasted = function (_0x3df3a6) {
  if ((a0_0x24806e - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x24806e;
    var _0xae8ec7 = new a0_0x3c1415(_0x3df3a6 + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0xae8ec7);
  }
};
window.ZombieMode = a0_0x55adbd;
var a0_0x28626c = a0_0x46e67b;
a0_0x1e7c5e.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1e7c5e.prototype.constructor = a0_0x1e7c5e;
a0_0x1e7c5e.superClass = a0_0x28626c;
a0_0x1e7c5e.prototype.safeArea = null;
var a0_0x46b1c5 = false;
a0_0x1e7c5e.prototype.wastedPopups = [];
a0_0x1e7c5e.prototype.playerDisplayNum = 0;
a0_0x1e7c5e.prototype.setServerPlayerCount = function () {
  if (this.playerDisplayNum == 0) {
    a0_0x595a8f.setText(a0_0x4b4fe7(a0_0x70cda0) + " mopers");
  } else {
    a0_0x595a8f.setText(a0_0x4b4fe7(a0_0xbb87b5) + " on server");
  }
  if (a0_0x2ad00) {
    a0_0x2ad00.setPlayersCount(a0_0x70cda0);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x1e7c5e.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0x17b807) {
    return;
  }
  if (a0_0x371a9b) {
    for (var _0x483226 = this.wastedPopups.length - 1; _0x483226 >= 0; _0x483226--) {
      var _0x8d783 = this.wastedPopups[_0x483226];
      _0x8d783.draw();
      if (_0x8d783.timedOut) {
        this.wastedPopups.splice(_0x483226, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x1306ae.drawImage(this.endScreenCanvas, a0_0x2bf7a6 / 2 - this.endScreenCanvas.width / 2, a0_0x2b523d * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x371a9b || isGhost) {
      a0_0x5307a8(true);
    }
  }
  this.drawInterfaceButtons();
  this.gameMode_screenMsg();
};
a0_0x1e7c5e.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  a0_0x5387c4 = null;
  a0_0x4a3e24 = null;
  if (this.interfaceButtons) {
    for (var _0x68a8df = 0; _0x68a8df < this.interfaceButtons.length; _0x68a8df++) {
      var _0x241223 = this.interfaceButtons[_0x68a8df];
      _0x241223.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x1e7c5e.prototype.onInit = function () {};
a0_0x1e7c5e.prototype.playercount = 0;
a0_0x1e7c5e.prototype.setPlayerCount = function (_0x24acca) {
  this.playercount = _0x24acca;
};
a0_0x1e7c5e.prototype.showPlayerCount = function () {
  a0_0x1306ae.save();
  var _0x46234f = a0_0x2bf7a6 / 2;
  var _0x2d4a00 = a0_0x2c02fa * 50;
  var _0x1b1c15 = a0_0x2c02fa * 300;
  a0_0x1306ae.globalAlpha = 0.35;
  a0_0x1306ae.fillStyle = "black";
  var _0x4570b4 = a0_0x2c02fa * 30;
  a0_0x1306ae.fillRect(_0x46234f - _0x1b1c15 / 2, _0x4570b4, _0x1b1c15, _0x2d4a00);
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = "white";
  a0_0x1306ae.font = a0_0x2c02fa * 30 + "px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  a0_0x1306ae.shadowOffsetX = 1;
  a0_0x1306ae.shadowOffsetY = 1;
  a0_0x1306ae.shadowColor = "black";
  _0x4570b4 += a0_0x2c02fa * 25;
  var _0x42ca24 = " player";
  if (this.playercount > 1) {
    _0x42ca24 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x42ca24 += " alive!";
  } else if (this.state == a0_0x30d29a || this.state == battleRoyal_ready) {
    _0x42ca24 += " joined";
  }
  a0_0x1306ae.fillText(this.playercount + _0x42ca24, _0x46234f, _0x4570b4);
  a0_0x1306ae.restore();
};
a0_0x1e7c5e.prototype.lbCanvas = null;
a0_0x1e7c5e.prototype.leaderboard = function (_0x2f2bc7) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x2f2bc7) {
    var _0x46d0cb = this.lbCanvas.getContext("2d");
    var _0x300bb6 = 55;
    var _0x359b9d = 22;
    _0x300bb6 = _0x300bb6 + _0x359b9d * _0x2f2bc7.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x300bb6;
    _0x46d0cb.globalAlpha = 0.2;
    _0x46d0cb.fillStyle = "#000000";
    _0x46d0cb.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x46d0cb.globalAlpha = 1;
    _0x46d0cb.fillStyle = "#FFFFFF";
    var _0x4a9513 = a0_0xa8227f.name;
    _0x46d0cb.font = "24px Arial";
    if (!options_lowGraphics) {
      _0x46d0cb.shadowOffsetX = 1;
      _0x46d0cb.shadowOffsetY = 1;
    }
    _0x46d0cb.shadowColor = "black";
    _0x46d0cb.fillText(_0x4a9513, this.lbCanvas.width / 2 - _0x46d0cb.measureText(_0x4a9513).width / 2, 40);
    var _0x494a28;
    _0x46d0cb.textAlign = "left";
    _0x46d0cb.font = "17px Arial";
    _0x494a28 = 0;
    for (; _0x494a28 < _0x2f2bc7.length; ++_0x494a28) {
      _0x4a9513 = a0_0x17133c ? "" : _0x2f2bc7[_0x494a28].name || "mope.io";
      _0x4a9513 += " (" + a0_0x1e543a(_0x2f2bc7[_0x494a28].xp) + ")";
      _0x46d0cb.fillStyle = "#FFFFFF";
      _0x46d0cb.fillText(_0x4a9513, 15, 65 + _0x359b9d * _0x494a28);
    }
  }
};
a0_0x1e7c5e.prototype.drawLeaderboard = function () {
  if (a0_0x371a9b) {
    if (this.pieChartCanvas != null) {
      if (this.pieChartCanvas.width) {
        a0_0x1306ae.drawImage(this.pieChartCanvas, a0_0x2b523d * 20, a0_0x2b523d * 20, this.pieChartCanvas.width, this.pieChartCanvas.height);
      }
    }
  }
  if (a0_0x5387c4) {
    a0_0x3e587f();
  }
};
a0_0x1e7c5e.prototype.btnPlayAgain = null;
a0_0x1e7c5e.prototype.showStats = true;
a0_0x1e7c5e.prototype.interfaceButtons = [];
a0_0x1e7c5e.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x1e7c5e.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x52b79d = 0; _0x52b79d < this.interfaceButtons.length; _0x52b79d++) {
      var _0x5825ec = this.interfaceButtons[_0x52b79d];
      if (_0x5825ec.isVisible) {
        _0x5825ec.draw();
      }
    }
  }
};
a0_0x1e7c5e.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x1e7c5e.prototype.readPlayerStats = function (_0x404d48) {
  var _0x35431b = [];
  _0x35431b.rank = _0x404d48.readUInt16();
  _0x35431b.timeAlive = _0x404d48.readUInt16();
  _0x35431b.totalKills = _0x404d48.readUInt16();
  _0x35431b.topRank = _0x404d48.readUInt16();
  _0x35431b.maxXP = _0x404d48.readUInt32();
  _0x35431b.killedBy = _0x404d48.readString();
  return _0x35431b;
};
a0_0x1e7c5e.prototype.playerInfo = function (_0x25910e) {
  if (isGhost && !a0_0x31e3ca) {
    var _0x55f2fb = this.readPlayerStats(_0x25910e);
    this.buildEndScreenHTML(_0x55f2fb);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
var a0_0x30d29a = 0;
var a0_0x458423 = 1;
var a0_0x458423 = 1;
var a0_0x56e312 = 2;
var a0_0x2c6e23 = 4;
var a0_0x2162eb = 4;
a0_0x1e7c5e.prototype.worldUpdate = function (_0x50d9e1) {
  a0_0x34b662 = _0x50d9e1.readUInt8();
  if (a0_0x34b662 == a0_0x56e312) {
    var _0x1ad4cb = minimapW / 200;
    var _0x476ba0 = minimapH / 200;
    var _0x4d2548 = _0x50d9e1.readUInt32() * _0x1ad4cb;
    var _0x417656 = _0x50d9e1.readUInt32() * _0x476ba0;
    var _0x55d260 = _0x50d9e1.readUInt32() * 5;
    a0_0x5387c4 = {
      x: _0x4d2548,
      y: _0x417656,
      rad: _0x55d260 * (minimapW / a0_0x3acc86)
    };
  } else {
    a0_0x5387c4 = null;
  }
};
a0_0x1e7c5e.prototype.handleMessage = function (_0x16d21d) {
  var _0xd98d5f = _0x16d21d.readUInt8();
  switch (_0xd98d5f) {
    case a0_0x3afc9b:
      {
        var _0x2a022a = _0x16d21d.readString();
        this.setStatusBarMessage(_0x2a022a, 15);
        break;
      }
    case a0_0x205b23:
      {
        this.alivePlayers = _0x16d21d.readUInt16();
        this.playerCountMsg = _0x16d21d.readString();
        this.setPlayerCountMsg();
        break;
      }
    case a0_0x254bd9:
      {
        this.timeRemain = _0x16d21d.readUInt16();
        break;
      }
    case 33:
      {
        var _0x279384 = _0x16d21d.readUInt16();
        isGhost = true;
        this.showStats = true;
        a0_0x19ab74 = false;
        a0_0x541393();
      }
      break;
    case 34:
      {
        a0_0x2ae11a = "You WON!";
        respawnXp = 0;
        a0_0x15960b = 80;
        a0_0x130556 = "limegreen";
        a0_0x932ea3 = +new Date() + 5000;
        a0_0x19ab74 = false;
        a0_0x541393();
      }
      break;
    case 35:
      {}
      break;
    case 36:
      {
        var _0x47e5c2 = _0x16d21d.readUInt8();
        var _0x25ace8 = [];
        for (_0x14f754 = 0; _0x14f754 < _0x47e5c2; ++_0x14f754) {
          _0x25ace8.push({
            name: _0x16d21d.readString(),
            xp: _0x16d21d.readUInt32()
          });
        }
        this.leaderboard(_0x25ace8);
      }
      break;
    case 37:
      {
        var _0x56517a = _0x16d21d.readUInt16();
        var _0x4f5ed6 = a0_0x48a798(_0x56517a);
        if (this.state == 4) {
          var _0x2a022a = "Game restarts in " + _0x4f5ed6;
          if (_0x56517a < 3) {
            _0x2a022a = "Starting new game";
          }
          this.setMessage(_0x2a022a, 500);
        } else {
          var _0x2a022a = "Battle begins in " + _0x4f5ed6;
          if (_0x56517a < 3) {
            if (_0x4f5ed6 == "") {
              _0x2a022a = "Starting new battle!";
            } else {
              _0x2a022a = "Starting new battle! (" + _0x4f5ed6 + ")";
            }
          }
          this.setMessage(_0x2a022a, 500);
          if (_0x56517a == 0) {
            a0_0x1ed8c9("SURVIVE!", 2500);
          }
        }
      }
      break;
    case 38:
      {
        this.playersJoined = _0x16d21d.readUInt16();
        if (this.playersJoined > 0) {
          this.setPlayerCount(this.playersJoined);
        }
      }
      break;
    case 39:
      {
        var _0x56517a = _0x16d21d.readUInt16();
        var _0x4f5ed6 = a0_0x48a798(_0x56517a);
        if (!isGhost) {
          var _0x2a022a = "Heatwave expanding in " + _0x4f5ed6;
          if (_0x56517a < 4) {
            _0x2a022a = "Heatwave expands now!";
          }
          this.setMessage(_0x2a022a, 500);
          if (_0x56517a == 0) {
            a0_0x1ed8c9("STAY SAFE!", 2500);
          }
        }
      }
      break;
    case 40:
      {
        if (isGhost) {
          this.setMessage("You have been eliminated!", 500);
        } else {
          this.setMessage("Stay in safe area!", 500);
        }
      }
      break;
    case 41:
      {
        a0_0x34b662 = this.state = _0x16d21d.readUInt8();
        this.playersJoined = _0x16d21d.readUInt16();
        if (this.playersJoined > 0) {
          this.setPlayerCount(this.playersJoined);
        }
        if (this.state == a0_0x30d29a) {
          this.setMessage("Waiting for players", 1000);
        } else if (this.state == battleRoyal_gameReset) {
          a0_0xc2011();
        }
      }
      break;
    case 42:
      {
        var _0x5a9a95 = _0x16d21d.readUInt8() == 1;
        if (_0x5a9a95) {
          this.setMessage("You WON!", 15000);
        } else {
          this.setMessage("You LOST!", 15000);
        }
      }
      break;
    case 43:
      {
        a0_0x1560a3 = true;
        if (a0_0x351f51()) {
          a0_0x2129f4.close();
        }
      }
      break;
    case 44:
      {
        var _0x2823ea = _0x16d21d.readString();
        if (_0x2823ea && _0x2823ea.length > 0) {
          this.onPlayerWasted(_0x2823ea);
        }
      }
      break;
    case 45:
      {
        console.log("Msg_battleroyal_endScreen");
        var _0x5873fb = null;
        var _0x2f55b1 = 0;
        if (!a0_0x5bd21d) {
          _0x5873fb = this.readPlayerStats(_0x16d21d);
          _0x2f55b1 = _0x5873fb.totalPlayers;
        } else {
          _0x2f55b1 = _0x16d21d.readUInt16();
        }
        var _0x2520bf = [];
        if (_0x2f55b1 > 0) {
          if (_0x2f55b1 > 5) {
            _0x2f55b1 = 5;
          }
          for (var _0x14f754 = 0; _0x14f754 < _0x2f55b1; ++_0x14f754) {
            _0x2520bf.push({
              playerName: _0x16d21d.readString(),
              wins: _0x16d21d.readUInt8()
            });
          }
        }
        if (_0x2520bf != null || _0x5873fb != null) {
          this.endScreenDisplayed = false;
          this.buildEndScreenHTML(_0x2520bf, _0x5873fb);
        }
      }
      break;
    case 46:
      {
        var _0x56517a = _0x16d21d.readUInt16();
        if (_0x56517a == 0) {
          this.setMessage("Battle Ended", 500);
        } else {
          var _0x4f5ed6 = a0_0x48a798(_0x56517a);
          if (!isGhost) {
            this.setMessage("Battle Ending in " + _0x4f5ed6, 500);
          }
        }
      }
    case 48:
      {
        var _0x5873fb = this.readPlayerStats(_0x16d21d);
        this.buildEndScreen(null, _0x5873fb);
      }
  }
};
var a0_0x4a3e24 = null;
function a0_0x3e587f() {
  if (!a0_0x4a3e24) {
    a0_0x4a3e24 = document.createElement("canvas");
  }
  a0_0x4a3e24.width = minimapW;
  a0_0x4a3e24.height = minimapH;
  var _0x10f8e4 = a0_0x4a3e24.getContext("2d");
  _0x10f8e4.clearRect(0, 0, a0_0x4a3e24.width, a0_0x4a3e24.height);
  _0x10f8e4.save();
  var _0x6d1a17 = Math.max(3, a0_0x5387c4.rad);
  var _0x4179c9 = a0_0x5387c4.x;
  var _0x297d73 = a0_0x5387c4.y;
  _0x10f8e4.translate(_0x4179c9, _0x297d73);
  _0x10f8e4.save();
  _0x10f8e4.globalAlpha = 1;
  a0_0x3d7293(_0x10f8e4, 0, 0, a0_0x5387c4.rad, 5, "white");
  _0x10f8e4.restore();
  var _0x49d169 = a0_0x2c02fa * minimapW * 1.5;
  var _0x3669d7 = a0_0x2c02fa * minimapH * 1.5;
  var _0xe86895 = 1;
  var _0x303783 = "red";
  a0_0x451b3b(_0x10f8e4, a0_0x5387c4.rad, Math.PI * 0, _0x303783, _0xe86895, _0x49d169, _0x3669d7);
  a0_0x451b3b(_0x10f8e4, a0_0x5387c4.rad, Math.PI * 0.5, _0x303783, _0xe86895, _0x49d169, _0x3669d7);
  a0_0x451b3b(_0x10f8e4, a0_0x5387c4.rad, Math.PI * 1, _0x303783, _0xe86895, _0x49d169, _0x3669d7);
  a0_0x451b3b(_0x10f8e4, a0_0x5387c4.rad, Math.PI * 1.5, _0x303783, _0xe86895, _0x49d169, _0x3669d7);
  _0x10f8e4.restore();
  if (a0_0x4a3e24) {
    a0_0x1306ae.drawImage(a0_0x4a3e24, a0_0x2bf7a6 - (a0_0x2b523d * 10 + a0_0x105b76.width * a0_0x2c02fa), a0_0x2b523d * 10, minimapW * a0_0x2c02fa, minimapH * a0_0x2c02fa);
  }
}
a0_0x1e7c5e.prototype.drawZombiePlayers = function () {
  if (this.zombiePlayers) {
    for (t = 0; t < this.zombiePlayers.length; t++) {
      a0_0x2494d3(this.zombiePlayers[t], "#adff32", 1);
    }
  }
};
a0_0x1e7c5e.prototype.drawMap = function () {
  this.buildPieChart();
  if (!a0_0x46b1c5) {
    this.drawZombiePlayers();
  }
};
a0_0x1e7c5e.prototype.pieChartCanvas = null;
a0_0x1e7c5e.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x1e7c5e.prototype.buildPieChart = function () {
  if (this.pieChartCanvas == null) {
    this.pieChartCanvas = document.createElement("canvas");
  }
  if (this.pieChartCanvas == null) {
    return;
  }
  var _0x26d20c = this.pieChartCanvas.getContext("2d");
  var _0x2f003a = {
    0: this.nonZombiePlayersCount,
    1: this.zombieCount
  };
  a0_0x4da0d1 = a0_0x46b1c5 ? 1 : 0;
  var _0x578731 = new a0_0x299cc9({
    pad: 30,
    canvas: this.pieChartCanvas,
    data: _0x2f003a,
    colors: this.teamColors
  });
  var _0x5e3f32 = 55;
  var _0x9c3d60 = 40;
  var _0x292744 = 5;
  var _0x208563 = 200;
  var _0x5dd66c = 200;
  _0x5e3f32 = _0x208563 + _0x292744 * 2;
  this.pieChartCanvas.width = _0x5dd66c + _0x292744 * 2;
  this.pieChartCanvas.height = _0x5e3f32;
  _0x578731.draw();
  _0x26d20c.globalAlpha = 0.2;
  var _0x271170 = _0x292744;
  _0x26d20c.globalAlpha = 0.5;
  _0x26d20c.fillStyle = "white";
  _0x26d20c.font = "20px Arial";
  var _0x271170 = 200;
  str = a0_0xa8227f.name;
  _0x26d20c.fillText(str, this.pieChartCanvas.width / 2 - _0x26d20c.measureText(str).width / 2 - 15, _0x271170);
};
a0_0x1e7c5e.prototype.endScreenDisplayed = false;
a0_0x1e7c5e.prototype.buildEndScreenHTML = function (_0x723565) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x1bae16 = "";
  _0x1bae16 += "<div class='msg'>YOU WERE #" + _0x723565.rank + "</div>";
  _0x1bae16 += "<div class='row'>";
  _0x1bae16 += "<div class='label'>Killed by:</div>";
  _0x1bae16 += "<div class='value2'>" + _0x723565.killedBy + "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "<div class='row'>";
  _0x1bae16 += "<div class='col1'>";
  _0x1bae16 += "<div class='label'>Time alive:</div>";
  _0x1bae16 += "<div class='value'>" + a0_0x48a798(_0x723565.timeAlive) + "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "<div class='col2'>";
  _0x1bae16 += "<div class='label'>Total kills:</div>";
  _0x1bae16 += "<div class='value'>" + _0x723565.totalKills + "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "<div class='row'>";
  _0x1bae16 += "<div class='col1'>";
  _0x1bae16 += "<div class='label'>Top rank:</div>";
  _0x1bae16 += "<div class='value'>" + _0x723565.topRank + "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "<div class='col2'>";
  _0x1bae16 += "<div class='label'>Max xp:</div>";
  _0x1bae16 += "<div class='value'>" + a0_0x1e543a(_0x723565.maxXP) + "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "<div style='clear:both;'></div>";
  _0x1bae16 += "<div class='btnDiv'>";
  _0x1bae16 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x1bae16 += "</div>";
  _0x1bae16 += "<div style='clear:both;'></div>";
  var _0xcb62 = document.getElementById("endScreen");
  if (_0xcb62) {
    _0xcb62.innerHTML = _0x1bae16;
    _0xcb62.style.display = "block";
  }
  if (!a0_0x371a9b || isGhost) {
    a0_0x5307a8(true);
  }
};
a0_0x1e7c5e.prototype.endScreenCanvas = null;
a0_0x1e7c5e.prototype.buildEndScreen = function (_0x1fae83, _0x30f026) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x2a7d9e = this.endScreenCanvas.getContext("2d");
  var _0x23a2ac = 55;
  var _0x5b97ee = 40;
  var _0x2bdbeb = 5;
  var _0x56c52b = 240;
  var _0x4f4630 = 420;
  _0x23a2ac = _0x56c52b + _0x2bdbeb * 2;
  this.endScreenCanvas.width = _0x4f4630 + _0x2bdbeb * 2;
  this.endScreenCanvas.height = _0x23a2ac;
  _0x2a7d9e.globalAlpha = 0.2;
  _0x2a7d9e.fillStyle = "#000000";
  _0x2a7d9e.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x2a7d9e.fillStyle = "#000000";
  _0x2a7d9e.fillRect(_0x2bdbeb, _0x2bdbeb, this.endScreenCanvas.width - _0x2bdbeb * 2, this.endScreenCanvas.height - _0x2bdbeb * 2);
  var _0x17214b = _0x2bdbeb;
  _0x2a7d9e.globalAlpha = 1;
  _0x2a7d9e.fillStyle = "#FFFFFF";
  _0x2a7d9e.font = "30px Arial";
  _0x17214b += 55;
  var _0x54cb55 = "Final Stats";
  _0x2a7d9e.font = "30px Arial";
  _0x2a7d9e.fillText(_0x54cb55, this.endScreenCanvas.width / 2 - _0x2a7d9e.measureText(_0x54cb55).width / 2, _0x17214b);
  _0x2a7d9e.font = "20px Arial";
  _0x17214b += 45;
  _0x54cb55 = "You were #" + _0x30f026.rank;
  _0x2a7d9e.fillText(_0x54cb55, this.endScreenCanvas.width / 2 - _0x2a7d9e.measureText(_0x54cb55).width / 2, _0x17214b);
  _0x17214b += 40;
  var _0x59175f = a0_0x48a798(_0x30f026.timeAlive);
  var _0x1322f5 = _0x2bdbeb + 15;
  a0_0x4743f7(_0x2a7d9e, "Killed by", _0x30f026.killedBy, _0x1322f5, _0x17214b);
  _0x17214b += 40;
  a0_0x4743f7(_0x2a7d9e, "Time Alive", a0_0x48a798(_0x30f026.timeAlive), _0x1322f5, _0x17214b);
  _0x1322f5 += 210;
  a0_0x4743f7(_0x2a7d9e, "Total Kills", _0x30f026.totalKills, _0x1322f5, _0x17214b);
  _0x17214b += 40;
  _0x1322f5 = _0x2bdbeb + 15;
  a0_0x4743f7(_0x2a7d9e, "Top rank", _0x30f026.topRank, _0x1322f5, _0x17214b);
  _0x1322f5 += 210;
  a0_0x4743f7(_0x2a7d9e, "Max XP", a0_0x1e543a(_0x30f026.maxXP), _0x1322f5, _0x17214b);
  _0x17214b += 50;
};
function a0_0x451b3b(_0x45c390, _0x10a843, _0x525113, _0x1d7590, _0x1fe585, _0x45edd4, _0x1010a1) {
  _0x45c390.save();
  _0x45c390.globalAlpha = _0x1fe585;
  _0x45c390.fillStyle = _0x1d7590;
  _0x45c390.rotate(_0x525113);
  _0x45c390.save();
  _0x45c390.strokeStyle = "white";
  _0x45c390.beginPath();
  _0x45c390.arc(0, 0, _0x10a843, 0, Math.PI * 0.5, false);
  _0x45c390.stroke();
  _0x45c390.restore();
  _0x45c390.save();
  _0x45c390.beginPath();
  _0x45c390.arc(0, 0, _0x10a843, 0, Math.PI * 0.5, false);
  _0x45c390.lineTo(0, _0x45edd4);
  _0x45c390.lineTo(_0x1010a1, _0x45edd4);
  _0x45c390.lineTo(_0x1010a1, 0);
  _0x45c390.closePath();
  _0x45c390.fill();
  _0x45c390.restore();
  _0x45c390.restore();
}
a0_0x1e7c5e.prototype.lastWastedPopupT = 0;
a0_0x1e7c5e.prototype.onPlayerWasted = function (_0x10c672) {
  if ((a0_0x24806e - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x24806e;
    var _0x4079b2 = new a0_0x3c1415(_0x10c672 + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0x4079b2);
  }
};
a0_0x1e7c5e.prototype.screenTextEndT = 0;
a0_0x1e7c5e.prototype.screenTextMsg = "";
a0_0x1e7c5e.prototype.setMessage = function (_0x3d8ec9, _0x1d0254) {
  this.screenTextMsg = _0x3d8ec9;
  if (_0x1d0254 == 0) {
    this.screenTextEndT = +new Date() + _0x1d0254;
  } else {
    this.screenTextEndT = +new Date() + _0x1d0254;
  }
};
a0_0x1e7c5e.prototype.screenMessage = function () {
  var _0x4969b2 = 1;
  var _0x3e997f = (this.screenTextEndT - a0_0x24806e) / 1000 / _0x4969b2;
  _0x3e997f = _0x3e997f < 0 ? 0 : _0x3e997f > 1 ? 1 : _0x3e997f;
  if (_0x3e997f > 0) {
    a0_0x1306ae.save();
    var _0x3d085e = a0_0x2bf7a6 / 2;
    var _0x1f6094 = a0_0x2c02fa * 60;
    var _0x32db86 = (a0_0x2bf7a6 / 2 - 100) * a0_0x2c02fa;
    a0_0x1306ae.globalAlpha = 0.35;
    a0_0x1306ae.fillStyle = "black";
    var _0x59a891 = a0_0xa794f1 - a0_0xa794f1 * 0.2;
    a0_0x1306ae.fillRect(_0x3d085e - _0x32db86 / 2, _0x59a891 - _0x1f6094 / 2, _0x32db86, _0x1f6094);
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.globalAlpha = _0x3e997f;
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.fillStyle = "white";
    a0_0x1306ae.font = a0_0x2c02fa * 40 + "px Arial";
    a0_0x1306ae.lineWidth = 1;
    a0_0x1306ae.textAlign = "center";
    a0_0x1306ae.textBaseline = "middle";
    a0_0x1306ae.shadowOffsetX = 1;
    a0_0x1306ae.shadowOffsetY = 1;
    a0_0x1306ae.shadowColor = "black";
    a0_0x1306ae.fillText(this.screenTextMsg, a0_0x2bf7a6 / 2, _0x59a891);
    a0_0x1306ae.restore();
  }
};
var a0_0x29939f = new Array();
a0_0x1e7c5e.prototype.setStatusBarMessage = function (_0xeefd98, _0x171d2a) {
  var _0x9fdc2d = 40;
  var _0x56f6e5 = 1;
  var _0x5aa6de = "white";
  var _0x4bc154 = a0_0x2bf7a6 / 2;
  var _0x587521 = a0_0xa794f1 - a0_0xa794f1 * 0.15;
  var _0x44ae51 = a0_0x2bf7a6 / 2 - 100;
  var _0x4eb8f1 = 60;
  var _0x39414c = "black";
  var _0x42fba7 = 0.1;
  var _0x11a692 = +new Date() + _0x171d2a * 1000;
  this.msg_statusbar = {
    txt: _0xeefd98,
    txt_size: _0x9fdc2d,
    txt_alpha: _0x56f6e5,
    txt_color: _0x5aa6de,
    x: _0x4bc154,
    y: _0x587521,
    bg_w: _0x44ae51,
    bg_h: _0x4eb8f1,
    bg_color: _0x39414c,
    bg_alpha: _0x42fba7,
    dur: _0x11a692
  };
};
a0_0x1e7c5e.prototype.msg_statusbar = null;
a0_0x1e7c5e.prototype.msg_playerCount = null;
var a0_0xa8e886 = 0.1;
a0_0x1e7c5e.prototype.setPlayerCountMsg = function () {
  var _0x47ce0d = 20;
  var _0x4727ad = 1;
  var _0x4803df = "white";
  var _0x56a4a2 = a0_0x2bf7a6 / 2;
  var _0x29c010 = 30;
  var _0x5e8f2e = 100;
  var _0x26260c = 40;
  var _0x3bd25f = "black";
  var _0x32f216 = 0.1;
  var _0x2a9b46 = "";
  if (this.playerCountMsg != "alive") {
    _0x26260c = 70;
    _0x2a9b46 = this.playerCountMsg + "\n" + this.alivePlayers + " joined";
  } else {
    _0x2a9b46 = this.alivePlayers + " alive";
  }
  var _0x137f2d = +new Date() + 60000;
  this.msg_playerCount = {
    txt: _0x2a9b46,
    txt_size: _0x47ce0d,
    txt_alpha: _0x4727ad,
    txt_color: _0x4803df,
    x: _0x56a4a2,
    y: _0x29c010,
    bg_w: _0x5e8f2e,
    bg_h: _0x26260c,
    bg_color: _0x3bd25f,
    bg_alpha: _0x32f216,
    dur: _0x137f2d
  };
};
a0_0x1e7c5e.prototype.gameMode_screenMsg = function () {
  if (this.msg_statusbar) {
    this.drawMessage(this.msg_statusbar);
    if (this.msg_statusbar.dur - a0_0x24806e < 0) {
      this.msg_statusbar = null;
    }
  }
  if (this.msg_playerCount) {
    this.drawMessage(this.msg_playerCount);
  }
};
a0_0x1e7c5e.prototype.drawMessage = function (_0x1f7f4d) {
  if (_0x1f7f4d && _0x1f7f4d.txt) {
    this.drawMessageBar(_0x1f7f4d.txt, _0x1f7f4d.txt_size, _0x1f7f4d.txt_alpha, _0x1f7f4d.txt_color, _0x1f7f4d.x, _0x1f7f4d.y, _0x1f7f4d.bg_w, _0x1f7f4d.bg_h, _0x1f7f4d.bg_color, _0x1f7f4d.bg_alpha, _0x1f7f4d.dur);
  }
};
a0_0x1e7c5e.prototype.drawMessageBar = function (_0x80c145, _0x2f59f3, _0xd89d64, _0x2604cb, _0x3269cd, _0x1715dd, _0x4840ba, _0x2e43c2, _0x33cf14, _0x4ffea7, _0x3dfec5) {
  var _0x46ab87 = 1;
  {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x4ffea7;
    a0_0x1306ae.fillStyle = _0x33cf14;
    _0x2f59f3 = _0x2f59f3 * a0_0x2c02fa;
    a0_0x1306ae.font = _0x2f59f3 + "px Arial";
    var _0x319f0c = _0x3269cd;
    var _0x20a360 = _0x1715dd;
    var _0xa64665 = _0x80c145.split("\n");
    var _0x19c549 = _0x2f59f3 * _0xa64665.length * 1.5 * a0_0x2c02fa;
    var _0x1989e7 = 0;
    for (var _0x140d40 = 0; _0x140d40 < _0xa64665.length; ++_0x140d40) {
      _0x1989e7 = Math.max(_0x1989e7, a0_0x1306ae.measureText(_0xa64665[_0x140d40]).width);
    }
    _0x1989e7 = _0x1989e7 * 1.5 * a0_0x2c02fa;
    a0_0x1306ae.fillRect(_0x319f0c - _0x1989e7 / 2, _0x20a360 - _0x19c549 / 2, _0x1989e7, _0x19c549);
    a0_0x1306ae.globalAlpha = _0xd89d64;
    a0_0x1306ae.fillStyle = _0x2604cb;
    a0_0x1306ae.lineWidth = 1;
    a0_0x1306ae.textAlign = "center";
    a0_0x1306ae.textBaseline = "middle";
    a0_0x1306ae.shadowOffsetX = 1;
    a0_0x1306ae.shadowOffsetY = 1;
    a0_0x1306ae.shadowColor = "black";
    if (_0xa64665.length > 1) {
      _0x20a360 -= a0_0x2c02fa * 10;
    } else {
      _0x20a360 += a0_0x2c02fa * 5;
    }
    for (var _0x140d40 = 0; _0x140d40 < _0xa64665.length; _0x140d40++) {
      a0_0x1306ae.fillText(_0xa64665[_0x140d40], _0x319f0c, _0x20a360);
      _0x20a360 += _0x2f59f3 * (_0x140d40 + 1);
    }
    a0_0x1306ae.restore();
  }
};
function a0_0x1e7c5e(_0x2aea46) {
  this.mode = a0_0x2e7356;
  this.chatAllowed = true;
  this.createInterfaceButtons();
}
window.BattleRoyale = a0_0x1e7c5e;
function a0_0x299cc9(_0x167f97) {
  this.options = _0x167f97;
  this.radius = _0x167f97.radius;
  this.pad = _0x167f97.pad;
  this.canvas = _0x167f97.canvas;
  this._ctx = this.canvas.getContext("2d");
  this.colors = _0x167f97.colors;
  this.radius = Math.min(this.canvas.width / 2, this.canvas.height / 2);
  this.draw = function () {
    var _0xf14193 = 0;
    var _0x1f4e65 = 0;
    this._ctx.save();
    this._ctx.globalAlpha = 0.3;
    this.drawCircle(this.canvas.width / 2 - this.pad / 2, this.canvas.height / 2 - this.pad / 2, this.radius - this.pad, "white");
    this._ctx.restore();
    for (var _0x366b87 in this.options.data) {
      var _0x2fb0fe = this.options.data[_0x366b87];
      _0xf14193 += _0x2fb0fe;
    }
    var _0x1e5ebd = 0;
    for (_0x366b87 in this.options.data) {
      this._ctx.save();
      this._ctx.lineWidth = 4;
      this._ctx.strokeStyle = "white";
      this._ctx.globalAlpha = 0.3;
      var _0xb3e159 = 0;
      if (a0_0x4da0d1 == _0x366b87) {
        this._ctx.globalAlpha = 0.6;
        _0xb3e159 = 8;
      }
      _0x2fb0fe = this.options.data[_0x366b87];
      var _0x4e7862 = Math.PI * 2 * _0x2fb0fe / _0xf14193;
      this.drawPieSlice(this.canvas.width / 2 - this.pad / 2, this.canvas.height / 2 - this.pad / 2, this.radius - this.pad, _0x1e5ebd, _0x1e5ebd + _0x4e7862, this.colors[_0x366b87], _0xb3e159);
      this._ctx.restore();
      _0x1e5ebd += _0x4e7862;
      _0x1f4e65++;
    }
  };
  this.drawPieSlice = function (_0x3d6ff9, _0x464316, _0x10dbfe, _0x6de41e, _0x2ce788, _0x314a2e, _0x1aa404) {
    this._ctx.fillStyle = _0x314a2e;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x3d6ff9, _0x464316);
    this._ctx.arc(_0x3d6ff9, _0x464316, _0x10dbfe + _0x1aa404, _0x6de41e, _0x2ce788);
    this._ctx.closePath();
    this._ctx.fill();
    if (_0x1aa404 > 0) {
      this._ctx.stroke();
    }
  };
  this.drawCircle = function (_0x52c185, _0x1c9325, _0x5bc0c4, _0x5119d0) {
    this._ctx.fillStyle = _0x5119d0;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x52c185, _0x1c9325);
    this._ctx.arc(_0x52c185, _0x1c9325, _0x5bc0c4, 0, Math.PI * 2);
    this._ctx.closePath();
    this._ctx.fill();
  };
}
var a0_0x28626c = a0_0x46e67b;
a0_0xdca9e5.prototype = Object.create(a0_0x28626c.prototype);
a0_0xdca9e5.prototype.constructor = a0_0xdca9e5;
a0_0xdca9e5.superClass = a0_0x28626c;
a0_0xdca9e5.prototype.safeArea = null;
a0_0xdca9e5.prototype.teamColors = {
  0: "#cccccc",
  1: "#ffff00",
  2: "#01effc",
  3: "#bb00ff"
};
function a0_0xdca9e5() {
  this.mode = a0_0x5a32c9;
  this.createInterfaceButtons();
}
a0_0xdca9e5.prototype.wastedPopups = [];
a0_0xdca9e5.prototype.playerDisplayNum = 0;
a0_0xdca9e5.prototype.eventText = null;
a0_0xdca9e5.prototype.setServerPlayerCount = function () {
  switch (this.playerDisplayNum) {
    case 1:
    case 2:
      a0_0x595a8f.setText("On Server: " + a0_0x4b4fe7(a0_0x10e94d) + " playing " + nPlayersUnique + " unqiue");
      this.playerDisplayNum++;
      break;
    case 3:
    case 4:
      a0_0x595a8f.setText("Modes Total: " + gamemodes_alive + " playing, " + gamemodes_unique + " unique");
      this.playerDisplayNum++;
      break;
    case 5:
      var _0x1ab84d = gamemodes_unique / a0_0x70cda0 * 100;
      a0_0x595a8f.setText("Milestone 2: " + a0_0x4b4fe7(_0x1ab84d.toFixed(2)) + "% (" + gamemodes_unique + " of " + a0_0x70cda0 + ")");
      this.playerDisplayNum++;
      break;
    case 6:
      this.playerDisplayNum = 0;
      break;
    default:
      a0_0x595a8f.setText(a0_0x4b4fe7(a0_0x70cda0) + " across Mope!");
      this.playerDisplayNum++;
      break;
  }
  if (a0_0x2ad00) {
    a0_0x2ad00.setPlayersCount(a0_0x70cda0);
  }
};
const a0_0x29ea84 = 1;
const a0_0x5abd35 = 2;
const a0_0x45de21 = 3;
const a0_0x415e04 = 4;
const a0_0x206784 = 5;
const a0_0x23355e = 6;
const a0_0x511c25 = 7;
a0_0xdca9e5.prototype.socketMessages = function (_0x498539) {
  var _0xcd9d2f = _0x498539.readUInt8();
  switch (_0xcd9d2f) {
    case a0_0x29ea84:
      {
        let _0x50fbc9 = _0x498539.readUInt8();
        let _0x281fe5 = _0x498539.readString();
        _0x281fe5 = "Nice, your team has unlocked '" + _0x281fe5 + "' buff.";
        this.showBuffMessage("success", _0x281fe5, _0x50fbc9, 6);
        break;
      }
    case a0_0x5abd35:
      {
        let _0x5044c0 = _0x498539.readUInt8();
        let _0x3211bd = _0x498539.readString();
        _0x3211bd = "Oh no, '" + _0x3211bd + "' buff has been compromised!";
        this.showBuffMessage("error", _0x3211bd, _0x5044c0, 6);
        if (this.isApocalypseInprogress) {}
        break;
      }
    case a0_0x45de21:
      {
        console.log("APOCALYPSE_STARTED");
        this.apocalypseType = _0x498539.readString();
        this.triggeredByTeamID = _0x498539.readUInt8();
        this.apocalypseStatus = _0x498539.readString();
        this.timeLeft = _0x498539.readUInt16() / 100;
        break;
      }
    case a0_0x415e04:
      {
        console.log("APOCALYPSE_ENDED");
        this.apocalypseType = null;
        this.triggeredByTeamID = 0;
        this.apocalypseStatus = null;
        this.timeLeft = 0;
        a0_0x53eb81("Apocalypse is over. Now, you can go anywhere freely!", "success", 6);
        break;
      }
    case a0_0x206784:
      {
        this.isApocalypseInprogress = _0x498539.readUInt8() == 1;
        if (this.isApocalypseInprogress) {
          this.apocalypseType = _0x498539.readString();
          this.triggeredByTeamID = _0x498539.readUInt8();
          this.apocalypseStatus = _0x498539.readString();
          this.timeLeft = _0x498539.readUInt16() / 100;
        }
        break;
      }
    case a0_0x23355e:
      {
        this.team1 = _0x498539.readUInt16();
        this.team2 = _0x498539.readUInt16();
        this.team3 = _0x498539.readUInt16();
        this.updatePieChart({
          1: this.team1,
          2: this.team2,
          3: this.team3
        });
        this.drawPieLeaderboard();
        break;
      }
    case a0_0x511c25:
      {
        let _0x2f7b6e = _0x498539.readUInt8();
        this.capturedStones = [];
        for (var _0x1fc32c = 0; _0x1fc32c < _0x2f7b6e; _0x1fc32c++) {
          this.capturedStones.push({
            stoneBuffID: _0x498539.readUInt8(),
            hp: _0x498539.readUInt8() / 100
          });
        }
        break;
      }
  }
};
a0_0xdca9e5.prototype.getStoneBuffIcon = function (_0x5aaec3) {
  switch (_0x5aaec3) {
    case 1:
      return "/assets/s/2/gameobj/78/incentive/1.png";
    case 2:
      return "/assets/s/2/gameobj/78/incentive/2.png";
    case 3:
      return "/assets/s/2/gameobj/78/incentive/3.png";
    case 4:
      return "/assets/s/2/gameobj/78/incentive/4.png";
    case 5:
      return "/assets/s/2/gameobj/78/incentive/5.png";
    case 6:
      return "/assets/s/2/gameobj/78/incentive/6.png";
    case 7:
      return "/assets/s/2/gameobj/78/incentive/7.png";
    case 8:
      return "/assets/s/2/gameobj/78/incentive/8.png";
    case 9:
      return "/assets/s/2/gameobj/78/incentive/9.png";
    case 10:
      return "/assets/s/2/gameobj/78/incentive/10.png";
    case 11:
      return "/assets/s/2/gameobj/78/incentive/11.png";
    case 12:
      return "/assets/s/2/gameobj/78/incentive/12.png";
    case 13:
      return "/assets/s/2/gameobj/78/incentive/13.png";
  }
};
a0_0xdca9e5.prototype.showBuffMessage = function (_0x576fa9, _0x2c9194, _0x3ec1ca, _0x21b91e) {
  a0_0x38c242();
  var _0x12d83b = document.getElementsByTagName("body")[0];
  if (_0x12d83b) {
    let _0x3290ed = document.getElementById("gameAreaWrapper");
    let _0x5e26ca = a0_0x1cfe71("mopeshop-popup");
    let _0x32c758 = this.getStoneBuffIcon(_0x3ec1ca);
    let _0x5cb82c = a0_0x1cfe71("mopeshop-popup-icon", "");
    _0x5cb82c.innerHTML = "<img src='" + _0x32c758 + "'/>";
    let _0x18d4fc = a0_0x1cfe71("msg", _0x576fa9);
    let _0x38e54c = a0_0x1cfe71("text");
    _0x38e54c.innerHTML = _0x2c9194;
    let _0x127fcc = a0_0x1cfe71("closeMsg", "");
    _0x127fcc.onclick = function () {
      a0_0x38c242();
    };
    _0x18d4fc.appendChild(_0x5cb82c);
    _0x18d4fc.appendChild(_0x127fcc);
    _0x18d4fc.appendChild(_0x38e54c);
    _0x5e26ca.appendChild(_0x18d4fc);
    _0x12d83b.insertBefore(_0x5e26ca, _0x3290ed);
    if (_0x21b91e !== undefined && _0x21b91e > 0) {
      setTimeout(a0_0x38c242, _0x21b91e * 1000);
    }
  }
};
a0_0xdca9e5.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0x17b807) {
    return;
  }
  if (a0_0x371a9b) {
    if (this.pieChartCanvas != null) {
      if (this.pieChartCanvas.width) {
        a0_0x1306ae.drawImage(this.pieChartCanvas, 0, 0, this.pieChartCanvas.width, this.pieChartCanvas.height);
      }
    }
  }
  this.drawInterfaceButtons();
};
a0_0xdca9e5.prototype.drawMap = function () {
  if (a0_0x371a9b) {
    if (a0_0x59c93b) {
      return;
    }
    this.drawPieLeaderboard();
    this.drawTeamPlayers();
    if (a0_0x2ad00) {
      a0_0x2ad00.drawMap();
    }
    this.onApocalypseUpdated();
  }
};
a0_0xdca9e5.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  if (this.interfaceButtons) {
    for (var _0x12bb87 = 0; _0x12bb87 < this.interfaceButtons.length; _0x12bb87++) {
      var _0x5237d1 = this.interfaceButtons[_0x12bb87];
      _0x5237d1.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0xdca9e5.prototype.onInit = function () {};
a0_0xdca9e5.prototype.playercount = 0;
a0_0xdca9e5.prototype.setPlayerCount = function (_0x203daa) {
  this.playercount = _0x203daa;
};
a0_0xdca9e5.prototype.showPlayerCount = function () {
  a0_0x1306ae.save();
  var _0x2ffc88 = a0_0x2bf7a6 / 2;
  var _0x3b2cd6 = a0_0x2c02fa * 50;
  var _0x1fd9f9 = a0_0x2c02fa * 300;
  a0_0x1306ae.globalAlpha = 0.35;
  a0_0x1306ae.fillStyle = "black";
  var _0x3374ef = a0_0x2c02fa * 30;
  a0_0x1306ae.fillRect(_0x2ffc88 - _0x1fd9f9 / 2, _0x3374ef, _0x1fd9f9, _0x3b2cd6);
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = "white";
  a0_0x1306ae.font = a0_0x2c02fa * 30 + "px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  a0_0x1306ae.shadowOffsetX = 1;
  a0_0x1306ae.shadowOffsetY = 1;
  a0_0x1306ae.shadowColor = "black";
  _0x3374ef += a0_0x2c02fa * 25;
  var _0x13a453 = " player";
  if (this.playercount > 1) {
    _0x13a453 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x13a453 += " alive!";
  } else if (this.state == a0_0x30d29a || this.state == battleRoyal_ready) {
    _0x13a453 += " joined";
  }
  a0_0x1306ae.fillText(this.playercount + _0x13a453, _0x2ffc88, _0x3374ef);
  a0_0x1306ae.restore();
};
a0_0xdca9e5.prototype.lbCanvas = null;
a0_0xdca9e5.prototype.leaderboard = function (_0x72cb6a) {};
a0_0xdca9e5.prototype.btnPlayAgain = null;
a0_0xdca9e5.prototype.showStats = true;
a0_0xdca9e5.prototype.interfaceButtons = [];
a0_0xdca9e5.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0xdca9e5.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x3efa03 = 0; _0x3efa03 < this.interfaceButtons.length; _0x3efa03++) {
      var _0x37a62a = this.interfaceButtons[_0x3efa03];
      if (_0x37a62a.isVisible) {
        _0x37a62a.draw();
      }
    }
  }
};
a0_0xdca9e5.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0xdca9e5.prototype.playerInfo = function (_0xa19a5a) {};
a0_0xdca9e5.prototype.playerWorldUpdate = function (_0x114657) {
  return;
  this.team1 = _0x114657.readUInt16();
  this.team2 = _0x114657.readUInt16();
  this.team3 = _0x114657.readUInt16();
  this.isApocalypseInprogress = _0x114657.readUInt8() == 1;
  if (this.isApocalypseInprogress) {
    this.apocalypseType = _0x114657.readString();
    this.triggeredByTeamID = _0x114657.readUInt8();
    this.apocalypseStatus = _0x114657.readString();
    this.timeLeft = _0x114657.readUInt16() / 100;
  } else {}
  let _0x286c44 = _0x114657.readUInt8();
  this.capturedStones = [];
  for (var _0x52fa8f = 0; _0x52fa8f < _0x286c44; _0x52fa8f++) {
    this.capturedStones.push({
      stoneBuffID: _0x114657.readUInt8(),
      hp: _0x114657.readUInt8() / 100
    });
  }
};
a0_0xdca9e5.prototype.onApocalypseUpdated = function () {
  if (this.isApocalypseInprogress) {
    if (this.eventText == null) {
      this.eventText = new a0_0x993fcb(20, "white");
      this.eventText.setFontSize(a0_0x2c02fa * 28);
    }
    if (this.eventText) {
      this.eventText.x = a0_0x2bf7a6 / 2;
      this.eventText.y = a0_0xa794f1 * 0.2;
      this.eventText.draw();
    }
  }
};
a0_0xdca9e5.prototype.bonusRoundTimer = null;
a0_0xdca9e5.prototype.pieChartCanvas = null;
a0_0xdca9e5.prototype.setBonusRoundTimer = function (_0x4f1390) {
  var _0x3b6488 = "" + _0x4f1390;
  if (this.bonusRoundTimer == null) {
    this.bonusRoundTimer = new a0_0x993fcb(40, "#FFFFFF");
    this.bonusRoundTimer.strokeW = 2;
    this.bonusRoundTimer.multiLine = true;
    this.bonusRoundTimer.renderScale = 5;
    this.bonusRoundTimer.setText(_0x3b6488);
  } else {
    this.bonusRoundTimer.setFontSize(40);
    this.bonusRoundTimer.setText(_0x3b6488);
  }
};
a0_0xdca9e5.prototype.drawMiniMapObjects = function (_0xd7495e) {
  if (this.teamStones) {
    for (let _0x4cb29b = 0; _0x4cb29b < this.teamStones.length; _0x4cb29b++) {
      let _0x40fa1c = this.teamStones[_0x4cb29b];
      if (_0x40fa1c) {
        _0x40fa1c.c = "black";
        _0xd7495e.drawCircle(_0x40fa1c);
      }
    }
    _0xd7495e.updateMapData();
  }
};
a0_0xdca9e5.prototype.teamStones = [];
a0_0xdca9e5.prototype.teamModePieChart = null;
a0_0xdca9e5.prototype.updatePieChart = function (_0x4929a8) {
  if (this.pieChartCanvas == null) {
    this.pieChartCanvas = document.createElement("canvas");
    this.teamModePieChart = new a0_0x299cc9({
      pad: 30,
      canvas: this.pieChartCanvas,
      colors: this.teamColors
    });
  }
  if (this.teamModePieChart) {
    this.teamModePieChart.setData(_0x4929a8);
  }
};
a0_0xdca9e5.prototype.drawPieLeaderboard = function () {
  if (this.pieChartCanvas == null) {
    return;
  }
  var _0x454d65 = this.pieChartCanvas.getContext("2d");
  var _0x5871bf = 5;
  var _0x2d6754 = 200;
  var _0xe4221b = 200;
  this.pieChartCanvas.width = _0x2d6754;
  this.pieChartCanvas.height = _0xe4221b + 20;
  this.teamModePieChart.draw();
  _0x454d65.globalAlpha = 0.2;
  var _0x20b2db = _0x5871bf;
  _0x454d65.globalAlpha = 0.5;
  _0x454d65.fillStyle = "white";
  _0x454d65.font = "20px Arial";
  var _0x20b2db = 210;
  str = a0_0xa8227f.name;
  _0x454d65.fillText(str, this.pieChartCanvas.width / 2 - _0x454d65.measureText(str).width / 2, _0x20b2db);
};
a0_0xdca9e5.prototype.inviteScreenCanvas = null;
a0_0xdca9e5.prototype.endScreenCanvas = null;
a0_0xdca9e5.prototype.endScreenDisplayed = false;
function a0_0x299cc9(_0x564b94) {
  this.options = _0x564b94;
  this.radius = _0x564b94.radius;
  this.pad = _0x564b94.pad;
  this.canvas = _0x564b94.canvas;
  this._ctx = this.canvas.getContext("2d");
  this.colors = _0x564b94.colors;
  this.radius = Math.min(this.canvas.width / 2, this.canvas.height / 2);
  this.showBg = false;
  this.setData = function (_0xc4ea88) {
    this.options.data = _0xc4ea88;
  };
  this.draw = function () {
    var _0x4b74b5 = 0;
    var _0x1ceba7 = 0;
    if (this.showBg) {
      this._ctx.save();
      this._ctx.beginPath();
      this._ctx.globalAlpha = 0.1;
      this._ctx.fillStyle = "black";
      this._ctx.rect(0, 0, this.canvas.width, this.canvas.height);
      this._ctx.fill();
      this._ctx.restore();
    }
    var _0x38edfa = this.canvas.width / 2;
    var _0x53423c = this.canvas.height / 2;
    this._ctx.save();
    this._ctx.globalAlpha = 0.3;
    this.drawCircle(_0x38edfa, _0x53423c, this.radius, "white");
    this._ctx.restore();
    for (var _0x47ab68 in this.options.data) {
      var _0x39261f = this.options.data[_0x47ab68];
      _0x4b74b5 += _0x39261f;
    }
    var _0x2dbeb2 = 0;
    for (_0x47ab68 in this.options.data) {
      this._ctx.save();
      this._ctx.lineWidth = 4;
      this._ctx.strokeStyle = "white";
      this._ctx.globalAlpha = 0.3;
      var _0x11ddcf = 0;
      if (a0_0x4da0d1 == _0x47ab68) {
        this._ctx.globalAlpha = 0.6;
        _0x11ddcf = 8;
      }
      _0x39261f = this.options.data[_0x47ab68];
      var _0x174ddf = Math.PI * 2 * _0x39261f / _0x4b74b5;
      this.drawPieSlice(_0x38edfa, _0x53423c, this.radius, _0x2dbeb2, _0x2dbeb2 + _0x174ddf, this.colors[_0x47ab68], _0x11ddcf);
      this._ctx.restore();
      _0x2dbeb2 += _0x174ddf;
      _0x1ceba7++;
    }
  };
  this.drawPieSlice = function (_0x41741c, _0x44eb79, _0xd23491, _0xbbf478, _0x49db87, _0x4fc898, _0x4dd084) {
    this._ctx.fillStyle = _0x4fc898;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x41741c, _0x44eb79);
    this._ctx.arc(_0x41741c, _0x44eb79, _0xd23491 + _0x4dd084, _0xbbf478, _0x49db87);
    this._ctx.closePath();
    this._ctx.fill();
    if (_0x4dd084 > 0) {
      this._ctx.stroke();
    }
  };
  this.drawCircle = function (_0x380e00, _0x1ce148, _0x34e199, _0x4c3a9d) {
    this._ctx.fillStyle = _0x4c3a9d;
    this._ctx.beginPath();
    this._ctx.moveTo(_0x380e00, _0x1ce148);
    this._ctx.arc(_0x380e00, _0x1ce148, _0x34e199, 0, Math.PI * 2);
    this._ctx.closePath();
    this._ctx.fill();
  };
}
a0_0xdca9e5.prototype.stonesCanvas = null;
a0_0xdca9e5.prototype.getSkinImageObj = function (_0x524132) {
  var _0x5b9d75 = "./assets/s/2/" + _0x524132;
  return a0_0x19ebc9(_0x5b9d75, function (_0x379635) {});
};
a0_0xdca9e5.prototype.playerUI = [];
a0_0xdca9e5.prototype.drawPlayerUI = function (_0x12bf6d) {};
a0_0xdca9e5.prototype.drawStoneCount = function (_0x14d48c, _0x3df8a3, _0x11a481, _0x9d828a) {
  _0x14d48c.save();
  _0x14d48c.globalAlpha = 0.5;
  let _0x123005 = "./assets/s/2/gameobj/78/stone" + _0x3df8a3 + ".png";
  let _0x5797fa = a0_0x19ebc9(_0x123005);
  if (_0x5797fa) {
    _0x14d48c.drawImage(_0x5797fa, 10, _0x9d828a, 40, 40);
    _0x9d828a += 50;
    _0x14d48c.fillStyle = "black";
    _0x14d48c.fillText(_0x11a481 + "", 60, _0x9d828a - 18);
  }
  _0x14d48c.restore();
};
a0_0xdca9e5.prototype.drawTeamPlayers = function () {
  if (this.teamPlayers) {
    var _0x369d24 = this.teamColors[a0_0x4da0d1];
    for (t = 0; t < this.teamPlayers.length; t++) {
      a0_0x2494d3(this.teamPlayers[t], _0x369d24, 1);
    }
  }
};
a0_0xdca9e5.prototype.getTeamColor = function (_0x46990f) {
  switch (_0x46990f) {
    case 1:
      return "yellow";
    case 2:
      return "cyan";
    case 3:
      return "purple";
  }
  return "gray";
};
a0_0xdca9e5.prototype.msgDisplayPumpkinsOnMiniMap = function (_0x294b73) {
  a0_0x3f0fbe = [];
  var _0x5834a6 = _0x294b73.readUInt16();
  for (var _0x20dcf2 = 0; _0x20dcf2 < _0x5834a6; _0x20dcf2++) {
    a0_0x3f0fbe.push({
      x: _0x294b73.readUInt16() / 4,
      y: _0x294b73.readUInt16() / 4,
      type: 0,
      rad: 2
    });
  }
};
a0_0xdca9e5.prototype.msgDisplayPlayersOnMiniMap = function (_0x548119) {
  a0_0x5cbbcf = [];
  var _0x4f9433 = _0x548119.readUInt16();
  for (var _0x187f01 = 0; _0x187f01 < _0x4f9433; _0x187f01++) {
    a0_0x5cbbcf.push({
      teamID: _0x548119.readUInt16(),
      x: _0x548119.readUInt32() / 100,
      y: _0x548119.readUInt32() / 100,
      rad: 3
    });
  }
};
a0_0xdca9e5.prototype.readGameRoomPropertyUpdate = function (_0x1b3204) {
  var _0x51bc3e = _0x1b3204.readUInt8();
  for (var _0x554cf3 = 0; _0x554cf3 < _0x51bc3e; _0x554cf3++) {
    var _0x204d78 = _0x1b3204.readUInt8();
    this.readUpdatedPropertyItem(_0x204d78, _0x1b3204);
  }
};
a0_0xdca9e5.prototype.readUpdatedPropertyItem = function (_0x4bd3c3, _0x27664b) {
  if (_0x4bd3c3 == a0_0x3b7488) {
    console.log("TEAMMODE_APOCALYPSE_STARTED");
    this.isApocalypseInprogress = _0x27664b.readUInt8() == 1;
  } else if (_0x4bd3c3 == a0_0x3be0f1) {
    console.log("TEAMMODE_APOCALYPSE_ENDED");
    this.isApocalypseInprogress = _0x27664b.readUInt8() == 1;
  } else if (_0x4bd3c3 == a0_0x4a56da) {
    console.log("TEAMMODE_APOCALYPSE_TIME_LEFT");
    let _0x3ecda1 = _0x27664b.readUInt16();
  }
};
window.TeamMode = a0_0xdca9e5;
var a0_0x28626c = a0_0x46e67b;
a0_0x2e5ec2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2e5ec2.prototype.constructor = a0_0x2e5ec2;
a0_0x2e5ec2.superClass = a0_0x28626c;
a0_0x2e5ec2.prototype.safeArea = null;
function a0_0x2e5ec2(_0x787e01) {
  this.mode = _0x787e01;
  this.stamp = +new Date();
  this.chatAllowed = true;
  this.createInterfaceButtons();
}
a0_0x2e5ec2.prototype.wastedPopups = [];
a0_0x2e5ec2.prototype.playerDisplayNum = 0;
a0_0x2e5ec2.prototype.setServerPlayerCount = function () {
  a0_0x595a8f.setText(a0_0x4b4fe7(a0_0x70cda0) + " online");
  if (a0_0x2ad00) {
    a0_0x2ad00.setPlayersCount(a0_0x70cda0);
  }
  this.playerDisplayNum = this.playerDisplayNum == 0 ? 1 : 0;
};
a0_0x2e5ec2.prototype.interface = function () {
  if (this.state == -1 || this.mode != a0_0x17b807) {
    return;
  }
  if (a0_0x371a9b) {
    for (var _0x5be16c = this.wastedPopups.length - 1; _0x5be16c >= 0; _0x5be16c--) {
      var _0x1ed6b2 = this.wastedPopups[_0x5be16c];
      _0x1ed6b2.draw();
      if (_0x1ed6b2.timedOut) {
        this.wastedPopups.splice(_0x5be16c, 1);
      }
    }
  }
  if (this.endScreenCanvas != null) {
    if (this.endScreenCanvas.width) {
      a0_0x1306ae.drawImage(this.endScreenCanvas, a0_0x2bf7a6 / 2 - this.endScreenCanvas.width / 2, a0_0x2b523d * 15, this.endScreenCanvas.width, this.endScreenCanvas.height);
    }
    if (!a0_0x371a9b || isGhost) {
      a0_0x5307a8(true);
    }
  }
  this.drawInterfaceButtons();
};
a0_0x2e5ec2.prototype.interfaceReset = function () {
  this.endScreenCanvas = null;
  this.dangerCircleMiniMapCanvas = null;
  this.wastedPopups = [];
  this.lastWastedPopupT = 0;
  this.playercount = 0;
  this.safeArea = null;
  if (this.interfaceButtons) {
    for (var _0x3bef9c = 0; _0x3bef9c < this.interfaceButtons.length; _0x3bef9c++) {
      var _0x164c1a = this.interfaceButtons[_0x3bef9c];
      _0x164c1a.onInterfaceReset();
    }
  }
  this.interfaceButtons = [];
};
a0_0x2e5ec2.prototype.onInit = function () {};
a0_0x2e5ec2.prototype.playercount = 0;
a0_0x2e5ec2.prototype.setPlayerCount = function (_0x399392) {
  this.playercount = _0x399392;
};
a0_0x2e5ec2.prototype.showPlayerCount = function () {
  a0_0x1306ae.save();
  var _0x4e9a57 = a0_0x2bf7a6 / 2;
  var _0x4eea76 = a0_0x2c02fa * 50;
  var _0x31dc21 = a0_0x2c02fa * 300;
  a0_0x1306ae.globalAlpha = 0.35;
  a0_0x1306ae.fillStyle = "black";
  var _0x4210a3 = a0_0x2c02fa * 30;
  a0_0x1306ae.fillRect(_0x4e9a57 - _0x31dc21 / 2, _0x4210a3, _0x31dc21, _0x4eea76);
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = "white";
  a0_0x1306ae.font = a0_0x2c02fa * 30 + "px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  a0_0x1306ae.shadowOffsetX = 1;
  a0_0x1306ae.shadowOffsetY = 1;
  a0_0x1306ae.shadowColor = "black";
  _0x4210a3 += a0_0x2c02fa * 25;
  var _0x220757 = " player";
  if (this.playercount > 1) {
    _0x220757 += "s";
  }
  if (this.state == battleRoyal_inProgress) {
    _0x220757 += " alive!";
  } else if (this.state == a0_0x30d29a || this.state == battleRoyal_ready) {
    _0x220757 += " joined";
  }
  a0_0x1306ae.fillText(this.playercount + _0x220757, _0x4e9a57, _0x4210a3);
  a0_0x1306ae.restore();
};
a0_0x2e5ec2.prototype.lbCanvas = null;
a0_0x2e5ec2.prototype.leaderboard = function (_0x1879ce) {
  if (this.lbCanvas == null) {
    this.lbCanvas = document.createElement("canvas");
  }
  if (_0x1879ce) {
    var _0x20724e = this.lbCanvas.getContext("2d");
    var _0x192cb5 = 55;
    var _0x48724d = 22;
    _0x192cb5 = _0x192cb5 + _0x48724d * _0x1879ce.length;
    this.lbCanvas.width = 270;
    this.lbCanvas.height = _0x192cb5;
    _0x20724e.globalAlpha = 0.2;
    _0x20724e.fillStyle = "#000000";
    _0x20724e.fillRect(0, 0, this.lbCanvas.width, this.lbCanvas.height);
    _0x20724e.globalAlpha = 1;
    _0x20724e.fillStyle = "#FFFFFF";
    var _0x5625fe = a0_0xa8227f.name;
    _0x20724e.font = "24px Arial";
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      _0x20724e.shadowOffsetX = 1;
      _0x20724e.shadowOffsetY = 1;
    }
    _0x20724e.shadowColor = "black";
    _0x20724e.fillText(_0x5625fe, this.lbCanvas.width / 2 - _0x20724e.measureText(_0x5625fe).width / 2, 40);
    var _0x41268e;
    _0x20724e.textAlign = "left";
    _0x20724e.font = "17px Arial";
    _0x41268e = 0;
    for (; _0x41268e < _0x1879ce.length; ++_0x41268e) {
      _0x5625fe = a0_0x17133c ? "" : _0x1879ce[_0x41268e].name || "mope.io";
      _0x5625fe += " (" + a0_0x1e543a(_0x1879ce[_0x41268e].xp) + ")";
      _0x20724e.fillStyle = "#FFFFFF";
      _0x20724e.fillText(_0x5625fe, 15, 65 + _0x48724d * _0x41268e);
    }
  }
};
a0_0x2e5ec2.prototype.drawLeaderboard = function () {
  if (a0_0x371a9b) {
    if (!a0_0x19ab74) {
      if (a0_0x10e951) {
        if (a0_0x10e951.width) {
          a0_0x1306ae.drawImage(a0_0x10e951, a0_0x2b523d * 10, a0_0x2b523d * 10, a0_0x10e951.width * a0_0x2c02fa, a0_0x10e951.height * a0_0x2c02fa);
        }
      }
    }
  }
};
a0_0x2e5ec2.prototype.btnPlayAgain = null;
a0_0x2e5ec2.prototype.showStats = true;
a0_0x2e5ec2.prototype.interfaceButtons = [];
a0_0x2e5ec2.prototype.createInterfaceButtons = function () {
  this.interfaceButtons = [];
};
a0_0x2e5ec2.prototype.drawInterfaceButtons = function () {
  if (this.interfaceButtons) {
    for (var _0x4eff77 = 0; _0x4eff77 < this.interfaceButtons.length; _0x4eff77++) {
      var _0x4c141c = this.interfaceButtons[_0x4eff77];
      if (_0x4c141c.isVisible) {
        _0x4c141c.draw();
      }
    }
  }
};
a0_0x2e5ec2.prototype.onResize = function () {
  this.drawInterfaceButtons();
};
a0_0x2e5ec2.prototype.readPlayerStats = function (_0x377fad) {
  var _0x150d17 = [];
  _0x150d17.rank = _0x377fad.readUInt16();
  _0x150d17.timeAlive = _0x377fad.readUInt16();
  _0x150d17.totalKills = _0x377fad.readUInt16();
  _0x150d17.topRank = _0x377fad.readUInt16();
  _0x150d17.maxXP = _0x377fad.readUInt32();
  _0x150d17.killedBy = _0x377fad.readString();
  return _0x150d17;
};
a0_0x2e5ec2.prototype.playerInfo = function (_0x1636d8) {
  if (isGhost && !a0_0x31e3ca) {
    var _0x1d21d6 = this.readPlayerStats(_0x1636d8);
    this.buildEndScreenHTML(_0x1d21d6);
  } else if (!isGhost) {
    this.endScreenCanvas = null;
  }
};
a0_0x2e5ec2.prototype.playerWorldUpdate = function (_0x59b0fb) {};
a0_0x2e5ec2.prototype.worldUpdate = function (_0x4effb4) {};
a0_0x2e5ec2.prototype.drawMap = function () {
  if (a0_0x371a9b) {
    if (a0_0x59c93b) {
      return;
    }
    if (a0_0x2ad00) {
      a0_0x2ad00.drawMap();
    }
    this.drawLeaderboard();
  }
};
a0_0x2e5ec2.prototype.pieChartCanvas = null;
a0_0x2e5ec2.prototype.teamColors = {
  0: "white",
  1: "#B6CF40"
};
a0_0x2e5ec2.prototype.endScreenDisplayed = false;
a0_0x2e5ec2.prototype.buildEndScreenHTML = function (_0x3f7097) {
  if (this.endScreenDisplayed) {
    return;
  }
  this.endScreenDisplayed = true;
  var _0x403565 = "";
  _0x403565 += "<div class='msg'>YOU WERE #" + _0x3f7097.rank + "</div>";
  _0x403565 += "<div class='row'>";
  _0x403565 += "<div class='label'>Killed by:</div>";
  _0x403565 += "<div class='value2'>" + _0x3f7097.killedBy + "</div>";
  _0x403565 += "</div>";
  _0x403565 += "<div class='row'>";
  _0x403565 += "<div class='col1'>";
  _0x403565 += "<div class='label'>Time alive:</div>";
  _0x403565 += "<div class='value'>" + a0_0x48a798(_0x3f7097.timeAlive) + "</div>";
  _0x403565 += "</div>";
  _0x403565 += "<div class='col2'>";
  _0x403565 += "<div class='label'>Total kills:</div>";
  _0x403565 += "<div class='value'>" + _0x3f7097.totalKills + "</div>";
  _0x403565 += "</div>";
  _0x403565 += "</div>";
  _0x403565 += "<div class='row'>";
  _0x403565 += "<div class='col1'>";
  _0x403565 += "<div class='label'>Top rank:</div>";
  _0x403565 += "<div class='value'>" + _0x3f7097.topRank + "</div>";
  _0x403565 += "</div>";
  _0x403565 += "<div class='col2'>";
  _0x403565 += "<div class='label'>Max xp:</div>";
  _0x403565 += "<div class='value'>" + a0_0x1e543a(_0x3f7097.maxXP) + "</div>";
  _0x403565 += "</div>";
  _0x403565 += "</div>";
  _0x403565 += "<div style='clear:both;'></div>";
  _0x403565 += "<div class='btnDiv'>";
  _0x403565 += "<button id='btnMopeOptions' class='btn'>      CONTINUE      </button>";
  _0x403565 += "</div>";
  _0x403565 += "<div style='clear:both;'></div>";
  var _0x3f8a2a = document.getElementById("endScreen");
  if (_0x3f8a2a) {
    _0x3f8a2a.innerHTML = _0x403565;
    _0x3f8a2a.style.display = "block";
  }
  if (!a0_0x371a9b || isGhost) {
    a0_0x203acc();
  }
};
a0_0x2e5ec2.prototype.endScreenCanvas = null;
a0_0x2e5ec2.prototype.buildEndScreen = function (_0xd4185a, _0x2a108d) {
  if (this.endScreenCanvas == null) {
    this.endScreenCanvas = document.createElement("canvas");
  }
  if (this.endScreenCanvas == null) {
    return;
  }
  var _0x423cc7 = this.endScreenCanvas.getContext("2d");
  var _0x537e35 = 55;
  var _0x3ac868 = 40;
  var _0x1d3c09 = 5;
  var _0x4f9801 = 240;
  var _0x26fddb = 420;
  _0x537e35 = _0x4f9801 + _0x1d3c09 * 2;
  this.endScreenCanvas.width = _0x26fddb + _0x1d3c09 * 2;
  this.endScreenCanvas.height = _0x537e35;
  _0x423cc7.globalAlpha = 0.2;
  _0x423cc7.fillStyle = "#000000";
  _0x423cc7.fillRect(0, 0, this.endScreenCanvas.width, this.endScreenCanvas.height);
  _0x423cc7.fillStyle = "#000000";
  _0x423cc7.fillRect(_0x1d3c09, _0x1d3c09, this.endScreenCanvas.width - _0x1d3c09 * 2, this.endScreenCanvas.height - _0x1d3c09 * 2);
  var _0x4d47b4 = _0x1d3c09;
  _0x423cc7.globalAlpha = 1;
  _0x423cc7.fillStyle = "#FFFFFF";
  _0x423cc7.font = "30px Arial";
  _0x4d47b4 += 55;
  var _0x3a16dc = "Final Stats";
  _0x423cc7.font = "30px Arial";
  _0x423cc7.fillText(_0x3a16dc, this.endScreenCanvas.width / 2 - _0x423cc7.measureText(_0x3a16dc).width / 2, _0x4d47b4);
  _0x423cc7.font = "20px Arial";
  _0x4d47b4 += 45;
  _0x3a16dc = "You were #" + _0x2a108d.rank;
  _0x423cc7.fillText(_0x3a16dc, this.endScreenCanvas.width / 2 - _0x423cc7.measureText(_0x3a16dc).width / 2, _0x4d47b4);
  _0x4d47b4 += 40;
  var _0x3c7134 = a0_0x48a798(_0x2a108d.timeAlive);
  var _0x6cbfac = _0x1d3c09 + 15;
  a0_0x4743f7(_0x423cc7, "Killed by", _0x2a108d.killedBy, _0x6cbfac, _0x4d47b4);
  _0x4d47b4 += 40;
  a0_0x4743f7(_0x423cc7, "Time Alive", a0_0x48a798(_0x2a108d.timeAlive), _0x6cbfac, _0x4d47b4);
  _0x6cbfac += 210;
  a0_0x4743f7(_0x423cc7, "Total Kills", _0x2a108d.totalKills, _0x6cbfac, _0x4d47b4);
  _0x4d47b4 += 40;
  _0x6cbfac = _0x1d3c09 + 15;
  a0_0x4743f7(_0x423cc7, "Top rank", _0x2a108d.topRank, _0x6cbfac, _0x4d47b4);
  _0x6cbfac += 210;
  a0_0x4743f7(_0x423cc7, "Max XP", a0_0x1e543a(_0x2a108d.maxXP), _0x6cbfac, _0x4d47b4);
  _0x4d47b4 += 50;
};
a0_0x2e5ec2.prototype.lastWastedPopupT = 0;
a0_0x2e5ec2.prototype.onPlayerWasted = function (_0xe5fd68) {
  if ((a0_0x24806e - this.lastWastedPopupT) / 1000 > 0.7) {
    this.lastWastedPopupT = a0_0x24806e;
    var _0x5e549b = new a0_0x3c1415(_0xe5fd68 + " wasted!", 40, "red", 1500);
    this.wastedPopups.push(_0x5e549b);
  }
};
a0_0x2e5ec2.prototype.lastWastedPopupT = 0;
a0_0x2e5ec2.prototype.msgDisplayPumpkinsOnMiniMap = function (_0x1b0c65) {
  a0_0x3f0fbe = [];
  var _0x2f80a9 = _0x1b0c65.readUInt16();
  for (var _0x28b710 = 0; _0x28b710 < _0x2f80a9; _0x28b710++) {
    a0_0x3f0fbe.push({
      x: _0x1b0c65.readUInt16() / 4,
      y: _0x1b0c65.readUInt16() / 4,
      type: 0,
      rad: 2
    });
  }
};
a0_0x2e5ec2.prototype.msgDisplayPlayersOnMiniMap = function (_0x24b03e) {
  a0_0x5cbbcf = [];
  var _0x31bd21 = _0x24b03e.readUInt16();
  for (var _0x14af80 = 0; _0x14af80 < _0x31bd21; _0x14af80++) {
    a0_0x5cbbcf.push({
      id: _0x24b03e.readUInt32(),
      x: _0x24b03e.readUInt32() / 100,
      y: _0x24b03e.readUInt32() / 100,
      rad: 3
    });
  }
};
window.WildMope = a0_0x2e5ec2;
const a0_0x4413b5 = {
  [a0_0x41cceb]: 1,
  [a0_0x621981]: 2,
  [a0_0x31a123]: 4,
  [a0_0x368012]: 6,
  [a0_0x2d5af4]: 5,
  [a0_0x391884]: 3,
  [a0_0x5ce3eb]: 7,
  [a0_0x2c2f52]: 11,
  [a0_0x2a0a8a]: 9,
  [a0_0x1458da]: 10,
  [a0_0x13971c]: 11,
  [a0_0x5812ad]: 12,
  [a0_0x50d9f7]: 13,
  [a0_0x59b763]: 15,
  [a0_0x306fa0]: 1,
  [a0_0x1d6a29]: 2,
  [a0_0x200e1e]: 3,
  [a0_0x384a46]: 5,
  [a0_0x59f431]: 12,
  [a0_0x4441e0]: 8,
  [a0_0x4a4da1]: 7,
  [a0_0x187484]: 4,
  [a0_0xbd6036]: 6,
  [a0_0x17dc35]: 15,
  [a0_0x2b355b]: 9,
  [a0_0x594c30]: 13,
  [a0_0x182226]: 10,
  [a0_0x1efea6]: 9,
  [a0_0x2f54ae]: 11,
  [a0_0x5f1ae8]: 10,
  [a0_0x303108]: 2,
  [a0_0x1c04bf]: 15,
  [a0_0x1e02a7]: 1,
  [a0_0x4f00b9]: 7,
  [a0_0xb8200c]: 3,
  [a0_0x56a2ab]: 11,
  [a0_0x8a2dda]: 4,
  [a0_0x4b16c6]: 9,
  [a0_0x525e00]: 8,
  [a0_0x17ec36]: 5,
  [a0_0x90abb]: 6,
  [a0_0x58b076]: 12,
  [a0_0x5d0d4b]: 14,
  [a0_0x55a097]: 7,
  [a0_0x332990]: 17,
  [a0_0x4f58e6]: 13,
  [a0_0x54926b]: 14,
  [a0_0x3b5853]: 14,
  [a0_0x22a451]: 8,
  [a0_0x357359]: 14,
  [a0_0x45db7b]: 15,
  [a0_0x33f8d6]: 10,
  [a0_0x56479a]: 8,
  [a0_0x487fb5]: 15,
  [a0_0x5c6ee3]: 13,
  [a0_0x23c69e]: 11,
  [a0_0xff40c0]: 8,
  [a0_0x1e1209]: 15,
  [a0_0x5aaf14]: 16,
  [a0_0x53b0d7]: 16,
  [a0_0xadcba8]: 16,
  [a0_0x77ab87]: 16,
  [a0_0x14b677]: 2,
  [a0_0x5aa20b]: 9,
  [a0_0x2f2687]: 5,
  [a0_0x52a8a7]: 14,
  [a0_0x1b8d24]: 3,
  [a0_0x4444cb]: 4,
  [a0_0x3889a8]: 6,
  [a0_0x5a237f]: 1,
  [a0_0x4dbc97]: 2,
  [a0_0x67458]: 3,
  [a0_0xee8954]: 5,
  [a0_0x1e1e1f]: 8,
  [a0_0x35d611]: 7,
  [a0_0x299d82]: 10,
  [a0_0x38e019]: 9,
  [a0_0x1ad6bd]: 11,
  [a0_0x273412]: 12,
  [a0_0x5650e3]: 13,
  [a0_0x3a4899]: 16,
  [a0_0x407000]: 15,
  [a0_0x4db8c8]: 10,
  [a0_0x533584]: 14,
  [a0_0x5d0b67]: 17,
  [a0_0x18f3b8]: 12,
  [a_birdMonster]: 16,
  [a0_0x52bfa4]: 13,
  [a0_0xd29085]: 12,
  [a0_0x35d037]: 6,
  [a0_0x36faeb]: 1,
  [a0_0x2c361c]: 10,
  [a0_0x16e6c0]: 7,
  [a0_0x4d1599]: 4,
  [a0_0x3950f4]: 6,
  [a0_0x3edbb5]: 8,
  [a0_0x58d479]: 4,
  [a0_0x2ea98a]: 9
};
var a0_0x24f77f = null;
const a0_0xb25d6e = ["skin", "animal", "deal", "feature"];
function a0_0x132a9e() {
  if (a0_0x5092e6) {
    a0_0x5092e6.onLogon();
  }
}
function a0_0x3e0a5d() {
  var _0x3dc0c3 = document.getElementById("shop");
  if (_0x3dc0c3) {
    _0x3dc0c3.parentNode.removeChild(_0x3dc0c3);
    a0_0x495742();
  }
  a0_0x4b1017();
  var _0x115a7b = document.getElementById("shopbutton2");
  if (_0x115a7b) {
    _0x115a7b.disabled = false;
  }
  var _0x324628 = document.getElementById("shopbutton3");
  if (_0x324628) {
    _0x324628.disabled = false;
  }
  a0_0x5092e6.removeBlockOverlay();
  if (a0_0x24f77f) {
    a0_0x24f77f.style.display = "none";
  }
}
function a0_0x4b1017() {
  const _0x4b735d = a0_0x5cc57b.prototype.changedWardrobeItems;
  const _0xbe819e = Object.keys(a0_0x5cc57b.prototype.wardrobeItems);
  const _0x31b28b = [];
  for (let _0x5890f8 = 0; _0x5890f8 < _0xbe819e.length; _0x5890f8++) {
    const _0x314ec0 = _0xbe819e[_0x5890f8];
    const _0x278dc3 = a0_0x5cc57b.prototype.wardrobeItems[_0x314ec0].equippedSkin;
    const _0x3e9d58 = _0x4b735d[_0x314ec0];
    if (_0x3e9d58 === undefined) {
      continue;
    }
    if (_0x3e9d58 != _0x278dc3) {
      _0x31b28b.push({
        id: _0x314ec0,
        changedSkin: _0x3e9d58
      });
    }
  }
  a0_0x5cc57b.prototype.changedWardrobeItems = {};
  if (_0x31b28b.length <= 0) {
    return;
  }
  a0_0x1121cc(_0x31b28b, (_0x418692, _0x9f1321) => {
    if (!_0x418692) {
      a0_0x53eb81("AccountServer: Wardrobe: " + _0x9f1321, "error", 10000);
    }
  });
}
function a0_0x1cd733() {
  a0_0x3e0a5d();
  a0_0x5092e6.load();
  a0_0x495742();
}
function a0_0x52dbd1() {
  var _0x1af058 = document.getElementById("shop_div");
  if (_0x1af058) {
    let _0x168f26 = 638;
    let _0x5a868f = 345;
    var _0x597ca1 = 0.9;
    var _0x1b598c = Math.min(1, Math.min(a0_0x83edee * _0x597ca1, _0x168f26) / _0x168f26);
    var _0x2cf54a = Math.min(1, Math.min(a0_0x339877 * _0x597ca1, _0x5a868f) / _0x5a868f);
    var _0x107f38 = Math.min(_0x1b598c, _0x2cf54a);
    _0x1af058.style.transform = "scale(" + _0x107f38 + ")";
    var _0x495298 = Math.min(0, a0_0x83edee / 2 - _0x168f26 / 2) / _0x597ca1;
    _0x1af058.style.marginLeft = _0x495298 != 0 ? _0x495298 + "px" : "auto";
  }
}
function a0_0x53eb81(_0x1ad355, _0x4861ee, _0x10070e) {
  a0_0x38c242();
  var _0x5c4fc8 = document.getElementsByTagName("body")[0];
  if (_0x5c4fc8) {
    var _0x24771d = document.getElementById("gameAreaWrapper");
    var _0xc2bf80 = a0_0x1cfe71("mopeshop-popup");
    var _0x56438e = a0_0x1cfe71("msg", _0x4861ee);
    var _0x39f024 = a0_0x1cfe71("text");
    _0x39f024.innerHTML = _0x1ad355;
    var _0x52be82 = a0_0x1cfe71("closeMsg", "");
    _0x52be82.innerHTML = "X";
    _0x52be82.onclick = function () {
      a0_0x38c242();
    };
    _0x56438e.appendChild(_0x52be82);
    _0x56438e.appendChild(_0x39f024);
    _0xc2bf80.appendChild(_0x56438e);
    _0x5c4fc8.insertBefore(_0xc2bf80, _0x24771d);
    if (_0x10070e !== undefined && _0x10070e > 0) {
      setTimeout(a0_0x38c242, _0x10070e * 1000);
    }
  }
}
function a0_0x38c242() {
  var _0x41d1da = document.getElementById("mopeshop-popup");
  if (_0x41d1da) {
    _0x41d1da.parentNode.removeChild(_0x41d1da);
  }
}
function a0_0x1cfe71(_0x13c1ac, _0x3d54ab) {
  var _0x247e32 = a0_0x2c643f("div", _0x13c1ac, _0x3d54ab);
  return _0x247e32;
}
function a0_0x5e8dc9(_0x4751ea, _0x33fcce, _0x194c3a) {
  var _0x1a095e = a0_0x2c643f("div", _0x4751ea, _0x33fcce);
  _0x1a095e.innerHTML = _0x194c3a;
  return _0x1a095e;
}
function a0_0x2c643f(_0x52941a, _0x47a6f6, _0x1aecda) {
  if (_0x52941a == undefined) {
    return null;
  }
  var _0x36af66 = document.createElement(_0x52941a);
  if (_0x47a6f6 != undefined) {
    _0x36af66.id = _0x47a6f6;
  }
  if (_0x1aecda != undefined) {
    _0x36af66.className = _0x1aecda;
  }
  return _0x36af66;
}
function a0_0x34555e() {
  var _0x4a6cb3 = a0_0x40aaf.coins;
  if (_0x4a6cb3 > -1) {
    if (("" + _0x4a6cb3).length > 10) {
      return ("" + _0x4a6cb3).substring(0, 4) + " PI.COINS";
    }
    return _0x4a6cb3;
  } else {
    return "LOGIN";
  }
}
function a0_0x5863e5() {
  return a0_0x40aaf.coins > -1;
}
function a0_0x325183(_0x2767f2) {
  if (_0x2767f2 && a0_0x5092e6) {
    a0_0x5092e6.load(_0x2767f2);
  } else {
    a0_0x3e0a5d();
    a0_0x5092e6 = new a0_0x5cc57b();
    a0_0x5092e6.load();
  }
}
var a0_0x294e35 = {
  customClassesForOType: {},
  setCustomClassForShopItem: function (_0xb190f3, _0x435b59, _0x94e77a) {
    if (!this.customClassesForOType[_0x435b59]) {
      this.customClassesForOType[_0x435b59] = {
        oTypeMainClass: null,
        secondaryTypeClasses: {}
      };
    }
    var _0x44c7ec = this.customClassesForOType[_0x435b59];
    if (_0x94e77a == null) {
      if (_0x44c7ec.oTypeMainClass != null) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class (" + this.customClassesForOType[_0x435b59] + ") is already set for oType " + _0x435b59 + "! Check for duplicate calls!");
      }
      _0x44c7ec.oTypeMainClass = _0xb190f3;
    } else {
      if (_0x94e77a in _0x44c7ec.secondaryTypeClasses) {
        console.log("ERROR 'GameObjType.setCustomClassForGameObjType': a class is already set for oType " + _0x435b59 + " AND secondaryType (eg. animalType) " + _0x94e77a + "! Check for duplicate calls!");
      }
      _0x44c7ec.secondaryTypeClasses[_0x94e77a] = _0xb190f3;
    }
    this.onClassSet(_0xb190f3, _0x435b59, _0x94e77a);
  },
  getClassForGameObjType: function (_0x3d6dc7, _0xa9da0e) {
    if (_0x3d6dc7 in this.customClassesForOType) {
      var _0x3b7290 = this.customClassesForOType[_0x3d6dc7];
      if (_0xa9da0e == null || _0xa9da0e == 0) {
        return _0x3b7290.oTypeMainClass;
      } else if (_0xa9da0e in _0x3b7290.secondaryTypeClasses) {
        return _0x3b7290.secondaryTypeClasses[_0xa9da0e];
      } else {
        return _0x3b7290.oTypeMainClass;
      }
    } else {
      return a0_0x2ae1e5;
    }
  },
  newlyVis_createGameObjFromMsg: function (_0x1037b2, _0x1af2c9) {
    var _0x4caf2d = _0x1af2c9.oType;
    var _0x347620 = null;
    if (_0x4caf2d == a0_0x24738f) {
      _0x347620 = _0x1af2c9.animalType;
    }
    var _0x349abf = a0_0x294e35.createGameObjOfOType(_0x4caf2d, _0x347620);
    _0x349abf.itemType = _0x1037b2;
    _0x349abf.worldUpd_readMsgNewlyVisible(_0x1af2c9, _0x4caf2d, _0x347620);
    return _0x349abf;
  },
  createGameObjOfOType: function (_0x4d502a, _0x53b2c2) {
    var _0x56df31 = this.getClassForGameObjType(_0x4d502a, _0x53b2c2);
    var _0x5d47fc = new _0x56df31(_0x4d502a, _0x53b2c2);
    return _0x5d47fc;
  },
  onClassSet: function (_0x5284bc) {}
};
a0_0x2ae1e5.prototype = {
  id: 0,
  oType: 0,
  itemType: null
};
function a0_0x2ae1e5(_0x42c80b) {
  this.oType = _0x42c80b;
}
a0_0x2ae1e5.prototype.setObjTypes = function (_0x1f7b66, _0x414645) {
  this.oType = _0x1f7b66;
};
a0_0x2ae1e5.prototype.loadShopData = function (_0x26018f) {
  this.data = _0x26018f;
  this.id = _0x26018f.id;
  this.itemType = _0x26018f.itemType;
  this.price = _0x26018f.price;
  this.onAfterLoad();
};
a0_0x2ae1e5.prototype.onAfterLoad = function () {
  this.btn = new a0_0x4b5558(this);
};
a0_0x2ae1e5.prototype.worldUpd_readMsgNewlyVisible = function (_0x2bce8e, _0x2bcf3e, _0x5a46b8) {
  this.setObjTypes(_0x2bcf3e, _0x5a46b8);
  this.loadShopData(_0x2bce8e);
};
a0_0x2ae1e5.prototype.getImage = function () {
  return null;
};
a0_0x2ae1e5.prototype.generateHtml = function () {};
window.ShopItem = a0_0x2ae1e5;
a0_0x4b5558.prototype = {
  itemID: 0,
  shopItem: null
};
function a0_0x4b5558(_0x57b16f) {
  this.shopItem = _0x57b16f;
}
a0_0x4b5558.prototype.generateHtml = function (_0x33b2a7) {
  var _0x331ce5 = a0_0x2c643f("div", "btn_" + this.shopItem.id, "buybutton");
  if (this.shopItem.price >= 0) {
    var _0x31da11 = new Image();
    _0x31da11.className = "buycoin-img";
    _0x31da11.src = "shop/mopecoin.png";
    _0x31da11.loading = "lazy";
    var _0x3ad86b = a0_0x2c643f("span", "", "buycoin-price");
    var _0x1c015d = this.shopItem.price == 0 ? "FREE" : this.shopItem.price;
    if (this.shopItem.saleType == 2) {
      _0x1c015d = this.shopItem.salePrice;
    }
    _0x3ad86b.innerHTML = _0x1c015d;
    _0x331ce5.appendChild(_0x31da11);
    _0x331ce5.appendChild(_0x3ad86b);
    var _0x24976e = this;
    if (_0x33b2a7 == undefined || _0x33b2a7 == a0_0x1f4908) {
      _0x331ce5.onclick = function () {
        _0x24976e.onClick();
      };
    }
  } else {
    _0x331ce5.innerHTML = "OWNED";
  }
  switch (this.shopItem.data.itemType) {
    case 0:
      _0x331ce5.setAttribute("title", "Click to buy " + this.shopItem.data.skinName.replace("\n", " "));
      break;
    case 2:
      _0x331ce5.setAttribute("title", "Click to buy this deal");
      break;
  }
  return _0x331ce5;
};
a0_0x4b5558.prototype.onClick = function () {
  if (!a0_0x5863e5()) {
    a0_0x5092e6.showLoginScreen();
  } else {
    a0_0x5092e6.buyConfirmationOverlay(this.shopItem);
  }
  a0_0x595043();
};
window.BuyButton = a0_0x4b5558;
var a0_0x2b9582 = a0_0x2a7754;
var a0_0x28626c = a0_0x2ae1e5;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
function a0_0x2a7754() {
  a0_0x2a7754.superClass.call(this, 1000);
  this.oType = 1000;
  this.itemType = 1;
}
a0_0x2a7754.prototype.prefix = null;
a0_0x2a7754.prototype.bonus = 0;
a0_0x2a7754.prototype.loadShopData = function (_0x1e77e7) {
  a0_0x2a7754.superClass.prototype.loadShopData.call(this, _0x1e77e7);
  this.prefix = _0x1e77e7.prefix;
  this.bonus = _0x1e77e7.bonus;
  this.value = _0x1e77e7.value;
  this.onAfterLoad();
};
a0_0x2a7754.prototype.worldUpd_readMsgNewlyVisible = function (_0x1489d5, _0x5bf62c, _0x4adbc0) {
  this.loadShopData(_0x1489d5);
};
a0_0x2a7754.prototype.generateHtml = function () {
  var _0x475d4a = a0_0x2c643f("div", "", "coin-row");
  var _0x2fb862 = a0_0x2c643f("div", "", "coin-prefix");
  var _0x9ca3e3 = a0_0x2c643f("div", "", "coin-value");
  var _0x314085 = a0_0x2c643f("div", "", "coin-plus");
  var _0x1dc57d = a0_0x2c643f("div", "", "coin-bonus");
  var _0x3ac80a = a0_0x2c643f("div", "", "coin-equ");
  var _0x3effc3 = a0_0x2c643f("div", "", "coin-total");
  var _0x34e218 = a0_0x2c643f("div", "", "coin-dollars");
  var _0xb6302f = a0_0x2c643f("div", "", "coin-buy");
  var _0x82b795 = a0_0x2c643f("div", "", "coin-img");
  var _0x5743ed = a0_0x2c643f("div", "", "coin-img");
  var _0x165d54 = new Image();
  var _0x10a2f7 = new Image();
  _0x165d54.src = "shop/mopecoin.png";
  _0x10a2f7.src = "shop/mopecoin.png";
  _0x82b795.appendChild(_0x165d54);
  _0x5743ed.appendChild(_0x10a2f7);
  _0x2fb862.innerHTML = "&nbsp;" + this.prefix;
  if (this.prefix != "") {
    _0x2fb862.className = _0x2fb862.className + " popular";
  } else {
    _0x1dc57d.className = _0x1dc57d.className + " nopopular";
  }
  _0x9ca3e3.innerHTML = "&nbsp;" + this.value;
  _0x314085.innerHTML = "+";
  _0x1dc57d.innerHTML = "&nbsp;" + this.bonus + "%";
  _0x3ac80a.innerHTML = "=";
  _0xb6302f.innerHTML = "BUY";
  _0x3effc3.innerHTML = "&nbsp;" + Number(this.value) * (Number(this.bonus + 100) / 100);
  _0x34e218.innerHTML = "$" + this.price;
  _0x475d4a.appendChild(_0x2fb862);
  _0x475d4a.appendChild(_0x82b795);
  _0x475d4a.appendChild(_0x9ca3e3);
  _0x475d4a.appendChild(_0x314085);
  _0x475d4a.appendChild(_0x1dc57d);
  _0x475d4a.appendChild(_0x3ac80a);
  _0x475d4a.appendChild(_0x5743ed);
  _0x475d4a.appendChild(_0x3effc3);
  _0x475d4a.appendChild(_0x34e218);
  _0x475d4a.appendChild(_0xb6302f);
  return _0x475d4a;
};
a0_0x294e35.setCustomClassForShopItem(a0_0x2a7754, 1000);
window.MopeCoin = a0_0x2a7754;
var a0_0x2b9582 = a0_0x4c4f06;
var a0_0x28626c = a0_0x2ae1e5;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
function a0_0x4c4f06(_0x534940, _0x43783e) {
  a0_0x4c4f06.superClass.call(this, a0_0x24738f);
  this.animalType = _0x43783e;
  this.setBiome(this.animalType);
}
a0_0x4c4f06.prototype.setBiome = function (_0x4ea992) {
  switch (_0x4ea992) {
    case a0_0x77ab87:
    case a0_0x59b763:
    case a0_0x45db7b:
    case a0_0x357359:
    case a0_0x52a8a7:
    case a0_0x54926b:
    case a0_0x50d9f7:
    case a0_0x52bfa4:
    case a0_0x5c6ee3:
      this.biome = a0_0x506ba5;
      break;
    case a0_0x5aaf14:
    case a0_0x487fb5:
    case a0_0x17dc35:
    case a0_0x3b5853:
    case a0_0x594c30:
      this.biome = a0_0x5986dd;
      break;
    case a0_0xadcba8:
    case a0_0x1c04bf:
    case a0_0x5d0d4b:
    case a0_0x4f58e6:
      this.biome = a0_0x46c6b6;
      break;
    case a0_0x5d0b67:
    case a0_0x332990:
    case a0_0x53b0d7:
    case a0_0x1e1209:
      this.biome = a0_0x2f1e00;
      break;
    case a0_0x3a4899:
    case a0_0x407000:
    case a0_0x533584:
    case a0_0x5650e3:
      this.biome = a0_0x44697a;
      break;
    default:
      break;
  }
};
a0_0x4c4f06.prototype.loadShopData = function (_0x4dc3cc) {
  a0_0x4c4f06.superClass.prototype.loadShopData.call(this, _0x4dc3cc);
  this.animalSpecies = _0x4dc3cc.animalSpecies;
  this.shopImg = "shop/" + _0x4dc3cc.shopImg;
  this.skinImage = _0x4dc3cc.skinImage;
  this.skinName = _0x4dc3cc.skinName;
  this.saleType = _0x4dc3cc.saleType;
  this.salePrice = _0x4dc3cc.salePrice;
};
a0_0x4c4f06.prototype.setObjTypes = function (_0x1d1586, _0x2b687b) {
  this.animalType = _0x2b687b;
};
a0_0x4c4f06.prototype.getAnimalName = function () {
  switch (this.animalType) {
    case a0_0x621981:
      return "rabbit";
    case a0_0x31a123:
      return "pig";
    case a0_0x368012:
      return "fox";
    case a0_0x2d5af4:
      return "deer";
    case a0_0x391884:
      return "mole";
    case a0_0x5ce3eb:
      return "zebra";
    case a0_0x2c2f52:
      return "lion";
    case a0_0x2a0a8a:
      return "bigcat";
    case a0_0x1458da:
      return "bear";
    case a0_0x13971c:
      return "croc";
    case a0_0x5812ad:
      return "rhino";
    case a0_0x50d9f7:
      return "hippo";
    case a0_0x59b763:
      return "dragon";
    case a0_0x306fa0:
      return "shrimp";
    case a0_0x1d6a29:
      return "trout";
    case a0_0x200e1e:
      return "crab";
    case a0_0x384a46:
      return "squid";
    case a0_0x59f431:
      return "shark";
    case a0_0x4441e0:
      return "stingray";
    case a0_0x4a4da1:
      return "turtle";
    case a0_0x187484:
      return "seahorse";
    case a0_0xbd6036:
      return "jellyfish";
    case a0_0x17dc35:
      return "kraken";
    case a0_0x2b355b:
      return "pufferfish";
    case a0_0x594c30:
      return "killerwhale";
    case a0_0x182226:
      return "swordfish";
    case a0_0x1efea6:
      return "gorilla";
    case a0_0x2f54ae:
      return "octopus";
    case a0_0x5f1ae8:
      return "wolf";
    case a0_0x303108:
      return "arctichare";
    case a0_0x1c04bf:
      return "yeti";
    case a0_0x1e02a7:
      return "chipmunk";
    case a0_0x4f00b9:
      return "muskox";
    case a0_0xb8200c:
      return "penguin";
    case a0_0x56a2ab:
      return "polarbear";
    case a0_0x8a2dda:
      return "seal";
    case a0_0x4b16c6:
      return "snowleopard";
    case a0_0x525e00:
      return "walrus";
    case a0_0x17ec36:
      return "reindeer";
    case a0_0x90abb:
      return "arcticfox";
    case a0_0x58b076:
      return "wolverine";
    case a0_0x5d0d4b:
      return "mammoth";
    case a0_0x55a097:
      return "donkey";
    case a0_0x120a91:
      return "snail";
    case a0_0x332990:
      return "blackdragon";
    case a0_0x4f58e6:
      return "sabertoothtiger";
    case a0_0x54926b:
      return "elephant";
    case a0_0x3b5853:
      return "bluewhale";
    case a0_0x22a451:
      return "cobra";
    case a0_0x52bfa4:
      return "boaconstrictor";
    case a0_0x357359:
      return "giantspider";
    case a0_0x45db7b:
      return "trex";
    case a0_0x33f8d6:
      return "tiger";
    case a0_0x56479a:
      return "giraffe";
    case a0_0xd29085:
      return "eagle";
    case a0_0x35d037:
      return "hedgehog";
    case a0_0x31c0a8:
      return "duck";
    case a0_0x18e2b3:
      return "duckling";
    case a0_0x36faeb:
      return "lemming";
    case a0_0x487fb5:
      return "kingcrab";
    case a0_0x40fe0d:
      return "frog";
    case a0_0x5c6ee3:
      return "ostrich";
    case a0_0x2c361c:
      return "pelican";
    case a0_0x23c69e:
      return "falcon";
    case a0_0xff40c0:
      return "snowyowl";
    case a0_0x5ed01e:
      return "honeybee";
    case a0_0x1e1209:
      return "phoenix";
    case a0_0x20f7bd:
      return "ostrichbaby";
    case a0_0x5aaf14:
      return "seamonster";
    case a0_0x53b0d7:
      return "landmonster";
    case a0_0xadcba8:
      return "icemonster";
    case a0_0x77ab87:
      return "dinomonster";
    case a0_0x14b677:
      return "pigeon";
    case a0_0x5aa20b:
      return "toucan";
    case a0_0x16e6c0:
      return "macaw";
    case a0_0x2f2687:
      return "flamingo";
    case a0_0x52a8a7:
      return "cassowary";
    case a0_0x1b8d24:
      return "chicken";
    case a0_0x4444cb:
      return "woodpecker";
    case a0_0x3889a8:
      return "peacock";
    case a0_0x5a237f:
      return "kangaroorat";
    case a0_0x4dbc97:
      return "desertchipmunk";
    case a0_0x67458:
      return "meerkat";
    case a0_0xee8954:
      return "gazelle";
    case a0_0x4d1599:
      return "armadillo";
    case a0_0x3950f4:
      return "fennecfox";
    case a0_0x1e1e1f:
      return "camel";
    case a0_0x35d611:
      return "warthog";
    case a0_0x299d82:
      return "hyena";
    case a0_0x38e019:
      return "rattlesnake";
    case a0_0x1ad6bd:
      return "vulture";
    case a0_0x273412:
      return "bison";
    case a0_0x5650e3:
      return "komododragon";
    case a0_0x3a4899:
      return "giantscorpion";
    case a0_0x407000:
      return "pterodactyl";
    case a0_0x4db8c8:
      return "gobibear";
    case a0_0x533584:
      return "blackwidow";
    case a0_0x30f1d2:
      return "bulletant";
    case a0_0x18f3b8:
      return "markhor";
  }
};
a0_0x4c4f06.prototype.getSkinPath = function (_0x222dc4) {
  var _0x61259d = this.animalSpecies > 0 ? this.animalSpecies : "";
  var _0x2fcff7 = a0_0x5092e6.ifMultiAssetSkin(this.animalType, this.skinImage);
  var _0x913a04 = this.skinImage == undefined ? this.shopImg : "skins/" + _0x2fcff7;
  if (_0x222dc4) {
    _0x913a04 += _0x222dc4;
  }
  return _0x913a04 + ".png";
};
a0_0x4c4f06.prototype.getImage = function () {
  const _0x48cf03 = "assets/s/" + this.data.season + "/" + this.getSkinPath();
  if (a0_0x37f4fc[_0x48cf03]) {
    return a0_0x37f4fc[_0x48cf03];
  }
  var _0x21c568 = new Image();
  _0x21c568.className = "animalSkin_" + this.animalType;
  _0x21c568.src = _0x48cf03;
  _0x21c568.loading = "lazy";
  a0_0x37f4fc[_0x48cf03] = _0x21c568;
  return _0x21c568;
};
a0_0x4c4f06.prototype.getImagePromo = function (_0x34ae15) {
  const _0x4c26fe = "assets/s/" + this.data.season + "/" + this.getSkinPath(_0x34ae15);
  if (a0_0x37f4fc[_0x4c26fe]) {
    return a0_0x37f4fc[_0x4c26fe];
  }
  var _0x5c9186 = new Image();
  _0x5c9186.className = "animalSkin_" + this.animalType;
  _0x5c9186.src = _0x4c26fe;
  _0x5c9186.loading = "lazy";
  a0_0x37f4fc[_0x4c26fe] = _0x5c9186;
  return _0x5c9186;
};
a0_0x4c4f06.prototype.getSkinName = function () {
  var _0x17d084 = this.skinName;
  return _0x17d084.replace("\n", "<br>");
};
a0_0x4c4f06.prototype.generateHtml = function (_0x438947) {
  var _0x3854e9 = "item skin " + (this.price == -1 ? " itemOwned" : " buyItem") + " aniItem_" + this.animalType;
  if (_0x438947 == a0_0x1440fc) {
    _0x3854e9 = _0x3854e9 + " confirm_item";
  }
  var _0x2dccb0 = a0_0x1cfe71("", _0x3854e9);
  var _0x583050 = a0_0x1cfe71("", "image biome_" + this.biome);
  var _0xaceec = a0_0x1cfe71("", "price");
  _0x583050.setAttribute("title", this.getSkinName().replace("<br>", " "));
  _0xaceec.innerHTML = this.getSkinName();
  var _0x26907a = this.getImage();
  _0x583050.appendChild(_0x26907a);
  if (this.price > 0) {
    var _0x295d12 = "";
    if (this.saleType == 1) {
      _0x295d12 = "NEW";
    } else if (this.saleType == 2) {
      _0x295d12 = "SALE";
    }
    if (this.salePrice != this.price && this.saleType > 0) {
      _0x295d12 += " -" + Math.floor((1 - this.salePrice / this.price) * 100) + "%";
    }
    if (_0x295d12 != "") {
      var _0x505c68 = a0_0x1cfe71("newItem_" + this.animalType, "newItem");
      _0x505c68.innerHTML = _0x295d12;
      _0x2dccb0.appendChild(_0x505c68);
    }
  }
  if (this.data.tier !== undefined) {
    var _0x276184 = a0_0x1cfe71("tier", "tier");
    _0x276184.innerHTML = "T" + this.data.tier;
    _0x276184.title = "Animal Tier: " + this.data.tier;
    _0x583050.appendChild(_0x276184);
  }
  if (a0_0x5092e6.showSeason) {
    if (this.data.season !== undefined) {
      var _0x2855ea = a0_0x1cfe71("season", "season");
      _0x2855ea.innerHTML = "S" + this.data.season;
      _0x2855ea.title = "Released in Mopeio Season " + this.data.season;
      _0x583050.appendChild(_0x2855ea);
    }
  }
  _0x2dccb0.appendChild(_0x583050);
  _0x2dccb0.appendChild(_0xaceec);
  if (this.price >= 0) {
    _0x2dccb0.appendChild(this.btn.generateHtml(_0x438947));
  } else if (_0x438947 != a0_0x8f1fe) {
    var _0x1c9093 = this;
  }
  return _0x2dccb0;
};
window.AnimalSkin = a0_0x4c4f06;
a0_0x294e35.setCustomClassForShopItem(a0_0x4c4f06, a0_0x24738f);
function a0_0x5cc57b() {
  if (a0_0x5863e5()) {
    var _0x5584c6 = document.getElementById("divButtons");
    _0x5584c6.style.display = "none";
  }
  console.log("@@@@ Mopeio Shop: v 1.0 b @@@@");
  var _0x265858 = document.getElementById("shopbutton2");
  var _0x2c9539 = document.getElementById("shopbutton3");
  var _0x5ad754 = document.getElementById("btnLogin");
  var _0x4d73a7 = document.getElementById("btnLogout2");
  _0x5ad754.onclick = function () {
    a0_0x385575("login");
  };
  _0x4d73a7.onclick = function () {
    a0_0x28328a();
  };
  _0x265858.onclick = function () {
    this.disabled = true;
    a0_0x385575();
  };
  _0x2c9539.onclick = function () {
    this.disabled = true;
    a0_0x385575();
  };
  var _0x20e6b6 = document.getElementById("onconnectDiv");
  if (_0x20e6b6) {}
}
a0_0x5cc57b.prototype.items = [];
a0_0x5cc57b.prototype.datatab = [];
a0_0x5cc57b.prototype.showSeason = true;
a0_0x5cc57b.prototype.getPackageInfo = function (_0x53a5c3) {};
a0_0x5cc57b.prototype.itemIdToItem = {};
a0_0x5cc57b.prototype.purchasedItems = [];
a0_0x5cc57b.prototype.changedWardrobeItems = {};
a0_0x5cc57b.prototype.load = function (_0x4442e8) {
  var _0xffa2a7 = this;
  if (a0_0x2d3651) {
    var _0x54b2b5 = document.getElementById("divButtons");
    _0x54b2b5.style.display = "none";
  }
  var _0x52b80a = {
    shopItems: [],
    settings: []
  };
  a0_0x56aacd(function (_0x35aa3a, _0x5ad03b) {
    if (!_0x35aa3a) {
      a0_0x53eb81("Could not connect to AccountServer!", "itemDoesntExist", 5);
      var _0x28a263 = document.getElementById("shopOverlay");
      if (_0x28a263) {
        _0x28a263.parentNode.removeChild(_0x28a263);
      }
      return;
    }
    if (_0x5ad03b) {
      for (var _0xc121a6 = 0; _0xc121a6 < _0x5ad03b.items.length; _0xc121a6++) {
        var _0x56c475 = _0x5ad03b.items[_0xc121a6];
        _0x52b80a.shopItems.push(_0x56c475);
      }
      if (_0x5ad03b.settings) {
        for (var _0xc121a6 = 0; _0xc121a6 < _0x5ad03b.settings.length; _0xc121a6++) {
          _0x52b80a.settings.push(_0x5ad03b.settings[_0xc121a6]);
        }
      }
    }
    var _0x45d230 = {
      tab: "Skins",
      shopItems: []
    };
    var _0x2e43a6 = {
      tab: "Golden",
      shopItems: []
    };
    var _0x4727af = {
      tab: "Locked",
      shopItems: []
    };
    var _0x482bab = {
      tab: "Halloween",
      shopItems: []
    };
    var _0x1d5fcf = {
      tab: "Deals",
      shopItems: []
    };
    var _0x230677 = {
      tab: "Features",
      shopItems: []
    };
    var _0x5616d6 = [];
    var _0x181175 = [_0x45d230, _0x230677, _0x1d5fcf];
    for (_0xc121a6 = 0; _0xc121a6 < _0x52b80a.shopItems.length; _0xc121a6++) {
      var _0x31372b = _0x52b80a.shopItems[_0xc121a6];
      switch (_0x31372b.shopCategory) {
        case 0:
          {
            var _0x11343e = a0_0x23180b({
              animalType: _0x31372b.animalType,
              animalSpecies: _0x31372b.animalSpecies,
              animalSubSpecies: _0x31372b.animalSubSpecies,
              mopeSeasonID: _0x31372b.season
            });
            if (_0x11343e) {
              _0x31372b.id = _0x31372b.itemId;
              _0x31372b.oType = a0_0x24738f;
              _0x31372b.skinName = _0x11343e.aniName || _0x31372b.itemId;
              _0x31372b.skinImage = _0x11343e.skinName + ".ui";
              _0x45d230.shopItems.push(_0x31372b);
            } else {
              console.log("No animal type data for shop item " + _0x31372b.itemId);
            }
          }
          break;
        case 1:
          {
            if (_0x31372b.itemType == 1) {
              var _0x11343e = a0_0x23180b({
                animalType: _0x31372b.animalType,
                animalSpecies: _0x31372b.animalSpecies,
                animalSubSpecies: _0x31372b.animalSubSpecies,
                mopeSeasonID: _0x31372b.season
              });
              if (_0x11343e) {
                _0x31372b.id = _0x31372b.itemId;
                _0x31372b.oType = a0_0x24738f;
                _0x31372b.skinName = _0x11343e.aniName || _0x31372b.itemId;
                _0x31372b.skinImage = _0x11343e.skinName + ".ui";
                _0x45d230.shopItems.push(_0x31372b);
              } else {
                console.log("No animal type data for shop item " + _0x31372b.itemId);
              }
            } else if (_0x31372b.itemType == 3) {
              _0x31372b.id = _0x31372b.itemId;
              _0x31372b.oType = a0_0x192bfe;
              _0x230677.shopItems.push(_0x31372b);
            }
          }
          break;
        case 2:
          {
            _0x31372b.id = _0x31372b.itemId;
            _0x31372b.oType = a0_0x52dd91;
            _0x1d5fcf.shopItems.push(_0x31372b);
          }
          break;
          break;
        default:
      }
    }
    var _0x2d21e7 = {
      skins: _0x181175
    };
    a0_0x5cc57b.prototype.itemIdToItem = {};
    a0_0x5cc57b.prototype.shop = {
      ownedSkins: [],
      ownedAnimals: [],
      ownedDeals: [],
      ownedProps: [],
      settings: [],
      skins: [],
      props: [],
      banners: _0x52b80a.banners
    };
    var _0x58f385 = [];
    for (t = 0; t < _0x2d21e7.skins.length; t++) {
      var _0xcc8029 = _0x2d21e7.skins[t];
      for (_0xc121a6 = 0; _0xc121a6 < _0xcc8029.shopItems.length; _0xc121a6++) {
        var _0x3b09db = _0xcc8029.shopItems[_0xc121a6];
        var _0x29560b = a0_0x294e35.newlyVis_createGameObjFromMsg(_0x3b09db.itemType, _0x3b09db);
        if (_0x29560b.price == -1 && _0x29560b.data.itemType == 0) {
          if (!a0_0x5cc57b.prototype.shop.ownedSkins[_0x3b09db.itemId]) {
            a0_0x5cc57b.prototype.shop.ownedSkins[_0x3b09db.itemId] = _0x29560b;
            a0_0x5cc57b.prototype.shop.ownedSkins.push(_0x29560b);
          }
        } else if (_0x29560b.price == -1 && _0x29560b.data.itemType == 1) {
          if (!a0_0x5cc57b.prototype.shop.ownedAnimals[_0x3b09db.itemId]) {
            a0_0x5cc57b.prototype.shop.ownedAnimals[_0x3b09db.itemId] = _0x29560b;
            a0_0x5cc57b.prototype.shop.ownedAnimals.push(_0x29560b);
          }
        } else if (_0x29560b.price == -1 && _0x29560b.data.itemType == 2) {
          a0_0x5cc57b.prototype.shop.ownedDeals.push(_0x29560b);
        }
        a0_0x5cc57b.prototype.itemIdToItem[_0x3b09db.itemId] = _0x3b09db;
        _0x58f385.push(_0x29560b);
      }
    }
    a0_0x5cc57b.prototype.shop.allItems = _0x58f385;
    for (d = 0; d < a0_0x5cc57b.prototype.shop.ownedDeals.length; d++) {
      var _0x5d01e5 = a0_0x5cc57b.prototype.shop.ownedDeals[d];
      for (s = 0; s < _0x58f385.length; s++) {
        var _0x3b09db = _0x58f385[s];
        if (_0x3b09db.data.promotions && _0x3b09db.data.promotions.indexOf(_0x5d01e5.itemId) > -1) {
          _0x3b09db.price = -1;
          if (!a0_0x5cc57b.prototype.shop.ownedSkins[_0x3b09db.data.itemId]) {
            a0_0x5cc57b.prototype.shop.ownedSkins.push(_0x3b09db);
          }
        }
      }
    }
    for (_0xc121a6 = 0; _0xc121a6 < a0_0x5cc57b.prototype.shop.allItems.length; _0xc121a6++) {
      a0_0x5cc57b.prototype.shop.allItems[a0_0x5cc57b.prototype.shop.allItems[_0xc121a6].data.itemId] = a0_0x5cc57b.prototype.shop.allItems[_0xc121a6];
    }
    for (t = 0; t < _0x2d21e7.skins.length; t++) {
      var _0xcc8029 = _0x2d21e7.skins[t];
      var _0x460d1c = _0xcc8029.tab;
      var _0x5576b5 = {
        name: _0x460d1c,
        items: []
      };
      a0_0x5cc57b.prototype.shop.skins.push(_0x5576b5);
      a0_0x5cc57b.prototype.shop.skins[_0x460d1c] = _0x5576b5;
      for (_0xc121a6 = 0; _0xc121a6 < _0xcc8029.shopItems.length; _0xc121a6++) {
        var _0x3b09db = _0xcc8029.shopItems[_0xc121a6];
        for (a = 0; a < _0x58f385.length; a++) {
          var _0x36e895 = _0x58f385[a];
          if (_0x3b09db.id == _0x36e895.id && _0x36e895.price > -1) {
            _0x5576b5.items.push(_0x36e895);
          }
        }
      }
    }
    if (a0_0x1c0ca2) {
      a0_0x45aefa((_0x202329, _0x2318ad) => {
        if (!_0x202329) {
          a0_0x53eb81("AccountServer: Failed to load your purchases: " + _0x2318ad, "error", 10000);
        } else {
          a0_0x5cc57b.prototype.shop.settings = _0x2318ad.settings;
          a0_0x5cc57b.prototype.purchasedItems = _0x2318ad.purchases;
          a0_0x5cc57b.prototype.wardrobeItems = _0x2318ad.wardrobe;
          a0_0x5cc57b.prototype.createPurchases();
        }
        if (_0x4442e8) {
          a0_0x5092e6.updateshop_div();
        } else {
          a0_0x5cc57b.prototype.buildInterface(false);
        }
        a0_0x5092e6.onShopLoaded();
      });
    } else {
      if (_0x4442e8) {
        a0_0x5092e6.updateshop_div();
      } else {
        a0_0x5cc57b.prototype.buildInterface(false);
      }
      a0_0x5092e6.onShopLoaded();
    }
  });
};
a0_0x5cc57b.prototype.loadData = function () {
  var _0x118844 = {
    shopItems: [],
    settings: []
  };
  a0_0x56aacd(function (_0x418bdc, _0x112478) {
    if (!_0x418bdc) {
      a0_0x53eb81("Could not connect to AccountServer!", "itemDoesntExist", 5);
      var _0x1592da = document.getElementById("shopOverlay");
      if (_0x1592da) {
        _0x1592da.parentNode.removeChild(_0x1592da);
      }
      return;
    }
    if (_0x112478) {
      for (var _0x2b2e9c = 0; _0x2b2e9c < _0x112478.items.length; _0x2b2e9c++) {
        var _0x27ffdc = _0x112478.items[_0x2b2e9c];
        _0x118844.shopItems.push(_0x27ffdc);
      }
      if (_0x112478.settings) {
        for (var _0x2b2e9c = 0; _0x2b2e9c < _0x112478.settings.length; _0x2b2e9c++) {
          _0x118844.settings.push(_0x112478.settings[_0x2b2e9c]);
        }
      }
    }
    var _0x19aa67 = {
      tab: "Skins",
      shopItems: []
    };
    var _0x4508e6 = {
      tab: "Features",
      shopItems: []
    };
    var _0x42d92b = {
      tab: "Deals",
      shopItems: []
    };
    var _0x12be64 = [_0x19aa67, _0x4508e6, _0x42d92b];
    for (_0x2b2e9c = 0; _0x2b2e9c < _0x118844.shopItems.length; _0x2b2e9c++) {
      var _0x44bd50 = _0x118844.shopItems[_0x2b2e9c];
      switch (_0x44bd50.shopCategory) {
        case 0:
          {
            var _0x3aa8d5 = a0_0x23180b({
              animalType: _0x44bd50.animalType,
              animalSpecies: _0x44bd50.animalSpecies,
              animalSubSpecies: _0x44bd50.animalSubSpecies,
              mopeSeasonID: _0x44bd50.season
            });
            if (_0x3aa8d5) {
              _0x44bd50.id = _0x44bd50.itemId;
              _0x44bd50.oType = a0_0x24738f;
              _0x44bd50.skinName = _0x3aa8d5.aniName || _0x44bd50.itemId;
              _0x44bd50.skinImage = _0x3aa8d5.skinName + ".ui";
              _0x19aa67.shopItems.push(_0x44bd50);
            } else {}
            break;
          }
        case 2:
          {
            _0x44bd50.id = _0x44bd50.itemId;
            _0x44bd50.oType = a0_0x52dd91;
            _0x42d92b.shopItems.push(_0x44bd50);
          }
          break;
          break;
        default:
      }
    }
    var _0xcf222 = {
      skins: _0x12be64
    };
    a0_0x5cc57b.prototype.itemIdToItem = {};
    a0_0x5cc57b.prototype.shop = {
      ownedSkins: [],
      ownedDeals: [],
      ownedProps: [],
      settings: [],
      skins: [],
      props: [],
      banners: _0x118844.banners
    };
    var _0xb214aa = [];
    for (t = 0; t < _0xcf222.skins.length; t++) {
      var _0x53f1dd = _0xcf222.skins[t];
      for (_0x2b2e9c = 0; _0x2b2e9c < _0x53f1dd.shopItems.length; _0x2b2e9c++) {
        var _0x257675 = _0x53f1dd.shopItems[_0x2b2e9c];
        var _0x378990 = a0_0x294e35.newlyVis_createGameObjFromMsg(_0x257675.itemType, _0x257675);
        if (_0x378990.price == -1 && _0x378990.data.itemType == 0) {
          if (!a0_0x5cc57b.prototype.shop.ownedSkins[_0x257675.itemId]) {
            a0_0x5cc57b.prototype.shop.ownedSkins[_0x257675.itemId] = _0x378990;
            a0_0x5cc57b.prototype.shop.ownedSkins.push(_0x378990);
          }
        } else if (_0x378990.price == -1 && _0x378990.data.itemType == 2) {
          a0_0x5cc57b.prototype.shop.ownedDeals.push(_0x378990);
        }
        a0_0x5cc57b.prototype.itemIdToItem[_0x257675.itemId] = _0x257675;
        _0xb214aa.push(_0x378990);
      }
    }
    a0_0x5cc57b.prototype.shop.allItems = _0xb214aa;
    for (d = 0; d < a0_0x5cc57b.prototype.shop.ownedDeals.length; d++) {
      var _0x2936aa = a0_0x5cc57b.prototype.shop.ownedDeals[d];
      for (s = 0; s < _0xb214aa.length; s++) {
        var _0x257675 = _0xb214aa[s];
        if (_0x257675.data.promotions && _0x257675.data.promotions.indexOf(_0x2936aa.itemId) > -1) {
          _0x257675.price = -1;
          if (!a0_0x5cc57b.prototype.shop.ownedSkins[_0x257675.data.itemId]) {
            a0_0x5cc57b.prototype.shop.ownedSkins.push(_0x257675);
          }
        }
      }
    }
    for (_0x2b2e9c = 0; _0x2b2e9c < a0_0x5cc57b.prototype.shop.allItems.length; _0x2b2e9c++) {
      a0_0x5cc57b.prototype.shop.allItems[a0_0x5cc57b.prototype.shop.allItems[_0x2b2e9c].data.itemId] = a0_0x5cc57b.prototype.shop.allItems[_0x2b2e9c];
    }
    for (t = 0; t < _0xcf222.skins.length; t++) {
      var _0x53f1dd = _0xcf222.skins[t];
      var _0x3c55cc = _0x53f1dd.tab;
      var _0x2112d1 = {
        name: _0x3c55cc,
        items: []
      };
      a0_0x5cc57b.prototype.shop.skins.push(_0x2112d1);
      a0_0x5cc57b.prototype.shop.skins[_0x3c55cc] = _0x2112d1;
      for (_0x2b2e9c = 0; _0x2b2e9c < _0x53f1dd.shopItems.length; _0x2b2e9c++) {
        var _0x257675 = _0x53f1dd.shopItems[_0x2b2e9c];
        for (a = 0; a < _0xb214aa.length; a++) {
          var _0x1b7814 = _0xb214aa[a];
          if (_0x257675.id == _0x1b7814.id && _0x1b7814.price > -1) {
            _0x2112d1.items.push(_0x1b7814);
          }
        }
      }
    }
    if (!a0_0x1c0ca2) {
      return;
    }
    a0_0x45aefa((_0xfcc1b2, _0x471782) => {
      if (!_0xfcc1b2) {
        a0_0x53eb81("AccountServer: Failed to load your purchases: " + _0x471782, "error", 10000);
      } else {
        a0_0x5cc57b.prototype.shop.settings = _0x471782.settings;
        a0_0x5cc57b.prototype.purchasedItems = _0x471782.purchases;
        a0_0x5cc57b.prototype.wardrobeItems = _0x471782.wardrobe;
        a0_0x5cc57b.prototype.createPurchases();
      }
    });
  });
};
a0_0x5cc57b.prototype.createPurchases = () => {
  const _0x4f7d6a = a0_0x5cc57b.prototype;
  _0x4f7d6a.shop.ownedSkins = [];
  _0x4f7d6a.shop.ownedAnimals = [];
  _0x4f7d6a.shop.ownedDeals = [];
  for (let _0x298d76 = 0; _0x298d76 < _0x4f7d6a.shop.allItems.length; _0x298d76++) {
    const _0x907d09 = _0x4f7d6a.shop.allItems[_0x298d76];
    if (_0x4f7d6a.purchasedItems.includes(_0x907d09.id)) {
      _0x907d09.price = -1;
      switch (_0x907d09.data.shopCategory) {
        case 0:
          _0x4f7d6a.shop.ownedSkins[_0x907d09.id] = _0x907d09;
          _0x4f7d6a.shop.ownedSkins.push(_0x907d09);
          break;
        case 1:
          _0x4f7d6a.shop.ownedAnimals[_0x907d09.id] = _0x907d09;
          _0x4f7d6a.shop.ownedAnimals.push(_0x907d09);
          break;
        case 2:
          _0x4f7d6a.shop.ownedDeals.push(_0x907d09);
          break;
      }
    }
  }
  if (_0x4f7d6a.purchasedItems.length > 0 && Object.values(_0x4f7d6a.wardrobeItems).every(_0x44f5f1 => !_0x44f5f1.alreadySet)) {
    a0_0x53eb81("It looks like you have skins purchased, but didn't setup them. Please navigate to the Shop and go into the Wardrobe tab to set them up!", "warn", 10);
  }
};
a0_0x5cc57b.prototype.ownedItems = new Array();
a0_0x5cc57b.prototype.setFilter = function (_0x12ca19) {
  this.item_filter = _0x12ca19;
};
a0_0x5cc57b.prototype.setFilterCat = function (_0x4ccff0) {
  this.item_filter_cat = _0x4ccff0;
};
a0_0x5cc57b.prototype.setPriceFilter = function (_0x4929a4) {
  this.item_pricefilter = _0x4929a4;
};
a0_0x5cc57b.prototype.showTab = function (_0x4e4b93) {
  if (this.tabId != this.selectedTab) {
    this.setFilter("all");
  } else {
    this.setFilter(this.item_filter);
  }
  this.textFilter = "";
  this.textFilterWardrobe = "";
  var _0x560c9f = document.getElementsByClassName("tab");
  var _0xeacd7a = document.getElementsByClassName("title");
  for (i = 0; i < _0xeacd7a.length; i++) {
    if (_0xeacd7a[i].id == "" + _0x4e4b93) {
      _0xeacd7a[i].className = "title selected";
    } else {
      _0xeacd7a[i].className = "title notselected";
    }
  }
  for (i = 0; i < _0x560c9f.length; i++) {
    if (_0x560c9f[i].id == "tab-" + _0x4e4b93) {
      _0x560c9f[i].className = "tab selected";
    } else {
      _0x560c9f[i].className = "tab notselected";
    }
  }
  this.selectedTab = _0x4e4b93;
  if (_0x4e4b93 != "MopeShop" && _0x4e4b93 != "Coins" && _0x4e4b93 != "CLOTHING") {
    this.setVisiblePage(_0x4e4b93, this.curTabPage);
  }
};
a0_0x5cc57b.prototype.shop = null;
a0_0x5cc57b.prototype.shopDiv = null;
a0_0x5cc57b.prototype.buildInterface = function (_0x449eb8) {
  var _0x2340a0 = document.getElementById("shopOverlay");
  if (_0x2340a0) {
    _0x2340a0.parentNode.removeChild(_0x2340a0);
  }
  this.shopDiv = document.createElement("div");
  this.shopDiv.id = "shop";
  this.shopDiv.className = "shop center";
  var _0x39aff9 = document.getElementsByTagName("body")[0];
  _0x39aff9.prepend(this.shopDiv);
  this.showShopButtons();
  if (this.callback) {
    this.callback();
    this.callback = null;
  }
  a0_0x52dbd1();
};
a0_0x5cc57b.prototype.wardrobeItems = {};
a0_0x5cc57b.prototype.onShopLoaded = function () {
  if (a0_0x2d3651) {
    var _0x4eeee7 = document.getElementById("divButtons");
    _0x4eeee7.style.display = "none";
    if (this.actionBtn) {
      if (this.actionBtn == "login") {
        this.showLoginScreen();
      } else if (this.actionBtn == "reg") {
        this.showLoginScreen(true);
      }
    } else if (this.upgradeMenu_callback != null) {
      this.upgradeMenu_callback();
    }
  } else {
    this.showLoginScreen();
  }
  this.actionBtn = null;
};
a0_0x5cc57b.prototype.callback = null;
a0_0x5cc57b.prototype.updateshop_div = function () {
  console.log("--- update shop_div ---");
  console.log("this.selectedTab: " + this.selectedTab);
  if (this.selectedTab == "mySettings") {
    this.showShopButtons();
    this.selectedTab = "mySettings";
    this.showTab(this.selectedTab);
  } else {
    this.buildInterface(false);
    this.skinsInterface();
    this.showTab(this.selectedTab);
  }
};
a0_0x5cc57b.prototype.removeBlockOverlay = function (_0x4eb218, _0x3f2920) {
  var _0x25632f = document.getElementById("blockOverlay");
  if (_0x25632f) {
    _0x25632f.parentNode.removeChild(_0x25632f);
  }
};
a0_0x5cc57b.prototype.blockOverlay = function (_0x3c12bb, _0x5c5197) {
  var _0x23c887 = document.getElementById("shop_div");
  if (_0x23c887) {
    var _0x1bdaae = a0_0x1cfe71("blockOverlay", "");
    var _0x3f5a82 = a0_0x1cfe71("plzwait", "");
    _0x3f5a82.innerHTML = "PLEASE WAIT...";
    _0x1bdaae.appendChild(_0x3f5a82);
    _0x23c887.prepend(_0x1bdaae);
  }
};
var a0_0x1f4908 = 0;
var a0_0x1440fc = 1;
var a0_0x8f1fe = 2;
a0_0x5cc57b.prototype.upgradeMenu_callback = null;
a0_0x5cc57b.prototype.buyConfirmationOverlay = function (_0xa41bd2, _0x9a349a) {
  var _0x48cf1c = document.getElementById("shop_div");
  if (_0x48cf1c) {
    var _0x173c8f = a0_0x1cfe71("blockOverlay", "confirmPurchase " + a0_0xb25d6e[_0xa41bd2.itemType]);
    var _0x3c3a71 = a0_0x1cfe71("purchaseItemInfo", "purchaseItemInfo");
    _0x173c8f.appendChild(_0x3c3a71);
    var _0x4fc686 = _0xa41bd2.generateHtml(a0_0x1440fc);
    _0x3c3a71.appendChild(_0x4fc686);
    var _0x54ab94 = a0_0x1cfe71("itemDetail", "itemDetail");
    _0x3c3a71.appendChild(_0x54ab94);
    if (_0xa41bd2.data.info != undefined) {
      var _0x317489 = a0_0x1cfe71("itemInfoText", "");
      _0x317489.innerHTML = _0xa41bd2.data.info;
      _0x54ab94.appendChild(_0x317489);
    }
    var _0x1e90a4 = a0_0x1cfe71("areyousure", "");
    _0x1e90a4.innerHTML = "ARE YOU SURE YOU WANT TO PURCHASE THIS ITEM?";
    _0x54ab94.appendChild(_0x1e90a4);
    if (_0xa41bd2.data.itemType == 2) {
      _0x4fc686.onmousemove = function () {
        $(".bundleSkins_" + _0xa41bd2.itemId).css("display", "block");
      };
      _0x4fc686.onmouseout = function () {
        $(".bundleSkins_" + _0xa41bd2.itemId).css("display", "none");
      };
    }
    var _0x38d757 = a0_0x2c643f("div", "btn_confirmBuy", "confirmBuybutton");
    _0x38d757.innerHTML = "CONFIRM";
    var _0x3368c9 = _0xa41bd2.id;
    _0x38d757.onclick = function () {
      a0_0x5092e6.removeBlockOverlay();
      a0_0x5092e6.blockOverlay();
      a0_0x7b0be3(_0x3368c9, function (_0x31904f, _0x440f58) {
        if (_0x31904f) {
          a0_0x53eb81("Purchase successful!", "success", 5);
          a0_0x13cb86();
          a0_0x325183();
        } else {
          a0_0x53eb81("AccountServer: " + _0x440f58, "error", 15);
        }
        a0_0x5092e6.removeBlockOverlay();
      });
    };
    _0x54ab94.appendChild(_0x38d757);
    var _0x8fdabc = a0_0x2c643f("div", "btn_cancelBuy", "cancelBuybutton");
    _0x8fdabc.innerHTML = "CANCEL";
    _0x8fdabc.onclick = function () {
      a0_0x5092e6.removeBlockOverlay();
    };
    _0x54ab94.appendChild(_0x8fdabc);
    if (_0xa41bd2.data.itemType == 2 || _0xa41bd2.data.itemType == 3) {
      _0xa41bd2.fillItemDetails(_0x54ab94);
    }
    _0x48cf1c.prepend(_0x173c8f);
  } else {
    console.log("shop div not found...");
  }
};
a0_0x5cc57b.prototype.isSkinAlreadyOwned = function () {};
a0_0x5cc57b.prototype.itemDetailsOverlay = function (_0x36c1b3, _0x439085) {
  console.log("@@@@@@@@@@@@ itemDetailsOverlay");
  var _0x2b48d3 = document.getElementById("shop_div");
  if (_0x2b48d3) {
    var _0x4547c4 = a0_0x1cfe71("blockOverlay", "confirmPurchase item-details " + a0_0xb25d6e[_0x36c1b3.shopItem.itemType]);
    var _0x45775a = a0_0x1cfe71("purchaseItemInfo", "purchaseItemInfo ");
    _0x4547c4.appendChild(_0x45775a);
    var _0x3c33a1 = _0x36c1b3.shopItem.generateHtml(_0x439085);
    _0x45775a.appendChild(_0x3c33a1);
    var _0x458236 = a0_0x1cfe71("itemDetail", "itemDetail " + _0x36c1b3.shopItem.data.itemType);
    _0x45775a.appendChild(_0x458236);
    if (_0x36c1b3.shopItem.data.itemType == 2) {
      _0x3c33a1.onmousemove = function () {
        $(".bundleSkins_" + _0x36c1b3.shopItem.itemId).css("display", "block");
      };
      _0x3c33a1.onmouseout = function () {
        $(".bundleSkins_" + _0x36c1b3.shopItem.itemId).css("display", "none");
      };
    }
    var _0x52bcae = a0_0x2c643f("div", "btn_cancelBuy", "cancelBuybutton");
    _0x52bcae.innerHTML = "CLOSE";
    _0x52bcae.onclick = function () {
      a0_0x5092e6.removeBlockOverlay();
    };
    _0x458236.appendChild(_0x52bcae);
    if (_0x36c1b3.shopItem.data.itemType == 2) {
      var _0x495009 = a0_0x1cfe71("bundleSkins", "bundleSkins_" + _0x36c1b3.shopItem.itemId);
      _0x458236.appendChild(_0x495009);
      console.log("############### dislay deal info");
      console.log(_0x36c1b3.shopItem.data);
      if (_0x36c1b3.shopItem.data.aniTypes === undefined) {
        for (i = 0; i < a0_0x5092e6.shop.allItems.length; i++) {
          var _0xf8a93f = a0_0x5092e6.shop.allItems[i];
          if (_0xf8a93f && _0xf8a93f.data.promotions && _0xf8a93f.data.promotions.toLowerCase().indexOf(_0x36c1b3.shopItem.itemId.toLowerCase()) > -1) {
            var _0x29dc8e = this.getPostFixForItem(_0x36c1b3.shopItem.itemId);
            var _0x5205aa = _0xf8a93f.getImagePromo(_0x29dc8e);
            _0x5205aa.className = "bundleSkinImg";
            _0x5205aa.width = "40px";
            _0x495009.appendChild(_0x5205aa);
          }
        }
      } else if (this.data.aniTypes) {
        for (i = 0; i < this.data.aniTypes.length; i++) {
          var _0x414469 = a0_0x5092e6.getSkinPath(this.data.aniTypes[i], this.data.theme);
          if (_0x414469 !== undefined) {
            var _0x5205aa = null;
            if (a0_0x37f4fc[_0x414469]) {
              _0x5205aa = a0_0x37f4fc[_0x414469];
            } else {
              _0x5205aa = new Image();
              _0x5205aa.src = _0x414469;
              _0x5205aa.loading = "lazy";
              _0x5205aa.className = "bundleSkinImg";
              _0x5205aa.width = "40px";
              a0_0x37f4fc[_0x414469] = _0x5205aa;
            }
            _0x495009.appendChild(_0x5205aa);
          }
        }
      }
    } else if (_0x36c1b3.shopItem.data.itemType == 0) {
      var _0x53cec1 = a0_0x1cfe71("skinInfo", "skin-info");
      _0x458236.appendChild(_0x53cec1);
      _0x53cec1.appendChild(this.createField("filed1", "value1", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x53cec1.appendChild(this.createField("filed2", "value2", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x53cec1.appendChild(this.createField("filed3", "value3", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x53cec1.appendChild(this.createField("filed4", "value4", "skin-info-field", "skin-info-label", "skin-info-value"));
      _0x53cec1.appendChild(this.createField("filed5", "value5", "skin-info-field", "skin-info-label", "skin-info-value"));
    }
    _0x2b48d3.prepend(_0x4547c4);
  }
};
a0_0x5cc57b.prototype.showLoginScreen = function (_0x3044e1) {
  var _0x23e564 = document.getElementById("shop_div");
  if (_0x23e564) {
    var _0x1000f2 = a0_0x1cfe71("blockOverlay", "confirmPurchase item-details ");
    var _0x5c63bf = a0_0x1cfe71("purchaseItemInfo", "purchaseItemInfo ");
    _0x1000f2.appendChild(_0x5c63bf);
    var _0x5bcc73 = a0_0x1cfe71("itemDetail2", "itemDetail2 ");
    _0x5c63bf.appendChild(_0x5bcc73);
    var _0x6cdce4 = a0_0x1cfe71("mobilelogininfo", "");
    _0x5bcc73.appendChild(_0x6cdce4);
    var _0x144083 = a0_0x2c643f("div", "btn_cancelBuy", "cancelBuybutton");
    _0x6cdce4.innerHTML = "LOGIN INTO YOUR ACCOUNT";
    a0_0x24f77f = document.getElementById("loginButtons");
    if (a0_0x24f77f) {
      a0_0x24f77f.style.display = "block";
    }
    _0x144083.innerHTML = "CLOSE";
    _0x144083.onclick = function () {
      a0_0x5092e6.removeBlockOverlay();
      if (a0_0x24f77f) {
        a0_0x24f77f.style.display = "none";
      }
      a0_0x3e0a5d();
    };
    _0x5bcc73.appendChild(_0x144083);
    _0x23e564.prepend(_0x1000f2);
  }
  a0_0x595043();
};
a0_0x5cc57b.prototype.getSkinPath = function (_0x519184, _0x2f8c04) {
  var _0x472ff1 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x519184);
  _0x472ff1.animalType = _0x519184;
  _0x472ff1.animalSpecies = 0;
  _0x472ff1.animalSubSpecies = 0;
  _0x472ff1.animalPremiumSkin = 0;
  _0x472ff1.curBiome = 0;
  _0x472ff1.lava = 100;
  _0x472ff1.mopeSeasonID = 0;
  _0x472ff1.skinThemeID = _0x2f8c04;
  var _0x4a4c85 = _0x472ff1.animalInfo();
  var _0x57ff89 = _0x472ff1.getSkinImagePathForShop(_0x4a4c85.skinName);
  _0x57ff89 = this.ifMultiAssetSkin(_0x519184, _0x57ff89);
  return _0x57ff89 + ".ui.png";
};
a0_0x5cc57b.prototype.ifMultiAssetSkin = function (_0x3b6020, _0x4c1677) {
  return _0x4c1677;
};
a0_0x5cc57b.prototype.getPostFixForItem = function (_0x53a086) {
  switch (_0x53a086) {
    case "halloween_pufferMace":
      return "1";
  }
  return null;
};
a0_0x5cc57b.prototype.createField = function (_0x1cf274, _0x15f340, _0x4f9e21, _0x4a6a3a, _0x4c3058) {
  var _0x28aeed = a0_0x1cfe71("", _0x4f9e21);
  var _0x1cf274 = a0_0x1cfe71("", _0x4a6a3a);
  var _0x15f340 = a0_0x1cfe71("", _0x4c3058);
  _0x28aeed.appendChild(_0x1cf274);
  _0x28aeed.appendChild(_0x15f340);
  return _0x28aeed;
};
a0_0x5cc57b.prototype.addCloseButton = function (_0x85b6d) {
  var _0x2740e8 = a0_0x2c643f("div", "close-shop");
  _0x2740e8.onclick = function () {
    a0_0x3e0a5d();
  };
  _0x2740e8.innerHTML = "X";
  _0x85b6d.appendChild(_0x2740e8);
};
a0_0x5cc57b.prototype.updateCoinsBalance = function () {
  var _0x5d093b = a0_0x40aaf;
  _0x5d093b.level = Math.round(a0_0x39b824(1, 10));
  _0x5d093b.xp = 50;
  _0x5d093b.xpNextLvl = _0x5d093b.xp + 300;
  var _0x43f5d2 = Math.round(_0x5d093b.xp);
  var _0x3e6d4c = document.getElementById("coins");
  if (_0x3e6d4c) {
    _0x3e6d4c.innerHTML = this.coinsFormat(a0_0x34555e());
    var _0x5d36bc = document.getElementById("userxp-barbar");
    var _0x3650cb = document.getElementById("userxp-val");
    var _0xee11fe = document.getElementById("userxp-star");
    _0x3650cb.innerHTML = _0x43f5d2 + " / " + _0x5d093b.xpNextLvl;
    _0x43f5d2 = _0x43f5d2 / _0x5d093b.xpNextLvl * 100;
    _0x5d36bc.style.width = _0x43f5d2 + "px";
    _0xee11fe.innerHTML = _0x5d093b.level;
  }
  var _0x3ecadb = document.getElementById("coins2");
  if (_0x3ecadb) {
    _0x3ecadb.innerHTML = a0_0x34555e();
    var _0x5d36bc = document.getElementById("userxp-barbar2");
    var _0x3650cb = document.getElementById("userxp-val2");
    var _0xee11fe = document.getElementById("userxp-star2");
    _0x3650cb.innerHTML = _0x43f5d2 + " / " + _0x5d093b.xpNextLvl;
    _0x43f5d2 = _0x43f5d2 / _0x5d093b.xpNextLvl * 100;
    _0x5d36bc.style.width = _0x43f5d2 + "px";
    _0xee11fe.innerHTML = _0x5d093b.level;
  }
};
a0_0x5cc57b.prototype.coinsFormat = function (_0x31303d) {
  var _0xa84f3c = "" + _0x31303d;
  if (_0x31303d == 0) {
    return _0x31303d;
  }
  _0xa84f3c = _0xa84f3c.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  return _0xa84f3c;
};
a0_0x5cc57b.prototype.showUserExpBarAndCoinsBalance = function (_0x5e024c) {
  var _0x3ce031 = a0_0x2c643f("li", "user-exp", "user-exp");
  var _0x251707 = a0_0x2c643f("div", "userxp-bar", "userxp-bar");
  var _0x460ea6 = a0_0x2c643f("div", "userxp-barbar", "userxp-barbar");
  var _0x190d7d = a0_0x2c643f("div", "userxp-val", "userxp-val");
  var _0x4a8042 = a0_0x2c643f("div", "userxp-star", "userxp-star");
  var _0xdca938 = a0_0x40aaf;
  var _0x2cbf64 = a0_0x2c643f("li", "coins-balance", "coins-balance");
  var _0x2e9883 = new Image();
  _0x2e9883.src = "shop/mopecoin.png";
  _0x2e9883.className = "buycoin-img";
  if (a0_0x5863e5()) {
    _0x2cbf64.appendChild(_0x2e9883);
  }
  var _0x13f55b = a0_0x2c643f("span", "coins", "coins");
  _0x13f55b.innerHTML = a0_0x34555e();
  _0x2cbf64.appendChild(_0x13f55b);
  _0x2cbf64.setAttribute("title", "add more coins");
  _0x5e024c.appendChild(_0x2cbf64);
  _0x2cbf64.onclick = function () {
    if (a0_0x5863e5()) {
      a0_0x5092e6.coinsInterface();
    } else {
      a0_0x5092e6.showLoginScreen();
    }
    a0_0x495742();
  };
};
a0_0x5cc57b.prototype.enableClothingShop = false;
a0_0x5cc57b.prototype.showShopButtons = function () {
  this.deleteTab();
  var _0x1940a1 = a0_0x1cfe71("shop_div", "");
  var _0x29dd64 = a0_0x2c643f("ul");
  this.addCloseButton2(_0x29dd64);
  _0x1940a1.appendChild(_0x29dd64);
  var _0x3b45e6 = {
    name: "MopeShop"
  };
  var _0x4f185a = a0_0x2c643f("li", _0x3b45e6.name, "title");
  _0x4f185a.innerHTML = "SHOP";
  _0x4f185a.onclick = function () {
    a0_0x5092e6.showTab(this.id);
  };
  _0x29dd64.appendChild(_0x4f185a);
  var _0x2a3a93 = a0_0x2c643f("div", "tab-" + _0x3b45e6.name, "tab");
  var _0x43c534 = a0_0x2c643f("div", undefined, "content");
  var _0x23fb32 = a0_0x2c643f("div", undefined, "content-inner");
  var _0x277281 = a0_0x2c643f("div", "content-items-" + _0x3b45e6.name, "content-items");
  _0x23fb32.append(_0x277281);
  _0x277281.style.width = "610px";
  var _0x57f86d = a0_0x2c643f("div", undefined, "box coinsBox");
  var _0x41fb8c = a0_0x2c643f("div", undefined, "box skinsBox");
  var _0x2a0418 = a0_0x2c643f("div", undefined, "box skinsBox");
  var _0xbe75f7 = a0_0x2c643f("div", undefined, "box dealsBox");
  _0x41fb8c.onclick = function () {
    a0_0x5092e6.selectedTab = "Skins";
    a0_0x5092e6.skinsInterface();
    a0_0x495742();
  };
  _0x2a0418.onclick = function () {
    a0_0x5092e6.selectedTab = "Features";
    a0_0x5092e6.skinsInterface();
    a0_0x495742();
  };
  _0xbe75f7.onclick = function () {
    a0_0x5092e6.selectedTab = "Deals";
    a0_0x5092e6.skinsInterface();
    a0_0x495742();
  };
  _0x57f86d.onclick = function () {
    a0_0x5092e6.coinsInterface();
    a0_0x495742();
  };
  var _0xb5a7fa = a0_0x2c643f("div", undefined, "title");
  var _0x547084 = a0_0x2c643f("div", undefined, "img");
  var _0x1dbc7d = new Image();
  _0x1dbc7d.src = "shop/coins.png";
  _0x547084.appendChild(_0x1dbc7d);
  _0xb5a7fa.innerHTML = "COINS";
  _0x57f86d.appendChild(_0x547084);
  _0x57f86d.appendChild(_0xb5a7fa);
  var _0x4c10d9 = a0_0x2c643f("div", undefined, "title");
  var _0x39a028 = a0_0x2c643f("div", undefined, "img");
  var _0x39aac5 = new Image();
  _0x39aac5.src = "shop/skins.png";
  _0x39a028.appendChild(_0x39aac5);
  _0x4c10d9.innerHTML = "SKINS";
  _0x41fb8c.appendChild(_0x39a028);
  _0x41fb8c.appendChild(_0x4c10d9);
  var _0x76ef = a0_0x2c643f("div", undefined, "title");
  var _0x4b8164 = a0_0x2c643f("div", undefined, "img");
  var _0x39aac5 = new Image();
  _0x39aac5.src = "shop/features.png";
  _0x4b8164.appendChild(_0x39aac5);
  _0x76ef.innerHTML = "FEATURES";
  _0x2a0418.appendChild(_0x4b8164);
  _0x2a0418.appendChild(_0x76ef);
  var _0x5ab8ab = a0_0x2c643f("div", undefined, "title");
  var _0x5e749f = a0_0x2c643f("div", undefined, "img");
  var _0xaa7c46 = new Image();
  _0xaa7c46.src = "shop/deals/deals.png";
  _0x5e749f.appendChild(_0xaa7c46);
  _0x5ab8ab.innerHTML = "DEALS";
  _0xbe75f7.appendChild(_0x5e749f);
  _0xbe75f7.appendChild(_0x5ab8ab);
  _0x277281.appendChild(_0x41fb8c);
  _0x277281.appendChild(_0x2a0418);
  _0x277281.appendChild(_0xbe75f7);
  _0x277281.appendChild(_0x57f86d);
  if (this.enableClothingShop) {
    var _0x2b1cf1 = a0_0x2c643f("div", undefined, "box clothsBox");
    _0x2b1cf1.onclick = function () {
      a0_0x5092e6.clothsInterface();
      a0_0x495742();
    };
    var _0xd4294e = a0_0x2c643f("div", undefined, "title");
    var _0x3c5bb7 = a0_0x2c643f("div", undefined, "img");
    var _0x1757d5 = new Image();
    _0x1757d5.src = "shop/clothing.png";
    _0x3c5bb7.appendChild(_0x1757d5);
    _0xd4294e.innerHTML = "CLOTHING";
    _0x2b1cf1.appendChild(_0x3c5bb7);
    _0x2b1cf1.appendChild(_0xd4294e);
    _0x277281.appendChild(_0x2b1cf1);
  }
  _0x43c534.append(_0x23fb32);
  _0x43c534.append(a0_0x2c643f("div", "", "separator"));
  _0x23fb32.append(a0_0x2c643f("div", "", "separator"));
  _0x277281.append(a0_0x2c643f("div", "", "separator"));
  _0x2a3a93.append(_0x43c534);
  _0x2a3a93.append(a0_0x2c643f("div", "", "separator"));
  _0x1940a1.appendChild(_0x2a3a93);
  this.createMyPurchasesTab(_0x29dd64, _0x1940a1, [...a0_0x5092e6.shop.ownedSkins, ...a0_0x5092e6.shop.ownedAnimals]);
  this.createMyDealsTab(_0x29dd64, _0x1940a1, a0_0x5092e6.shop.ownedDeals);
  this.createWardrobeTab(_0x29dd64, _0x1940a1, []);
  this.createMySettingsTab(_0x29dd64, _0x1940a1, a0_0x5092e6.shop.settings);
  this.showUserExpBarAndCoinsBalance(_0x29dd64);
  _0x1940a1.append(a0_0x2c643f("div", "", "separator"));
  this.shopDiv.appendChild(_0x1940a1);
  this.showTab("MopeShop");
  a0_0x52dbd1();
};
a0_0x5cc57b.prototype.createLogoutBtn = function (_0x439560) {
  var _0x4af60d = a0_0x2c643f("div", "divLogoutBtn", a0_0x5863e5() ? "logout" : "login");
  _0x4af60d.innerHTML = a0_0x5863e5() ? "LOGOUT" : "LOGIN";
  _0x4af60d.onclick = function () {
    if (a0_0x5863e5()) {
      a0_0x28328a();
    } else {
      a0_0x5092e6.showLoginScreen();
    }
  };
  _0x439560.append(_0x4af60d);
};
a0_0x5cc57b.prototype.getSkinDataById = function (_0x22c0b8) {
  return a0_0x5cc57b.prototype.itemIdToItem[_0x22c0b8];
};
a0_0x5cc57b.prototype.applyWardrobeFilter = function (_0x2f9b69) {
  let _0x18822a = null;
  let _0x4769fe = false;
  for (let _0x284de6 = 0; _0x284de6 < _0x2f9b69.children.length; _0x284de6++) {
    const _0x1b9d2c = _0x2f9b69.children[_0x284de6];
    if (_0x1b9d2c.className == "wardrobe-tier") {
      if (_0x18822a != null) {
        _0x18822a.style.display = _0x4769fe ? "block" : "none";
      }
      _0x4769fe = false;
      _0x18822a = _0x1b9d2c;
      continue;
    }
    const _0x25382d = _0x1b9d2c.children[1].innerText.toLowerCase().includes(a0_0x5092e6.textFilterWardrobe.toLowerCase()) ? "block" : "none";
    _0x1b9d2c.style.display = _0x25382d;
    if (!_0x4769fe && _0x25382d == "block") {
      _0x4769fe = true;
    }
  }
  if (_0x18822a != null) {
    _0x18822a.style.display = _0x4769fe ? "block" : "none";
  }
};
a0_0x5cc57b.prototype.createWardrobeTab = function (_0x182af3, _0x14bf6e, _0x3a9899) {
  var _0x1d0c73 = {
    name: "mopeWardrobe"
  };
  var _0x27a5f9 = a0_0x2c643f("li", _0x1d0c73.name, "title");
  _0x27a5f9.innerHTML = "WARDROBE";
  _0x27a5f9.onclick = function () {
    a0_0x5092e6.curTabPage = 0;
    if (!a0_0x5863e5()) {
      a0_0x5092e6.showLoginScreen();
      return;
    }
    a0_0x5092e6.showTab(this.id);
  };
  _0x182af3.appendChild(_0x27a5f9);
  if (!this.item_filter) {
    this.item_filter = "all";
  }
  var _0x4457dd = a0_0x2c643f("div", "tab-" + _0x1d0c73.name, "tab");
  var _0x7c2b18 = a0_0x2c643f("div", undefined, "content content-wardrobe");
  var _0x1a4263 = a0_0x2c643f("div", undefined, "content-inner");
  var _0xe467d4 = a0_0x2c643f("div", "content-items-" + _0x1d0c73.name, "content-items");
  var _0x1a623f = a0_0x2c643f("div", "item-filters", "item-filters-wardrobe");
  var _0x131edf = a0_0x2c643f("span", undefined, "filter-label-wardrobe");
  _0x131edf.innerHTML = "Tiers: ";
  _0x1a623f.appendChild(_0x131edf);
  const _0x29ae30 = a0_0x2c643f("span");
  for (let _0x35bda4 = 1; _0x35bda4 <= 17; _0x35bda4++) {
    const _0x21fff7 = a0_0x2c643f("a", null, "tier-button");
    _0x21fff7.innerText = _0x35bda4;
    _0x21fff7.onclick = () => {
      const _0x19be06 = document.querySelector("#wardrobe-tier-section-" + _0x35bda4);
      if (_0x19be06 == null) {
        return;
      }
      _0x19be06.scrollIntoView({
        behavior: "smooth",
        block: "end",
        inline: "nearest"
      });
    };
    _0x29ae30.appendChild(_0x21fff7);
  }
  _0x131edf.appendChild(_0x29ae30);
  const _0x452296 = a0_0x2c643f("input", "", "filter");
  _0x452296.type = "text";
  _0x452296.placeholder = "Search...";
  const _0x50b6aa = a0_0x2c643f("div", null, "mopeWardrobeGrid");
  _0xe467d4.appendChild(_0x50b6aa);
  _0x452296.oninput = function (_0x595c91) {
    a0_0x5092e6.textFilterWardrobe = _0x595c91.target.value;
    a0_0x5cc57b.prototype.applyWardrobeFilter(_0x50b6aa);
  };
  _0x1a623f.appendChild(_0x452296);
  _0x1a4263.append(_0xe467d4);
  _0xe467d4.style.maxWidth = "100%";
  _0x7c2b18.appendChild(_0x1a623f);
  _0x7c2b18.append(_0x1a4263);
  _0x7c2b18.append(a0_0x2c643f("div", "", "separator"));
  _0x1a4263.append(a0_0x2c643f("div", "", "separator"));
  _0xe467d4.append(a0_0x2c643f("div", "", "separator"));
  _0x4457dd.append(_0x7c2b18);
  _0x4457dd.append(a0_0x2c643f("div", "", "separator"));
  _0x14bf6e.appendChild(_0x4457dd);
  if (!a0_0x2d3651) {
    return;
  }
  const _0x14bc8b = Object.keys(a0_0x5cc57b.prototype.wardrobeItems).sort((_0x47bf6c, _0xbd5a6f) => a0_0x4413b5[_0x47bf6c] - a0_0x4413b5[_0xbd5a6f]);
  let _0x4451fc = 0;
  for (let _0x435a18 = 0; _0x435a18 < _0x14bc8b.length; _0x435a18++) {
    const _0x33cdd4 = _0x14bc8b[_0x435a18];
    const _0x2dfc60 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x33cdd4);
    _0x2dfc60.animalType = _0x33cdd4;
    const _0x298ad1 = _0x2dfc60.animalInfo().aniName;
    _0x2dfc60.animalSpecies = 0;
    _0x2dfc60.animalSubSpecies = 0;
    _0x2dfc60.mopeSeasonID = 1;
    _0x2dfc60.animalPremiumSkin = 0;
    _0x2dfc60.skinThemeID = 0;
    const _0x34a3a4 = a0_0x5cc57b.prototype.changedWardrobeItems[_0x33cdd4] ? a0_0x5cc57b.prototype.changedWardrobeItems[_0x33cdd4] : a0_0x5cc57b.prototype.wardrobeItems[_0x33cdd4].equippedSkin;
    if (_0x34a3a4 && _0x34a3a4 != "RANDOM") {
      const _0x5b26fe = a0_0x5cc57b.prototype.getSkinDataById(_0x34a3a4);
      if (_0x5b26fe) {
        _0x2dfc60.animalSpecies = _0x5b26fe.animalSpecies;
        _0x2dfc60.animalSubSpecies = _0x5b26fe.animalSubSpecies;
        _0x2dfc60.mopeSeasonID = _0x5b26fe.season;
      }
    }
    let _0xbf8ff6 = a0_0x4413b5[_0x33cdd4];
    if (_0xbf8ff6 != _0x4451fc) {
      _0x4451fc = _0xbf8ff6;
      const _0x1885e0 = document.createElement("div");
      _0x1885e0.className = "wardrobe-tier";
      _0x1885e0.id = "wardrobe-tier-section-" + _0xbf8ff6;
      _0x1885e0.innerText = "Tier " + _0xbf8ff6;
      _0x50b6aa.appendChild(_0x1885e0);
    }
    a0_0x5cc57b.prototype.createWardrobeItem(_0x50b6aa, _0x2dfc60, _0x298ad1);
  }
};
a0_0x5cc57b.prototype.createWardrobeItem = function (_0x24f4a2, _0x3126c1, _0x1d6b4e) {
  const _0x1fdb58 = a0_0x1cfe71(null, "mopeWardrobeItemContainer");
  const _0x220b15 = a0_0x1cfe71(null, "mopeWardrobeImgOuter");
  const _0x510570 = a0_0x1cfe71(null, "mopeWardrobeItemTitle");
  const _0x12073d = a0_0x2c643f("select", null, "mopeWardrobeItemSelect");
  _0x510570.innerText = _0x1d6b4e.replace("!", "");
  const _0x4bf79e = "assets/s/" + _0x3126c1.mopeSeasonID + "/skins/" + _0x3126c1.getSkinName() + ".ui.png?w=1&v=" + a0_0x5e69bf;
  const _0x2a72a4 = a0_0x37f4fc[_0x4bf79e];
  const _0x4d9a4d = _0x2a72a4 ? _0x2a72a4 : a0_0x2c643f("img", null, null);
  if (!_0x2a72a4) {
    _0x4d9a4d.src = _0x4bf79e;
    _0x4d9a4d.loading = "lazy";
    a0_0x37f4fc[_0x4bf79e] = _0x4d9a4d;
  }
  _0x220b15.append(_0x4d9a4d);
  _0x1fdb58.append(_0x220b15, _0x510570, _0x12073d);
  _0x24f4a2.append(_0x1fdb58);
  const _0x4d3d0f = a0_0x5cc57b.prototype.wardrobeItems[_0x3126c1.animalType].available;
  const _0x239c2f = a0_0x5cc57b.prototype.changedWardrobeItems[_0x3126c1.animalType] ? a0_0x5cc57b.prototype.changedWardrobeItems[_0x3126c1.animalType] : a0_0x5cc57b.prototype.wardrobeItems[_0x3126c1.animalType].equippedSkin;
  for (let _0x3445e1 = 0; _0x3445e1 < _0x4d3d0f.length; _0x3445e1++) {
    const _0xcdb901 = _0x4d3d0f[_0x3445e1];
    const _0x5107a5 = a0_0x5cc57b.prototype.getSkinDataById(_0xcdb901);
    let _0x27a988 = _0xcdb901 == null || _0xcdb901 === "RANDOM" ? _0x1d6b4e : _0xcdb901;
    if (_0x5107a5) {
      _0x3126c1.animalSpecies = _0x5107a5.animalSpecies;
      _0x3126c1.animalSubSpecies = _0x5107a5.animalSubSpecies;
      _0x3126c1.mopeSeasonID = _0x5107a5.season;
      _0x27a988 = _0x3126c1.animalInfo().aniName || _0xcdb901;
    }
    if (_0x27a988 == _0xcdb901) {
      console.error("Missing name declaration for: " + _0xcdb901);
    }
    _0x27a988 = _0x27a988.replace("!", "");
    const _0x3a12ef = a0_0x2c643f("option");
    _0x3a12ef.innerText = _0xcdb901 == "RANDOM" ? "Random" : _0x27a988.replace("\n", " ");
    _0x12073d.appendChild(_0x3a12ef);
    _0x3a12ef.dataset.aniType = _0x3126c1.animalType;
    _0x3a12ef.dataset.skinType = _0xcdb901;
    if (_0xcdb901 == _0x239c2f) {
      _0x12073d.selectedIndex = _0x3445e1;
    }
  }
  _0x12073d.oninput = () => {
    const _0x580b38 = _0x4d3d0f[_0x12073d.selectedIndex];
    a0_0x5cc57b.prototype.changedWardrobeItems[_0x3126c1.animalType] = _0x580b38;
    const _0x493961 = a0_0x5cc57b.prototype.getSkinDataById(_0x580b38);
    if (_0x493961) {
      _0x3126c1.animalSpecies = _0x493961.animalSpecies;
      _0x3126c1.animalSubSpecies = _0x493961.animalSubSpecies;
      _0x3126c1.mopeSeasonID = _0x493961.season;
    } else {
      _0x3126c1.animalSpecies = 0;
      _0x3126c1.animalSubSpecies = 0;
      _0x3126c1.mopeSeasonID = 1;
    }
    _0x3126c1.animalInfo();
    const _0x1790de = "assets/s/" + _0x3126c1.mopeSeasonID + "/skins/" + _0x3126c1.getSkinName() + ".ui.png?w=1&v=" + a0_0x5e69bf;
    const _0x567c9e = a0_0x37f4fc[_0x1790de];
    const _0x13d3b5 = _0x567c9e ? _0x567c9e : a0_0x2c643f("img", null, null);
    if (!_0x567c9e) {
      _0x13d3b5.src = _0x1790de;
      _0x13d3b5.loading = "lazy";
      a0_0x37f4fc[_0x1790de] = _0x13d3b5;
    }
    if (_0x220b15.lastChild) {
      _0x220b15.lastChild.remove();
    }
    _0x220b15.append(_0x13d3b5);
  };
};
a0_0x5cc57b.prototype.textFilter = "";
a0_0x5cc57b.prototype.createMyPurchasesTab = function (_0x2f2135, _0x359376, _0x36ea1a) {
  var _0x2a333f = {
    name: "myPurchases"
  };
  var _0x5b3967 = a0_0x2c643f("li", _0x2a333f.name, "title");
  _0x5b3967.innerHTML = "PURCHASES";
  _0x5b3967.onclick = function () {
    a0_0x5092e6.curTabPage = 0;
    if (!a0_0x5863e5()) {
      a0_0x5092e6.showLoginScreen();
      return;
    }
    a0_0x5092e6.showTab(this.id);
  };
  _0x2f2135.appendChild(_0x5b3967);
  if (!this.item_filter) {
    this.item_filter = "all";
  }
  var _0x3e62a9 = a0_0x2c643f("div", "tab-" + _0x2a333f.name, "tab");
  var _0x3da7a6 = a0_0x2c643f("div", undefined, "content");
  var _0x840633 = a0_0x2c643f("div", undefined, "content-inner");
  var _0x25102e = a0_0x2c643f("div", "content-items-" + _0x2a333f.name, "content-items");
  var _0x1596bb = a0_0x2c643f("div", "item-filters", "item-filters");
  var _0x56b32f = ["all", "skins", "animals"];
  var _0x556ecb = a0_0x2c643f("span", undefined, "filter-label");
  _0x556ecb.innerHTML = "Filter: ";
  _0x1596bb.appendChild(_0x556ecb);
  _0x840633.append(_0x25102e);
  if (_0x2a333f.name == "Coins") {
    _0x25102e.style.width = "615px";
  } else {
    _0x25102e.style.width = "530px";
  }
  _0x3da7a6.append(_0x840633);
  _0x3da7a6.append(a0_0x2c643f("div", "", "separator"));
  _0x840633.append(a0_0x2c643f("div", "", "separator"));
  _0x25102e.append(a0_0x2c643f("div", "", "separator"));
  _0x3e62a9.append(_0x3da7a6);
  _0x3e62a9.append(a0_0x2c643f("div", "", "separator"));
  _0x359376.appendChild(_0x3e62a9);
  var _0xdac9 = a0_0x2c643f("div", "pages-" + _0x2a333f.name, "content-items-pages");
  let _0x31b35a = null;
  for (i = 0; i < _0x56b32f.length; i++) {
    let _0x1960b1 = a0_0x2c643f("span", undefined, "filter " + (this.item_filter == _0x56b32f[i] ? "selected" : "") + " filter-" + _0x56b32f[i]);
    if (this.item_filter == _0x56b32f[i]) {
      _0x31b35a = _0x1960b1;
    }
    _0x1960b1.setAttribute("data-filter", _0x56b32f[i]);
    _0x1960b1.setAttribute("data-tab", _0x2a333f.name);
    _0x1960b1.innerHTML = _0x56b32f[i];
    _0x1960b1.onclick = function () {
      _0x31b35a.classList.remove("selected");
      _0x1960b1.classList.add("selected");
      _0x31b35a = _0x1960b1;
      a0_0x5092e6.item_filter = $(_0x1960b1).data("filter");
      a0_0x5092e6.selectedTab = $(_0x1960b1).data("tab");
      a0_0x5cc57b.prototype.applyFilter(_0x25102e, _0xdac9, _0x36ea1a);
    };
    _0x1596bb.appendChild(_0x1960b1);
  }
  const _0x1ed1e4 = a0_0x2c643f("input", "", "filter");
  _0x1ed1e4.type = "text";
  _0x1ed1e4.placeholder = "Search...";
  _0x1ed1e4.oninput = function (_0x52ddf6) {
    a0_0x5092e6.textFilter = _0x52ddf6.target.value;
    a0_0x5cc57b.prototype.applyFilter(_0x25102e, _0xdac9, _0x36ea1a);
  };
  _0x1596bb.appendChild(_0x1ed1e4);
  var _0x145842 = a0_0x2c643f("div", "left-" + _0x2a333f.name, "left");
  var _0x9dcfe = a0_0x2c643f("div", "right-" + _0x2a333f.name, "right");
  _0x9dcfe.onclick = function () {
    a0_0x5092e6.scrollItems(this, true);
  };
  _0x145842.onclick = function () {
    a0_0x5092e6.scrollItems(this, false);
  };
  _0x840633.append(_0x25102e);
  if (_0x36ea1a.length > 0) {
    _0x3da7a6.appendChild(_0x1596bb);
    _0x840633.className += " w530";
    a0_0x5cc57b.prototype.updatePurchasesFilter(_0x25102e, _0xdac9, _0x36ea1a, _0x36ea1a);
    for (i = 0; i < _0x36ea1a.length; i++) {
      var _0x1612c5 = _0x36ea1a[i];
      var _0x521019 = _0x1612c5.generateHtml();
      _0x521019.classList.add("data-index-" + i);
      _0x25102e.appendChild(_0x521019);
    }
    _0x3da7a6.append(_0x145842);
    _0x3da7a6.append(_0x840633);
    _0x3da7a6.append(_0x9dcfe);
    _0x3da7a6.append(_0xdac9);
  } else {
    var _0x260d2e = a0_0x1cfe71("div", "nopurchases");
    _0x260d2e.innerHTML = "You don't have any item to show here!";
    _0x840633.append(_0x260d2e);
    _0x3da7a6.append(_0x840633);
  }
};
a0_0x5cc57b.prototype.applyFilter = function (_0x7ab619, _0x2c554f, _0x1a1a97) {
  let _0x4789e5 = _0x1a1a97;
  switch (a0_0x5092e6.item_filter) {
    case "all":
      _0x4789e5 = _0x1a1a97;
      break;
    case "skins":
      _0x4789e5 = _0x1a1a97.filter(_0x3c2169 => _0x3c2169.itemType == 0);
      break;
    case "animals":
      _0x4789e5 = _0x1a1a97.filter(_0x46f962 => _0x46f962.itemType == 1);
      break;
    case "deals":
      _0x4789e5 = _0x1a1a97.filter(_0x3e2161 => _0x3e2161.itemType == 2);
      break;
  }
  _0x4789e5 = _0x4789e5.filter(_0x4cb505 => _0x4cb505.skinName.toLowerCase().replace("\n", " ").includes(a0_0x5092e6.textFilter.toLowerCase()));
  a0_0x5cc57b.prototype.updatePurchasesFilter(_0x7ab619, _0x2c554f, _0x4789e5, _0x1a1a97);
};
a0_0x5cc57b.prototype.updatePurchasesFilter = function (_0x128ff9, _0x4408d5, _0x165f9d, _0x10baaf) {
  a0_0x5cc57b.prototype.setVisiblePage("myPurchases", 0);
  var _0x417060 = Math.ceil(_0x165f9d.length / 4);
  _0x128ff9.setAttribute("data-pages", _0x417060);
  _0x128ff9.setAttribute("data-curPage", 0);
  _0x128ff9.style.width = _0x417060 * 530 + "px";
  _0x4408d5.innerHTML = "Page: 1 of " + _0x417060;
  for (let _0x2e24d4 = 0; _0x2e24d4 < _0x10baaf.length; _0x2e24d4++) {
    const _0x166787 = _0x10baaf[_0x2e24d4];
    const _0x2b3aa5 = _0x165f9d.includes(_0x166787);
    const _0x54cf4c = _0x128ff9.querySelector(".data-index-" + _0x2e24d4);
    if (_0x54cf4c) {
      _0x54cf4c.style.display = _0x2b3aa5 ? "block" : "none";
    }
  }
};
a0_0x5cc57b.prototype.createMyAnimalsTab = function (_0x4be40d, _0x3eb7b8, _0x8b639d) {
  var _0x311f1d = {
    name: "myAnimals"
  };
  var _0x4b5ca6 = a0_0x2c643f("li", _0x311f1d.name, "title");
  _0x4b5ca6.innerHTML = "MY FEATURES";
  _0x4b5ca6.onclick = function () {
    a0_0x5092e6.curTabPage = 0;
    if (!a0_0x5863e5()) {
      a0_0x5092e6.showLoginScreen();
      return;
    }
    a0_0x5092e6.showTab(this.id);
  };
  _0x4be40d.appendChild(_0x4b5ca6);
  var _0x133c24 = a0_0x2c643f("div", "tab-" + _0x311f1d.name, "tab");
  var _0x581e10 = a0_0x2c643f("div", undefined, "content");
  var _0x19855a = a0_0x2c643f("div", undefined, "content-inner");
  var _0x16db1f = a0_0x2c643f("div", "content-items-" + _0x311f1d.name, "content-items");
  _0x19855a.append(_0x16db1f);
  if (_0x311f1d.name == "Coins") {
    _0x16db1f.style.width = "615px";
  } else {
    _0x16db1f.style.width = "530px";
  }
  _0x581e10.append(_0x19855a);
  _0x581e10.append(a0_0x2c643f("div", "", "separator"));
  _0x19855a.append(a0_0x2c643f("div", "", "separator"));
  _0x16db1f.append(a0_0x2c643f("div", "", "separator"));
  _0x133c24.append(_0x581e10);
  _0x133c24.append(a0_0x2c643f("div", "", "separator"));
  _0x3eb7b8.appendChild(_0x133c24);
  var _0x53e76f = a0_0x2c643f("div", "left-" + _0x311f1d.name, "left");
  var _0xa1e7da = a0_0x2c643f("div", "pages-" + _0x311f1d.name, "content-items-pages");
  var _0x20e75b = a0_0x2c643f("div", "right-" + _0x311f1d.name, "right");
  _0x20e75b.onclick = function () {
    a0_0x5092e6.scrollItems(this, true);
  };
  _0x53e76f.onclick = function () {
    a0_0x5092e6.scrollItems(this, false);
  };
  _0x19855a.append(_0x16db1f);
  if (_0x8b639d.length > 0) {
    _0x19855a.className += " w530";
    var _0x18928f = Math.ceil(_0x8b639d.length / 4);
    _0x16db1f.setAttribute("data-pages", _0x18928f);
    _0x16db1f.setAttribute("data-curPage", 0);
    _0x16db1f.style.width = _0x18928f * 530 + "px";
    _0xa1e7da.innerHTML = "Page: 1 of " + _0x18928f;
    for (i = 0; i < _0x8b639d.length; i++) {
      var _0x1353cc = _0x8b639d[i];
      _0x16db1f.appendChild(_0x1353cc.generateHtml());
    }
    _0x581e10.append(_0x53e76f);
    _0x581e10.append(_0x19855a);
    _0x581e10.append(_0x20e75b);
    _0x581e10.append(_0xa1e7da);
  } else {
    var _0x32050c = a0_0x1cfe71("div", "nopurchases");
    _0x32050c.innerHTML = "You don't have any item to show here!";
    _0x19855a.append(_0x32050c);
    _0x581e10.append(_0x19855a);
  }
};
a0_0x5cc57b.prototype.createMyDealsTab = function (_0x2cb0d5, _0x478bbe, _0x10f20f) {
  var _0x44c3f3 = {
    name: "myDeals"
  };
  var _0x332d6b = a0_0x2c643f("li", _0x44c3f3.name, "title");
  _0x332d6b.innerHTML = "MY DEALS";
  _0x332d6b.onclick = function () {
    a0_0x5092e6.curTabPage = 0;
    if (!a0_0x5863e5()) {
      a0_0x5092e6.showLoginScreen();
      return;
    }
    a0_0x5092e6.showTab(this.id);
  };
  _0x2cb0d5.appendChild(_0x332d6b);
  var _0x179138 = a0_0x2c643f("div", "tab-" + _0x44c3f3.name, "tab");
  var _0x2c330c = a0_0x2c643f("div", undefined, "content");
  var _0x3b0eae = a0_0x2c643f("div", undefined, "content-inner");
  var _0x165479 = a0_0x2c643f("div", "content-items-" + _0x44c3f3.name, "content-items");
  _0x3b0eae.append(_0x165479);
  if (_0x44c3f3.name == "Coins") {
    _0x165479.style.width = "615px";
  } else {
    _0x165479.style.width = "530px";
  }
  _0x2c330c.append(_0x3b0eae);
  _0x2c330c.append(a0_0x2c643f("div", "", "separator"));
  _0x3b0eae.append(a0_0x2c643f("div", "", "separator"));
  _0x165479.append(a0_0x2c643f("div", "", "separator"));
  _0x179138.append(_0x2c330c);
  _0x179138.append(a0_0x2c643f("div", "", "separator"));
  _0x478bbe.appendChild(_0x179138);
  var _0x4171d = a0_0x2c643f("div", "left-" + _0x44c3f3.name, "left");
  var _0x556feb = a0_0x2c643f("div", "pages-" + _0x44c3f3.name, "content-items-pages");
  var _0x283003 = a0_0x2c643f("div", "right-" + _0x44c3f3.name, "right");
  _0x283003.onclick = function () {
    a0_0x5092e6.scrollItems(this, true);
  };
  _0x4171d.onclick = function () {
    a0_0x5092e6.scrollItems(this, false);
  };
  _0x3b0eae.append(_0x165479);
  if (_0x10f20f.length > 0) {
    _0x3b0eae.className += " w530";
    var _0x2eee5b = Math.ceil(_0x10f20f.length / 2);
    _0x165479.setAttribute("data-pages", _0x2eee5b);
    _0x165479.setAttribute("data-curPage", 0);
    _0x165479.style.width = _0x2eee5b * 530 + "px";
    _0x556feb.innerHTML = "Page: 1 of " + _0x2eee5b;
    for (i = 0; i < _0x10f20f.length; i++) {
      var _0x586958 = _0x10f20f[i];
      _0x165479.appendChild(_0x586958.generateHtml());
    }
    _0x2c330c.append(_0x4171d);
    _0x2c330c.append(_0x3b0eae);
    _0x2c330c.append(_0x283003);
    _0x2c330c.append(_0x556feb);
  } else {
    var _0x49e02f = a0_0x1cfe71("div", "nopurchases");
    _0x49e02f.innerHTML = "You don't have any item to show here!";
    _0x3b0eae.append(_0x49e02f);
    _0x2c330c.append(_0x3b0eae);
  }
};
a0_0x5cc57b.prototype.createMySettingsTab = function (_0x3a0b91, _0x40867a, _0x390385) {
  var _0x2ad32d = {
    name: "mySettings"
  };
  var _0x2924c8 = a0_0x2c643f("li", _0x2ad32d.name, "title");
  _0x2924c8.innerHTML = "SETTINGS";
  _0x2924c8.onclick = function () {
    a0_0x5092e6.curTabPage = 0;
    if (!a0_0x5863e5()) {
      a0_0x5092e6.showLoginScreen();
      return;
    }
    a0_0x5092e6.showTab(this.id);
  };
  _0x3a0b91.appendChild(_0x2924c8);
  var _0x425e67 = a0_0x2c643f("div", "tab-" + _0x2ad32d.name, "tab");
  var _0x525170 = a0_0x2c643f("div", undefined, "content");
  var _0x17896f = a0_0x2c643f("div", undefined, "content-inner");
  var _0xe4a3d1 = a0_0x2c643f("div", "content-items-" + _0x2ad32d.name, "content-items");
  _0x17896f.append(_0xe4a3d1);
  _0x525170.append(_0x17896f);
  _0x525170.append(a0_0x2c643f("div", "", "separator"));
  _0x17896f.append(a0_0x2c643f("div", "", "separator"));
  _0xe4a3d1.append(a0_0x2c643f("div", "", "separator"));
  _0x425e67.append(_0x525170);
  _0x425e67.append(a0_0x2c643f("div", "", "separator"));
  _0x40867a.appendChild(_0x425e67);
  _0x17896f.append(_0xe4a3d1);
  if (_0x390385 && _0x390385.length > 0) {
    for (i = 0; i < _0x390385.length; i++) {
      var _0x3cf8e8 = _0x390385[i];
      var _0x2a3104 = a0_0x2c643f("div", undefined, "fileddiv");
      var _0x2dcdc1 = a0_0x2c643f("div", undefined, "field-label");
      var _0x5a7f70 = a0_0x2c643f("div", undefined, "field-value");
      var _0x1c334f = _0x3cf8e8.value == -1 ? "BUY" : _0x3cf8e8.value == 0 ? "EQUIP" : "UNEQUIP";
      var _0x45e15f = a0_0x2c643f("div", "action_" + _0x3cf8e8.handle, "field-action " + _0x1c334f);
      _0x45e15f.setAttribute("data-actionid", "action_" + _0x3cf8e8.handle);
      _0x45e15f.setAttribute("data-handle", _0x3cf8e8.handle);
      if (_0x3cf8e8.value == -1) {
        _0x45e15f.onclick = function () {
          if (!a0_0x5863e5()) {
            a0_0x5092e6.showLoginScreen();
          } else {
            var _0x4f8863 = a0_0x5092e6.getItemByName($(this).data("handle"));
            if (_0x4f8863 != null) {
              a0_0x5092e6.buyConfirmationOverlay(_0x4f8863);
            }
          }
        };
        _0x5a7f70.setAttribute("width", "300px");
        _0x45e15f.title = _0x45e15f.innerHTML = "CLICK HERE TO BUY THIS ITEM";
      } else if (_0x3cf8e8.type == "clicktoview") {
        _0x45e15f.innerHTML = !_0x3cf8e8.visible ? "*******" : _0x3cf8e8.value;
        _0x45e15f.title = !_0x3cf8e8.visible ? "CLICK TO VIEW" : "CLICK TO HIDE";
        _0x45e15f.setAttribute("data-value", _0x3cf8e8.value);
        _0x45e15f.setAttribute("data-visible", _0x3cf8e8.visible == true);
        _0x45e15f.onclick = function () {
          var _0x3884f1 = $(this).data("visible");
          if (!_0x3884f1) {
            $(this).html($(this).data("value"));
            $(this).data("visible", true);
          } else {
            $(this).html("*******");
            $(this).data("visible", false);
          }
        };
      } else if (_0x3cf8e8.type == "action") {
        _0x45e15f.onclick = function () {
          a0_0x5092e6.playerSettings_update($(this).data("handle"));
        };
        _0x45e15f.innerHTML = _0x3cf8e8.value == 0 ? "EQUIP" : "UNEQUIP";
        _0x45e15f.title = _0x3cf8e8.value == 0 ? "CLICK TO EQUIP" : "CLICK TO UNEQUIP";
      } else if (_0x3cf8e8.type == "display") {
        var _0x22a242 = "" + _0x3cf8e8.value;
        _0x45e15f.innerHTML = _0x22a242 == "null" ? 0 : _0x22a242;
      }
      _0x2dcdc1.innerHTML = _0x3cf8e8.label;
      _0x5a7f70.appendChild(_0x45e15f);
      _0x2a3104.appendChild(_0x2dcdc1);
      _0x2a3104.appendChild(_0x5a7f70);
      _0xe4a3d1.appendChild(_0x2a3104);
    }
    _0xe4a3d1.style.width = "530px";
  } else {
    var _0x54dc00 = a0_0x1cfe71("div", "nopurchases");
    _0x54dc00.innerHTML = "You don't have any item to show here!";
    _0x17896f.append(_0x54dc00);
    _0x525170.append(_0x17896f);
  }
};
a0_0x5cc57b.prototype.getItemByName = function (_0x679071) {
  if (this.shop.allItems) {
    for (i = 0; i < this.shop.allItems.length; i++) {
      if (this.shop.allItems[i].itemId == _0x679071) {
        return this.shop.allItems[i];
      }
    }
  }
  return null;
};
a0_0x5cc57b.prototype.deleteTab = function () {
  var _0xa8f72c = document.getElementById("shop_div");
  if (_0xa8f72c) {
    _0xa8f72c.parentNode.removeChild(_0xa8f72c);
  }
};
a0_0x5cc57b.prototype.getShopFilters = function () {};
a0_0x5cc57b.prototype.skinsInterface = function () {
  this.deleteTab();
  var _0x3cebc8 = a0_0x1cfe71("shop_div", "");
  var _0x4dd3d8 = a0_0x2c643f("ul");
  _0x3cebc8.appendChild(_0x4dd3d8);
  this.addCloseButton2(_0x4dd3d8);
  this.addBackButton(_0x4dd3d8);
  for (t = 0; t < this.shop.skins.length; t++) {
    var _0x2bc793 = this.shop.skins[t];
    var _0x4ebfa8 = a0_0x2c643f("li", _0x2bc793.name, "title");
    var _0x37f776 = a0_0x2c643f("a");
    _0x4ebfa8.innerHTML = _0x2bc793.name;
    _0x37f776.setAttribute("href", "#tab-" + _0x2bc793.name);
    _0x4ebfa8.onclick = function () {
      a0_0x5092e6.curTabPage = 0;
      a0_0x5092e6.showTab(this.id);
      a0_0x495742();
    };
    _0x4dd3d8.appendChild(_0x4ebfa8);
    var _0x531729 = a0_0x2c643f("div", "tab-" + _0x2bc793.name, "tab");
    var _0x552e8b = a0_0x2c643f("div", undefined, "content");
    var _0x4869bf = a0_0x2c643f("div", undefined, "content-inner w530");
    var _0x29aa7a = a0_0x2c643f("div", "item-filters", "item-filters");
    var _0x225f59 = a0_0x2c643f("div", "content-items-" + _0x2bc793.name, "content-items");
    var _0x436854 = a0_0x2c643f("div", "left-" + _0x2bc793.name, "left");
    var _0xf27443 = a0_0x2c643f("div", "left-" + _0x2bc793.name, "right");
    var _0xe2a13e = a0_0x2c643f("div", "pages-" + _0x2bc793.name, "content-items-pages");
    if (this.item_filter == undefined) {
      this.item_filter = "all";
    }
    var _0x2af758 = ["all", "new", "sale", "normal", "high-price", "low-price"];
    var _0x1f8952 = a0_0x2c643f("span", undefined, "filter-label");
    _0x1f8952.innerHTML = "Filter: ";
    _0x29aa7a.appendChild(_0x1f8952);
    var _0x4d6098 = [];
    for (i = 0; i < _0x2bc793.items.length; i++) {
      var _0x60782c = _0x2bc793.items[i];
      if (!_0x60782c.data.canBuy) {
        continue;
      }
      if (a0_0x5cc57b.prototype.shop.ownedSkins[_0x60782c.id]) {
        continue;
      }
      if (a0_0x5cc57b.prototype.shop.ownedAnimals[_0x60782c.id]) {
        continue;
      }
      if (a0_0x5cc57b.prototype.shop.ownedDeals[_0x60782c.id]) {
        continue;
      }
      if (this.item_filter == "all") {
        _0x4d6098.push(_0x60782c);
      } else if (this.item_filter == "new" && _0x60782c.saleType == 1) {
        _0x4d6098.push(_0x60782c);
      } else if (this.item_filter == "sale" && _0x60782c.saleType == 2) {
        _0x4d6098.push(_0x60782c);
      } else if (this.item_filter == "normal" && _0x60782c.saleType == 0) {
        _0x4d6098.push(_0x60782c);
      } else if (this.item_filter == "high-price" || this.item_filter == "low-price") {
        _0x4d6098.push(_0x60782c);
      }
    }
    if (this.item_filter == "low-price") {
      var _0x49798e = _0x4d6098.slice(0);
      _0x49798e.sort(function (_0x274dd5, _0x3edd29) {
        return _0x274dd5.price - _0x3edd29.price;
      });
      _0x4d6098 = _0x49798e;
    } else if (this.item_filter == "high-price") {
      var _0x4b32d7 = _0x4d6098.slice(0);
      _0x4b32d7.sort(function (_0x51e596, _0x3f534b) {
        return _0x3f534b.price - _0x51e596.price;
      });
      _0x4d6098 = _0x4b32d7;
    }
    _0x4869bf.append(_0x225f59);
    var _0x1e9d4a = 4;
    if (_0x2bc793.name == "Deals") {
      _0x1e9d4a = 2;
    }
    var _0x4384e0 = Math.ceil(_0x4d6098.length / _0x1e9d4a);
    for (i = 0; i < _0x2af758.length; i++) {
      var _0x1f8952 = a0_0x2c643f("span", undefined, "filter " + (this.item_filter == _0x2af758[i] ? "selected" : "") + " filter-" + _0x2af758[i]);
      _0x1f8952.setAttribute("data-filter", _0x2af758[i]);
      _0x1f8952.setAttribute("data-tab", _0x2bc793.name);
      _0x1f8952.innerHTML = _0x2af758[i];
      _0x1f8952.onclick = function () {
        a0_0x5092e6.item_filter = $(this).data("filter");
        a0_0x5092e6.selectedTab = $(this).data("tab");
        a0_0x5092e6.skinsInterface();
        a0_0x5092e6.setVisiblePage(a0_0x5092e6.selectedTab, 0);
        a0_0x5092e6.showTab(a0_0x5092e6.selectedTab);
      };
      _0x29aa7a.appendChild(_0x1f8952);
    }
    _0xf27443.onclick = function () {
      a0_0x5092e6.scrollItems(this, true);
    };
    _0x436854.onclick = function () {
      a0_0x5092e6.scrollItems(this, false);
    };
    _0x225f59.setAttribute("data-pages", _0x4384e0);
    _0x225f59.setAttribute("data-curPage", 0);
    if (_0x2bc793.name == "Coins") {
      _0x225f59.style.width = "615px";
    } else {
      _0x225f59.style.width = _0x4384e0 * 530 + "px";
    }
    _0xe2a13e.innerHTML = "Page: 1 of " + _0x4384e0;
    if (_0x2bc793.items.length > 0) {
      _0x552e8b.append(_0x29aa7a);
      if (_0x4d6098.length > 0) {
        for (i = 0; i < _0x4d6098.length; i++) {
          var _0x60782c = _0x4d6098[i];
          _0x225f59.appendChild(_0x60782c.generateHtml());
        }
        _0x552e8b.append(_0x436854);
        _0x552e8b.append(_0x4869bf);
        _0x552e8b.append(_0xf27443);
        _0x552e8b.append(_0xe2a13e);
      } else {
        var _0x5e0e70 = a0_0x1cfe71("div", "nopurchases");
        _0x5e0e70.innerHTML = "No items to show with this filter!";
        _0x4869bf.append(_0x5e0e70);
        _0x552e8b.append(_0x4869bf);
      }
    } else {
      var _0x5e0e70 = a0_0x1cfe71("div", "nopurchases");
      _0x5e0e70.innerHTML = "You don't have any item to show here!";
      _0x4869bf.append(_0x5e0e70);
      _0x552e8b.append(_0x4869bf);
    }
    _0x552e8b.append(a0_0x2c643f("div", "", "separator"));
    _0x4869bf.append(a0_0x2c643f("div", "", "separator"));
    _0x225f59.append(a0_0x2c643f("div", "", "separator"));
    _0x531729.append(_0x552e8b);
    _0x531729.append(a0_0x2c643f("div", "", "separator"));
    _0x3cebc8.appendChild(_0x531729);
  }
  this.showUserExpBarAndCoinsBalance(_0x4dd3d8);
  _0x3cebc8.append(a0_0x2c643f("div", "", "separator"));
  this.shopDiv.appendChild(_0x3cebc8);
  this.showTab(this.selectedTab);
};
a0_0x5cc57b.prototype.dealsInterface = function () {
  this.deleteTab();
  var _0x3a4c6c = a0_0x1cfe71("shop_div", "boxshadow");
  var _0x546f2a = a0_0x2c643f("ul");
  _0x3a4c6c.appendChild(_0x546f2a);
  this.addCloseButton2(_0x546f2a);
  this.addBackButton(_0x546f2a);
  for (t = 0; t < this.shop.skins.length; t++) {
    var _0x14ab89 = this.shop.skins[t];
    var _0x327443 = a0_0x2c643f("li", _0x14ab89.name, "title");
    var _0x5932be = a0_0x2c643f("a");
    _0x327443.innerHTML = _0x14ab89.name;
    _0x5932be.setAttribute("href", "#tab-" + _0x14ab89.name);
    _0x327443.onclick = function () {
      a0_0x5092e6.curTabPage = 0;
      a0_0x5092e6.showTab(this.id);
      a0_0x495742();
    };
    _0x546f2a.appendChild(_0x327443);
    var _0xfe4b7d = a0_0x2c643f("div", "tab-" + _0x14ab89.name, "tab");
    var _0x13c4b9 = a0_0x2c643f("div", undefined, "content");
    var _0x3eb497 = a0_0x2c643f("div", undefined, "content-inner w530");
    var _0x3a0b53 = a0_0x2c643f("div", "content-items-" + _0x14ab89.name, "content-items");
    var _0x38484e = a0_0x2c643f("div", "left-" + _0x14ab89.name, "left");
    var _0x44514e = a0_0x2c643f("div", "pages-" + _0x14ab89.name, "content-items-pages");
    var _0x3d2fc0 = a0_0x2c643f("div", "left-" + _0x14ab89.name, "right");
    _0x3d2fc0.onclick = function () {
      a0_0x5092e6.scrollItems(this, true);
    };
    _0x38484e.onclick = function () {
      a0_0x5092e6.scrollItems(this, false);
    };
    _0x3eb497.append(_0x3a0b53);
    var _0x410e58 = Math.ceil(_0x14ab89.items.length / 2);
    _0x3a0b53.setAttribute("data-pages", _0x410e58);
    _0x3a0b53.setAttribute("data-curPage", 0);
    if (_0x14ab89.name == "Coins") {
      _0x3a0b53.style.width = "615px";
    } else {
      _0x3a0b53.style.width = _0x410e58 * 530 + "px";
    }
    _0x44514e.innerHTML = "Page: 1 of " + _0x410e58;
    for (i = 0; i < _0x14ab89.items.length; i++) {
      var _0x46bcd7 = _0x14ab89.items[i];
      _0x3a0b53.appendChild(_0x46bcd7.generateHtml());
    }
    _0x13c4b9.append(_0x38484e);
    _0x13c4b9.append(_0x3eb497);
    _0x13c4b9.append(_0x3d2fc0);
    _0x13c4b9.append(_0x44514e);
    _0x13c4b9.append(a0_0x2c643f("div", "", "separator"));
    _0x3eb497.append(a0_0x2c643f("div", "", "separator"));
    _0x3a0b53.append(a0_0x2c643f("div", "", "separator"));
    _0xfe4b7d.append(_0x13c4b9);
    _0xfe4b7d.append(a0_0x2c643f("div", "", "separator"));
    _0x3a4c6c.appendChild(_0xfe4b7d);
  }
  this.showUserExpBarAndCoinsBalance(_0x546f2a);
  _0x3a4c6c.append(a0_0x2c643f("div", "", "separator"));
  this.shopDiv.appendChild(_0x3a4c6c);
  this.showTab(this.selectedTab);
};
a0_0x5cc57b.prototype.props = {
  hatsColor: "",
  beardsColor: "",
  glassesColor: "",
  scarfsColor: ""
};
a0_0x5cc57b.prototype.propBought = {
  hats: {
    white: 1,
    red: 0,
    green: 0,
    blue: 1,
    pink: 0,
    gold: 0
  },
  beards: {
    white: 0,
    red: 1,
    green: 0,
    blue: 0,
    pink: 0,
    gold: 1
  },
  glasses: {
    white: 0,
    red: 1,
    green: 1,
    blue: 0,
    pink: 0,
    gold: 0
  },
  scarfs: {
    white: 0,
    red: 1,
    green: 0,
    blue: 1,
    pink: 0,
    gold: 1
  }
};
a0_0x5cc57b.prototype.hasBoughtProp = function (_0x141375, _0xc2c662) {
  var _0x5da8ad = this.propBought[_0x141375][_0xc2c662];
  if (_0x5da8ad === 1) {
    return true;
  }
  return false;
};
a0_0x5cc57b.prototype.isPropSelected = function (_0x43a39e, _0x583bd0) {
  var _0x46e57e = this.getPropColorNum(_0x583bd0);
  var _0x581fde = this.props[_0x43a39e + "Color"];
  return _0x581fde === _0x46e57e;
};
a0_0x5cc57b.prototype.showProp = function (_0x411f71) {
  var _0x4fca5e = document.getElementById("propDisplay");
  _0x4fca5e.style.display = "block";
  var _0x4d19cb = document.getElementById("btn-" + _0x411f71);
  if (_0x4d19cb) {
    var _0x4b825e = document.getElementById("btn-hats");
    var _0x1d129f = document.getElementById("btn-glasses");
    var _0x168527 = document.getElementById("btn-beards");
    var _0x14a0cb = document.getElementById("btn-scarfs");
    _0x4b825e.className = "clothingbtn";
    _0x1d129f.className = "clothingbtn";
    _0x168527.className = "clothingbtn";
    _0x14a0cb.className = "clothingbtn";
    _0x4d19cb.className = "clothingbtn selected";
    var _0x1b2145 = document.getElementById("propColors");
    _0x1b2145.innerHTML = "";
    var _0x1b5243 = a0_0x2c643f("div", "propColor-white", "propColor propColor-white" + (this.isPropSelected(_0x411f71, "white") ? " selected" : "") + (this.hasBoughtProp(_0x411f71, "white") ? " bought" : ""));
    var _0x25a24f = a0_0x2c643f("div", "propColor-red", "propColor propColor-red" + (this.isPropSelected(_0x411f71, "red") ? " selected" : "") + (this.hasBoughtProp(_0x411f71, "red") ? " bought" : ""));
    var _0x244fc8 = a0_0x2c643f("div", "propColor-green", "propColor propColor-green" + (this.isPropSelected(_0x411f71, "green") ? " selected" : "") + (this.hasBoughtProp(_0x411f71, "green") ? " bought" : ""));
    var _0x2f8e56 = a0_0x2c643f("div", "propColor-blue", "propColor propColor-blue" + (this.isPropSelected(_0x411f71, "blue") ? " selected" : "") + (this.hasBoughtProp(_0x411f71, "blue") ? " bought" : ""));
    var _0x2b4417 = a0_0x2c643f("div", "propColor-pink", "propColor propColor-pink" + (this.isPropSelected(_0x411f71, "pink") ? " selected" : "") + (this.hasBoughtProp(_0x411f71, "pink") ? " bought" : ""));
    var _0x4767cf = a0_0x2c643f("div", "propColor-gold", "propColor propColor-gold" + (this.isPropSelected(_0x411f71, "gold") ? " selected" : "") + (this.hasBoughtProp(_0x411f71, "gold") ? " bought" : ""));
    _0x1b5243.appendChild(a0_0x2c643f("div", "", "color"));
    _0x25a24f.appendChild(a0_0x2c643f("div", "", "color"));
    _0x244fc8.appendChild(a0_0x2c643f("div", "", "color"));
    _0x2f8e56.appendChild(a0_0x2c643f("div", "", "color"));
    _0x2b4417.appendChild(a0_0x2c643f("div", "", "color"));
    _0x4767cf.appendChild(a0_0x2c643f("div", "", "color"));
    _0x1b5243.onclick = function () {
      a0_0x5092e6.setPropColor(_0x411f71, "white");
    };
    _0x25a24f.onclick = function () {
      a0_0x5092e6.setPropColor(_0x411f71, "red");
    };
    _0x244fc8.onclick = function () {
      a0_0x5092e6.setPropColor(_0x411f71, "green");
    };
    _0x2f8e56.onclick = function () {
      a0_0x5092e6.setPropColor(_0x411f71, "blue");
    };
    _0x2b4417.onclick = function () {
      a0_0x5092e6.setPropColor(_0x411f71, "pink");
    };
    _0x4767cf.onclick = function () {
      a0_0x5092e6.setPropColor(_0x411f71, "gold");
    };
    _0x1b2145.appendChild(_0x1b5243);
    _0x1b2145.appendChild(_0x25a24f);
    _0x1b2145.appendChild(_0x244fc8);
    _0x1b2145.appendChild(_0x2f8e56);
    _0x1b2145.appendChild(_0x2b4417);
    _0x1b2145.appendChild(_0x4767cf);
    var _0x2152a9 = document.getElementById("propBuyDiv");
    _0x2152a9.innerHTML = "";
  }
};
a0_0x5cc57b.prototype.propAnimal = null;
a0_0x5cc57b.prototype.updatePropsForAnimal = function () {
  console.log(this.props);
  var _0x3c5e55 = a0_0x41cceb;
  var _0x8a8d7c = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x3c5e55);
  _0x8a8d7c.animalType = _0x3c5e55;
  _0x8a8d7c.animalSpecies = 0;
  _0x8a8d7c.animalSubSpecies = 0;
  _0x8a8d7c.animalPremiumSkin = 0;
  var _0x5526cb = a0_0x1cfe71("", "propimg");
  var _0x125dc4 = a0_0x1cfe71("", "propimg");
  var _0x5b9fbd = a0_0x1cfe71("", "propimg");
  var _0x111d37 = a0_0x1cfe71("", "propimg");
  var _0x2675dc = a0_0x1cfe71("", "propimg");
  var _0x508114 = document.getElementById("propAnimal");
  _0x508114.innerHTML = "";
  var _0x5bdc2f = "skins/" + _0x8a8d7c.animalInfo().skinName + ".png";
  var _0x4649fa = "/props/" + _0x3c5e55 + "/beards/" + this.props.beardsColor + ".png";
  var _0x595ba3 = "/props/" + _0x3c5e55 + "/hats/" + this.props.hatsColor + ".png";
  var _0x506ab7 = "/props/" + _0x3c5e55 + "/scarfs/" + this.props.scarfsColor + ".png";
  var _0x14f5b8 = "/props/" + _0x3c5e55 + "/glasses/" + this.props.glassesColor + ".png";
  console.log(_0x4649fa);
  _0x125dc4.style.backgroundImage = "url(" + _0x4649fa + ")";
  _0x5526cb.style.backgroundImage = "url(" + _0x5bdc2f + ")";
  _0x5b9fbd.style.backgroundImage = "url(" + _0x595ba3 + ")";
  _0x111d37.style.backgroundImage = "url(" + _0x506ab7 + ")";
  _0x2675dc.style.backgroundImage = "url(" + _0x14f5b8 + ")";
  _0x508114.appendChild(_0x125dc4);
  _0x508114.appendChild(_0x5526cb);
  _0x508114.appendChild(_0x111d37);
  _0x508114.appendChild(_0x2675dc);
  _0x508114.appendChild(_0x5b9fbd);
};
a0_0x5cc57b.prototype.getPropColorNum = function (_0x43a365) {
  switch (_0x43a365) {
    case "white":
      return 0;
    case "red":
      return 1;
    case "green":
      return 2;
    case "blue":
      return 3;
    case "pink":
      return 4;
    case "gold":
      return 5;
  }
};
a0_0x5cc57b.prototype.setPropColor = function (_0x1ac407, _0x13b0f3) {
  var _0x5757af = _0x1ac407 + "Color";
  var _0xc2bd8c = document.getElementById("propColor-" + _0x13b0f3);
  var _0x1fecdc = document.getElementById("propColor-red");
  var _0x24e122 = document.getElementById("propColor-green");
  var _0x2526f9 = document.getElementById("propColor-blue");
  var _0x3bd158 = document.getElementById("propColor-pink");
  var _0x2533be = document.getElementById("propColor-white");
  var _0x4f9fcc = document.getElementById("propColor-gold");
  _0x1fecdc.className = "propColor propColor-red" + (this.hasBoughtProp(_0x1ac407, "red") ? " bought" : "");
  _0x24e122.className = "propColor propColor-green" + (this.hasBoughtProp(_0x1ac407, "green") ? " bought" : "");
  _0x2526f9.className = "propColor propColor-blue" + (this.hasBoughtProp(_0x1ac407, "blue") ? " bought" : "");
  _0x3bd158.className = "propColor propColor-pink" + (this.hasBoughtProp(_0x1ac407, "pink") ? " bought" : "");
  _0x2533be.className = "propColor propColor-white" + (this.hasBoughtProp(_0x1ac407, "white") ? " bought" : "");
  _0x4f9fcc.className = "propColor propColor-gold" + (this.hasBoughtProp(_0x1ac407, "gold") ? " bought" : "");
  var _0x3dc9cc = document.getElementById("propBuyDiv");
  _0x3dc9cc.innerHTML = "";
  var _0x515f7e = a0_0x2c643f("div", "propBuyBtn", "buybutton");
  _0x515f7e.onclick = function () {
    alert("buy prop: " + _0x1ac407 + " color: " + _0x13b0f3);
  };
  if (this.isPropSelected(_0x1ac407, _0x13b0f3)) {
    this.props[_0x5757af] = "";
    _0xc2bd8c.className = "propColor propColor-" + _0x13b0f3;
  } else {
    this.props[_0x5757af] = this.getPropColorNum(_0x13b0f3);
    _0xc2bd8c.className = "propColor propColor-" + _0x13b0f3 + " selected";
    if (!this.hasBoughtProp(_0x1ac407, _0x13b0f3)) {
      var _0x1abcb5 = new Image();
      _0x1abcb5.className = "buycoin-img";
      _0x1abcb5.src = "shop/mopecoin.png";
      var _0x4a9cb9 = a0_0x2c643f("span", "", "buycoin-price");
      _0x4a9cb9.innerHTML = 100 + this.getPropColorNum(_0x13b0f3) * 100;
      _0x515f7e.appendChild(_0x1abcb5);
      _0x515f7e.appendChild(_0x4a9cb9);
      _0x3dc9cc.appendChild(_0x515f7e);
    }
  }
  this.updatePropsForAnimal();
};
a0_0x5cc57b.prototype.addBackButton = function (_0x206c0c) {
  var _0x5e5d1e = a0_0x2c643f("li", "back", "title ");
  var _0x4ea84d = new Image();
  _0x4ea84d.src = "shop/back.png";
  _0x5e5d1e.appendChild(_0x4ea84d);
  _0x5e5d1e.onclick = function () {
    a0_0x5092e6.showShopButtons();
  };
  _0x206c0c.appendChild(_0x5e5d1e);
};
a0_0x5cc57b.prototype.addCloseButton2 = function (_0xca8c58) {
  var _0x3642f4 = a0_0x2c643f("li", "closebtn", "title ");
  var _0x6adc05 = new Image();
  _0x6adc05.src = "shop/close.png";
  _0x3642f4.appendChild(_0x6adc05);
  _0x3642f4.onclick = function () {
    a0_0x3e0a5d();
  };
  _0xca8c58.appendChild(_0x3642f4);
};
a0_0x5cc57b.prototype.coinsInterface = function () {
  if (a0_0x574cee) {
    alert("COIN PURCHASE IS DISABLED ON BETA");
    return;
  }
  if (!a0_0x5863e5()) {
    a0_0x5092e6.showLoginScreen();
    return;
  }
  a0_0x4643d6();
  return;
  this.deleteTab();
  var _0x212a40 = a0_0x1cfe71("shop_div", "");
  var _0x192158 = a0_0x2c643f("ul");
  _0x212a40.appendChild(_0x192158);
  this.addCloseButton2(_0x192158);
  this.addBackButton(_0x192158);
  for (t = 0; t < this.shop.coins.length; t++) {
    var _0x290d17 = this.shop.coins[t];
    var _0x424ef1 = a0_0x2c643f("li", _0x290d17.name, "title");
    _0x424ef1.innerHTML = _0x290d17.name;
    _0x424ef1.onclick = function () {
      a0_0x5092e6.showTab(this.id);
    };
    _0x192158.appendChild(_0x424ef1);
    var _0x1e2308 = a0_0x2c643f("div", "tab-" + _0x290d17.name, "tab");
    var _0x1c3d5b = a0_0x2c643f("div", undefined, "content");
    var _0x2f4e33 = a0_0x2c643f("div", undefined, "content-inner");
    var _0x5d6cfd = a0_0x2c643f("div", "content-items-" + _0x290d17.name, "content-items");
    var _0x14c10a = a0_0x2c643f("div", "left-" + _0x290d17.name, "left");
    var _0x4ed7e6 = a0_0x2c643f("div", "pages-" + _0x290d17.name, "content-items-pages");
    var _0x1d541b = a0_0x2c643f("div", "left-" + _0x290d17.name, "right");
    _0x1d541b.onclick = function () {
      a0_0x5092e6.scrollItems(this, true);
    };
    _0x14c10a.onclick = function () {
      a0_0x5092e6.scrollItems(this, false);
    };
    _0x2f4e33.append(_0x5d6cfd);
    var _0x254fcb = Math.ceil(_0x290d17.items.length / 4);
    _0x5d6cfd.setAttribute("data-pages", _0x254fcb);
    _0x5d6cfd.setAttribute("data-curPage", 0);
    if (_0x290d17.name == "Coins") {
      _0x5d6cfd.style.width = "615px";
    } else {
      _0x5d6cfd.style.width = _0x254fcb * 530 + "px";
    }
    _0x4ed7e6.innerHTML = "Page: 1 of " + _0x254fcb;
    for (i = 0; i < _0x290d17.items.length; i++) {
      var _0x370fdc = _0x290d17.items[i];
      _0x5d6cfd.appendChild(_0x370fdc.generateHtml());
    }
    _0x1c3d5b.append(_0x2f4e33);
    _0x1c3d5b.append(a0_0x2c643f("div", "", "separator"));
    _0x2f4e33.append(a0_0x2c643f("div", "", "separator"));
    _0x5d6cfd.append(a0_0x2c643f("div", "", "separator"));
    _0x1e2308.append(_0x1c3d5b);
    _0x1e2308.append(a0_0x2c643f("div", "", "separator"));
    _0x212a40.appendChild(_0x1e2308);
  }
  this.showUserExpBarAndCoinsBalance(_0x192158);
  _0x212a40.append(a0_0x2c643f("div", "", "separator"));
  this.shopDiv.appendChild(_0x212a40);
  this.showTab("Coins");
};
a0_0x5cc57b.prototype.curTabPage = 0;
a0_0x5cc57b.prototype.setVisiblePage = function (_0xace5ab, _0x2659f0) {
  var _0x26b292 = document.getElementById("pages-" + _0xace5ab);
  if (!_0x26b292) {
    return;
  }
  var _0x3198b0 = "content-items-" + _0xace5ab;
  var _0x2a9962 = document.getElementById(_0x3198b0);
  if (_0x2a9962) {
    var _0x40b0be = _0x2a9962.getAttribute("data-pages");
    _0x2a9962.setAttribute("data-curPage", _0x2659f0);
    this.curTabPage = _0x2659f0;
    _0x26b292.innerHTML = "Page: " + (_0x2659f0 + 1) + " of " + _0x40b0be;
    var _0x29aff2 = _0x2659f0 * -528;
    _0x2a9962.style.left = _0x29aff2 + "px";
    _0x2a9962.style.webkitAnimation = "";
  }
};
a0_0x5cc57b.prototype.scrollItems = function (_0x4a5562, _0x215142) {
  var _0x3a1bda = _0x4a5562.id.split("-")[1];
  var _0x4183d3 = "content-items-" + _0x3a1bda;
  var _0x229c94 = document.getElementById(_0x4183d3);
  var _0x563303 = _0x229c94.getAttribute("data-pages");
  var _0x36ff5d = Number(_0x229c94.getAttribute("data-curPage"));
  if (_0x36ff5d < _0x563303 - 1 && _0x215142) {
    _0x36ff5d++;
  } else if (_0x36ff5d > 0 && !_0x215142) {
    _0x36ff5d--;
  }
  this.setVisiblePage(_0x3a1bda, _0x36ff5d);
};
a0_0x5cc57b.prototype.version = 0.2;
a0_0x5cc57b.prototype.onLogon = function () {
  console.log("MopeShop " + this.version + " onLogon");
  if (a0_0x2d3651) {
    var _0x339929 = document.getElementById("accountsDiv");
    if (_0x339929) {
      var _0x2a83bc = a0_0x1cfe71("profilePic", "profilePic");
      var _0x2b6cb0 = new Image();
      var _0x1e5cac = a0_0x1cfe71("profileName", "profileName");
      _0x2a83bc.appendChild(_0x2b6cb0);
      if (a0_0x2ab42e) {
        _0x2b6cb0.src = a0_0x2ab42e;
      }
      _0x1e5cac.innerHTML = a0_0x36fe5f;
      _0x339929.appendChild(_0x2a83bc);
      var _0x80adfd = a0_0x40aaf;
      var _0x483e64 = a0_0x2c643f("div", "user-exp2", "user-exp");
      var _0x33c124 = a0_0x2c643f("div", "userxp-bar2", "userxp-bar");
      var _0x474a40 = a0_0x2c643f("div", "userxp-barbar2", "userxp-barbar");
      var _0xa40881 = a0_0x2c643f("div", "userxp-val2", "userxp-val");
      var _0x4db6b9 = a0_0x2c643f("div", "userxp-star2", "userxp-star");
      var _0x4dde66 = 100;
      _0xa40881.innerHTML = _0x4dde66 + " / " + _0x80adfd.xpNextLvl;
      _0x4dde66 = _0x4dde66 / _0x80adfd.xpNextLvl * 100;
      _0x474a40.style.width = _0x4dde66 + "px";
      _0x4db6b9.innerHTML = _0x80adfd.level;
      _0x33c124.appendChild(_0x474a40);
      _0x483e64.appendChild(_0x33c124);
      _0x483e64.appendChild(_0xa40881);
      _0x483e64.appendChild(_0x4db6b9);
      var _0x112057 = a0_0x2c643f("div", "coins-balance2", "coins-balance");
      var _0x243501 = new Image();
      _0x243501.src = "shop/mopecoin.png";
      _0x243501.className = "buycoin-img";
      _0x112057.appendChild(_0x243501);
      var _0x28fe3e = a0_0x2c643f("div", "coins2", "coins");
      _0x28fe3e.innerHTML = a0_0x34555e();
      _0x112057.appendChild(_0x28fe3e);
      _0x112057.setAttribute("title", "add more coins");
      _0x112057.onclick = function () {
        a0_0x3e0a5d();
        a0_0x5092e6 = new a0_0x5cc57b();
        a0_0x5cc57b.prototype.callback = function () {
          this.coinsInterface();
          a0_0x5cc57b.prototype.callback = null;
        };
        a0_0x5092e6.load();
      };
      var _0x5ad490 = a0_0x1cfe71("userNameExpDiv", "userNameExpDiv");
      _0x5ad490.appendChild(_0x1e5cac);
      _0x5ad490.appendChild(a0_0x1cfe71(undefined, "clear"));
      _0x5ad490.appendChild(_0x483e64);
      _0x5ad490.appendChild(a0_0x1cfe71(undefined, "clear"));
      _0x5ad490.appendChild(_0x112057);
      _0x339929.appendChild(_0x5ad490);
      _0x339929.appendChild(a0_0x1cfe71(undefined, "clear"));
    }
  }
};
a0_0x5cc57b.prototype.playerSettings_update = function (_0xbfad1f) {
  console.log("update: " + _0xbfad1f);
  a0_0x5092e6.removeBlockOverlay();
  a0_0x5092e6.blockOverlay();
  a0_0x1f0624(_0xbfad1f, function (_0x49c9df, _0x355009) {
    if (_0x49c9df) {
      a0_0x53eb81("Settings updated successfully!", "success", 5);
      var _0x47c004 = 1;
      _0x47c004 += 1;
      if (a0_0x2d3651) {
        _0x47c004 += a0_0xaad8f5(a0_0x1c0ca2).length + 2;
        _0x47c004 += a0_0xaad8f5(a0_0x2bc035).length + 2;
      }
      var _0x107615 = new a0_0x32d020(_0x47c004);
      _0x107615.writeUInt8(71);
      _0x107615.writeUInt8(a0_0x2d3651 ? 1 : 0);
      if (a0_0x2d3651) {
        _0x107615.writeString(a0_0x1c0ca2);
        _0x107615.writeString(a0_0x2bc035);
      }
      a0_0x1f8a37(_0x107615);
      a0_0x325183(true);
      a0_0x13cb86();
    } else {
      switch (_0x355009) {
        case "alreadyowned":
          a0_0x53eb81("AccountServer: item already purchased!", _0x355009, 15);
          break;
        case "cantafford":
          a0_0x53eb81("AccountServer: not enough coins to buy this!", _0x355009, 15);
          break;
        case "urlnotfound":
          a0_0x53eb81("AccountServer: Can't reach server at this moment!", "itemDoesntExist", 15);
          break;
      }
    }
    a0_0x5092e6.removeBlockOverlay();
  });
};
window.MopeShop = a0_0x5cc57b;
var a0_0x5092e6 = new a0_0x5cc57b();
var a0_0x5aae6d = document.getElementById("divButtons");
if (a0_0x2d3651) {
  a0_0x5aae6d.style.display = "none";
} else {
  a0_0x5aae6d.style.display = "block";
}
function a0_0x385575(_0x30ce73) {
  var _0x126e08 = document.createElement("div");
  _0x126e08.id = "shopOverlay";
  _0x126e08.className = "shopOverlay center";
  var _0x238380 = document.createElement("div");
  _0x238380.className = "shopOverlay_plzwait";
  _0x238380.innerHTML = "Please wait...";
  _0x126e08.appendChild(_0x238380);
  var _0x13415c = document.getElementsByTagName("body")[0];
  _0x13415c.prepend(_0x126e08);
  if (_0x30ce73) {
    a0_0x5092e6.actionBtn = _0x30ce73;
  }
  a0_0x1cd733();
}
function a0_0x1f23f9(_0x240da1) {
  var _0x2f8d5a = a0_0x2c643f("input", "txtCopy");
  _0x2f8d5a.setAttribute("type", "text");
  _0x2f8d5a.setAttribute("value", _0x240da1);
  console.log(_0x2f8d5a);
  _0x2f8d5a.select();
  _0x2f8d5a.setSelectionRange(0, 99999);
  document.execCommand("copy");
  alert("Copied the text: " + _0x2f8d5a.value);
}
a0_0x5092e6.loadData();
a0_0x5cc57b.prototype.getAnimalInfo = function (_0x558b98, _0x5e1dd1) {
  switch (_0x558b98) {
    case "sampleTestSkin":
      return [a0_0x41cceb, 250, "Sample Mouse", "land/mouse/250/mouse"];
    case "summer21_seamonster":
      return [a0_0x5aaf14, 201, "Ancient Tortoise", "ocean/seamonster/201/seamonster"];
    case "summer21_puffer":
      return [a0_0x2b355b, 201, "Omniball Puffer", "ocean/pufferfish/201/pufferfish"];
    case "summer21_turtle":
      return [a0_0x4a4da1, 201, "Kiwi Turtle", "ocean/turtle/201/turtle"];
    case "summer21_octopus":
      return [a0_0x2f54ae, 201, "Fuchsia Tiger", "ocean/octopus/201/octopus.ui"];
    case "summer21_orca":
      return [a0_0x594c30, 201, "Lifeguard Orca", "ocean/killerwhale/201/killerwhale"];
    case "summer21_iceMonster":
      return [a0_0xadcba8, 201, "Cryo Coach Monster", "arctic/icemonster/201/icemonster"];
    case "summer21_mammoth":
      return [a0_0x5d0d4b, 201, "Lost Tourist", "arctic/mammoth/201/mammoth"];
    case "summer21_crab":
      return [a0_0x200e1e, 201, "Coconut Crab", "ocean/crab/201/crab"];
    case "summer21_hare":
      return [a0_0x303108, 201, "Snow Cone Hare", "arctic/arctichare/201/arctichare"];
    case "summer21_shrimp":
      return [a0_0x306fa0, 201, "Chef Shrimp", "ocean/shrimp/201/shrimp"];
    case "summer21_walrus":
      return [a0_0x525e00, 201, "Walrusmelon", "arctic/walrus/201/walrus"];
    case "summer21_squid":
      return [a0_0x384a46, 201, "Seacoast Squid", "ocean/squid/201/squid.ui"];
    case "summer21_fox":
      return [a0_0x368012, 201, "Forest Sprit Fox", "arctic/arcticfox/201/arcticfox"];
    case "summer21_seal":
      return [a0_0x8a2dda, 201, "Hawaiian Monk", "arctic/seal/201/seal"];
    case "summer21_wolf":
      return [a0_0x5f1ae8, 201, "Pineapple Wolf", "arctic/wolf/201/wolf"];
    case "summer21_markhor":
      return [a0_0x18f3b8, 201, "Fruity Ice Markhor", "arctic/markhor/201/1/markhor"];
    case "summer21_warthog":
      return [a0_0x35d611, 201, "Flame Tiki", "desert/warthog/201/warthog"];
    case "summer21_chicken":
      return [a0_0x1b8d24, 201, "Countryside Chick", "land/chicken/201/chicken"];
    case "summer21_owl":
      return [a0_0xff40c0, 201, "Snowy Owrigami", "arctic/snowyowl/201/snowyowl"];
    case "summer21_zebra":
      return [a0_0x5ce3eb, 201, "Playground Zebra", "land/zebra/201/zebra"];
    case "summer21_croc":
      return [a0_0x13971c, 201, "Big Hoss", "land/croc/0/201/croc"];
    case "summer21_meerkat":
      return [a0_0x67458, 201, "Scubakat", "desert/meerkat/201/meerkat"];
    case "summer21_rhino":
      return [a0_0x5812ad, 201, "Shrub Rhino", "land/rhino/201/rhino"];
    case "summer21_elephant":
      return [a0_0x54926b, 201, "Leiphant", "land/elephant/0/201/elephant"];
    case "summer21_pig":
      return [a0_0x31a123, 201, "Floaty Pig", "land/pig/201/pig"];
    case "summer21_camel":
      return [a0_0x1e1e1f, 201, "Balloon Warrior", "desert/camel/201/camel"];
    case "summer21_hyena":
      return [a0_0x299d82, 201, "DJ Hyena", "desert/hyena/201/hyena"];
    case "summer21_gorilla":
      return [a0_0x1efea6, 201, "Explorer Ape", "land/gorilla/0/201/gorilla"];
    case "summer21_squishyYeti":
      return [a0_0x1c04bf, 201, "Squishy Yeti", "arctic/yeti/201/yeti"];
    case "summer21_squishyKraken":
      return [a0_0x17dc35, 201, "Squishy Kraken", "ocean/kraken/201/kraken"];
    case "summer21_squishyDragon":
      return [a0_0x59b763, 201, "Squishy Dragon", "land/dragon/0/201/dragon"];
    case "summer21_mermaidWhale":
      return [a0_0x3b5853, 201, "Mermaid Whale", "ocean/bluewhale/0/201/bluewhale"];
    case "summer21_seafoamJellyfish":
      return [a0_0xbd6036, 201, "Seafoam Jellyfish", "ocean/jellyfish/201/jellyfish"];
    case "summer21_bubblyMouse":
      return [a0_0x41cceb, 201, "Bubbly Mouse", "land/mouse/201/mouse"];
    case "summer21_surfboardChomper":
      return [a0_0x59f431, 201, "Surfboard Chomper", "ocean/shark/201/shark"];
    case "summer21_surferPenguin":
      return [a0_0xb8200c, 201, "Surfer Penguin", "arctic/penguin/201/penguin"];
    case "summer21_waterGunHorse":
      return [a0_0x187484, 201, "Water Gun Horse", "ocean/seahorse/201/seahorse"];
    case "summer21_sunburnReindeer":
      return [a0_0x17ec36, 201, "Sunburn Reindeer", "arctic/reindeer/201/reindeer"];
    case "summer21_surfboardSwordfish":
      return [a0_0x182226, 201, "Surfboardfish", "ocean/swordfish/0/201/swordfish"];
    case "summer21_popsicleTrout":
      return [a0_0x1d6a29, 201, "Popsicle Trout", "ocean/trout/0/201/trout"];
    case "summer21_playfulChipmunk":
      return [a0_0x1e02a7, 201, "Playful Munk", "arctic/chipmunk/201/chipmunk"];
    case "summer21_fireworkOx":
      return [a0_0x4f00b9, 201, "Fireworks Ox", "arctic/muskox/201/muskox"];
    case "summer21_chocolateStingray":
      return [a0_0x4441e0, 201, "Chocolate Ray", "ocean/stingray/201/stingray.ui"];
    case "summer21_connoisseurBear":
      return [a0_0x56a2ab, 201, "Cola Connoisseur", "arctic/bear/201/bear"];
    case "summer21_coralQueen":
      return [a0_0x4b16c6, 201, "Coral Queen", "arctic/snowleopard/201/snowleopard"];
    case "summer21_strawbertoothTiger":
      return [a0_0x4f58e6, 201, "Strawbertooth", "arctic/sabertooth/201/sabertooth"];
    case "skin_leatherBackTurtle":
      return [a0_0x4a4da1, 200, "Leather Back\nTurtle", "ocean/turtle/200/turtle"];
    case "skin_celestialCobra":
      return [a0_0x22a451, 200, "Celestial Cobra", "land/cobra/200/cobra"];
    case "skin_brazenBull":
      return [a0_0x4f00b9, 200, "Brazen Bull", "arctic/muskox/200/muskox"];
    case "skin_luckyCharmMonster":
      return [a0_0x5aaf14, 200, "Luckycharm Monster", "ocean/seamonster/200/seamonster"];
    case "skin_iceToucan":
      return [a0_0x5aa20b, 200, "Ice Toucan", "land/toucan/200/toucan"];
    case "skin_clowoudLion":
      return [a0_0x2c2f52, 200, "Clowoud Lion", "land/lion/200/0/lion"];
    case "skin_sunsetClowoudLion":
      return [a0_0x2c2f52, 200, "Sunset\nClowoud Lion", "land/lion/200/1/lion"];
    case "skin_stormClowoudLion":
      return [a0_0x2c2f52, 200, "Storm\nClowoud Lion", "land/lion/200/2/lion"];
    case "skin_kaijuRex":
      return [a0_0x45db7b, 200, "Kaiju Rex", "land/trex/200/trex"];
    case "skin_warTHog":
      return [a0_0x35d611, 200, "WarT. Hog", "desert/warthog/200/warthog"];
    case "skin_velvetChimp":
      return [a0_0x4dbc97, 200, "Velvet\nChipmunk", "desert/chipmunk/200/chipmunk"];
    case "skin_aquaPhoenix":
      return [a0_0x1e1209, 200, "Aqua Phoenix", "volcano/phoenix/200/0/phoenix"];
    case "skin_icePhoenix":
      return [a0_0x1e1209, 200, "Ice Phoenix", "volcano/phoenix/200/1/phoenix"];
    case "skin_ashPhoenix":
      return [a0_0x1e1209, 200, "Ash Phoenix", "volcano/phoenix/200/2/phoenix"];
    case "skin_redGiantPhoenix":
      return [a0_0x1e1209, 200, "Red Giant\nPhoenix", "volcano/phoenix/200/3/phoenix"];
    case "skin_goofyDragon":
      return [a0_0x59b763, 200, "Goofy Dragon", "land/dragon/0/101/dragon"];
    case "skin_desertDragon":
      return [a0_0x59b763, 200, "Desert Dragon", "land/dragon/0/102/dragon"];
    case "skin_forgeDragon":
      return [a0_0x59b763, 200, "Forge Dragon", "land/dragon/0/103/dragon"];
    case "skin_mythicalSerpent":
      return [a0_0x59b763, 200, "Mythical Serpent", "land/dragon/0/104/dragon"];
    case "skin_fireyDragon":
      return [a0_0x59b763, 200, "Firey Dragon", "land/dragon/0/105/dragon"];
    case "skin_technoSaber":
      return [a0_0x4f58e6, 200, "Techno\nSabertooth", "arctic/sabertooth/200/sabertooth"];
    case "skin_iceFox":
      return [a0_0x90abb, 200, "Ice Fox", "arctic/arcticfox/200/arcticfox"];
    case "skin_clownfish":
      return [a0_0x1d6a29, 200, "Clownfish", "ocean/trout/0/200/trout"];
    case "skin_tullyMonster":
      return [a0_0x187484, 200, "Tully\nMonster", "ocean/seahorse/200/seahorse"];
    case "skin_vampireSquid":
      return [a0_0x2f54ae, 200, "Vampire\nSquid", "ocean/octopus/200/octopus"];
    case "skin_cuttlefish":
      return [a0_0x384a46, 200, "Cuttle Fish", "ocean/squid/200/squid"];
    case "skin_deluxeShrimp":
      return [a0_0x306fa0, 200, "Deluxe\nShrimp", "ocean/shrimp/200/shrimp"];
    case "skin_monochromeRabbit":
      return [a0_0x621981, 200, "Monochrome\nRabbit", "land/rabbit/200/rabbit"];
    case "skin_nightFox":
      return [a0_0x368012, 200, "Thief of\nThe Night", "land/fox/200/fox"];
    case "skin_plagueRaptor":
      return [a0_0x3889a8, 200, "Plague\nRaptor", "land/peacock/200/peacock.ui"];
    case "skin_titanBison":
      return [a0_0x273412, 200, "Titan Bison", "desert/bison/200/bison"];
    case "skin_dowagerVarande":
      return [a0_0x5650e3, 200, "Dowager Varande", "desert/komododragon/200/0/komodo"];
    case "skin_emeprorVarande":
      return [a0_0x5650e3, 200, "Emepror Varande", "desert/komododragon/200/1/komodo"];
    case "skin_rubyDevil":
      return [a0_0x77ab87, 200, "Ruby Devil", "land/dinomonster/200/dinomonster"];
    case "skin_metalicCrab":
      return [a0_0x200e1e, 200, "Metallic Crab", "ocean/crab/200/crab"];
    case "skin_queenFlame":
      return [a0_0x5d0b67, 200, "Queen Flame", "volcano/kingdragon/200/kingdragon"];
    case "halloween_wyrmous":
      return [a0_0x22a451, 100, "Wyrmous", "land/cobra/100/cobra"];
    case "halloween_equusthulhu":
      return [a0_0x55a097, 100, "Equusthulhu", "land/donkey/100/donkey"];
    case "halloween_frostaline":
      return [a0_0x4b16c6, 100, "Frostaline", "arctic/snowleopard/100/snowleopard"];
    case "halloween_pufferMace":
      return [a0_0x2b355b, 100, "Puffermace", "ocean/pufferfish/100/pufferfish"];
    case "halloween_carnageodactyl":
      return [a0_0x407000, 100, "Carnageodactyl", "desert/pterodactyl/100/pterodactyl_ability"];
    case "halloween_mrDollar":
      return [a0_0x45db7b, 100, "Mr. Dollar", "land/trex/100/trex"];
    case "halloween_wendigoDeer":
      return [a0_0x2d5af4, 100, "The Wendigo", "land/deer/100/deer"];
    case "halloween_cactiRat":
      return [a0_0x5a237f, 100, "Cacti Rat", "desert/kangaroorat/100/kangaroorat"];
    case "halloween_hiPower":
      return [a0_0x50d9f7, 100, "Swampster", "land/hippo/100/hippo"];
    case "halloween_puumpkat":
      return [a0_0x67458, 100, "Puumpkat", "desert/meerkat/100/meerkat"];
    case "halloween_doomedarius":
      return [a0_0x1e1e1f, 100, "The Doomedarius", "desert/camel/100/camel"];
    case "halloween_roboMouse":
      return [a0_0x41cceb, 100, "Robo Mouse", "land/mouse/100/mouse"];
    case "halloween_uncleSam":
      return [a0_0x13971c, 100, "Uncle Sam", "land/croc/0/100/croc"];
    case "halloween_zombieMole":
      return [a0_0x391884, 100, "Zombie Mole", "land/mole/100/mole"];
    case "halloween_flammyHart":
      return [a0_0xee8954, 100, "Flammy Hart", "desert/gazelle/100/gazelle"];
    case "halloween_gummyViper":
      return [a0_0x38e019, 100, "Gummy Viper", "desert/rattlesnake/100/rattlesnake"];
    case "halloween_grimRipper":
      return [a0_0x1efea6, 100, "Grim Reaper", "land/gorilla/0/100/gorilla"];
    case "halloween_bigCookie":
      return [a0_0x2a0a8a, 100, "Big Cookie", "land/bigcat/100/bigcat"];
    case "halloween_gargolgon":
      return [a0_0x59b763, 100, "The Gargon", "land/dragon/0/100/dragon"];
    case "halloween_candyRus":
      return [a0_0x525e00, 100, "Candy Rus", "arctic/walrus/100/walrus"];
    case "halloween_mantilian":
      return [a0_0x2c2f52, 100, "The Mantilian", "land/lion/100/lion"];
    case "halloween_phantomRay":
      return [a0_0x4441e0, 100, "Phantom Ray", "ocean/stingray/100/stingray"];
    case "halloween_suitedToucan":
      return [a0_0x5aa20b, 100, "The Dapper", "land/toucan/100/toucan"];
    case "halloween_vulgeist":
      return [a0_0x1ad6bd, 100, "The Vulgeist", "desert/vulture/100/vulture"];
    case "halloween_burlone":
      return [a0_0x35d611, 100, "The Burlone", "desert/warthog/100/warthog"];
    case "halloween_unicornze":
      return [a0_0x5ce3eb, 100, "Unicornze", "land/zebra/100/zebra"];
    case "gold_blackDragon":
      return [a0_0x332990, 1, "Golden\nBlack Dragon", "volcano/blackdragon/1/blackdragon"];
    case "gold_kingDragon":
      return [a0_0x5d0b67, 1, "Golden\nKing Dragon", "volcano/kingdragon/1/kingdragon"];
    case "gold_Dragon":
      return [a0_0x59b763, 1, "Golden\nDragon", "land/dragon/0/1/dragon"];
    case "gold_kraken":
      return [a0_0x17dc35, 1, "Golden\nKraken", "ocean/kraken/1/kraken"];
    case "gold_yeti":
      return [a0_0x1c04bf, 1, "Golden\nYeti", "arctic/yeti/1/yeti"];
    case "gold_trex":
      return [a0_0x45db7b, 1, "Golden\nT.Rex", "land/trex/1/trex"];
    case "gold_kingCrab":
      return [a0_0x487fb5, 1, "Golden\nCrab", "ocean/kingcrab/1/kingcrab"];
    case "gold_phoenix":
      return [a0_0x1e1209, 1, "Golden\nPhoenix", "volcano/phoenix/1/phoenix"];
    case "gold_pterodactyl":
      return [a0_0x407000, 1, "Golden\nPterodactyl", "desert/pterodactyl/1/pterodactyl_ability"];
    case "gold_iceMonster":
      return [a0_0xadcba8, 1, "Golden\nIce Monster", "arctic/icemonster/1/icemonster"];
    case "gold_dinoMonster":
      return [a0_0x77ab87, 1, "Golden\nDino Monster", "land/dinomonster/1/dinomonster"];
    case "gold_seaMonster":
      return [a0_0x5aaf14, 1, "Golden\nSea Monster", "ocean/seamonster/1/seamonster"];
    case "gold_landMonster":
      return [a0_0x53b0d7, 1, "Golden\nLand Monster", "volcano/landmonster/0/1/landmonster"];
    case "gold_giantScorion":
      return [a0_0x3a4899, 1, "Golden\nGiant Scorpion", "desert/scorpion/1/giantscorpion"];
    case "gold_bluewhale":
      return [a0_0x3b5853, 1, "Golden\nBlue Whale", "ocean/bluewhale/0/1/bluewhale"];
    case "gold_elephant":
      return [a0_0x54926b, 1, "Golden\nElephant", "land/elephant/1/elephant"];
    case "gold_cassowary":
      return [a0_0x52a8a7, 1, "Golden\nCassowary", "land/cassowary/1/cassowary"];
    case "gold_giantspider":
      return [a0_0x357359, 1, "Golden\nGiant Spider", "land/giantspider/1/giantspider"];
    case "gold_blackwidow":
      return [a0_0x533584, 1, "Golden\nBlackwidow", "desert/blackwidow/0/1/blackwidow"];
    case "gold_mammoth":
      return [a0_0x5d0d4b, 1, "Golden\nMammoth", "arctic/mammoth/1/mammoth"];
    case "gold_hippo":
      return [a0_0x50d9f7, 1, "Golden\nHippo", "land/hippo/1/hippo"];
    case "gold_ostrich":
      return [a0_0x5c6ee3, 1, "Golden\nOstrich", "land/ostrich/1/ostrich"];
    case "gold_boa":
      return [a0_0x52bfa4, 1, "Golden\nBoa", "land/boaconstrictor/1/boaconstrictor"];
    case "gold_komodo":
      return [a0_0x5650e3, 1, "Golden\nKomodo", "desert/komododragon/1/komodo"];
    case "gold_killerwhale":
      return [a0_0x594c30, 1, "Golden\nKiller Whale", "ocean/killerwhale/1/killerwhale"];
    case "gold_sabertooth":
      return [a0_0x4f58e6, 1, "Golden\nSabertooth", "arctic/sabertooth/1/sabertooth"];
    case "skin_blueDragon":
      return [a0_0x332990, 2, "The\nAzure Bringer", "volcano/blackdragon/2/blackdragon"];
    case "skin_kingRipper":
      return [a0_0x5d0b67, 2, "King\nRipper", "volcano/kingdragon/2/kingdragon"];
    case "skin_kingStan":
      return [a0_0x5d0b67, 3, "King\nStan", "volcano/kingdragon/3/kingdragon"];
    case "skin_kingShah":
      return [a0_0x5d0b67, 4, "King\nShah", "volcano/kingdragon/4/kingdragon"];
    case "skin_dragon_gray":
      return [a0_0x59b763, 2, "Knight\nDragon", "land/dragon/0/2/dragon"];
    case "skin_kraken_cyan":
      return [a0_0x17dc35, 2, "Chromatic\nKraken", "ocean/kraken/2/kraken"];
    case "skin_yeti_emerald":
      return [a0_0x1c04bf, 2, "Emerald\nYeti", "arctic/yeti/2/yeti"];
    case "skin_snowman":
      return [a0_0x187b1f, 1, "The\nSnowman", "arctic/snowman/1/snowman"];
    case "skin_snowgirl":
      return [a0_0x187b1f, 2, "The\nSnowgirl", "arctic/snowman/2/snowgirl"];
    case "skin_trex_gray":
      return [a0_0x45db7b, 2, "Ember\nT.Rex", "land/trex/2/trex"];
    case "skin_kingCrab":
      return [a0_0x487fb5, 2, "Amethyst\nCrab", "ocean/kingcrab/2/kingcrab"];
    case "skin_phoenix_blue":
      return [a0_0x1e1209, 2, "Alpha\nPhoenix", "volcano/phoenix/2/phoenix"];
    case "skin_pterodactyl_green":
      return [a0_0x407000, 2, "Emerald\nPterodactyl", "desert/pterodactyl/2/pterodactyl_ability"];
    case "skin_iceMonster":
      return [a0_0xadcba8, 2, "Amethyst\nMonster", "arctic/icemonster/2/icemonster"];
    case "skin_dinoMonster":
      return [a0_0x77ab87, 2, "Citrine\nMonster", "land/dinomonster/2/dinomonster"];
    case "skin_seaMonster":
      return [a0_0x5aaf14, 2, "Sapphire\nMonster", "ocean/seamonster/2/seamonster"];
    case "skin_landMonster":
      return [a0_0x53b0d7, 2, "Titanite\nMonster", "volcano/landmonster/0/2/landmonster"];
    case "skin_orangeScorpion":
      return [a0_0x3a4899, 2, "Carnelian\nScorpion", "desert/scorpion/2/giantscorpion"];
    case "skin_bluewhale":
      return [a0_0x3b5853, 2, "Albino\nBlue Whale", "ocean/bluewhale/0/2/bluewhale"];
    case "skin_elephant":
      return [a0_0x54926b, 2, "White\nElephant", "land/elephant/2/elephant"];
    case "skin_cassowary":
      return [a0_0x52a8a7, 2, "Cotton\nCassowary", "land/cassowary/2/cassowary"];
    case "skin_giantspider":
      return [a0_0x357359, 2, "Goliath\nSpider", "land/giantspider/2/giantspider"];
    case "skin_blackwidow":
      return [a0_0x533584, 2, "Queen\nBlackwidow", "desert/blackwidow/0/2/blackwidow"];
    case "skin_mammoth":
      return [a0_0x5d0d4b, 2, "Black\nMammoth", "arctic/mammoth/2/mammoth"];
    case "skin_hippo":
      return [a0_0x50d9f7, 2, "Pygmy\nHippo", "land/hippo/2/hippo"];
    case "skin_ostrich":
      return [a0_0x5c6ee3, 2, "Ruffled\nOstrich", "land/ostrich/2/ostrich"];
    case "skin_boa":
      return [a0_0x52bfa4, 2, "Tree\nBoa", "land/boaconstrictor/2/boaconstrictor"];
    case "skin_komodo":
      return [a0_0x5650e3, 2, "Night\nKomodo", "desert/komododragon/2/komodo"];
    case "skin_killerwhale":
      return [a0_0x594c30, 2, "Albino\nOrca", "ocean/killerwhale/2/killerwhale"];
    case "skin_sabertooth":
      return [a0_0x4f58e6, 2, "Margala\nSabertooth", "arctic/sabertooth/2/sabertooth"];
    case "skin_tigerShark":
      return [a0_0x59f431, 2, "Tiger\nShark", "ocean/shark/1/shark"];
    case "skin_hamerHeadShark":
      return [a0_0x59f431, 3, "Hammerhead\nShark", "ocean/shark/2/shark"];
    case "skin_panda":
      return [a0_0x1458da, 2, "Panda", "land/panda/panda"];
    case "skin_zonkey":
      return [a0_0x55a097, 3, "Zonkey", "land/donkey/2/zonkey"];
    case "skin_okapi":
      return [a0_0x5ce3eb, 2, "Okapi", "land/okapi/okapi"];
    case "skin_giantCroc":
      return [a0_0x13971c, 1, "Giant\nCrocodile", "land/croc/0/1/croc"];
    case "skin_purpleMouse":
      return [a0_0x41cceb, 2, "Purple\nMouse", "land/mouse/2/mouse"];
    case "skin_prismaToucan":
      return [a0_0x5aa20b, 6, "Prisma\nToucan", "land/toucan/6/toucan"];
    case "gold_mouse":
      return [a0_0x41cceb, 1, "Golden\nMouse", "land/mouse/1/mouse"];
    case "skin_queenScarlet":
      return [a0_0x5d0b67, 5, "Queen\nScarlet", "volcano/kingdragon/5/kingdragon"];
    case "skin_queenCeleste":
      return [a0_0x5d0b67, 6, "Queen\nCeleste", "volcano/kingdragon/6/kingdragon"];
    case "skin_bigFoot":
      return [a0_0x465f60, 1, "The\nBigfoot", "land/bigfoot/1/thebigfoot"];
    case "skin_woollyRhino":
      return [a0_0x5812ad, 3, "Woolly\nRhino", "land/rhino/3/rhino"];
    case "darkPlagueRat":
      return [a0_0x41cceb, 204, "Dark Plague\nRat", "land/mouse/204/0/mouse"];
    case "lightPlagueRat":
      return [a0_0x41cceb, 204, "Light Plague\nRat", "land/mouse/204/1/mouse"];
    case "carrotRabbit":
      return [a0_0x621981, 204, "Carrot\nRabbit", "land/rabbit/204/rabbit"];
    case "darkMatterCrab":
      return [a0_0x200e1e, 204, "Dark Matter\nCrab", "ocean/crab/204/crab"];
    case "necromancerMeerkat":
      return [a0_0x67458, 204, "Necromancer\nMeerkat", "desert/meerkat/204/meerkat"];
    case "butcherPig":
      return [a0_0x31a123, 204, "Butcher\nPig", "land/pig/204/0/pig"];
    case "hotdogPig":
      return [a0_0x31a123, 204, "Hot Dog\nPig", "land/pig/204/1/pig"];
    case "voidScuttlingSquid":
      return [a0_0x384a46, 204, "Void Scuttling\nSquid", "ocean/squid/204/squid"];
    case "spideer":
      return [a0_0x17ec36, 204, "Spideer", "arctic/reindeer/204/reindeer"];
    case "blackAsuraFox":
      return [a0_0x368012, 204, "Black Asura\nFox", "land/fox/204/fox"];
    case "candyCornWarthog":
      return [a0_0x35d611, 204, "Candy Corn\nWarthog", "desert/warthog/204/warthog"];
    case "phantomGorilla":
      return [a0_0x1efea6, 204, "Phantom\nGorilla", "land/gorilla/0/204/gorilla.ui"];
    case "martianLeopard":
      return [a0_0x4b16c6, 204, "Martian\nLeopard", "arctic/snowleopard/204/snowleopard"];
    case "genieCheetah":
      return [a0_0x2a0a8a, 204, "Genie\nCheetah", "land/bigcat/204/cheetah"];
    case "chimeraTiger":
      return [a0_0x33f8d6, 204, "Chimera\nTiger", "land/tiger/204/tiger"];
    case "acidHusk":
      return [a0_0x1ad6bd, 204, "Acid\nHusk", "desert/vulture/204/vulture"];
    case "acutiRhino":
      return [a0_0x5812ad, 204, "Acuti\nRhino", "land/rhino/204/rhino"];
    case "goldenDevilGoat":
      return [a0_0x18f3b8, 204, "Golden Devil\nGoat", "arctic/markhor/204/2/markhor"];
    case "sunHippo":
      return [a0_0x50d9f7, 204, "Sun\nHippo", "land/hippo/204/hippo"];
    case "smileSpider":
      return [a0_0x357359, 204, "Smile\nSpider", "land/giantspider/204/giantspider"];
    case "bloodwidowSpider":
      return [a0_0x533584, 204, "Bloodwidow\nSpider", "desert/blackwidow/0/204/blackwidow"];
    case "basiliskCassowary":
      return [a0_0x52a8a7, 204, "Basilisk\nCassowary", "land/cassowary/204/cassowary"];
    case "magmaDragon":
      return [a0_0x59b763, 204, "Magma\nDragon", "land/dragon/0/204/dragon"];
    case "plasmacoreKingCrab":
      return [a0_0x487fb5, 204, "Plasma-core King\nCrab", "ocean/kingcrab/204/kingcrab"];
    case "frostWolf":
      return [a0_0x1c04bf, 204, "Frost\nWolf", "arctic/yeti/204/yeti"];
    case "tartarusRex":
      return [a0_0x45db7b, 204, "Tartarus\nRex", "land/trex/204/trex"];
    case "cthulhuKraken":
      return [a0_0x17dc35, 204, "Cthulhu\nKraken", "ocean/kraken/204/kraken"];
    case "necromus":
      return [a0_0x53b0d7, 204, "Necromus", "volcano/landmonster/0/204landmonster"];
    case "planetEaterMonster":
      return [a0_0x53b0d7, 204, "Planet Eater\nMonster", "volcano/landmonster/0/205/landmonster"];
    case "bloodCrystalMonster":
      return [a0_0xadcba8, 204, "Blood Crystal\nMonster", "arctic/icemonster/204/icemonster"];
    case "superMouse":
      return [a0_0x41cceb, 202, "Super Mouse", "land/mouse/202/mouse"];
    case "sushiShrimp":
      return [a0_0x306fa0, 202, "Sushi Shrimp", "ocean/shrimp/202/shrimp"];
    case "plasmaRat":
      return [a0_0x5a237f, 202, "Plasma Rat", "desert/kangaroorat/202/kangaroorat"];
    case "chipmonk":
      return [a0_0x1e02a7, 202, "Chipmonk", "desert/chipmunk/202/chipmunk"];
    case "jackapole":
      return [a0_0x621981, 202, "Jackapole", "land/rabbit/202/0/rabbit"];
    case "thugPigeon":
      return [a0_0x14b677, 202, "Thug Pigeon", "land/pigeon/202/pigeon"];
    case "royalGuppy":
      return [a0_0x1d6a29, 202, "Royal Guppy", "ocean/trout/0/202/trout"];
    case "hollowRabbit":
      return [a0_0x621981, 202, "Hollow Rabbit", "land/rabbit/202/1/rabbit"];
    case "ratMunk":
      return [a0_0x4dbc97, 202, "Ratmunk", "desert/chipmunk/202/chipmunk"];
    case "toxicMole":
      return [a0_0x391884, 202, "Toxic Mole", "land/mole/202/0/mole"];
    case "lightningLord":
      return [a0_0x1b8d24, 202, "Lightning Lord", "land/chicken/202/chicken"];
    case "ufoPigeon":
      return [a0_0xb8200c, 202, "UFO Pigeon", "arctic/penguin/202/penguin"];
    case "cytokineticMole":
      return [a0_0x391884, 202, "Cytokinetic Mole", "land/mole/202/1/mole"];
    case "piggyBank":
      return [a0_0x31a123, 202, "Piggy Bank", "land/pig/202/pig"];
    case "jackhammer":
      return [a0_0x4444cb, 202, "Jackhammer", "land/woodpecker/202/woodpecker"];
    case "leafySeadragon":
      return [a0_0x187484, 202, "Leafy Seadragon", "ocean/seahorse/202/seahorse"];
    case "soapySeal":
      return [a0_0x8a2dda, 202, "Soapy Seal", "arctic/seal/202/seal"];
    case "windupKakapo":
      return [a0_0x58d479, 202, "Wind-up Kakapo", "forest/kakapo/202/kakapo"];
    case "mevazor":
      return [a0_0x2d5af4, 202, "Mevazor", "land/deer/202/0/deer"];
    case "flyMango":
      return [a0_0x2f2687, 202, "Fly Mango", "ocean/flamingo/202/flamingo"];
    case "psychedelicSquid":
      return [a0_0x384a46, 202, "Psychedelic Squid", "ocean/squid/202/squid"];
    case "piebaldCosmos":
      return [a0_0x17ec36, 202, "Piebald Cosmos", "arctic/reindeer/202/reindeer"];
    case "retroNeonGazelle":
      return [a0_0xee8954, 202, "Retro Neon Gazelle", "desert/gazelle/202/gazelle"];
    case "divineDeer":
      return [a0_0x2d5af4, 202, "Divine Deer", "land/deer/202/1/deer"];
    case "grassHedgehog":
      return [a0_0x35d037, 202, "Grass Hedgehog", "land/hedgehog/202/hedgehog"];
    case "spectrumPeacock":
      return [a0_0x3889a8, 202, "Spectrum Peacock", "land/peacock/202/peacock"];
    case "discoJellyfish":
      return [a0_0xbd6036, 202, "Disco Jellyfish", "ocean/jellyfish/202/0/jellyfish"];
    case "iceFox":
      return [a0_0x90abb, 202, "Ice Fox", "arctic/arcticfox/202/arcticfox"];
    case "fireFox":
      return [a0_0x3950f4, 202, "Fire Fox", "desert/fennecfox/202/1/fennecfox"];
    case "muscipulaRaven":
      return [a0_0x3edbb5, 202, "Muscipula Raven", "forest/raven/202/raven"];
    case "sneakyFox":
      return [a0_0x368012, 202, "Sneaky Fox", "land/fox/202/fox"];
    case "twistedHorror":
      return [a0_0xbd6036, 202, "Twisted Horror", "ocean/jellyfish/202/1/jellyfish"];
    case "purpleFireFox":
      return [a0_0x3950f4, 202, "Purple Fire Fox", "desert/fennecfox/202/1/fennecfox"];
    case "synthZebra":
      return [a0_0x5ce3eb, 202, "Synth Zebra", "land/zebra/202/zebra"];
    case "moltenGlassTurtle":
      return [a0_0x4a4da1, 202, "Molten Glass Turtle", "ocean/turtle/202/turtle"];
    case "monitorMuskox":
      return [a0_0x4f00b9, 202, "Monitor Muskox", "arctic/muskox/202/muskox"];
    case "headlessMule":
      return [a0_0x55a097, 202, "Headless Mule", "land/donkey/202/donkey"];
    case "quilinGiraffe":
      return [a0_0x56479a, 202, "Quilin Giraffe", "land/giraffe/202/0/giraffe"];
    case "etherStingray":
      return [a0_0x4441e0, 202, "Ether Stingray", "ocean/stingray/202/0/stingray"];
    case "potatoWalrus":
      return [a0_0x525e00, 202, "Potato Walrus", "arctic/walrus/202/walrus"];
    case "fungalCamel":
      return [a0_0x1e1e1f, 202, "Fungal Camel", "desert/camel/202/camel"];
    case "draquorum":
      return [a0_0x56479a, 202, "Draquorum", "land/giraffe/202/1/giraffe"];
    case "pancakeStingray":
      return [a0_0x4441e0, 202, "Pancake Stingray", "ocean/stingray/202/1/stingray"];
    case "kongrilla":
      return [a0_0x1efea6, 202, "Kongrilla", "land/gorilla/0/202/gorilla"];
    case "corpseFlowerToucan":
      return [a0_0x5aa20b, 202, "Corpse Flower Toucan", "land/toucan/202/toucan"];
    case "ballonPufferfish":
      return [a0_0x2b355b, 202, "Balloon Pufferfish", "ocean/pufferfish/202/pufferfish"];
    case "astralLeopard":
      return [a0_0x4b16c6, 202, "Astral Leopard", "arctic/snowleopard/202/snowleopard"];
    case "cmykNeonCheetah":
      return [a0_0x2a0a8a, 202, "C.M.Y.K NeoN Cheetak", "land/bigcat/202/cheetah"];
    case "beekeeperBear":
      return [a0_0x1458da, 202, "Beekeeper Bear", "land/bear/0/202/bear"];
    case "dalmatianPelican":
      return [a0_0x2c361c, 202, "Dalmatian Pelican", "ocean/pelican/202/pelican"];
    case "rocketSwordfish":
      return [a0_0x182226, 202, "Rocket Swordfish", "ocean/swordfish/0/202/swordfish"];
    case "okamiWolf":
      return [a0_0x5f1ae8, 202, "Okami Wolf", "arctic/wolf/202/wolf"];
    case "anubisHyena":
      return [a0_0x299d82, 202, "Anubis Hyena", "desert/hyena/202/hyena"];
    case "gobeeBear":
      return [a0_0x4db8c8, 202, "Gobee Bear", "desert/gobibear/202/gobibear"];
    case "chimeraLion":
      return [a0_0x2c2f52, 202, "Chimera Lion", "land/lion/202/lion"];
    case "meteorFalcon":
      return [a0_0x23c69e, 202, "Meteor Falcon", "land/falcon/202/falcon"];
    case "naKika":
      return [a0_0x2f54ae, 202, "Na Kika", "ocean/octopus/202/octopus"];
    case "waterBear":
      return [a0_0x56a2ab, 202, "Water Bear", "arctic/bear/202/bear"];
    case "croczilla":
      return [a0_0x13971c, 202, "Croczilla", "land/croc/0/202/croc"];
    case "ammit":
      return [a0_0x13971c, 202, "Ammit", "land/croc/0/203/croc"];
    case "cottonCandyRhino":
      return [a0_0x5812ad, 202, "Cotton Candy Rhino", "land/rhino/202/rhino"];
    case "floralWolverine":
      return [a0_0x58b076, 202, "Floral Wolverine", "arctic/wolverine/202/wolverine"];
    case "minotaur":
      return [a0_0x273412, 202, "Minotaur", "desert/bison/202/bison"];
    case "planetHippo":
      return [a0_0x50d9f7, 202, "Planet Hippo", "land/hippo/202/hippo"];
    case "seaAngelOrca":
      return [a0_0x594c30, 202, "Sea Angel Orca", "ocean/killerwhale/202/killerwhale"];
    case "icefangSabertooth":
      return [a0_0x4f58e6, 202, "Ice-Fang Sabertooth", "arctic/sabertooth/202/sabertooth"];
    case "galaxyKomodoDragon":
      return [a0_0x5650e3, 202, "Galaxy Komodo Dragon", "desert/komododragon/202/komododragon"];
    case "sapphireCaveSpider":
      return [a0_0x357359, 202, "Sapphire Cave Spider", "land/giantspider/202/giantspider"];
    case "pastelCassowary":
      return [a0_0x52a8a7, 202, "Pastel Cassowary", "land/cassowary/202/cassowary"];
    case "whaleboat":
      return [a0_0x3b5853, 202, "Whale Boat", "ocean/bluewhale/0/202/bluewhale"];
    case "acidMammoth":
      return [a0_0x5d0d4b, 202, "Acid Mammoth", "arctic/mammoth/202/0/mammoth"];
    case "iceWizardElephant":
      return [a0_0x54926b, 202, "Ice Wizard Elephant", "land/elephant/0/202/elephant"];
    case "ancientIslandMonster":
      return [a0_0x3b5853, 202, "Ancient Island Monster", "ocean/bluewhale/0/203/bluewhale"];
    case "crystalGolem":
      return [a0_0x5d0d4b, 202, "Crystal Golem", "arctic/mammoth/202/1/mammoth"];
    case "aberrantDragon":
      return [a0_0x59b763, 202, "Aberrant Dragon", "land/dragon/0/202/dragon"];
    case "agDragon":
      return [a0_0x59b763, 206, "AG Dragon", "land/dragon/0/206/dragon"];
    case "hyporevenantRex":
      return [a0_0x45db7b, 202, "Hyporevenant Rex", "land/trex/202/0/trex"];
    case "giantSquid":
      return [a0_0x17dc35, 202, "Giant Squid", "ocean/kraken/202/0/kraken"];
    case "lovelyYeti":
      return [a0_0x1c04bf, 202, "Lovely Yeti", "arctic/yeti/202/0/yeti"];
    case "abyssalKingCrab":
      return [a0_0x487fb5, 202, "Abyssal King Crab", "ocean/kingcrab/202/kingcrab"];
    case "hydrothothKraken":
      return [a0_0x17dc35, 202, "Hydrothoth Kraken", "ocean/kraken/202/1/kraken"];
    case "frostEyeDemon":
      return [a0_0x1c04bf, 202, "Frosty Eye Demon", "arctic/yeti/202/1/yeti"];
    case "ghoulDragon":
      return [a0_0x59b763, 202, "Ghoul Dragon", "land/dragon/0/203/dragon"];
    case "tankMonster":
      return [a0_0x77ab87, 202, "Tank Monster", "land/dinomonster/202/dinomonster"];
    case "fighterJet":
      return [a0_0x53b0d7, 202, "Fighter Jet", "volcano/landmonster/0/202/landmonster"];
    case "submarineMonster":
      return [a0_0x5aaf14, 202, "Submarine Monster", "ocean/seamonster/202/seamonster"];
    case "kingGraveyard1":
      return [a0_0x5d0b67, 202, "King Graveyard", "volcano/kingdragon/202/kingdragon"];
    case "fairyRabbit":
      return [a0_0x621981, 220, "Fairy Rabbit", "land/rabbit/220/rabbit"];
    case "darkMatterWarthog":
      return [a0_0x35d611, 202, "Dark Matter Warthog", "desert/warthog/220/warthog"];
    case "fumigatorPig":
      return [a0_0x31a123, 220, "Fumigator Pig", "land/pig/220/pig"];
    case "moltenToucan":
      return [a0_0x5aa20b, 220, "Molten Toucan", "land/toucan/220/toucan.ui"];
    case "summonerWolverine":
      return [a0_0x58b076, 220, "Summoner Wolverine", "arctic/wolverine/220/wolverine"];
    case "golemMammoth":
      return [a0_0x5d0d4b, 220, "Golem Mammoth", "arctic/mammoth/220/mammoth"];
    case "glacialDemon":
      return [a0_0x1c04bf, 220, "Glacial Demon", "arctic/yeti/220/yeti"];
    case "cordyceraDino":
      return [a0_0x77ab87, 220, "Cordycera Dino", "land/dinomonster/220/dinomonster"];
    case "blazingIceMonster":
      return [a0_0xadcba8, 220, "BlazingIce Monster", "arctic/icemonster/220/icemonster"];
    case "bioMutantTRex":
      return [a0_0x45db7b, 220, "Bio Mutant T-rex", "land/trex/220/trex"];
    case "sunsetOstrich":
      return [a0_0x5c6ee3, 220, "Sunset Ostrich", "land/ostrich/220/ostrich"];
    case "lightwaveElephant":
      return [a0_0x54926b, 220, "Lightwave Elephant", "land/elephant/0/220/elephant"];
    case "inkRhino":
      return [a0_0x5812ad, 220, "Ink Rhino", "land/rhino/220/rhino"];
    case "dimensionalMonster":
      return [a0_0x5aaf14, 220, "Dimensional Monster", "ocean/seamonster/220/seamonster"];
    case "nebuladonScorpion":
      return [a0_0x3a4899, 220, "Nebuladon Scorpion", "desert/scorpion/220/giantscorpion"];
    case "ghastlyJadeLion":
      return [a0_0x2c2f52, 220, "Ghastly Jade Lion", "land/lion/220/lion"];
    case "belphegor":
      return [a0_0x53b0d7, 220, "Belphegor", "volcano/landmonster/0/220/landmonster"];
    case "muscipulaRaven":
      return [a0_0x3edbb5, 220, "Muscipula Raven", "forest/raven/220/raven"];
    case "behemothHiveDragon":
      return [a0_0x59b763, 220, "Behemoth Hive Dragon", "land/dragon/0/220/dragon"];
    case "okamiWolf":
      return [a0_0x5f1ae8, 220, "Okami Wolf", "arctic/wolf/220/wolf"];
    case "starCrusherCrab":
      return [a0_0x487fb5, 220, "Star Crusher Crab", "ocean/kingcrab/220/kingcrab"];
    case "drBrainiopod":
      return [a0_0x17dc35, 220, "Dr. Brainiopod", "ocean/kraken/220/kraken"];
    case "xmas22_iceHuskTrout":
      return [a0_0x1d6a29, 222, "Ice Husk Trout", "ocean/trout/0/221/trout"];
    case "xmas22_jollyRabbit":
      return [a0_0x621981, 222, "Jolly Rabbit", "land/rabbit/222/rabbit"];
    case "xmas22_peppermintLandMonster":
      return [a0_0x53b0d7, 222, "Peppermint Land Monster", "volcano/landmonster/0/222/landmonster"];
    case "xmas22_gingerbreadKraken":
      return [a0_0x17dc35, 222, "Gingerbread Kraken", "ocean/kraken/222/kraken"];
    case "val23_wolverine":
      return [a0_0x58b076, 0, "Valentine Wolverine", "arctic/wolverine/0/223/wolverine"];
    case "val23_orca":
      return [a0_0x594c30, 0, "Valentine Orca", "ocean/killerwhale/0/223/killerwhale"];
    case "val23_mamoth":
      return [a0_0x5d0d4b, 0, "Valentine Mammoth", "arctic/mammoth/0/223/mammoth"];
    case "val23_whale":
      return [a0_0x3b5853, 0, "Valentine Whale", "ocean/bluewhale/0/223/bluewhale"];
    case "val23_walrus":
      return [a0_0x525e00, 0, "Valentine Walrus", "arctic/walrus/0/223/walrus"];
    case "val23_stingray":
      return [a0_0x4441e0, 0, "Valentine Stingray", "ocean/stingray/0/223/stingray"];
    case "val23_snowleopard":
      return [a0_0x4b16c6, 0, "Valentine Snow Leopard", "arctic/snowleopard/0/223/snowleopard"];
    case "val23_gorilla":
      return [a0_0x1efea6, 0, "Valentine Gorilla", "land/gorilla/0/223/gorilla"];
    case "animal_BirdMonster":
      return [a_birdMonster, 0, "Bird Monster", "land/birdmonster/0/birdmonster"];
    case "apesGorilla":
      return [a0_0x1efea6, 224, "Apes.io Gorilla", "land/gorilla/0/224/gorilla"];
    case "hw2023_botX303":
      return [a0_0x533584, 2023, "Bot X-303", "desert/blackwidow/0/2023/blackwidow"];
    case "hw2023_sodaFish":
      return [a0_0x182226, 2023, "Sodafish", "ocean/swordfish/0/2023/swordfish"];
    case "hw2023_solarWyvern":
      return [a0_0x53b0d7, 2023, "Solar Wyvern", "volcano/landmonster/0/2023/landmonster"];
    case "hw2023_drLochness":
      return [a0_0x1d6a29, 2023, "Dr. Lochness", "ocean/trout/0/2023/trout"];
    case "hw2023_moltenFrostWhale":
      return [a0_0x3b5853, 2023, "Molten Frost Whale", "ocean/bluewhale/0/2023/bluewhale"];
    case "hw2023_sharkodile":
      return [a0_0x13971c, 2023, "Sharkodile", "land/croc/0/2023/croc"];
    case "hw2023_mafiaGorilla":
      return [a0_0x1efea6, 2023, "Mafia Gorilla", "land/gorilla/0/2023/gorilla"];
    case "hw2023_carnivalElephant":
      return [a0_0x54926b, 2023, "Carnival Elephant", "land/elephant/0/2023/elephant"];
    case "hw2023_beachBattleKraken":
      return [a0_0x17dc35, 2023, "Beach Battle Kraken", "ocean/kraken/0/2023/kraken"];
    case "hw2023_stormDragon":
      return [a0_0x59b763, 2023, "Storm Dragon", "land/dragon/0/2023/dragon"];
    case "hw2023_spookyBear":
      return [a0_0x1458da, 202, "Spooky Bear", "land/bear/0/2023/bear"];
  }
  return [a0_0x41cceb, 99999, "Error Skin", ""];
};
var a0_0x2b9582 = a0_0xe083f;
var a0_0x28626c = a0_0x2ae1e5;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
function a0_0xe083f() {
  a0_0xe083f.superClass.call(this, a0_0x52dd91);
}
a0_0xe083f.prototype.loadShopData = function (_0xe394d6) {
  a0_0xe083f.superClass.prototype.loadShopData.call(this, _0xe394d6);
  this.itemId = _0xe394d6.itemId;
  this.title = _0xe394d6.description;
  this.saleType = _0xe394d6.saleType;
  this.salePrice = _0xe394d6.salePrice;
};
a0_0xe083f.prototype.getShopImageSrc = function () {
  return "shop/deals/" + this.itemId.toLowerCase() + ".png";
};
a0_0xe083f.prototype.getImage = function () {
  var _0x308cae = new Image();
  _0x308cae.className = "shopdeal";
  _0x308cae.src = "shop/deals/" + this.itemId.toLowerCase() + ".png";
  _0x308cae.loading = "lazy";
  return _0x308cae;
};
a0_0xe083f.prototype.getTitle = function () {
  var _0x38d20f = "" + this.title;
  return _0x38d20f.replace("\n", "<br>").toUpperCase();
};
a0_0xe083f.prototype.generateHtml = function (_0x304398) {
  var _0x5eeabc = "item deal" + (this.price == -1 ? " itemOwned buyItem" : " buyItem") + " " + this.itemId;
  if (_0x304398 == a0_0x1440fc) {
    _0x5eeabc = _0x5eeabc + " confirm_deal";
  }
  var _0x280e27 = a0_0x1cfe71("", _0x5eeabc);
  var _0x489089 = a0_0x1cfe71("", "image biome_" + this.biome);
  var _0x633a68 = a0_0x1cfe71("", "price");
  var _0x59a02f = a0_0x1cfe71("", "orig-value");
  _0x280e27.setAttribute("title", this.getTitle().replace("<BR>", " "));
  _0x633a68.innerHTML = this.getTitle();
  var _0x514e11 = this.getImage();
  _0x489089.appendChild(_0x514e11);
  if (this.price > 0) {
    var _0x1802d4 = "";
    if (this.saleType == 1) {
      _0x1802d4 = "NEW BUNDLE";
    } else if (this.saleType == 2) {
      _0x1802d4 = "SALE BUNDLE";
    }
    if (_0x1802d4 != "") {
      var _0x407c91 = a0_0x1cfe71("newItem_" + this.animalType, "newItem");
      _0x407c91.innerHTML = _0x1802d4;
      _0x280e27.appendChild(_0x407c91);
    }
  }
  _0x280e27.appendChild(_0x489089);
  _0x280e27.appendChild(_0x633a68);
  if (this.saleType == 2) {
    var _0x2ceb6f = new Image();
    _0x2ceb6f.className = "buycoin-img";
    _0x2ceb6f.src = "shop/mopecoin.png";
    var _0x10b702 = a0_0x2c643f("span", "", "buycoin-price");
    _0x10b702.innerHTML = this.price;
    _0x59a02f.appendChild(_0x2ceb6f);
    _0x59a02f.appendChild(_0x10b702);
  } else {
    _0x59a02f.innerText = "NO SALE";
  }
  if (this.price > 0) {
    _0x280e27.appendChild(_0x59a02f);
    _0x280e27.appendChild(this.btn.generateHtml(_0x304398));
  } else {}
  return _0x280e27;
};
a0_0xe083f.prototype.fillItemDetails = function (_0x3ff8c9) {
  var _0x1b0a9b = a0_0x1cfe71("bundleSkins", "bundleSkins_" + this.itemId);
  _0x3ff8c9.appendChild(_0x1b0a9b);
  if (this.data.bundled) {
    for (i = 0; i < a0_0x5092e6.shop.allItems.length; i++) {
      var _0x3248c5 = a0_0x5092e6.shop.allItems[i];
      if (!this.data.bundled.includes(_0x3248c5.data.id)) {
        continue;
      }
      var _0x7aec7d = a0_0x5092e6.getPostFixForItem(_0x3248c5.data.itemId);
      var _0x5f0a4c = _0x3248c5.getImagePromo(_0x7aec7d);
      _0x5f0a4c.className = "bundleSkinImg" + (_0x3248c5.price == -1 ? " bought" : "");
      _0x5f0a4c.width = "40px";
      _0x1b0a9b.appendChild(_0x5f0a4c);
    }
  }
};
window.ShopDeal = a0_0xe083f;
var a0_0x52dd91 = 3;
a0_0x294e35.setCustomClassForShopItem(a0_0xe083f, a0_0x52dd91);
var a0_0x2b9582 = a0_0x4e215a;
var a0_0x28626c = a0_0x2ae1e5;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
function a0_0x4e215a() {
  a0_0x4e215a.superClass.call(this, a0_0x52dd91);
}
a0_0x4e215a.prototype.loadShopData = function (_0xd104a1) {
  a0_0x4e215a.superClass.prototype.loadShopData.call(this, _0xd104a1);
  this.itemId = _0xd104a1.itemId;
  this.title = _0xd104a1.description;
  this.credits = _0xd104a1.credits;
  this.saleType = _0xd104a1.saleType;
  this.salePrice = _0xd104a1.salePrice;
};
a0_0x4e215a.prototype.getShopImageSrc = function () {
  return "shop/feature/" + this.itemId.toLowerCase() + ".png";
};
a0_0x4e215a.prototype.getImage = function () {
  var _0x380dd3 = new Image();
  _0x380dd3.className = "shopFeature";
  _0x380dd3.src = "shop/feature/" + this.itemId.toLowerCase() + ".png";
  _0x380dd3.loading = "lazy";
  return _0x380dd3;
};
a0_0x4e215a.prototype.getTitle = function () {
  var _0x573c78 = "" + this.title;
  return _0x573c78.replace("\n", "<br>").toUpperCase();
};
a0_0x4e215a.prototype.generateHtml = function (_0x4c3e62) {
  var _0x445294 = "item feature " + (this.price == -1 ? " itemOwned" : " buyItem") + " " + this.itemId;
  if (_0x4c3e62 == a0_0x1440fc) {
    _0x445294 = _0x445294 + " confirm_item";
  }
  var _0x5459d3 = a0_0x1cfe71("", _0x445294);
  var _0x2fd08a = a0_0x1cfe71("", "image biome_" + this.biome);
  var _0x4ac1f9 = a0_0x1cfe71("", "price");
  _0x4ac1f9.innerHTML = this.title;
  var _0x52ca2a = this.getImage();
  _0x2fd08a.appendChild(_0x52ca2a);
  if (this.price > 0) {
    var _0x53e11c = "";
    if (this.saleType == 1) {
      _0x53e11c = "NEW";
    } else if (this.saleType == 2) {
      _0x53e11c = "SALE";
    }
    if (this.salePrice != this.price && this.saleType > 0) {
      _0x53e11c += " -" + Math.floor((1 - this.salePrice / this.price) * 100) + "%";
    }
    if (_0x53e11c != "") {
      var _0x383279 = a0_0x1cfe71("newItem_" + this.animalType, "newItem");
      _0x383279.innerHTML = _0x53e11c;
      _0x5459d3.appendChild(_0x383279);
    }
  }
  _0x5459d3.appendChild(_0x2fd08a);
  _0x5459d3.appendChild(_0x4ac1f9);
  if (this.price >= 0) {
    _0x5459d3.appendChild(this.btn.generateHtml(_0x4c3e62));
  } else if (_0x4c3e62 != a0_0x8f1fe) {
    var _0x3fb8dc = this;
  }
  return _0x5459d3;
};
a0_0x4e215a.prototype.fillItemDetails = function (_0x5c2739) {
  var _0x1ff022 = a0_0x1cfe71("bundleSkins", "bundleSkins_" + this.itemId);
  _0x5c2739.appendChild(_0x1ff022);
  if (this.data.aniTypes == undefined) {
    for (i = 0; i < a0_0x5092e6.shop.allItems.length; i++) {
      var _0xbfa3a2 = a0_0x5092e6.shop.allItems[i];
      if (_0xbfa3a2 && _0xbfa3a2.data.promotions && _0xbfa3a2.data.promotions.toLowerCase().indexOf(this.itemId.toLowerCase()) > -1) {
        var _0x5da563 = a0_0x5092e6.getPostFixForItem(_0xbfa3a2.data.itemId);
        var _0x27df4a = _0xbfa3a2.getImagePromo(_0x5da563);
        _0x27df4a.className = "bundleSkinImg" + (_0xbfa3a2.price == -1 ? " bought" : "");
        _0x27df4a.width = "40px";
        _0x1ff022.appendChild(_0x27df4a);
      }
    }
  } else {
    for (i = 0; i < this.data.aniTypes.length; i++) {
      if (this.data.aniTypes[i] == 1000) {
        continue;
      }
      var _0xfda2f8 = a0_0x5092e6.getSkinPath(this.data.aniTypes[i], this.data.theme);
      console.log(_0xfda2f8);
      var _0x27df4a = new Image();
      _0x27df4a.src = _0xfda2f8;
      _0x27df4a.loading = "lazy";
      _0x27df4a.className = "bundleSkinImg aniTypes";
      _0x27df4a.width = "40px";
      _0x1ff022.appendChild(_0x27df4a);
    }
  }
};
window.ShopFeature = a0_0x4e215a;
var a0_0x192bfe = 4;
a0_0x294e35.setCustomClassForShopItem(a0_0x4e215a, a0_0x192bfe);
var a0_0x2b9582 = a0_0x4949ea;
var a0_0x28626c = a0_0x2ae1e5;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
var a0_0xe03901 = 1001;
function a0_0x4949ea(_0x2e398e, _0x2cf5ee) {
  a0_0x4949ea.superClass.call(this, a0_0xe03901);
}
a0_0x4949ea.prototype.data = null;
a0_0x4949ea.prototype.loadShopData = function (_0x4f5631) {
  a0_0x4949ea.superClass.prototype.loadShopData.call(this, _0x4f5631);
  this.data = _0x4f5631;
  this.getPropType();
};
a0_0x4949ea.prototype.itemType = null;
a0_0x4949ea.prototype.propType = null;
a0_0x4949ea.prototype.propColor = null;
a0_0x4949ea.prototype.getPropType = function () {
  if (this.data == null) {
    return;
  }
  var _0x29acbe = this.data.id.split("_");
  if (_0x29acbe.length == 3) {
    this.itemType = _0x29acbe[0];
    this.propType = _0x29acbe[1];
    this.propColor = _0x29acbe[2];
  }
};
window.PropItem = a0_0x4949ea;
a0_0x294e35.setCustomClassForShopItem(a0_0x4949ea, a0_0xe03901);
function a0_0x2f0b5d(_0x5e2425) {
  this.tabs = {
    titles: new Array()
  };
  this.data = _0x5e2425;
  this.load = function () {
    for (i = 0; i < this.data.length; i++) {
      var _0x575a38 = this.data[i].itemType;
      if (this.tabs[_0x575a38] === undefined) {
        this.tabs.titles.push(_0x575a38);
        this.tabs[_0x575a38] = new Array();
      }
      this.tabs[_0x575a38].push(this.data[i]);
    }
  };
}
var a0_0x2b9582 = a0_0x23e6f0;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x2b9582.prototype.arenaState = 0;
a0_0x2b9582.prototype.fightNumber = 0;
a0_0x2b9582.prototype.climaxType = 1;
a0_0x2b9582.prototype.timer = 0;
a0_0x2b9582.prototype.timerTxt = null;
a0_0x2b9582.prototype.p1Name = null;
a0_0x2b9582.prototype.p2Name = null;
a0_0x2b9582.prototype.p1Bites = 0;
a0_0x2b9582.prototype.p2Bites = 0;
a0_0x2b9582.prototype.arenaRad = 10;
a0_0x2b9582.prototype.nArenaRad = 10;
a0_0x2b9582.prototype.oArenaRad = 10;
a0_0x2b9582.prototype.isCountdownTimer = true;
a0_0x2b9582.prototype.p1PushRemain = 0;
a0_0x2b9582.prototype.p1DashRemain = 0;
a0_0x2b9582.prototype.p2PushRemain = 0;
a0_0x2b9582.prototype.p2DashRemain = 0;
a0_0x23e6f0.prototype.setTimer = function (_0x3ecdec) {
  var _0x3bfabe = "";
  var _0x827f23 = 25;
  if (this.isCountdownTimer) {
    _0x3bfabe = "" + _0x3ecdec;
  } else {
    _0x827f23 = 15;
    if (this.isCpuVsPlayer) {
      _0x3bfabe = "1v1 REDEMPTION";
    } else if (this.arenaModeType == 2) {
      _0x3bfabe = "MATCH #" + this.fightNumber;
    } else {
      _0x3bfabe = "FIGHT\n#" + this.fightNumber;
    }
    _0x3bfabe = a0_0xa8227f.name + "\n" + _0x3bfabe;
  }
  if (this.isCountdownTimer) {
    _0x827f23 = Number(_0x3ecdec) ? 30 : _0x827f23;
  }
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x993fcb(_0x827f23, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0x3bfabe);
  } else {
    this.timerTxt.setFontSize(_0x827f23);
    this.timerTxt.setText(_0x3bfabe);
  }
  var _0x3c5046 = "MOPE";
  if (this.arenaModeType == 1) {
    _0x3c5046 = "NOOB";
  } else if (this.arenaModeType == 2) {
    _0x3c5046 = "PRO";
  }
  var _0x5a1ce4 = this.climaxType == 1 ? "LAST " + _0x3c5046 + " STANDING" : this.maxBitesToWin + " BITES WINS";
  if (this.climaxTxt == null) {
    this.climaxTxt = new a0_0x993fcb(_0x827f23, "#FFFFFF");
    this.climaxTxt.strokeW = 2;
    this.climaxTxt.multiLine = true;
    this.climaxTxt.renderScale = 5;
    this.climaxTxt.setText(_0x5a1ce4);
  } else {
    this.climaxTxt.setFontSize(15);
    this.climaxTxt.setText(_0x5a1ce4);
  }
};
a0_0x23e6f0.prototype.playerFontSize = 10;
a0_0x23e6f0.prototype.setP1 = function (_0xdf1521) {
  var _0x4e3414 = "" + _0xdf1521;
  if (this.p1Name == null) {
    this.p1Name = new a0_0x993fcb(this.playerFontSize, "cyan");
    this.p1Name.strokeW = 2;
    this.p1Name.multiLine = true;
    this.p1Name.renderScale = 2;
    this.p1Name.setText(_0x4e3414);
  } else {
    this.p1Name.setFontSize(this.playerFontSize);
    this.p1Name.setText(_0x4e3414);
  }
};
a0_0x23e6f0.prototype.setP2 = function (_0x3119b2) {
  var _0x50ab91 = "" + _0x3119b2;
  if (this.p2Name == null) {
    this.p2Name = new a0_0x993fcb(this.playerFontSize, "yellow");
    this.p2Name.strokeW = 2;
    this.p2Name.multiLine = true;
    this.p2Name.renderScale = 2;
    this.p2Name.setText(_0x50ab91);
  } else {
    this.p2Name.setFontSize(this.playerFontSize);
    this.p2Name.setText(_0x50ab91);
  }
};
a0_0x23e6f0.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x23e6f0.prototype.dotX = 0.33;
a0_0x23e6f0.prototype.dotY = 0.77;
var a0_0x7863ba = 35;
var a0_0x3f0a66 = 0.72;
var a0_0x406485 = 0.2;
var a0_0x284e50 = 0.65;
var a0_0x3f76d5 = 10;
a0_0x23e6f0.prototype.glowEffect = 0;
a0_0x23e6f0.prototype.ver = 2;
a0_0x23e6f0.prototype.customDraw = function (_0x592767) {
  if (a0_0x59c93b && a0_0x3dcb26 && a0_0x2b2d22 == this.id) {
    this.drawCanvas();
  }
  if (this.arenaState == 2 || this.arenaState == 3) {
    this.displayEndScreen();
  }
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(Math.PI * -0.5);
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.065;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x1306ae.arc(0, 0, this.arenaRad, 0, Math.PI * 2, true);
  a0_0x1306ae.fillStyle = "red";
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
  if (a0_0x2b2d22 == this.id) {
    if (a0_0x2b2d22 == this.id && this.arenaState == 1) {
      a0_0x1306ae.save();
      a0_0x1306ae.lineWidth = 4;
      a0_0x1306ae.globalAlpha = 0.5;
      var _0x34889d = this.timeoutAngle * -2;
      if (this.closingAngleSet) {
        var _0x2821da = this.arenaClosingAngle * -2;
        a0_0x1306ae.save();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad - 2, _0x2821da * Math.PI, _0x34889d * Math.PI);
        a0_0x1306ae.strokeStyle = "red";
        a0_0x1306ae.stroke();
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad - 2, 0, _0x2821da * Math.PI);
        a0_0x1306ae.strokeStyle = "#32ff00";
        a0_0x1306ae.stroke();
        a0_0x1306ae.restore();
      } else {
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(0, 0, this.rad - 2, 0, _0x34889d * Math.PI);
        a0_0x1306ae.strokeStyle = "#32ff00";
        a0_0x1306ae.stroke();
      }
      a0_0x1306ae.restore();
    }
    if (this.showTimerAngle) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.5;
      var _0x11f191 = this.timerAngle * -2;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.lineWidth = 2;
      a0_0x1306ae.arc(0, 0, this.arenaRad + 2, 0, _0x11f191 * Math.PI);
      a0_0x1306ae.strokeStyle = "red";
      a0_0x1306ae.stroke();
      a0_0x1306ae.restore();
    }
  }
  a0_0x1306ae.restore();
  if (this.timerTxt != null) {
    if (this.arenaState == 0) {
      this.timerTxt.x = 0;
      this.timerTxt.y = 0;
      this.timerTxt.draw();
    } else if (this.arenaState == 1) {
      this.timerTxt.x = 0;
      this.timerTxt.y = -this.rad * 0.9;
      this.timerTxt.draw();
      if (this.climaxTxt != null) {
        this.climaxTxt.x = 0;
        this.climaxTxt.y = this.rad * 0.85;
        this.climaxTxt.draw();
      }
    } else if (this.arenaState == 2 || this.arenaState == 3) {
      this.timerTxt.x = 0;
      this.timerTxt.y = 0;
      this.timerTxt.draw();
      if (this.climaxTxt != null) {
        this.climaxTxt.x = 0;
        this.climaxTxt.y = this.rad * 0.85;
        this.climaxTxt.draw();
      }
    }
  }
  var _0x19994f = 15;
  var _0x291268 = this.rad / 2 + this.rad * 0.05;
  if (this.p1Name != null) {
    this.p1Name.x = -this.rad / 2;
    this.p1Name.y = -this.rad * 0.65;
    this.p1Name.draw();
    if (!this.isCpuVsPlayer) {
      var _0x2c5915 = 0;
      var _0x39d309 = -this.rad * a0_0x3f0a66;
      _0x2c5915 -= a0_0x7863ba;
      _0x39d309 -= _0x19994f * 2;
      var _0x59cefe = this.getSkinImageObj("gameobj/18/0/0.png");
      for (i = 0; i < this.getLives(); i++) {
        _0x2c5915 -= _0x19994f * 2.2;
        if (_0x59cefe) {
          a0_0x1306ae.save();
          if (this.roundsWon_p1 > 0 && i + 1 <= this.roundsWon_p1) {
            a0_0x1306ae.globalAlpha = 0.8;
          } else {
            a0_0x1306ae.globalAlpha = 0.2;
          }
          a0_0x1306ae.drawImage(_0x59cefe, _0x2c5915 - _0x19994f, _0x39d309 - _0x19994f, _0x19994f * 2, _0x19994f * 2);
          a0_0x1306ae.restore();
        }
      }
    }
  }
  if (this.p2Name != null) {
    this.p2Name.x = this.rad / 2;
    this.p2Name.y = -this.rad * 0.65;
    this.p2Name.draw();
    if (!this.isCpuVsPlayer) {
      var _0x2c5915 = 0;
      var _0x39d309 = -this.rad * a0_0x3f0a66;
      _0x2c5915 = a0_0x7863ba;
      _0x39d309 -= _0x19994f * 2;
      var _0x59cefe = this.getSkinImageObj("gameobj/18/0/0.png");
      for (i = 0; i < this.getLives(); i++) {
        _0x2c5915 += _0x19994f * 2.2;
        if (_0x59cefe) {
          a0_0x1306ae.save();
          if (this.roundsWon_p2 > 0 && i + 1 <= this.roundsWon_p2) {
            a0_0x1306ae.globalAlpha = 0.8;
          } else {
            a0_0x1306ae.globalAlpha = 0.2;
          }
          a0_0x1306ae.drawImage(_0x59cefe, _0x2c5915 - _0x19994f, _0x39d309 - _0x19994f, _0x19994f * 2, _0x19994f * 2);
          a0_0x1306ae.restore();
        }
      }
    }
  }
  if (a0_0x15e4d1 != 0 && this.id == a0_0x2b2d22 && this.arenaState == 0) {}
};
var a0_0x15cee0 = 1;
var a0_0x109eda = 3;
var a0_0x1e7e3c = 5;
var a0_0x1e5950 = 9;
a0_0x23e6f0.prototype.getLives = function () {
  switch (this.fightType) {
    case a0_0x15cee0:
      return 1;
    case a0_0x109eda:
      return 2;
    case a0_0x1e7e3c:
      return 3;
    case a0_0x1e5950:
      return 5;
  }
  return 1;
};
a0_0x23e6f0.prototype.hasAdLoaded = false;
a0_0x23e6f0.prototype.isCpuVsPlayer = false;
a0_0x23e6f0.prototype.arenaModeType = 0;
a0_0x23e6f0.prototype.canPush = false;
a0_0x23e6f0.prototype.canDash = false;
a0_0x23e6f0.prototype.isDarkTheme = false;
a0_0x23e6f0.prototype.custom_canvas = null;
a0_0x23e6f0.prototype.drawCanvas = function () {
  if (this.custom_canvas == null) {
    this.custom_canvas = document.createElement("canvas");
    var _0x3319b1 = this.rad * 10;
    var _0x35a9fd = this.rad * 10;
    this.custom_canvas.width = _0x3319b1;
    this.custom_canvas.height = _0x35a9fd;
    var _0x4ea266 = this.custom_canvas.getContext("2d");
    _0x4ea266.save();
    _0x4ea266.globalAlpha = 1;
    _0x4ea266.fillStyle = "black";
    _0x4ea266.fillRect(0, 0, this.custom_canvas.width, this.custom_canvas.height);
    _0x4ea266.globalCompositeOperation = "xor";
    _0x4ea266.beginPath();
    _0x4ea266.arc(_0x3319b1 / 2, _0x3319b1 / 2, this.rad, 0, Math.PI * 2);
    _0x4ea266.fillStyle = "blue";
    _0x4ea266.fill();
    _0x4ea266.restore();
  }
  if (this.custom_canvas != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.drawImage(this.custom_canvas, -this.custom_canvas.width / 2, -this.custom_canvas.height / 2, this.custom_canvas.width, this.custom_canvas.height);
    a0_0x1306ae.restore();
  }
};
a0_0x23e6f0.prototype.timerAngle = 0;
a0_0x23e6f0.prototype.nTimerAngle = 0;
a0_0x23e6f0.prototype.showTimerAngle = true;
a0_0x23e6f0.prototype.nTimeoutAngle = 0;
a0_0x23e6f0.prototype.timeoutAngle = 0;
a0_0x23e6f0.prototype.arenaTimeoutLeft = 0;
a0_0x23e6f0.prototype.isArenaClosing = false;
a0_0x23e6f0.prototype.closingAngleSet = false;
a0_0x23e6f0.prototype.arenaClosingAngle = 0;
a0_0x23e6f0.prototype.onLerpUpdate = function (_0xf6c814) {
  a0_0x23e6f0.superClass.prototype.onLerpUpdate.call(this, _0xf6c814);
  this.arenaRad += (this.nArenaRad - this.arenaRad) * 0.1;
  this.timerAngle += (this.nTimerAngle - this.timerAngle) * 0.1;
  this.timeoutAngle += (this.nTimeoutAngle - this.timeoutAngle) * 0.1;
};
a0_0x23e6f0.prototype.timeLeft = 0;
a0_0x23e6f0.prototype.fightType = 0;
a0_0x23e6f0.prototype.rounds = 0;
a0_0x23e6f0.prototype.roundsWon_p1 = 0;
a0_0x23e6f0.prototype.roundsWon_p2 = 0;
a0_0x23e6f0.prototype.resetArena = false;
a0_0x23e6f0.prototype.player1DarkTheme = false;
a0_0x23e6f0.prototype.player2DarkTheme = false;
a0_0x23e6f0.prototype.readCustomData_onNewlyVisible = function (_0x3ddfbd) {
  a0_0x23e6f0.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3ddfbd);
  this.fightType = _0x3ddfbd.readUInt8();
  this.arenaState = _0x3ddfbd.readUInt8();
  this.rounds = _0x3ddfbd.readUInt8();
  this.p1 = _0x3ddfbd.readString();
  this.p2 = _0x3ddfbd.readString();
  this.arenaModeType = _0x3ddfbd.readUInt8();
  this.isCpuVsPlayer = this.arenaModeType == 1 || this.arenaModeType == 2;
  this.p1Wins = _0x3ddfbd.readUInt8();
  this.p2Wins = _0x3ddfbd.readUInt8();
  this.fightNumber = _0x3ddfbd.readUInt16();
  var _0x14f5cc = _0x3ddfbd.readUInt16() / 100;
  this.oArenaRad = this.arenaRad;
  this.nArenaRad = _0x14f5cc;
  this.setNames();
  this.climaxType = _0x3ddfbd.readUInt8();
  if (this.climaxType == 2) {
    this.maxBitesToWin = _0x3ddfbd.readUInt8();
  }
  this.canPush = _0x3ddfbd.readUInt8() == 1;
  this.canDash = _0x3ddfbd.readUInt8() == 1;
};
a0_0x23e6f0.prototype.readUpdatedProperty = function (_0xf7a409, _0x1cad53) {
  if (_0xf7a409 == a0_0x59dfda) {
    this.arenaState = _0x1cad53.readUInt8();
  } else if (_0xf7a409 == a0_0x795571) {
    this.rounds = _0x1cad53.readUInt8();
  } else if (_0xf7a409 == a0_0x33c554) {
    var _0x525dd1 = _0x1cad53.readUInt16() / 100;
    this.oArenaRad = this.arenaRad;
    this.nArenaRad = _0x525dd1;
  } else if (_0xf7a409 == a0_0xa34074) {
    this.closingAngleSet = this.isArenaClosing = false;
    this.timer = _0x1cad53.readUInt16() / 100;
    this.isCountdownTimer = true;
    if (this.timer < 23) {
      this.updateTimer();
    }
  } else if (_0xf7a409 == a0_0x2717d7) {
    this.timer = _0x1cad53.readUInt16() / 100;
    this.isCountdownTimer = false;
    this.updateTimer();
    this.displayAds = false;
    this.adShown = false;
  } else if (_0xf7a409 == a0_0x2e2dbe) {
    this.timeLeft = _0x1cad53.readUInt16();
    this.nTimerAngle = this.timeLeft / 1000;
  } else if (_0xf7a409 == a0_0x4cfc18) {
    this.showTimerAngle = _0x1cad53.readUInt8() == 1;
  } else if (_0xf7a409 == a0_0x1588be) {
    this.isArenaClosing = _0x1cad53.readUInt8() == 1;
    if (this.isArenaClosing && !this.closingAngleSet) {
      this.closingAngleSet = true;
      this.arenaClosingAngle = this.timeoutAngle;
    }
  } else if (_0xf7a409 == a0_0x21a661) {
    this.arenaTimeoutLeft = _0x1cad53.readUInt16();
    this.nTimeoutAngle = this.arenaTimeoutLeft / 1000;
  } else if (_0xf7a409 == a0_0x1cde64) {
    this.winner = _0x1cad53.readUInt8();
    var _0x37b01b = "" + this.p1;
    if (_0x37b01b.length == 0) {
      _0x37b01b = "mope.io";
    }
    var _0x5465ec = "" + this.p2;
    if (_0x5465ec.length == 0) {
      _0x5465ec = "mope.io";
    }
    if (this.winner == 1) {
      this.winnerName = _0x37b01b;
    } else {
      this.winnerName = _0x5465ec;
    }
  } else if (_0xf7a409 == a0_0x55ed51) {
    this.winnerMsg = _0x1cad53.readString();
  } else if (_0xf7a409 == a0_0x428aeb) {
    this.p1Bites = _0x1cad53.readUInt8();
    this.setNames();
  } else if (_0xf7a409 == a0_0x1a4a84) {
    this.p2Bites = _0x1cad53.readUInt8();
    this.setNames();
  } else if (_0xf7a409 == a0_0x1c5ac0) {
    this.winBonus = _0x1cad53.readUInt32();
  } else if (_0xf7a409 == a0_0x2faae4) {
    this.roundsWon_p1 = _0x1cad53.readUInt8();
  } else if (_0xf7a409 == a0_0x5d2111) {
    this.roundsWon_p2 = _0x1cad53.readUInt8();
  } else if (_0xf7a409 == a0_0x3ae416) {
    this.p1Wins = _0x1cad53.readUInt8();
  } else if (_0xf7a409 == a0_0x3c7cc5) {
    this.p2Wins = _0x1cad53.readUInt8();
  } else if (_0xf7a409 == a0_0x310821) {
    this.p1 = _0x1cad53.readString();
    this.setNames();
  } else if (_0xf7a409 == a0_0x3960d1) {
    this.p2 = _0x1cad53.readString();
    this.setNames();
  } else if (_0xf7a409 == a0_0x80979c) {
    var _0x3a219d = _0x1cad53.readUInt8() == 1;
    if (this.resetArena != _0x3a219d) {
      this.endScreenState = 0;
      this.resetArena = _0x3a219d;
    }
  } else if (_0xf7a409 == a0_0x33b704) {
    this.fightNumber = _0x1cad53.readUInt16();
  } else if (_0xf7a409 == a0_0x15ef42) {
    this.player1DarkTheme = _0x1cad53.readUInt8() == 1;
  } else if (_0xf7a409 == a0_0x3a3299) {
    this.player2DarkTheme = _0x1cad53.readUInt8() == 1;
  }
};
a0_0x23e6f0.prototype.endScreenState = -1;
a0_0x23e6f0.prototype.endScreenChangeT = 0;
a0_0x23e6f0.prototype.resetEndScreenState = true;
a0_0x23e6f0.prototype.displayEndScreen = function () {
  if (a0_0x24806e >= this.endScreenChangeT) {
    this.endScreenState++;
    this.endScreenChangeT = a0_0x24806e + 3000;
  }
  if (this.timerTxt != null) {
    if (this.endScreenState == 0) {
      this.timerTxt.setFontSize(40);
      if (this.winnerName !== undefined) {
        this.timerTxt.setText("\nKO!");
      }
    } else if (this.endScreenState == 1) {
      this.timerTxt.setFontSize(20);
      if (this.winnerName == undefined) {
        this.timerTxt.setText("TIE!");
      } else {
        this.timerTxt.setText(this.winnerName + "\nWON!");
      }
    } else if (this.endScreenState >= 3) {
      this.timerTxt.setFontSize(20);
      if (this.winBonus !== undefined && this.winnerMsg != null && this.winBonus > 0) {
        this.timerTxt.setText(this.winnerMsg + "\nWIN BONUS: " + a0_0x1e543a(this.winBonus));
      }
    }
  }
};
a0_0x23e6f0.prototype.challenger = null;
a0_0x23e6f0.prototype.opponent = null;
a0_0x23e6f0.prototype.setNames = function () {
  var _0x3494ec = "" + this.p1;
  if (_0x3494ec.length == 0) {
    _0x3494ec = "mope.io";
  }
  var _0x1d65a4 = "" + this.p2;
  if (_0x1d65a4.length == 0) {
    _0x1d65a4 = "mope.io";
  }
  var _0x2daa84 = this.isCpuVsPlayer ? "level" : "wins";
  var _0x6ad224 = "\n(" + _0x2daa84 + ": " + this.p1Wins + ")";
  var _0x48c119 = "\n(" + _0x2daa84 + ": " + this.p2Wins + ")";
  var _0x40ab35 = "\nbites: " + this.p1Bites;
  var _0x1adc13 = "\nbites: " + this.p2Bites;
  if (this.arenaState < 3) {
    this.challenger = _0x3494ec + _0x6ad224;
    this.opponent = _0x1d65a4 + _0x48c119;
    this.setP1(_0x3494ec + _0x6ad224 + _0x40ab35);
    this.setP2(_0x1d65a4 + _0x48c119 + _0x1adc13);
  } else if (this.arenaState == 3) {
    if (this.winner == 1) {
      this.winnerName = _0x3494ec;
      this.setP1(_0x3494ec + _0x6ad224 + _0x40ab35);
      this.p2Name = null;
    } else if (this.winner == 2) {
      this.winnerName = _0x1d65a4;
      this.setP2(_0x1d65a4 + _0x48c119 + _0x1adc13);
      this.p1Name = null;
    }
  }
};
a0_0x23e6f0.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x1a9aec = this.timer;
  if (this.isCountdownTimer) {
    switch (this.timer) {
      case 23:
        _0x1a9aec = "";
        break;
      case 22:
      case 21:
        if (this.arenaModeType == 3) {
          _0x1a9aec = "1V1 TOURNAMENT";
        } else {
          _0x1a9aec = "WELCOME TO 1V1 ARENA";
        }
        break;
      case 20:
      case 19:
        if (this.arenaModeType == 3) {
          _0x1a9aec = "MATCH #" + this.fightNumber;
        } else {
          var _0x44d6b3 = "MAN";
          if (this.arenaModeType == 1) {
            _0x44d6b3 = "NOOB";
          } else if (this.arenaModeType == 2) {
            _0x44d6b3 = "PRO";
          }
          _0x1a9aec = "FIGHT #" + this.fightNumber + "\n" + (this.climaxType == 1 ? "LAST " + _0x44d6b3 + " STANDING" : this.maxBitesToWin + " BITES TO WIN");
          _0x1a9aec = a0_0xa8227f.name + "\n" + _0x1a9aec;
        }
        break;
      case 18:
      case 17:
        if (!this.isCpuVsPlayer) {
          _0x1a9aec = "CHALLENGER";
          break;
        }
      case 16:
      case 15:
        if (this.isCpuVsPlayer) {
          _0x1a9aec = "REDEMPTION\nLEVEL " + this.p1Wins;
        } else {
          _0x1a9aec = this.challenger;
        }
        break;
      case 14:
      case 13:
        _0x1a9aec = "OPPONENT";
        break;
      case 12:
      case 11:
        _0x1a9aec = this.opponent;
        break;
      case 2:
        _0x1a9aec = "ROUND " + this.rounds;
        break;
      case 1:
        _0x1a9aec = "GET SET";
        break;
      case 0:
        _0x1a9aec = "FIGHT";
        break;
    }
    if (this.timer < 20 && !this.displayAds && !this.adShown) {
      this.displayAds = true;
    }
  }
  this.setTimer(_0x1a9aec);
};
a0_0x23e6f0.prototype.adShown = false;
a0_0x23e6f0.prototype.displayAds = false;
a0_0x23e6f0.prototype.displayedAdsOnEnd = false;
a0_0x23e6f0.prototype.showAds = function (_0x2c448f) {
  if (!a0_0x2ac9fb) {
    if (!this.adShown) {
      if (this.displayAds) {
        if (a0_0x9051bd > 13) {
          this.adShown = true;
          a0_0x4b90a8($MOPE_AD_LAYOUTS.ARENA);
          setTimeout(() => {
            a0_0x4b90a8($MOPE_AD_LAYOUTS.NONE);
          }, _0x2c448f);
        }
      }
    }
  }
};
a0_0x23e6f0.prototype.removeAds = function () {
  if (a0_0x2b2d22 == this.id) {
    a0_0x4b90a8($MOPE_AD_LAYOUTS.NONE);
  }
};
a0_0x23e6f0.prototype.onRemovedFromGame = function () {
  console.log("Arena removed from game!");
};
function a0_0x23e6f0() {
  a0_0x23e6f0.superClass.call(this);
  this.hasAdLoaded = false;
}
window.AbilityObj1v1Arena = a0_0x23e6f0;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x23e6f0, a0_0x382193, a0_0x40a7fa);
var a0_0x350248 = a0_0x350248;
var a0_0x28626c = a0_0x2449e7;
a0_0x350248.prototype = Object.create(a0_0x28626c.prototype);
a0_0x350248.prototype.constructor = a0_0x350248;
a0_0x350248.superClass = a0_0x28626c;
a0_0x350248.prototype.getSkinName = function () {
  if (this.animalSpecies == 220 && this.animalSubSpecies == 0) {
    return "ocean/seamonster/" + this.animalSpecies + "/seamonster1";
  } else {
    return "ocean/seamonster/" + this.animalSpecies + "/seamonster";
  }
};
a0_0x350248.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x350248.prototype.animalInfo = function () {
  var _0x3eac4b = {};
  var _0x307c2f = "";
  switch (this.animalSpecies) {
    case 0:
      _0x3eac4b.aniName = "Sea Monster";
      break;
    case 1:
      _0x3eac4b.aniName = "Golden Sea Monster";
      break;
    case 2:
      _0x3eac4b.aniName = "Sapphire Monster";
      break;
    case 111:
      _0x3eac4b.aniName = "Classic Sea Monster";
      break;
    case 200:
      _0x3eac4b.aniName = "Luckycharm Monster";
      break;
    case 201:
      _0x3eac4b.aniName = "Ancient Tortoise";
      break;
    case 202:
      _0x3eac4b.aniName = "Submarine Monster";
      break;
    case 220:
      _0x3eac4b.aniName = "Dimensional Monster";
      break;
  }
  _0x3eac4b.aniCol = "blue";
  _0x3eac4b.upgradeText = "UPGRADED to " + _0x3eac4b.aniName + "!\nCreate whirlpool to trap prey!" + _0x307c2f;
  _0x3eac4b.skinName = "ocean/seamonster/" + this.animalSpecies + "/seamonster";
  return _0x3eac4b;
};
a0_0x350248.prototype.getAbilityInfo = function (_0x46f0eb) {
  var _0x33b3fa = {
    abilName: "Giant Whirlpool",
    abilImg: "skins/ocean/seamonster/" + this.animalSpecies + "/seamonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x33b3fa;
};
a0_0x350248.prototype.drawWhenUnderwater = function () {
  var _0x45f72d = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x3001d4 = 1.5;
  var _0x5689b3 = 1;
  var _0x148e2a = _0x5689b3 * Math.sin(Math.PI * 2 / _0x3001d4 * _0x45f72d);
  var _0x114967 = "white";
  a0_0x1306ae.globalAlpha = 0.2;
  a0_0x1306ae.fillStyle = _0x114967;
  var _0x5e8e94 = this.flag_underWater ? this.rad * 0.15 : this.rad * 0.1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x5e8e94 + _0x148e2a), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x5e8e94 - _0x148e2a), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x5e8e94 + _0x148e2a), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x5e8e94 - _0x148e2a), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  var _0xfd4520 = this.getSkinImageObj("skins/" + this.getSkinName() + "-crown.png");
  if (_0xfd4520) {
    var _0x2b74e9 = 500 / 340;
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.4;
    var _0x3b3082 = this.rad;
    a0_0x1306ae.drawImage(_0xfd4520, -_0x3b3082 * _0x2b74e9, (-_0x3b3082 + _0x3b3082 * 0.4) * _0x2b74e9, _0x3b3082 * 2 * _0x2b74e9, _0x3b3082 * 2 * _0x2b74e9);
    a0_0x1306ae.restore();
  }
};
a0_0x350248.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (this.animalSpecies == 220 && this.animalSubSpecies == 0) {
    var _0x567205 = "skins/ocean/seamonster/220/";
    var _0x388c4e = this.skinScale * 1.07;
    var _0x4f4c45 = this.skinRad;
    var _0x3aaaef = 1 + Math.trunc(a0_0x24806e / 120) % 8;
    var _0x580124 = 0;
    var _0x134bab = this.getSkinImageObj(_0x567205 + "/anim/" + _0x3aaaef + ".png");
    if (_0x134bab) {
      a0_0x1306ae.save();
      a0_0x1306ae.drawImage(_0x134bab, -_0x4f4c45 * _0x388c4e, (-_0x4f4c45 + _0x4f4c45 * 0.05) * _0x388c4e - _0x580124, _0x4f4c45 * 2 * _0x388c4e, _0x4f4c45 * 2 * _0x388c4e);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x350248.prototype.basicDrawSkinImg = function () {
  if (this.animalSpecies == 220 && this.animalSubSpecies == 0) {
    this.setSkinScale();
    var _0x3ab49c = this.skinScale;
    var _0x55cdc8 = this.skinRad;
    if (this.loadedSkinImg) {
      overSizeOffset = this.skinRad / 2;
      a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x55cdc8 * a0_0x2c3ed4, -_0x55cdc8 * a0_0x2c3ed4, _0x55cdc8 * 2 * a0_0x2c3ed4, _0x55cdc8 * 2 * a0_0x2c3ed4);
    }
  } else {
    a0_0x350248.superClass.prototype.basicDrawSkinImg.call(this);
  }
};
function a0_0x350248() {
  a0_0x350248.superClass.call(this, a0_0x24738f);
}
window.SeaMonster = a0_0x350248;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x350248, a0_0x24738f, a0_0x5aaf14);
var a0_0x1f2e62 = a0_0x1f2e62;
var a0_0x28626c = a0_0x2449e7;
a0_0x1f2e62.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1f2e62.prototype.constructor = a0_0x1f2e62;
a0_0x1f2e62.superClass = a0_0x28626c;
a0_0x1f2e62.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1200 + this.rad;
  }
};
var a0_0x1f2e62 = a0_0x1f2e62;
var a0_0x28626c = a0_0x2449e7;
a0_0x1f2e62.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1f2e62.prototype.constructor = a0_0x1f2e62;
a0_0x1f2e62.superClass = a0_0x28626c;
a0_0x1f2e62.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1200 + this.rad;
  }
};
a0_0x1f2e62.prototype.animalInfo = function () {
  var _0x17e52b = {};
  var _0x13df6b = "";
  switch (this.animalSpecies) {
    case 0:
      _0x17e52b.aniName = "Land Monster";
      break;
    case 1:
      _0x17e52b.aniName = "Golden Land Monster";
      break;
    case 2:
      _0x17e52b.aniName = "Titanite Monster";
      break;
  }
  _0x17e52b.aniCol = "orange";
  _0x17e52b.upgradeText = "UPGRADED to " + _0x17e52b.aniName + "!\nCreate Sink holes to trap prey!" + _0x13df6b;
  _0x17e52b.skinName = "volcano/landmonster/" + this.animalSpecies + "/landmonster";
  return _0x17e52b;
};
a0_0x1f2e62.prototype.getSkinName = function () {
  return "volcano/landmonster/" + this.animalSpecies + "/landmonster";
};
a0_0x1f2e62.prototype.getAbilityInfo = function (_0x1526bb) {
  var _0x2f0a0d = {
    abilName: "Giant\nSinkhole!",
    abilImg: "skins/volcano/landmonster/" + this.animalSpecies + "/landmonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x2f0a0d;
};
a0_0x1f2e62.prototype.drawWhenUnderwater = function () {
  var _0x3ff6ba = (a0_0x24806e - this.spawnTime) / 1000;
  var _0xd502fd = 1.5;
  var _0x1ba264 = 1;
  var _0x4ab46c = _0x1ba264 * Math.sin(Math.PI * 2 / _0xd502fd * _0x3ff6ba);
  var _0x2a3b4d = "#f9d43b";
  a0_0x1306ae.globalAlpha = 0.3;
  a0_0x1306ae.fillStyle = _0x2a3b4d;
  var _0x11581c = this.flag_underWater ? this.rad * 0.15 : this.rad * 0.1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * -0.33, Math.max(0, _0x11581c + _0x4ab46c), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * -0.32, Math.max(0, _0x11581c - _0x4ab46c), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.35, this.rad * 0.36, Math.max(0, _0x11581c + _0x4ab46c), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * -0.35, this.rad * 0.35, Math.max(0, _0x11581c - _0x4ab46c), 0, Math.PI * 2);
  a0_0x1306ae.fill();
};
a0_0x1f2e62.prototype.animalInfo = function () {
  var _0x69f30 = {};
  var _0x27d8b2 = "";
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x69f30.aniName = "Land Monster";
          break;
        case 111:
          _0x69f30.aniName = "Classic Land Monster";
          break;
      }
      break;
    case 1:
      _0x69f30.aniName = "Golden Land Monster";
      break;
    case 2:
      _0x69f30.aniName = "Titanite Monster";
      break;
    case 202:
      _0x69f30.aniName = "Fighter Jet";
      break;
    case 204:
      _0x69f30.aniName = "Necromus";
      break;
    case 205:
      _0x69f30.aniName = "Planet Eater Monster";
      break;
    case 220:
      _0x69f30.aniName = "Belphegor";
      break;
    case 222:
      _0x69f30.aniName = "Peppermint Monster";
      break;
    case 2023:
      _0x69f30.aniName = "Solar Wyvern";
      break;
  }
  _0x69f30.aniCol = "orange";
  _0x69f30.upgradeText = "UPGRADED to " + _0x69f30.aniName + "!\nCreate Sink holes to trap prey!" + _0x27d8b2;
  _0x69f30.skinName = this.getSkinName();
  return _0x69f30;
};
a0_0x1f2e62.prototype.getSkinName = function () {
  if (this.animalSubSpecies == 204) {
    return "volcano/landmonster/" + this.animalSpecies + "/" + this.animalSubSpecies + "/landmonster1";
  } else {
    return "volcano/landmonster/" + this.animalSpecies + "/" + this.animalSubSpecies + "/landmonster";
  }
};
a0_0x1f2e62.prototype.getAbilityInfo = function (_0xcd3c96) {
  var _0x570c2f = {
    abilName: "Giant\nSinkhole!",
    abilImg: "skins/volcano/landmonster/" + this.animalSpecies + "/" + this.animalSubSpecies + "/landmonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x570c2f;
};
a0_0x1f2e62.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (this.animalSubSpecies == 204) {
    var _0x2ba823 = "skins/volcano/landmonster/0/204/";
    var _0x3d394a = this.skinScale * 1.07;
    var _0x3114eb = this.skinRad;
    var _0x2cc4bf = 1 + Math.trunc(a0_0x24806e / 120) % 7;
    var _0x45c951 = this.getSkinImageObj(_0x2ba823 + "/landmonster_head.png");
    var _0x1265e6 = 0;
    if (_0x45c951) {
      a0_0x1306ae.save();
      var _0x3114eb = this.rad;
      a0_0x1306ae.drawImage(_0x45c951, -_0x3114eb * _0x3d394a, (-_0x3114eb + _0x3114eb * 0.05) * _0x3d394a - _0x1265e6, _0x3114eb * 2 * _0x3d394a, _0x3114eb * 2 * _0x3d394a);
      a0_0x1306ae.restore();
      var _0x2be53a = this.getSkinImageObj(_0x2ba823 + "/fire" + _0x2cc4bf + ".png");
      if (_0x2be53a) {
        a0_0x1306ae.save();
        a0_0x1306ae.drawImage(_0x2be53a, -_0x3114eb * _0x3d394a, (-_0x3114eb + _0x3114eb * 0.05) * _0x3d394a - _0x1265e6, _0x3114eb * 2 * _0x3d394a, _0x3114eb * 2 * _0x3d394a);
        a0_0x1306ae.restore();
      }
      var _0x2be53a = this.getSkinImageObj(_0x2ba823 + "/landmonster_head1.png");
      if (_0x2be53a) {
        a0_0x1306ae.save();
        a0_0x1306ae.drawImage(_0x2be53a, -_0x3114eb * _0x3d394a, (-_0x3114eb + _0x3114eb * 0.05) * _0x3d394a - _0x1265e6, _0x3114eb * 2 * _0x3d394a, _0x3114eb * 2 * _0x3d394a);
        a0_0x1306ae.restore();
      }
    }
  }
};
var a0_0x2c3ed4 = 1.8;
a0_0x1f2e62.prototype.basicDrawSkinImg = function () {
  if (this.animalSubSpecies == 204) {
    this.setSkinScale();
    var _0x2b8d68 = this.skinScale;
    var _0x138156 = this.skinRad;
    if (this.loadedSkinImg) {
      overSizeOffset = this.skinRad / 2;
      a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x138156 * a0_0x2c3ed4, -_0x138156 * a0_0x2c3ed4, _0x138156 * 2 * a0_0x2c3ed4, _0x138156 * 2 * a0_0x2c3ed4);
    }
  } else {
    a0_0x1f2e62.superClass.prototype.basicDrawSkinImg.call(this);
  }
};
function a0_0x1f2e62() {
  a0_0x1f2e62.superClass.call(this, a0_0x24738f);
}
window.LandMonster = a0_0x1f2e62;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1f2e62, a0_0x24738f, a0_0x53b0d7);
var a0_0x5b2d62 = a0_0x5b2d62;
var a0_0x28626c = a0_0x2449e7;
a0_0x5b2d62.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5b2d62.prototype.constructor = a0_0x5b2d62;
a0_0x5b2d62.superClass = a0_0x28626c;
a0_0x5b2d62.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x5b2d62.prototype.animalInfo = function () {
  var _0x48af96 = {};
  var _0xe98d2f = "";
  switch (this.animalSpecies) {
    case 0:
      _0x48af96.aniName = "Ice Monster";
      break;
    case 1:
      _0x48af96.aniName = "Golden Ice Monster";
      break;
    case 2:
      _0x48af96.aniName = "Amethyst Monster";
      break;
    case 111:
      _0x48af96.aniName = "Classic Ice Monster";
      break;
    case 201:
      _0x48af96.aniName = "Cryo Coach Monster";
      break;
    case 204:
      _0x48af96.aniName = "Blood Crystal Monster";
      break;
    case 220:
      _0x48af96.aniName = "Blazing Ice Monster";
      break;
  }
  _0x48af96.aniCol = "#ffffff";
  _0x48af96.upgradeText = "UPGRADED to " + _0x48af96.aniName + "!\nShoot Ice crystals to freeze prey!" + _0xe98d2f;
  _0x48af96.skinName = "arctic/icemonster/" + this.animalSpecies + "/icemonster";
  return _0x48af96;
};
a0_0x5b2d62.prototype.getSkinName = function () {
  var _0x10aea7 = this.id == 0 ? "ability" : "icemonster";
  return "arctic/icemonster/" + this.animalSpecies + "/" + _0x10aea7;
};
a0_0x5b2d62.prototype.getAbilityInfo = function (_0x406dd5) {
  var _0x1ba12b = {
    abilName: "Freeze Prey!",
    abilImg: "skins/arctic/icemonster/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x1ba12b;
};
a0_0x5b2d62.prototype.readCustomData_onNewlyVisible = function (_0x5ddc14) {
  a0_0x5b2d62.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5ddc14);
  this.readCrystalsInfo(_0x5ddc14);
};
a0_0x5b2d62.prototype.readCrystal = function (_0x2c7db7, _0x191b22) {
  var _0x361cac = _0x2c7db7.readInt16() / 100;
  this.crystals[_0x191b22].nRad = _0x361cac;
  if (_0x361cac < 1) {
    this.crystals[_0x191b22].rad = 0;
  }
  this.crystals[_0x191b22].isReady = _0x2c7db7.readUInt8() == 1;
};
a0_0x5b2d62.prototype.customUpdatedProperty = function (_0x2a2901, _0x1dd7e8) {
  if (_0x2a2901 == a0_0x5cbc39) {
    this.readCrystal(_0x1dd7e8, 0);
  } else if (_0x2a2901 == a0_0x541053) {
    this.readCrystal(_0x1dd7e8, 1);
  } else if (_0x2a2901 == a0_0x357dd1) {
    this.readCrystal(_0x1dd7e8, 2);
  } else if (_0x2a2901 == a0_0x1beb31) {
    this.readCrystal(_0x1dd7e8, 3);
  } else if (_0x2a2901 == a0_0x3273fd) {
    this.readCrystal(_0x1dd7e8, 4);
  } else if (_0x2a2901 == a0_0x114db5) {
    this.readCrystal(_0x1dd7e8, 5);
  } else if (_0x2a2901 == a0_0x485d74) {
    this.readCrystal(_0x1dd7e8, 6);
  }
};
a0_0x5b2d62.prototype.crystals = [];
a0_0x5b2d62.prototype.readCrystalsInfo = function (_0x3ad2a8) {
  var _0x1bd4fb = _0x3ad2a8.readUInt8();
  this.crystals = [];
  for (i = 0; i < _0x1bd4fb; i++) {
    var _0x4d9083 = _0x3ad2a8.readInt16() / 100;
    var _0x3d60c4 = _0x3ad2a8.readInt16() / 100;
    var _0x17e983 = _0x3ad2a8.readInt16() / 100;
    var _0x4dbfc9 = _0x3ad2a8.readUInt8() * 4;
    var _0x448023 = _0x3ad2a8.readUInt8() == 1;
    this.crystals.push({
      isReady: _0x448023,
      x: _0x4d9083,
      y: _0x3d60c4,
      nRad: _0x17e983,
      oRad: _0x17e983,
      rad: _0x17e983,
      angle: _0x4dbfc9
    });
  }
};
var a0_0x206de8 = 1.5;
a0_0x5b2d62.prototype.drawSkinCustomization = function () {
  if (this.animalSpecies == 201) {
    a0_0x1306ae.save();
    var _0x25eb2b = 0;
    for (i = 0; i < this.crystals.length; i++) {
      var _0x494753 = this.crystals[i];
      if (_0x494753.isReady) {
        _0x25eb2b++;
      }
    }
    _0x25eb2b = Math.min(5, _0x25eb2b);
    var _0x388bf9 = "skins/arctic/icemonster/201/icemonster" + _0x25eb2b + ".png";
    var _0x385650 = this.getSkinImageObj(_0x388bf9);
    if (_0x385650) {
      var _0x569c9d = this.rad * a0_0x206de8;
      a0_0x1306ae.drawImage(_0x385650, -_0x569c9d, -_0x569c9d, _0x569c9d * 2, _0x569c9d * 2);
    }
    a0_0x1306ae.restore();
  } else {
    var _0x569c9d = this.rad - this.outlineW;
    for (i = 0; i < this.crystals.length; i++) {
      var _0x494753 = this.crystals[i];
      if (_0x494753.nRad == 0) {
        continue;
      }
      _0x494753.rad += (_0x494753.nRad - _0x494753.rad) * 0.01;
      var _0x1ba6a6 = _0x494753.x * _0x569c9d;
      var _0x22cc46 = _0x494753.y * _0x569c9d;
      var _0x31967f = _0x494753.angle;
      var _0x1fe2a7 = _0x494753.rad;
      a0_0x1306ae.save();
      a0_0x1306ae.translate(_0x1ba6a6, _0x22cc46);
      a0_0x1306ae.globalAlpha = 1;
      a0_0x1306ae.rotate(a0_0x873ec7(_0x31967f));
      var _0x385650 = this.getSkinImageObj("skins/arctic/icemonster/" + this.animalSpecies + "/crystal.png");
      if (_0x385650) {
        a0_0x1306ae.drawImage(_0x385650, -_0x1fe2a7, -_0x1fe2a7 * 2, _0x1fe2a7 * 2, _0x1fe2a7 * 2);
      }
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x5b2d62() {
  a0_0x5b2d62.superClass.call(this, a0_0x24738f);
}
window.IceMonster = a0_0x5b2d62;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5b2d62, a0_0x24738f, a0_0xadcba8);
var a0_0x5ea025 = a0_0x5ea025;
var a0_0x28626c = a0_0x2449e7;
a0_0x5ea025.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5ea025.prototype.constructor = a0_0x5ea025;
a0_0x5ea025.superClass = a0_0x28626c;
a0_0x5ea025.prototype.calcAnimalZIndex = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z += 1000;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x5ea025.prototype.drawWhenUnderwater = function () {
  this.drawUnderwaterCustomization(1, 1.1);
};
a0_0x5ea025.prototype.animalInfo = function () {
  var _0x5c9b2a = {};
  var _0x59cb24 = "";
  switch (this.animalSpecies) {
    case 0:
      _0x5c9b2a.aniName = "Dino Monster";
      break;
    case 1:
      _0x5c9b2a.aniName = "Golden Dino Monster";
      break;
    case 2:
      _0x5c9b2a.aniName = "Citrine Monster";
      break;
    case 111:
      _0x5c9b2a.aniName = "Classic Dino Monster";
      break;
    case 200:
      _0x5c9b2a.aniName = "Ruby Devil";
      break;
    case 202:
      _0x5c9b2a.aniName = "Tank Monster";
      break;
    case 220:
      _0x5c9b2a.aniName = "Cordycera Dino Monster";
      break;
  }
  _0x5c9b2a.aniCol = "orange";
  _0x5c9b2a.upgradeText = "UPGRADED to " + _0x5c9b2a.aniName + "!\nKnock prey in Air to inflict deadly damage!" + _0x59cb24;
  _0x5c9b2a.skinName = "land/dinomonster/" + this.animalSpecies + "/dinomonster";
  return _0x5c9b2a;
};
a0_0x5ea025.prototype.getSkinName = function () {
  return "land/dinomonster/" + this.animalSpecies + "/dinomonster1";
};
a0_0x5ea025.prototype.getAbilityInfo = function (_0x1888da) {
  var _0x52e72c = {
    abilName: "Knock in Air",
    abilImg: "skins/land/dinomonster/" + this.animalSpecies + "/dinomonster.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x52e72c;
};
a0_0x5ea025.prototype.drawSkinCustomization = function () {
  var _0x22469e = "skins/land/dinomonster/" + this.animalSpecies + "/dinomonster";
  if (this.flag_usingAbility) {
    _0x22469e += "3";
  } else {
    _0x22469e += "2";
  }
  var _0x6d931f = this.getSkinImageObj(_0x22469e + ".png");
  if (_0x6d931f) {
    a0_0x1306ae.save();
    var _0x5d48fe = (this.rad - this.outlineW) * 1.1;
    a0_0x1306ae.drawImage(_0x6d931f, -_0x5d48fe * this.skinScale * 0.91, -_0x5d48fe * this.skinScale * 1.1, _0x5d48fe * 2 * this.skinScale * 0.91, _0x5d48fe * 2 * this.skinScale * 1.1);
    a0_0x1306ae.restore();
  }
};
function a0_0x5ea025() {
  a0_0x5ea025.superClass.call(this, a0_0x24738f);
}
window.DinoMonster = a0_0x5ea025;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5ea025, a0_0x24738f, a0_0x77ab87);
var a0_0x28626c = a0_0x42171b;
a0_0x50ed10.prototype = Object.create(a0_0x28626c.prototype);
a0_0x50ed10.prototype.constructor = a0_0x50ed10;
a0_0x50ed10.superClass = a0_0x28626c;
a0_0x50ed10.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x50ed10.prototype.customDraw = function (_0x284dc2) {
  var _0x1ca975 = this.getSkinImageObj("skins/arctic/icemonster/" + this.speciesType + "/crystalfire.png");
  if (_0x1ca975) {
    a0_0x1306ae.save();
    var _0x4f3f2b = this.rad * 1.5;
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
    a0_0x1306ae.drawImage(_0x1ca975, -_0x4f3f2b, -_0x4f3f2b, _0x4f3f2b * 2, _0x4f3f2b * 2.5);
    a0_0x1306ae.restore();
  }
};
a0_0x50ed10.prototype.getSkinImageObj = function (_0x56a704) {
  var _0x41c175 = this.mopeSeasonID;
  var _0x221296 = "./assets/s/" + _0x41c175 + "/" + _0x56a704;
  if (this.skinThemeID > 0) {
    _0x221296 = "./assets/t/" + this.skinThemeID + "/" + _0x56a704;
  }
  return a0_0x19ebc9(_0x221296, function (_0x44fe84) {
    console.log(_0x44fe84.src);
  });
};
a0_0x50ed10.prototype.readCustomData_onNewlyVisible = function (_0x42dcb6) {
  a0_0x50ed10.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x42dcb6);
  this.speciesType = _0x42dcb6.readUInt8();
};
function a0_0x50ed10() {
  a0_0x50ed10.superClass.call(this, a0_0x3d673e);
}
window.IceCrystal = a0_0x50ed10;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x50ed10, a0_0x3d673e);
var a0_0x28626c = a0_0x42171b;
a0_0x5f0f84.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5f0f84.prototype.constructor = a0_0x5f0f84;
a0_0x5f0f84.superClass = a0_0x28626c;
a0_0x5f0f84.prototype.updateZ = function () {
  this.z = -101;
};
a0_0x5f0f84.prototype.customDraw = function (_0x9a9fe2) {
  a0_0x1306ae.save();
  if (this.specType == 0) {
    this.drawOutlinedCircle("", "#9F8641");
    a0_0x1306ae.globalAlpha = 0.6;
    a0_0x50fd5c(0 + this.rPer, 1, Math.max(0, this.rad * 0.9), "#5C4E28");
    a0_0x1306ae.globalAlpha = 0.7;
    a0_0x50fd5c(0 - this.rPer, 1, Math.max(0, this.rad * 0.8), "#40371D");
    a0_0x1306ae.globalAlpha = 0.9;
    a0_0x50fd5c(0 - this.rPer, 1, Math.max(0, this.rad * 0.8), "#40371D");
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x50fd5c(0 - this.rPer * 3, 1, Math.max(0, this.rad * 0.5), "black");
    a0_0x1306ae.globalAlpha = 1;
    a0_0x50fd5c(0 - this.rPer * 3, 1, Math.max(0, this.rad * 0.3), a0_0xcf4b9b);
  } else {
    this.drawOutlinedCircle("", "#9F8641");
    a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, this.rad - 7), "#7E6A35");
    a0_0x50fd5c(0 + this.rPer, 1, Math.max(0, this.rad - 14), "#5C4E28");
    a0_0x50fd5c(0 - this.rPer * 2 - 3, 1, Math.max(0, this.rad - 18.5), "#40371D");
  }
  a0_0x1306ae.restore();
};
function a0_0x5f0f84() {
  a0_0x5f0f84.superClass.call(this, a0_0x49afaf);
  this.webTransparency = 0;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
window.SinkHole = a0_0x5f0f84;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5f0f84, a0_0x5c5702);
var a0_0x28626c = a0_0x42171b;
a0_0x577d99.prototype = Object.create(a0_0x28626c.prototype);
a0_0x577d99.prototype.constructor = a0_0x577d99;
a0_0x577d99.superClass = a0_0x28626c;
a0_0x577d99.prototype.mommyID = 0;
a0_0x577d99.prototype.updateZ = function () {
  this.z = -153;
};
a0_0x577d99.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x15e4d1) {
    return false;
  }
  var _0x24159f = a0_0x3e58f7.superClass.prototype.isEdibleOutlined.call(this);
  return _0x24159f;
};
a0_0x577d99.prototype.customDraw = function (_0x566a26) {
  a0_0x1306ae.save();
  var _0x35bfda = this.getSkinImageObj("skins/land/ostrich/" + this.speciesType + "/ostrichEgg" + (this.isEdibleOutlined() ? "edible" : "") + ".png");
  if (_0x35bfda) {
    var _0x32a188 = this.rad;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x35bfda, -_0x32a188, -_0x32a188, _0x32a188 * 2, _0x32a188 * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x577d99.prototype.getSkinImageObj = function (_0x4e6769) {
  var _0x449fd7 = this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x4e6769, _0x449fd7);
};
a0_0x577d99.prototype.readCustomData_onNewlyVisible = function (_0xed5c7b) {
  a0_0x577d99.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0xed5c7b);
  this.mommyID = _0xed5c7b.readUInt32();
  this.speciesType = _0xed5c7b.readUInt8();
};
function a0_0x577d99() {
  a0_0x577d99.superClass.call(this, a0_0x2424ed);
  this.doesDrawEffectScale = true;
}
window.OstrichEgg = a0_0x577d99;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x577d99, a0_0x2424ed);
var a0_0x5ac338 = a0_0x5ac338;
var a0_0x28626c = a0_0x2449e7;
a0_0x5ac338.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5ac338.prototype.constructor = a0_0x5ac338;
a0_0x5ac338.superClass = a0_0x28626c;
a0_0x5ac338.prototype.drawNickName = function (_0x1bd458) {
  if (this.flag_usingAbility && this.flag_flying || !this.flag_usingAbility || a0_0x1a5043.mode == a0_0x73c281) {
    a0_0x5ac338.superClass.prototype.drawNickName.call(this, _0x1bd458);
  }
};
a0_0x5ac338.prototype.animalInfo = function () {
  var _0x96b7f = {};
  switch (this.animalSpecies) {
    case 0:
    case 2:
      _0x96b7f.aniName = "Macaw";
      break;
    case 1:
      _0x96b7f.aniName = "Blue Macaw";
      break;
    case 111:
      _0x96b7f.aniName = "Classic Macaw";
      break;
    case 112:
      _0x96b7f.aniName = "Gold-trim Macaw";
      break;
  }
  _0x96b7f.aniCol = "#FF9000";
  _0x96b7f.skinName = this.getSpeciesPath("macaw") + "/macaw";
  _0x96b7f.upgradeText = "UPGRADED to " + (this.animalSpecies == 2 ? "Rare " : "") + _0x96b7f.aniName + "!\nHold W to fly around.\n(Hint: Use ability on hills to mimic animals) ";
  return _0x96b7f;
};
a0_0x5ac338.prototype.getSkinName = function () {
  var _0x4d06a1 = this.getSpeciesPath("macaw") + "/macaw";
  _0x4d06a1 += this.specType == 0 ? "" : this.specType;
  return _0x4d06a1;
};
a0_0x5ac338.prototype.getSpeciesPath = function (_0x3f80a4) {
  return "land/" + _0x3f80a4 + "/" + this.animalSpecies;
};
a0_0x5ac338.prototype.getWing = function (_0x1764fa, _0x4852e8, _0x41b557) {
  var _0x25e584 = "skins/" + (_0x41b557 ? this.getSpeciesPath(_0x1764fa) + "/" : _0x1764fa + "/");
  _0x25e584 += _0x1764fa + "_wing" + _0x4852e8 + ".png";
  return _0x25e584;
};
a0_0x5ac338.prototype.getHead = function (_0xa03c44, _0x2b6ba1) {
  var _0x247cd0 = "skins/" + (_0x2b6ba1 ? this.getSpeciesPath(_0xa03c44) + "/" : _0xa03c44 + "/");
  _0x247cd0 += _0xa03c44 + "_head.png";
  return _0x247cd0;
};
a0_0x5ac338.prototype.getAniRadius = function (_0x4c36ad) {
  if (this.flag_flying) {
    return _0x4c36ad * 0.9;
  } else {
    return _0x4c36ad;
  }
};
a0_0x5ac338.prototype.basicDrawSkinImg = function () {
  if (this.flag_usingAbility) {
    if (!this.flag_flying && this.octoDrawObj != null) {
      return;
    }
  }
  var _0x2179ac = 0.05;
  var _0x607c57 = -0.08;
  var _0x35e79f = 1.1;
  this.setSkinScale();
  var _0x2d49a8 = this.getAniRadius(this.skinRad - this.outlineW);
  var _0x110e65 = 500 / 340;
  if (this.loadedSkinImg) {
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x2d49a8 * _0x110e65, -_0x2d49a8 * _0x110e65, _0x2d49a8 * 2 * _0x110e65, _0x2d49a8 * 2 * _0x110e65);
  }
};
var a0_0x40b7e0 = 1.7;
var a0_0x523eee = 2.2;
a0_0x5ac338.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x41f818 = this.getAniRadius(this.skinRad - this.outlineW);
  var _0x22fd36 = _0x41f818 * 0.8;
  if (this.flag_flying) {
    var _0x4990da = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      let _0x12784d = a0_0xae444c("bird", this.spawnTime);
      if (_0x12784d !== undefined && _0x12784d != null) {
        this.theFrame = _0x12784d;
      }
      let _0x2a453b = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x5e4100 = this.getSkinImageObj(this.getWing("macaw", 1, true));
      if (_0x5e4100) {
        a0_0x1306ae.save();
        var _0x3b2e38 = -(-0.2 + _0x2a453b) * a0_0x5c63e1;
        a0_0x1306ae.rotate(a0_0x4973e3 + _0x3b2e38);
        var _0x5f3eed = 0;
        var _0x2198fd = _0x22fd36;
        var _0x520aee = _0x22fd36 * 2 * 0.62;
        var _0x7c7efb = _0x22fd36 * a0_0x523eee;
        var _0x4550ce = 0.2;
        var _0xe1b7a6 = a0_0x40b7e0;
        a0_0x1306ae.drawImage(_0x5e4100, _0x5f3eed + _0x520aee * -_0x4550ce, _0x2198fd + _0x7c7efb * -_0xe1b7a6, _0x520aee, _0x7c7efb);
        a0_0x1306ae.restore();
      }
      var _0x5e4100 = this.getSkinImageObj(this.getWing("macaw", 2, true));
      if (_0x5e4100) {
        a0_0x1306ae.save();
        var _0x3b2e38 = -(-0.2 + _0x2a453b) * -a0_0x5c63e1;
        a0_0x1306ae.rotate(-a0_0x4973e3 + _0x3b2e38);
        var _0x5f3eed = 0;
        var _0x2198fd = _0x22fd36;
        var _0x520aee = _0x22fd36 * 2 * 0.62;
        var _0x7c7efb = _0x22fd36 * a0_0x523eee;
        var _0x4550ce = 0.8;
        var _0xe1b7a6 = a0_0x40b7e0;
        a0_0x1306ae.drawImage(_0x5e4100, _0x5f3eed + _0x520aee * -_0x4550ce, _0x2198fd + _0x7c7efb * -_0xe1b7a6, _0x520aee, _0x7c7efb);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x11f951 = this.getSkinImageObj(this.getHead("macaw", true));
      if (_0x11f951) {
        a0_0x1306ae.save();
        var _0x41f818 = this.rad;
        a0_0x1306ae.drawImage(_0x11f951, -_0x41f818 * _0x4990da, (-_0x41f818 + _0x41f818 * 0.2) * _0x4990da, _0x41f818 * 2 * _0x4990da, _0x41f818 * 2 * _0x4990da);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x5ac338.prototype.readCustomData_onNewlyVisible = function (_0x40cdf8) {
  a0_0x5ac338.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x40cdf8);
  this.customUpdatedProperty(a0_0x25ae06, _0x40cdf8);
};
a0_0x5ac338.prototype.customUpdatedProperty = function (_0x427982, _0x962966) {
  if (_0x427982 == a0_0x25ae06) {
    var _0x47e854 = _0x962966.readUInt8() == 1;
    if (_0x47e854) {
      var _0x1ca216 = _0x962966.readUInt16();
      var _0x440b74 = _0x962966.readUInt16();
      this.createDisguiseAniObj(_0x1ca216, _0x440b74);
    } else {
      this.octoDrawObj = null;
    }
  }
};
a0_0x5ac338.prototype.createDisguiseAniObj = function (_0x2f16f0, _0x4e4f57) {
  if (this.octoDrawObj == null) {
    var _0x126710 = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x2f16f0);
    _0x126710.animalType = _0x2f16f0;
    _0x126710.animalSpecies = _0x4e4f57;
    _0x126710.rad = _0x126710.oRad = _0x126710.nRad = this.rad;
    _0x126710.curBiome = this.curBiome;
    _0x126710.hp = 5 + Math.random() * 50;
    this.octoDrawObj = _0x126710;
  }
};
a0_0x5ac338.prototype.drawHealthBar = function () {
  if (this.flag_usingAbility && !this.flag_flying && this.octoDrawObj != null) {
    this.octoDrawObj.curBiome = this.curBiome;
    this.hpPer_n = 1;
    this.hpPer = this.octoDrawObj.hp;
    this.hpBarA = 1;
  }
  a0_0x1306ae.save();
  var _0x159221 = a0_0x24806e < this.hpBarTimeoutT ? 1 : 0;
  this.hpBarA += (_0x159221 - this.hpBarA) * 0.04;
  if (this.hpBarA > 0.001) {
    this.hpPer += (this.hpPer_n - this.hpPer) * 0.1;
    var _0x596cb8 = Math.max(1, this.rad / 25);
    var _0x5f3487 = _0x596cb8 * 20;
    var _0x38bbd5 = _0x596cb8 * 5;
    var _0x436829 = 0;
    var _0x291a24 = -this.rad - _0x596cb8 * 10;
    a0_0x1306ae.globalAlpha *= this.hpBarA;
    a0_0x1306ae.fillStyle = "rgba(0,0,0,0.35)";
    a0_0x1306ae.fillRect(_0x436829 - _0x5f3487 / 2, _0x291a24 - _0x38bbd5 / 2, _0x5f3487, _0x38bbd5);
    a0_0x1306ae.fillStyle = "#16D729";
    var _0x43c7b0 = _0x5f3487 * (this.hpPer / 100);
    if (this.flag_usingAbility && this.octoIsAnimal) {
      _0x43c7b0 = _0x5f3487 * (25 / 100);
    }
    a0_0x1306ae.fillRect(_0x436829 - _0x5f3487 / 2, _0x291a24 - _0x38bbd5 / 2, _0x43c7b0, _0x38bbd5);
  }
  a0_0x1306ae.restore();
};
a0_0x5ac338.prototype.drawOnTopOfSkinImg = function () {
  a0_0x5ac338.superClass.prototype.drawOnTopOfSkinImg.call(this);
  if (this.flag_usingAbility && !this.flag_flying) {
    if (this.octoDrawObj != null) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1;
      this.octoDrawObj.mopeSeasonID = 1;
      this.octoDrawObj.rad = this.rad;
      this.octoDrawObj.draw();
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x5ac338() {
  a0_0x5ac338.superClass.call(this, a0_0x24738f);
}
window.Macaw = a0_0x5ac338;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5ac338, a0_0x24738f, a0_0x16e6c0);
var a0_0x214adb = a0_0x214adb;
var a0_0x28626c = a0_0x2449e7;
a0_0x214adb.prototype = Object.create(a0_0x28626c.prototype);
a0_0x214adb.prototype.constructor = a0_0x214adb;
a0_0x214adb.superClass = a0_0x28626c;
a0_0x214adb.prototype.getSkinName = function () {
  var _0x18525e = this.getSpeciesPath("flamingo") + "/flamingo";
  _0x18525e += this.specType == 0 ? "" : this.specType;
  return _0x18525e;
};
a0_0x214adb.prototype.animalInfo = function () {
  var _0x931e5b = {
    aniName: "Flamingo"
  };
  switch (this.animalSpecies) {
    case 111:
      _0x931e5b.aniName = "Classic Flamingo";
      break;
    case 112:
      _0x931e5b.aniName = "Gold-trim Flamingo";
      break;
    case 202:
      _0x931e5b.aniName = "Fly Mango";
      break;
  }
  _0x931e5b.aniCol = "#FF9000";
  _0x931e5b.skinName = this.getSpeciesPath("flamingo") + "/flamingo";
  _0x931e5b.upgradeText = "UPGRADED to " + _0x931e5b.aniName + "!\nHold W in water to search for food underwater.\n(Tip: Any nearby underwater animals will get surfaced by the flamingo!)";
  return _0x931e5b;
};
a0_0x214adb.prototype.getSpeciesPath = function (_0x32968e) {
  return "ocean/" + _0x32968e + "/" + this.animalSpecies;
};
a0_0x214adb.prototype.getWing = function (_0x160039, _0x30449e, _0x1ed757) {
  var _0x485215 = "skins/" + this.getSpeciesPath(_0x160039) + (_0x1ed757 ? "/pink" : "") + "/";
  _0x485215 += _0x160039 + "_wing" + _0x30449e + ".png";
  return _0x485215;
};
a0_0x214adb.prototype.getHead = function (_0xe75350, _0x5ea6f0) {
  var _0x2a93c3 = "skins/" + this.getSpeciesPath(_0xe75350) + (_0x5ea6f0 ? "/pink" : "") + "/";
  _0x2a93c3 += _0xe75350 + "_head.png";
  return _0x2a93c3;
};
a0_0x214adb.prototype.basicDrawSkinImg = function () {
  a0_0x214adb.superClass.prototype.basicDrawSkinImg.call(this);
  if (!this.flag_underWater && this.id > 0) {
    var _0x4bf184 = this.skinScale;
    var _0x28162d = this.skinRad;
    var _0x50306f = "skins/" + this.getSpeciesPath("flamingo") + "/pink/flamingo";
    _0x50306f += this.specType == 0 ? "" : this.specType;
    var _0x499d23 = this.getSkinImageObj(_0x50306f + ".png");
    if (_0x499d23) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = this.colorPerc;
      a0_0x1306ae.drawImage(_0x499d23, -_0x28162d * _0x4bf184, -_0x28162d * _0x4bf184, _0x28162d * 2 * _0x4bf184, _0x28162d * 2 * _0x4bf184);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x214adb.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x30808d = 500 / 340;
  a0_0x1306ae.save();
  var _0x40d230 = this.flag_flying ? 45 : 47;
  var _0x39bcd2 = this.flag_flying ? 90 : 45;
  var _0x1efd07 = this.flag_flying ? 0.2 : 0.01;
  var _0x331fe7 = this.flag_flying ? 2.5 : 2;
  var _0x272f5a = this.flag_flying ? 2 : 2.5;
  var _0x444220 = this.flag_flying ? 0.5 : 1.2;
  var _0x1def9a = (a0_0x24806e - this.spawnTime) / 1000;
  if (this.flag_flying) {
    var _0xc38fb = a0_0xae444c("bird", this.spawnTime);
    if (_0xc38fb !== undefined && _0xc38fb != null) {
      this.theFrame = _0xc38fb;
    }
  } else {
    this.theFrame = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x1def9a, _0x444220, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
  }
  var _0x242ef8 = this.theFrame;
  var _0x4460db = this.getSkinImageObj(this.getWing("flamingo", 1, false));
  if (_0x4460db) {
    a0_0x1306ae.save();
    var _0x59c9bd = -(-_0x1efd07 + _0x242ef8) * a0_0x873ec7(_0x39bcd2);
    var _0x139d02 = this.rad * 0.8;
    a0_0x1306ae.rotate(a0_0x873ec7(_0x40d230) + _0x59c9bd);
    var _0x17f284 = 0;
    var _0x5bbaf9 = this.rad;
    var _0x3a23ed = _0x139d02 * _0x272f5a * 0.62;
    var _0x44307c = _0x139d02 * _0x331fe7;
    var _0x2eddb1 = 0.2;
    var _0x58333e = 1.7;
    a0_0x1306ae.drawImage(_0x4460db, _0x17f284 + _0x3a23ed * -_0x2eddb1, _0x5bbaf9 + _0x44307c * -_0x58333e, _0x3a23ed, _0x44307c);
    a0_0x1306ae.restore();
  }
  var _0x4460db = this.getSkinImageObj(this.getWing("flamingo", 2, false));
  if (_0x4460db) {
    a0_0x1306ae.save();
    var _0x59c9bd = -(-_0x1efd07 + _0x242ef8) * a0_0x873ec7(-_0x39bcd2);
    var _0x139d02 = this.rad * 0.8;
    a0_0x1306ae.rotate(a0_0x873ec7(-_0x40d230) + _0x59c9bd);
    var _0x17f284 = 0;
    var _0x5bbaf9 = this.rad;
    var _0x3a23ed = _0x139d02 * _0x272f5a * 0.62;
    var _0x44307c = _0x139d02 * _0x331fe7;
    var _0x2eddb1 = 0.8;
    var _0x58333e = 1.7;
    a0_0x1306ae.drawImage(_0x4460db, _0x17f284 + _0x3a23ed * -_0x2eddb1, _0x5bbaf9 + _0x44307c * -_0x58333e, _0x3a23ed, _0x44307c);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
  if (this.specType == 1) {
    var _0x509054 = this.getSkinImageObj(this.getHead("flamingo", false));
    if (_0x509054) {
      a0_0x1306ae.save();
      var _0x139d02 = this.rad;
      a0_0x1306ae.drawImage(_0x509054, -_0x139d02 * _0x30808d, (-_0x139d02 + _0x139d02 * 0.1) * _0x30808d, _0x139d02 * 2 * _0x30808d, _0x139d02 * 2 * _0x30808d);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x214adb.prototype.drawUnderSkinImgOutline = function () {
  a0_0x214adb.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && !this.flag_flying) {
    var _0x202473 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x178a5d = 1.5;
    var _0x13c308 = 0.5;
    var _0x2356d0 = _0x13c308 * Math.sin(Math.PI * 2 / _0x178a5d * _0x202473);
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha *= 0.8;
    a0_0x50fd5c(0, this.rad * (0.9 + _0x2356d0 * 0.12), this.rad * 0.3, "#2c84ff");
    a0_0x50fd5c(0, -this.rad * 0.3, this.rad * (1.05 + _0x2356d0 * 0.09), "#4668ff");
    a0_0x1306ae.restore();
    a0_0x1306ae.save();
    var _0x24ebfe = "#4E71C3";
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.fillStyle = _0x24ebfe;
    var _0x12b7ef = this.rad * 0.1;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * -0.3, this.rad * 1.2, Math.max(0, _0x12b7ef + _0x2356d0), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.2, this.rad * 1.5, Math.max(0, _0x12b7ef - _0x2356d0), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.3, this.rad * 1.2, Math.max(0, _0x12b7ef + _0x2356d0), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * -0.2, this.rad * 1.5, Math.max(0, _0x12b7ef - _0x2356d0), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
};
a0_0x214adb.prototype.readCustomData_onNewlyVisible = function (_0x5ad2df) {
  a0_0x214adb.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5ad2df);
  var _0x63bc8c = _0x5ad2df.readUInt8();
  this.colorPerc = _0x63bc8c / 100;
};
a0_0x214adb.prototype.customUpdatedProperty = function (_0x215689, _0x4b02c0) {
  if (_0x215689 == a0_0x419d00) {
    var _0xf194b8 = _0x4b02c0.readUInt8();
    this.colorPerc = _0xf194b8 / 100;
  }
};
function a0_0x214adb() {
  a0_0x214adb.superClass.call(this, a0_0x24738f);
}
window.Flamingo = a0_0x214adb;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x214adb, a0_0x24738f, a0_0x2f2687);
var a0_0x28626c = a0_0x2449e7;
a0_0x4c25b9.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4c25b9.prototype.constructor = a0_0x4c25b9;
a0_0x4c25b9.superClass = a0_0x28626c;
a0_0x4c25b9.prototype.getSkinName = function () {
  let _0x2e7a00 = this.getSpeciesPath() + "/cassowary";
  _0x2e7a00 += this.specType == 0 ? "" : this.specType;
  return _0x2e7a00;
};
a0_0x4c25b9.prototype.getSpeciesPath = function () {
  return "land/cassowary/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4c25b9.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4c25b9.prototype.getAbilityInfo = function (_0x35c991) {
  var _0x4d572d = {
    abilName: "Front Kick\n(Hold to Charge)"
  };
  _0x4d572d.abilImg = "skins/land/cassowary/" + this.animalSpecies + this.getSubSpecies() + "/cassowary2.png";
  _0x4d572d.skinThemeID = this.skinThemeID;
  _0x4d572d.mopeSeasonID = this.mopeSeasonID;
  return _0x4d572d;
};
a0_0x4c25b9.prototype.animalInfo = function () {
  var _0x202867 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x202867.aniName = "Cassowary!";
      break;
    case 1:
      _0x202867.aniName = "Golden Cassowary!";
      break;
    case 2:
      _0x202867.aniName = "Cotton Cassowary!";
      break;
    case 111:
      _0x202867.aniName = "Classic Cassowary";
      break;
    case 202:
      _0x202867.aniName = "Pastel Cassowary";
      break;
    case 204:
      _0x202867.aniName = "Basilisk Cassowary!";
      break;
  }
  _0x202867.aniCol = "#FF9000";
  _0x202867.skinName = this.getSkinName();
  _0x202867.upgradeText = "UPGRADED to " + _0x202867.aniName + "!\nHold W to charge up a kick, the longer you hold, the more powerful it is!";
  return _0x202867;
};
function a0_0x4c25b9() {
  a0_0x4c25b9.superClass.call(this, a0_0x24738f);
}
window.Cassowary = a0_0x4c25b9;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4c25b9, a0_0x24738f, a0_0x52a8a7);
var a0_0x28626c = a0_0x2449e7;
a0_0x1206bd.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1206bd.prototype.constructor = a0_0x1206bd;
a0_0x1206bd.superClass = a0_0x28626c;
a0_0x1206bd.prototype.getSkinName = function () {
  var _0x1d3bd1 = "land/chicken/" + this.animalSpecies + "/chicken";
  _0x1d3bd1 += this.specType == 0 ? "" : this.specType;
  return _0x1d3bd1;
};
a0_0x1206bd.prototype.animalInfo = function () {
  var _0x3e98d7 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3e98d7.aniName = "Chicken";
      break;
    case 111:
      _0x3e98d7.aniName = "Classic Chicken";
      break;
    case 112:
      _0x3e98d7.aniName = "Gold-trim Chicken";
      break;
    case 201:
      _0x3e98d7.aniName = "Countryside Chick";
      break;
    case 202:
      _0x3e98d7.aniName = "Lightning Lord";
      break;
  }
  _0x3e98d7.aniCol = "#FF9000";
  _0x3e98d7.skinName = "land/chicken/" + this.animalSpecies + "/chicken";
  _0x3e98d7.upgradeText = "UPGRADED to " + _0x3e98d7.aniName + "!";
  return _0x3e98d7;
};
a0_0x1206bd.prototype.getWing = function (_0xb5bd27, _0x3e766e, _0xb89d60) {
  var _0x39eb19 = "skins/land/" + (_0xb89d60 ? this.getSpeciesPath(_0xb5bd27) + "/" : _0xb5bd27 + "/");
  _0x39eb19 += _0xb5bd27 + "_wing" + _0x3e766e + ".png";
  return _0x39eb19;
};
a0_0x1206bd.prototype.getHead = function (_0x36b953, _0x175d1a) {
  var _0x21bf44 = "skins/land/" + (_0x175d1a ? this.getSpeciesPath(_0x36b953) + "/" : _0x36b953 + "/");
  _0x21bf44 += _0x36b953 + "_head.png";
  return _0x21bf44;
};
a0_0x1206bd.prototype.getAbilityInfo = function (_0x2cb7d9) {
  var _0xfd899f = {
    abilName: "Run!",
    abilImg: "skins/land/chicken/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0xfd899f;
};
a0_0x1206bd.prototype.drawSkinCustomization = function () {
  var _0x4b9829 = 500 / 340;
  if (this.flag_usingAbility) {
    a0_0x1306ae.save();
    var _0x4cdf3d = (a0_0x24806e - this.spawnTime) / 1000;
    var _0xaddf32 = a0_0x423a9f(_0x4cdf3d, 0.3, 1, 2);
    var _0x5282d7 = this.getSkinImageObj(this.getWing("chicken", 1, true));
    if (_0x5282d7) {
      a0_0x1306ae.save();
      var _0x135753 = -(-0.2 + _0xaddf32) * a0_0x873ec7(15);
      var _0x3075ae = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(15) + _0x135753);
      var _0x1d74ce = 0;
      var _0x56ca8f = this.rad;
      var _0xb7b070 = _0x3075ae * 2 * 0.7;
      var _0x35fb74 = _0x3075ae * 2.2;
      var _0x2dd7c3 = 0;
      var _0x4d1e4b = 1.5;
      a0_0x1306ae.drawImage(_0x5282d7, _0x1d74ce + _0xb7b070 * -_0x2dd7c3, _0x56ca8f + _0x35fb74 * -_0x4d1e4b, _0xb7b070, _0x35fb74);
      a0_0x1306ae.restore();
    }
    var _0x5282d7 = this.getSkinImageObj(this.getWing("chicken", 2, true));
    if (_0x5282d7) {
      a0_0x1306ae.save();
      var _0x135753 = -(-0.2 + _0xaddf32) * a0_0x873ec7(-15);
      var _0x3075ae = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-15) + _0x135753);
      var _0x1d74ce = 0;
      var _0x56ca8f = this.rad;
      var _0xb7b070 = _0x3075ae * 2 * 0.7;
      var _0x35fb74 = _0x3075ae * 2.2;
      var _0x2dd7c3 = 1;
      var _0x4d1e4b = 1.5;
      a0_0x1306ae.drawImage(_0x5282d7, _0x1d74ce + _0xb7b070 * -_0x2dd7c3, _0x56ca8f + _0x35fb74 * -_0x4d1e4b, _0xb7b070, _0x35fb74);
      a0_0x1306ae.restore();
    }
    var _0x456d31 = this.getSkinImageObj(this.getHead("chicken", true));
    if (_0x456d31) {
      a0_0x1306ae.save();
      var _0x3075ae = this.rad * 1;
      var _0x5b2424 = -this.rad * 0.1;
      a0_0x1306ae.drawImage(_0x456d31, -_0x3075ae * _0x4b9829, -_0x3075ae + _0x5b2424 * _0x4b9829, _0x3075ae * 2 * _0x4b9829, _0x3075ae * 2 * _0x4b9829);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
};
function a0_0x1206bd() {
  a0_0x1206bd.superClass.call(this, a0_0x24738f);
}
window.Chicken = a0_0x1206bd;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1206bd, a0_0x24738f, a0_0x1b8d24);
var a0_0x1cf0e5 = a0_0x1cf0e5;
var a0_0x28626c = a0_0x2449e7;
a0_0x1cf0e5.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1cf0e5.prototype.constructor = a0_0x1cf0e5;
a0_0x1cf0e5.superClass = a0_0x28626c;
a0_0x1cf0e5.prototype.animalInfo = function () {
  var _0x750b7b = {
    aniName: "Woodpecker"
  };
  switch (this.animalSpecies) {
    case 111:
      _0x750b7b.aniName = "Classic Woodpecker";
      break;
    case 112:
      _0x750b7b.aniName = "Gold-trim Woodpecker";
      break;
    case 202:
      _0x750b7b.aniName = "Jackhammer";
      break;
  }
  _0x750b7b.aniCol = "#FF9000";
  _0x750b7b.skinName = this.getSpeciesPath("woodpecker") + "/woodpecker";
  _0x750b7b.upgradeText = "UPGRADED to " + _0x750b7b.aniName + "!\nHold W to Peck other animals,\n or (Hint: Use ability on hills to fly)";
  return _0x750b7b;
};
a0_0x1cf0e5.prototype.getSpeciesPath = function (_0x3fb111) {
  return "land/" + _0x3fb111 + "/" + this.animalSpecies;
};
a0_0x1cf0e5.prototype.getSkinName = function () {
  var _0x33d69f = this.getSpeciesPath("woodpecker") + "/woodpecker";
  _0x33d69f += this.specType == 0 ? "" : this.specType;
  return _0x33d69f;
};
a0_0x1cf0e5.prototype.getHead = function (_0x399a18, _0x2acbb4) {
  var _0x12a59d = "skins/" + (_0x2acbb4 ? this.getSpeciesPath(_0x399a18) + "/" : _0x399a18 + "/");
  _0x12a59d += _0x399a18 + "_head" + (!this.flag_flying && this.flag_usingAbility ? "1" : "") + ".png";
  return _0x12a59d;
};
a0_0x1cf0e5.prototype.getAniRadius = function (_0x1934cd) {
  if (this.flag_usingAbility && this.flag_flying) {
    return _0x1934cd * 0.8;
  }
  return _0x1934cd;
};
a0_0x1cf0e5.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x401f59 = "skins";
  {
    var _0xd1f7a5 = 500 / 340;
    a0_0x1306ae.save();
    var _0x4d4fd1 = this.flag_flying ? 45 : 47;
    var _0x3a66d5 = this.flag_flying ? 90 : 45;
    var _0x2c1faf = this.flag_flying ? 0.2 : 0.01;
    var _0x2878d1 = this.flag_flying ? 2.5 : 2;
    var _0x4fbf38 = this.flag_flying ? 2.2 : 2.5;
    var _0x317d63 = this.flag_flying ? 0.5 : 0.3;
    var _0x507ae1 = 0.3;
    var _0x5988fc = (a0_0x24806e - this.spawnTime) / 1000;
    if (this.flag_flying) {
      var _0x235300 = a0_0xae444c("bird", this.spawnTime);
      if (_0x235300 !== undefined && _0x235300 != null) {
        this.theFrame = _0x235300;
      }
    } else {
      this.theFrame = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x5988fc, _0x317d63, _0x507ae1, 2) : this.birdNoAnimationFlyWingAngle;
    }
    var _0x17e6a2 = this.theFrame;
    var _0x3d79e3 = this.getSkinImageObj(this.getWing("woodpecker", 1, true));
    if (_0x3d79e3) {
      a0_0x1306ae.save();
      var _0xd7ad65 = -(-_0x2c1faf + _0x17e6a2) * a0_0x873ec7(_0x3a66d5);
      var _0x4fb233 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(_0x4d4fd1) + _0xd7ad65);
      var _0x57b925 = 0;
      var _0x129a03 = this.rad;
      var _0x1e5b93 = _0x4fb233 * _0x4fbf38 * 0.62;
      var _0x165aaf = _0x4fb233 * _0x2878d1;
      var _0x283809 = 0.2;
      var _0x4645b3 = 1.7;
      a0_0x1306ae.drawImage(_0x3d79e3, _0x57b925 + _0x1e5b93 * -_0x283809, _0x129a03 + _0x165aaf * -_0x4645b3, _0x1e5b93, _0x165aaf);
      a0_0x1306ae.restore();
    }
    var _0x3d79e3 = this.getSkinImageObj(this.getWing("woodpecker", 2, true));
    if (_0x3d79e3) {
      a0_0x1306ae.save();
      var _0xd7ad65 = -(-_0x2c1faf + _0x17e6a2) * a0_0x873ec7(-_0x3a66d5);
      var _0x4fb233 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-_0x4d4fd1) + _0xd7ad65);
      var _0x57b925 = 0;
      var _0x129a03 = this.rad;
      var _0x1e5b93 = _0x4fb233 * _0x4fbf38 * 0.62;
      var _0x165aaf = _0x4fb233 * _0x2878d1;
      var _0x283809 = 0.8;
      var _0x4645b3 = 1.7;
      a0_0x1306ae.drawImage(_0x3d79e3, _0x57b925 + _0x1e5b93 * -_0x283809, _0x129a03 + _0x165aaf * -_0x4645b3, _0x1e5b93, _0x165aaf);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
    if (this.specType != 0 && this.specType != undefined) {
      var _0xa0f5a1 = this.getSkinImageObj(this.getHead("woodpecker", true));
      if (_0xa0f5a1) {
        _0x17e6a2 = 0;
        if (!this.flag_flying) {
          _0x507ae1 = 3;
          _0x317d63 = 0.18;
          _0x17e6a2 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x5988fc, _0x317d63, _0x507ae1, 2) : this.birdNoAnimationFlyWingAngle;
        }
        a0_0x1306ae.save();
        var _0x4fb233 = this.rad;
        var _0x12db14 = !this.flag_flying ? (-_0x4fb233 + _0x4fb233 * 0.1) * _0xd1f7a5 + _0x17e6a2 : -_0x4fb233;
        a0_0x1306ae.drawImage(_0xa0f5a1, -_0x4fb233 * _0xd1f7a5, _0x12db14, _0x4fb233 * 2 * _0xd1f7a5, _0x4fb233 * 2 * _0xd1f7a5);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x1cf0e5() {
  a0_0x1cf0e5.superClass.call(this, a0_0x24738f);
}
window.Woodpecker = a0_0x1cf0e5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1cf0e5, a0_0x24738f, a0_0x4444cb);
var a0_0x4acc50 = a0_0x4acc50;
var a0_0x28626c = a0_0x2449e7;
a0_0x4acc50.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4acc50.prototype.constructor = a0_0x4acc50;
a0_0x4acc50.superClass = a0_0x28626c;
a0_0x4acc50.prototype.updateZ = function () {
  if (this.flag_usingAbility) {
    if (this.flag_flying) {
      this.z = 100000 + this.rad;
      return;
    }
  }
  this.z = 1000 + this.rad;
};
a0_0x4acc50.prototype.animalInfo = function () {
  var _0x2032d0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2032d0.aniName = "Peacock";
      break;
    case 111:
      _0x2032d0.aniName = "Classic Peacock";
      break;
    case 112:
      _0x2032d0.aniName = "Gold-trim Peacock";
      break;
    case 200:
      _0x2032d0.aniName = "Plague Raptor";
      break;
    case 202:
      _0x2032d0.aniName = "Spectrum Peacock";
      break;
  }
  _0x2032d0.aniCol = "#FF9000";
  _0x2032d0.skinName = this.getSpeciesPath("peacock") + "/peacock";
  _0x2032d0.upgradeText = "UPGRADED to " + _0x2032d0.aniName + "!\nHold W to hypnotize prey: prey gets pulled in, predtors pushed!. \nHint:Start the ability on a hill to fly!. ";
  return _0x2032d0;
};
a0_0x4acc50.prototype.getSkinName = function () {
  if (this.mopeSeasonID == 1) {
    if (this.flag_usingAbility) {
      if (this.flag_flying) {
        return this.getSpeciesPath("peacock") + "/peacock_flying_tail";
      } else {
        return this.getSpeciesPath("peacock") + "/tail3";
      }
    }
    return this.getSpeciesPath("peacock") + "/tail1";
  } else {
    var _0x232f94 = this.getSpeciesPath("peacock") + "/peacock";
    _0x232f94 += this.specType == 0 ? "" : this.specType;
    return _0x232f94;
  }
};
a0_0x4acc50.prototype.getSpeciesPath = function (_0x3437ee) {
  return "land/" + _0x3437ee + "/" + this.animalSpecies;
};
a0_0x4acc50.prototype.getWing = function (_0xf24307, _0xff6287, _0x550aa9) {
  var _0xee3613 = "skins/" + (_0x550aa9 ? this.getSpeciesPath(_0xf24307) + "/" : _0xf24307 + "/");
  _0xee3613 += _0xf24307 + "_wing" + _0xff6287 + ".png";
  return _0xee3613;
};
a0_0x4acc50.prototype.getHead = function (_0x1619e5, _0x5e5deb) {
  var _0x19bb41 = "skins/" + (_0x5e5deb ? this.getSpeciesPath(_0x1619e5) + "/" : _0x1619e5 + "/");
  _0x19bb41 += _0x1619e5 + "_head.png";
  return _0x19bb41;
};
a0_0x4acc50.prototype.getAniRadius = function (_0x2893c5) {
  if (this.flag_usingAbility && this.flag_flying) {
    return _0x2893c5 * 0.9;
  }
  return _0x2893c5;
};
a0_0x4acc50.prototype.getSkinImageObj = function (_0x392abf) {
  var _0x2b1d40 = this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x392abf, _0x2b1d40);
};
a0_0x4acc50.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  if (this.mopeSeasonID <= 1) {
    var _0x333ce4 = this.skinRad;
    if (this.loadedSkinImg) {
      if (!this.flag_usingAbility) {
        a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x333ce4 * this.skinScale, -_0x333ce4 * 1.25 * this.skinScale, _0x333ce4 * 2 * this.skinScale, _0x333ce4 * 2 * this.skinScale);
        var _0x10ca92 = this.getSkinImageObj("skins/" + this.getSpeciesPath("peacock") + "/peacock_top.png");
        if (_0x10ca92) {
          a0_0x1306ae.drawImage(_0x10ca92, -_0x333ce4 * this.skinScale, -_0x333ce4 * this.skinScale, _0x333ce4 * 2 * this.skinScale, _0x333ce4 * 2 * this.skinScale);
        }
      } else {
        a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x333ce4 * this.skinScale, -_0x333ce4 * 1.75 * this.skinScale, _0x333ce4 * 2 * this.skinScale, _0x333ce4 * 2.5 * this.skinScale);
      }
    }
  } else {
    var _0x39c302 = 0.05;
    var _0xb7d42d = -0.8;
    var _0x333ce4 = this.getAniRadius(this.skinRad - this.outlineW);
    var _0xa83132 = 500 / 340;
    if (!this.flag_flying && this.flag_usingAbility) {
      var _0x255b3a = -0.55;
      var _0x3be171 = "peacock_ability";
      var _0x4e1fe6 = this.getSkinImageObj("skins/land/peacock/" + this.animalSpecies + "/" + _0x3be171 + ".png");
      var _0x3c3780 = this.skinScale + (this.flag_usingAbility && !this.flag_flying ? 1 : 0);
      if (_0x4e1fe6) {
        a0_0x1306ae.save();
        a0_0x1306ae.drawImage(_0x4e1fe6, -_0x333ce4 * _0x3c3780, (-_0x333ce4 + _0x333ce4 * _0x255b3a) * _0x3c3780, _0x333ce4 * 2 * _0x3c3780, _0x333ce4 * 2 * _0x3c3780);
        a0_0x1306ae.restore();
      }
    }
    if (this.loadedSkinImg) {
      var _0xadfc4a = this.flag_usingAbility && !this.flag_flying ? this.skinScale * 1.1 : _0xa83132;
      a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x333ce4 * _0xadfc4a, (-_0x333ce4 + _0x333ce4 * _0x39c302) * _0xadfc4a, _0x333ce4 * 2 * _0xadfc4a, _0x333ce4 * 2 * _0xadfc4a);
      if (this.flag_flying || !this.flag_usingAbility) {
        var _0x3be171 = "tail";
        var _0x4e1fe6 = this.getSkinImageObj("skins/land/peacock/" + this.animalSpecies + "/" + _0x3be171 + ".png");
        var _0x3c3780 = this.skinScale;
        if (_0x4e1fe6) {
          a0_0x1306ae.save();
          var _0x333ce4 = this.rad - this.outlineW;
          a0_0x1306ae.drawImage(_0x4e1fe6, -_0x333ce4 * _0x3c3780, (-_0x333ce4 + _0x333ce4 * _0xb7d42d) * _0x3c3780, _0x333ce4 * 2 * _0x3c3780, _0x333ce4 * 2 * _0x3c3780);
          a0_0x1306ae.restore();
        }
      }
      if (!this.flag_usingAbility) {
        var _0x10ca92 = this.getSkinImageObj("skins/" + this.getSpeciesPath("peacock") + "/peacock_top.png");
        if (_0x10ca92) {
          a0_0x1306ae.drawImage(_0x10ca92, -_0x333ce4 * _0xa83132, (-_0x333ce4 + _0x333ce4 * _0x39c302) * _0xa83132, _0x333ce4 * 2 * _0xa83132, _0x333ce4 * 2 * _0xa83132);
        }
      }
    }
  }
};
a0_0x4acc50.prototype.drawSkinCustomization = function () {
  if (this.mopeSeasonID <= 1) {
    if (!this.flag_usingAbility) {
      return;
    }
    if (!this.flag_flying) {
      a0_0x1306ae.save();
      var _0x301272 = this.rad;
      var _0x1f7121 = this.getSkinImageObj("skins/" + this.getSpeciesPath("peacock") + "/peacock_ability.png");
      if (_0x1f7121) {
        a0_0x1306ae.drawImage(_0x1f7121, -_0x301272 * this.skinScale * 2, -_0x301272 * this.skinScale * 3 + _0x301272 * 0.4, _0x301272 * 2 * this.skinScale * 2, _0x301272 * 3 * this.skinScale);
      }
      a0_0x1306ae.restore();
    }
    var _0x1f4d6e = 500 / 340;
    a0_0x1306ae.save();
    var _0x3b75e3 = this.flag_flying ? 45 : 20;
    var _0x3423f5 = this.flag_flying ? 90 : 45;
    var _0x3d0fb5 = this.flag_flying ? 0.2 : 0.01;
    var _0x426ca4 = this.flag_flying ? 2.5 : 2;
    var _0x1b3045 = this.flag_flying ? 2.5 : 2;
    var _0x2cb21d = this.flag_flying ? 0 : -0.4;
    var _0x51cfde = this.flag_flying ? 0 : -0.2;
    var _0x5003a5 = this.flag_flying ? 0.5 : 1.2;
    var _0x232c5b = this.flag_flying ? 0.3 : 0.1;
    var _0x5de576 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x2d88e9 = a0_0x56bbb3 != 2 && !a0_0x59c93b ? a0_0x423a9f(_0x5de576, _0x5003a5, _0x232c5b, 2) : this.birdNoAnimationFlyWingAngle;
    var _0x224e82 = this.getSkinImageObj(this.getWing("peacock", 1, true));
    if (_0x224e82) {
      a0_0x1306ae.save();
      var _0x59c2f8 = -(-_0x3d0fb5 + _0x2d88e9) * a0_0x873ec7(_0x3423f5);
      var _0x301272 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(_0x3b75e3) + _0x59c2f8);
      var _0x5a3bd8 = 0;
      var _0x12ff89 = this.rad;
      var _0x13359a = _0x301272 * _0x1b3045 * 0.62;
      var _0x246734 = _0x301272 * _0x426ca4;
      var _0x1445b9 = 0.2 + _0x2cb21d;
      var _0x34a18d = 1.7 + _0x51cfde;
      a0_0x1306ae.drawImage(_0x224e82, _0x5a3bd8 + _0x13359a * -_0x1445b9, _0x12ff89 + _0x246734 * -_0x34a18d, _0x13359a, _0x246734);
      a0_0x1306ae.restore();
    }
    var _0x224e82 = this.getSkinImageObj(this.getWing("peacock", 2, true));
    if (_0x224e82) {
      a0_0x1306ae.save();
      var _0x59c2f8 = -(-_0x3d0fb5 + _0x2d88e9) * a0_0x873ec7(-_0x3423f5);
      var _0x301272 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-_0x3b75e3) + _0x59c2f8);
      var _0x5a3bd8 = 0;
      var _0x12ff89 = this.rad;
      var _0x13359a = _0x301272 * _0x1b3045 * 0.62;
      var _0x246734 = _0x301272 * _0x426ca4;
      var _0x1445b9 = 0.8 - _0x2cb21d;
      var _0x34a18d = 1.7 + _0x51cfde;
      a0_0x1306ae.drawImage(_0x224e82, _0x5a3bd8 + _0x13359a * -_0x1445b9, _0x12ff89 + _0x246734 * -_0x34a18d, _0x13359a, _0x246734);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
    if (this.specType == 1) {
      var _0x41a3cc = this.getSkinImageObj(this.getHead("peacock", true));
      if (_0x41a3cc) {
        a0_0x1306ae.save();
        var _0x301272 = this.rad;
        a0_0x1306ae.drawImage(_0x41a3cc, -_0x301272 * _0x1f4d6e, (-_0x301272 + _0x301272 * 0.1) * _0x1f4d6e, _0x301272 * 2 * _0x1f4d6e, _0x301272 * 2 * _0x1f4d6e);
        a0_0x1306ae.restore();
      }
    }
  } else {
    if (!this.flag_usingAbility) {
      return;
    }
    var _0x1f4d6e = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x586f3d = a0_0xae444c("bird", this.spawnTime);
      if (_0x586f3d !== undefined && _0x586f3d != null) {
        this.theFrame = _0x586f3d;
      }
      var _0x2d88e9 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x224e82 = this.getSkinImageObj(this.getWing("peacock", 1, true));
      if (_0x224e82) {
        a0_0x1306ae.save();
        var _0x59c2f8 = -(-0.2 + _0x2d88e9) * a0_0x5c63e1;
        var _0x301272 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x59c2f8);
        var _0x5a3bd8 = 0;
        var _0x12ff89 = this.rad;
        var _0x13359a = _0x301272 * 2 * 0.62;
        var _0x246734 = _0x301272 * 2.5;
        var _0x1445b9 = 0.2;
        var _0x34a18d = 1.7;
        a0_0x1306ae.drawImage(_0x224e82, _0x5a3bd8 + _0x13359a * -_0x1445b9, _0x12ff89 + _0x246734 * -_0x34a18d, _0x13359a, _0x246734);
        a0_0x1306ae.restore();
      }
      var _0x224e82 = this.getSkinImageObj(this.getWing("peacock", 2, true));
      if (_0x224e82) {
        a0_0x1306ae.save();
        var _0x59c2f8 = -(-0.2 + _0x2d88e9) * a0_0x873ec7(-90);
        var _0x301272 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x59c2f8);
        var _0x5a3bd8 = 0;
        var _0x12ff89 = this.rad;
        var _0x13359a = _0x301272 * 2 * 0.62;
        var _0x246734 = _0x301272 * 2.5;
        var _0x1445b9 = 0.8;
        var _0x34a18d = 1.7;
        a0_0x1306ae.drawImage(_0x224e82, _0x5a3bd8 + _0x13359a * -_0x1445b9, _0x12ff89 + _0x246734 * -_0x34a18d, _0x13359a, _0x246734);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    } else if (this.flag_usingAbility && !this.flag_flying) {
      a0_0x1306ae.save();
      var _0x3b75e3 = this.flag_flying ? 45 : 20;
      var _0x3423f5 = this.flag_flying ? 90 : 45;
      var _0x3d0fb5 = this.flag_flying ? 0.2 : 0.01;
      var _0x426ca4 = this.flag_flying ? 2.5 : 2;
      var _0x1b3045 = this.flag_flying ? 2.5 : 2;
      var _0x2cb21d = this.flag_flying ? 0 : -0.4;
      var _0x51cfde = this.flag_flying ? 0 : -0.2;
      var _0x5003a5 = this.flag_flying ? 0.5 : 1.2;
      var _0x232c5b = this.flag_flying ? 0.3 : 0.1;
      var _0x5de576 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x2d88e9 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x5de576, _0x5003a5, _0x232c5b, 2) : this.birdNoAnimationFlyWingAngle;
      var _0x224e82 = this.getSkinImageObj(this.getWing("peacock", 1, true));
      if (_0x224e82) {
        a0_0x1306ae.save();
        var _0x59c2f8 = -(-_0x3d0fb5 + _0x2d88e9) * a0_0x873ec7(_0x3423f5);
        var _0x301272 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(_0x3b75e3) + _0x59c2f8);
        var _0x5a3bd8 = 0;
        var _0x12ff89 = this.rad;
        var _0x13359a = _0x301272 * _0x1b3045 * 0.62;
        var _0x246734 = _0x301272 * _0x426ca4;
        var _0x1445b9 = 0.2 + _0x2cb21d;
        var _0x34a18d = 1.7 + _0x51cfde;
        a0_0x1306ae.drawImage(_0x224e82, _0x5a3bd8 + _0x13359a * -_0x1445b9, _0x12ff89 + _0x246734 * -_0x34a18d, _0x13359a, _0x246734);
        a0_0x1306ae.restore();
      }
      var _0x224e82 = this.getSkinImageObj(this.getWing("peacock", 2, true));
      if (_0x224e82) {
        a0_0x1306ae.save();
        var _0x59c2f8 = -(-_0x3d0fb5 + _0x2d88e9) * a0_0x873ec7(-_0x3423f5);
        var _0x301272 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-_0x3b75e3) + _0x59c2f8);
        var _0x5a3bd8 = 0;
        var _0x12ff89 = this.rad;
        var _0x13359a = _0x301272 * _0x1b3045 * 0.62;
        var _0x246734 = _0x301272 * _0x426ca4;
        var _0x1445b9 = 0.8 - _0x2cb21d;
        var _0x34a18d = 1.7 + _0x51cfde;
        a0_0x1306ae.drawImage(_0x224e82, _0x5a3bd8 + _0x13359a * -_0x1445b9, _0x12ff89 + _0x246734 * -_0x34a18d, _0x13359a, _0x246734);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x13d2ba = 0.4;
      var _0x41a3cc = this.getSkinImageObj(this.getHead("peacock", true));
      if (_0x41a3cc) {
        a0_0x1306ae.save();
        var _0x301272 = this.rad;
        a0_0x1306ae.drawImage(_0x41a3cc, -_0x301272 * _0x1f4d6e, (-_0x301272 + _0x301272 * _0x13d2ba) * _0x1f4d6e, _0x301272 * 2 * _0x1f4d6e, _0x301272 * 2 * _0x1f4d6e);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x4acc50() {
  a0_0x4acc50.superClass.call(this, a0_0x24738f);
}
window.Peacock = a0_0x4acc50;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4acc50, a0_0x24738f, a0_0x3889a8);
var a0_0x28626c = a0_0x2449e7;
a0_0x4f4ffe.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4f4ffe.prototype.constructor = a0_0x4f4ffe;
a0_0x4f4ffe.superClass = a0_0x28626c;
a0_0x4f4ffe.prototype.updateZ = function () {
  this.z = this.rad;
  if (this.flag_canClimbHill || this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x4f4ffe.prototype.animalInfo = function () {
  var _0x15ba8a = {};
  switch (this.animalSpecies) {
    case 0:
      _0x15ba8a.aniName = "Gazelle";
      break;
    case 100:
      _0x15ba8a.aniName = "Flammy Hart";
      break;
    case 111:
      _0x15ba8a.aniName = "Classic Gazelle";
      break;
    case 112:
      _0x15ba8a.aniName = "Gold-trim Gazelle";
      break;
    case 202:
      _0x15ba8a.aniName = "Retro Neon Gazelle";
      break;
  }
  _0x15ba8a.skinName = this.getSkinName();
  _0x15ba8a.aniCol = "#FF9000";
  _0x15ba8a.upgradeText = "UPGRADED to " + _0x15ba8a.aniName + "!\nHold 'W' to Jump High through everything.";
  return _0x15ba8a;
};
a0_0x4f4ffe.prototype.moveF = 0.08;
a0_0x4f4ffe.prototype.jumpAnim = null;
a0_0x4f4ffe.prototype.frame = 0;
a0_0x4f4ffe.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && a0_0x56bbb3 != a0_0xbf9ed5) {
    var _0x321165 = 1;
    if (this.jumpAnim == null) {
      this.jumpAnim = new a0_0x556513(this, 0.5, a0_0x556513.halfWave);
      this.jumpAnim.keepLastFrame = true;
      this.jumpAnim.loop = true;
      this.jumpAnim.onFrameEntered = function (_0x4450dc) {
        this.forObj.frame = _0x4450dc;
      };
      this.jumpAnim.onStop = function () {};
    }
    if (this.jumpAnim != null) {
      this.jumpAnim.run();
    }
    var _0x2c3933 = this.rad - this.outlineW;
    var _0x1666bb = 500 / 340;
    this.setSkinScale();
    var _0x840d8c = "skins/" + this.getSkinPath() + "/legs0.png";
    var _0x579d2a = "skins/" + this.getSkinPath() + "/legs1.png";
    var _0x328432 = this.getSkinImageObj(_0x840d8c);
    var _0x14d2c4 = this.getSkinImageObj(_0x579d2a);
    if (_0x328432 && _0x14d2c4) {
      var _0x1666bb = this.skinScale + this.skinScale * 0.15 * this.frame;
      var _0x2c3933 = this.skinRad;
      if (this.specType == 0) {
        a0_0x1306ae.drawImage(_0x328432, -_0x2c3933 * _0x1666bb, -_0x2c3933 * _0x1666bb, _0x2c3933 * 2 * _0x1666bb, _0x2c3933 * 2 * _0x1666bb);
        a0_0x1306ae.drawImage(_0x14d2c4, -_0x2c3933 * _0x1666bb, (-_0x2c3933 - _0x2c3933 * this.moveF * this.frame) * _0x1666bb, _0x2c3933 * 2 * _0x1666bb, _0x2c3933 * 2 * _0x1666bb);
      } else {
        a0_0x1306ae.drawImage(_0x14d2c4, -_0x2c3933 * _0x1666bb, -_0x2c3933 * _0x1666bb, _0x2c3933 * 2 * _0x1666bb, _0x2c3933 * 2 * _0x1666bb);
        a0_0x1306ae.drawImage(_0x328432, -_0x2c3933 * _0x1666bb, (-_0x2c3933 + _0x2c3933 * this.moveF * this.frame) * _0x1666bb, _0x2c3933 * 2 * _0x1666bb, _0x2c3933 * 2 * _0x1666bb);
      }
    }
  } else {
    this.jumpAnim = null;
  }
};
a0_0x4f4ffe.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4f4ffe.prototype.getSkinPath = function (_0x2083af) {
  return "desert/gazelle/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4f4ffe.prototype.getSkinName = function () {
  var _0x384bec = this.getSkinPath() + "/gazelle";
  _0x384bec += this.specType == 0 || a0_0x56bbb3 !== a0_0xbf9ed5 ? "" : this.specType;
  return _0x384bec;
};
a0_0x4f4ffe.prototype.getAbilityInfo = function (_0xd4a74d) {
  var _0x2e9d55 = {};
  _0x2e9d55.abilImg = "skins/" + this.getSkinPath() + "/gazelle1.png";
  _0x2e9d55.abilName = "HOLD to Jump High\n";
  _0x2e9d55.skinThemeID = this.skinThemeID;
  _0x2e9d55.mopeSeasonID = this.mopeSeasonID;
  return _0x2e9d55;
};
function a0_0x4f4ffe() {
  a0_0x4f4ffe.superClass.call(this, a0_0x24738f);
}
window.Gazelle = a0_0x4f4ffe;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4f4ffe, a0_0x24738f, a0_0xee8954);
var a0_0x28626c = a0_0x2449e7;
a0_0x512754.prototype = Object.create(a0_0x28626c.prototype);
a0_0x512754.prototype.constructor = a0_0x512754;
a0_0x512754.superClass = a0_0x28626c;
a0_0x512754.prototype.animalInfo = function () {
  var _0x1d5e84 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x1d5e84.aniName = "Armadillo";
      break;
    case 111:
      _0x1d5e84.aniName = "Classic Armadillo";
      break;
    case 112:
      _0x1d5e84.aniName = "Gold-trim Armadillo";
      break;
  }
  _0x1d5e84.skinName = this.getSkinName();
  _0x1d5e84.upgradeText = "UPGRADED to " + _0x1d5e84.aniName + "!\nHold 'W' to roll through everything. \nCarefully, try eating mangoes around venus flytraps!";
  return _0x1d5e84;
};
a0_0x512754.prototype.drawUnderSkinTail = function (_0x37308d) {
  if (!this.flag_usingAbility) {
    a0_0x512754.superClass.prototype.drawUnderSkinTail.call(this, _0x37308d);
  }
};
a0_0x512754.prototype.drawAnimalUnderSkinCircle = function (_0x214652) {
  if (!this.flag_usingAbility) {
    a0_0x512754.superClass.prototype.drawAnimalUnderSkinCircle.call(this, _0x214652);
  }
};
a0_0x512754.prototype.basicDrawSkinImg = function () {
  if (!this.flag_usingAbility) {
    a0_0x512754.superClass.prototype.basicDrawSkinImg.call(this);
    return;
  } else {
    this.setSkinScale();
    this.frameNumber = Math.trunc(a0_0x24806e / 120) % 6;
    var _0x2c65c0 = "skins/" + this.getSkin() + this.frameNumber + ".png";
    var _0x4dc1e1 = this.getSkinImageObj(_0x2c65c0);
    if (_0x4dc1e1) {
      var _0x425743 = this.skinScale;
      var _0x59dcfd = this.skinRad;
      a0_0x1306ae.drawImage(_0x4dc1e1, -_0x59dcfd * _0x425743, -_0x59dcfd * _0x425743, _0x59dcfd * 2 * _0x425743, _0x59dcfd * 2 * _0x425743);
    }
  }
};
a0_0x512754.prototype.getSkin = function () {
  return "desert/armadillo/" + this.animalSpecies + this.getSubSpecies() + "/armadillo";
};
a0_0x512754.prototype.getSkinName = function () {
  return "desert/armadillo/" + this.animalSpecies + this.getSubSpecies() + "/armadillo" + (this.specType == 0 ? "" : this.specType);
};
a0_0x512754.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x512754() {
  a0_0x512754.superClass.call(this, a0_0x24738f);
}
window.Armadillo = a0_0x512754;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x512754, a0_0x24738f, a0_0x4d1599);
var a0_0x28626c = a0_0x2449e7;
a0_0x3323ef.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3323ef.prototype.constructor = a0_0x3323ef;
a0_0x3323ef.superClass = a0_0x28626c;
a0_0x3323ef.prototype.animalInfo = function () {
  var _0x5590e8 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 100:
      _0x5590e8.aniName = "Cacti Rat";
      break;
    case 0:
      _0x5590e8.aniName = "Desert Rat";
      break;
    case 111:
      _0x5590e8.aniName = "Classic Desert Rat";
      break;
    case 112:
      _0x5590e8.aniName = "Gold-trim Desert Rat";
      break;
    case 202:
      _0x5590e8.aniName = "Plasma Rat";
      break;
  }
  _0x5590e8.skinName = this.getSkinName();
  _0x5590e8.upgradeText = "You're a tiny " + _0x5590e8.aniName + "- Eat food to grow!";
  return _0x5590e8;
};
a0_0x3323ef.prototype.getSkinName = function () {
  return this.getSkinPath() + "/kangaroorat" + (this.specType == 0 ? "" : this.specType);
};
a0_0x3323ef.prototype.getSkinPath = function () {
  return "desert/kangaroorat/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3323ef.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3323ef.prototype.flapStart = 0;
a0_0x3323ef.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    var _0x5cd596 = "skins/" + this.getSkinPath() + "/tail.png";
    var _0x4612ee = this.getSkinImageObj(_0x5cd596);
    if (_0x4612ee) {
      var _0x506dc7 = this.skinScale * 1.5;
      var _0x40defa = this.skinRad;
      a0_0x1306ae.drawImage(_0x4612ee, -_0x40defa * _0x506dc7, (-_0x40defa + _0x40defa * -0.08) * _0x506dc7, _0x40defa * 2 * _0x506dc7, _0x40defa * 2 * _0x506dc7);
    }
  }
};
function a0_0x3323ef() {
  a0_0x3323ef.superClass.call(this, a0_0x24738f);
}
window.KangarooRat = a0_0x3323ef;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3323ef, a0_0x24738f, a0_0x5a237f);
var a0_0x28626c = a0_0x2449e7;
a0_0x4683c9.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4683c9.prototype.constructor = a0_0x4683c9;
a0_0x4683c9.superClass = a0_0x28626c;
a0_0x4683c9.prototype.animalInfo = function () {
  var _0x575ab0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x575ab0.aniName = "Desert Chipmunk";
      break;
    case 111:
      _0x575ab0.aniName = "Classic Desert Chipmunk";
      break;
    case 112:
      _0x575ab0.aniName = "Gold-trim Desert Chipmunk";
      break;
    case 200:
      _0x575ab0.aniName = "Velvet Chipmunk";
      break;
    case 202:
      _0x575ab0.aniName = "Chipmonk";
      break;
  }
  _0x575ab0.skinName = this.getSkinName();
  _0x575ab0.aniCol = "#FF9000";
  _0x575ab0.upgradeText = "UPGRADED to " + _0x575ab0.aniName + "!\n Press W to Spit food to boost yourself!";
  return _0x575ab0;
};
a0_0x4683c9.prototype.getSkinName = function () {
  return this.getSkinPath() + "/chipmunk" + (this.specType == 0 ? "" : this.specType);
};
a0_0x4683c9.prototype.getSkinPath = function () {
  return "desert/chipmunk/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4683c9.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x4683c9() {
  a0_0x4683c9.superClass.call(this, a0_0x24738f);
}
window.DesertChipmunk = a0_0x4683c9;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4683c9, a0_0x24738f, a0_0x4dbc97);
var a0_0x28626c = a0_0x2449e7;
a0_0x3b859e.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3b859e.prototype.constructor = a0_0x3b859e;
a0_0x3b859e.superClass = a0_0x28626c;
a0_0x3b859e.prototype.updateZ = function () {
  if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (this.flag_usingAbility) {
    this.z = -157;
  } else if (this.flag_flying || this.flag_eff_tossedInAir) {
    this.z = 2100 + this.rad;
  } else {
    this.z = this.rad;
  }
};
a0_0x3b859e.prototype.animalInfo = function () {
  var _0x5a57f9 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x5a57f9.aniName = "Meerkat";
      break;
    case 100:
      _0x5a57f9.aniName = "Puumpkat";
      break;
    case 111:
      _0x5a57f9.aniName = "Classic Meerkat";
      break;
    case 112:
      _0x5a57f9.aniName = "Gold-trim Meerkat";
      break;
    case 201:
      _0x5a57f9.aniName = "Scubakat";
      break;
    case 204:
      _0x5a57f9.aniName = "Necromancer Meerkat";
      break;
  }
  _0x5a57f9.skinName = this.getSkinName();
  _0x5a57f9.upgradeText = "UPGRADED to " + _0x5a57f9.aniName + "!\n HOLD to Dig Underground. \nYou can now eat pink cactus fruits!";
  return _0x5a57f9;
};
a0_0x3b859e.prototype.getSkinName = function () {
  return this.getSkinPath() + "/meerkat" + (this.specType == 0 ? "" : this.specType);
};
a0_0x3b859e.prototype.getSkinPath = function () {
  return "desert/meerkat/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3b859e.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3b859e.prototype.drawAnimalUnderSkinCircle = function (_0x150509) {
  if (!this.flag_usingAbility) {
    a0_0x3b859e.superClass.prototype.drawAnimalUnderSkinCircle.call(this, _0x150509);
  }
};
a0_0x3b859e.prototype.drawUnderSkinTail = function (_0x478464) {
  if (!this.flag_usingAbility) {
    a0_0x3b859e.superClass.prototype.drawUnderSkinTail.call(this, _0x478464);
  }
};
a0_0x3b859e.prototype.basicDrawSkinImg = function () {
  if (!this.flag_usingAbility) {
    a0_0x3b859e.superClass.prototype.basicDrawSkinImg.call(this);
    return;
  } else {
    this.setSkinScale();
    a0_0x1306ae.save();
    var _0x50d6dd = _0x50d6dd = "skins/" + this.getSkinPath() + "/meerkat1.png";
    var _0x1752ff = this.getSkinImageObj(_0x50d6dd);
    if (_0x1752ff) {
      var _0x2ed9aa = this.skinScale;
      var _0x2801fa = this.skinRad;
      a0_0x1306ae.drawImage(_0x1752ff, -_0x2801fa * _0x2ed9aa, -_0x2801fa * _0x2ed9aa, _0x2801fa * 2 * _0x2ed9aa, _0x2801fa * 2 * _0x2ed9aa);
    }
    a0_0x1306ae.restore();
  }
};
function a0_0x3b859e() {
  a0_0x3b859e.superClass.call(this, a0_0x24738f);
}
window.Meerkat = a0_0x3b859e;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3b859e, a0_0x24738f, a0_0x67458);
var a0_0x28626c = a0_0x2449e7;
a0_0x3b2c25.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3b2c25.prototype.constructor = a0_0x3b2c25;
a0_0x3b2c25.superClass = a0_0x28626c;
a0_0x3b2c25.prototype.animalInfo = function () {
  var _0x41876d = {};
  switch (this.animalSpecies) {
    case 0:
      _0x41876d.aniName = "Fennec Fox";
      break;
    case 111:
      _0x41876d.aniName = "Classic Fennec Fox";
      break;
    case 112:
      _0x41876d.aniName = "Gold-trim Fennec Fox";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x41876d.aniName = "Fire Fox";
          break;
        case 1:
          _0x41876d.aniName = "Purple Fire Fox";
      }
      break;
  }
  _0x41876d.aniCol = "#FF9000";
  _0x41876d.skinName = this.getSkinName();
  _0x41876d.upgradeText = "UPGRADED to " + _0x41876d.aniName + "!\nFennec Fox has very sharp ears (can see animals in hiding holes).\n Press W to Whine!";
  return _0x41876d;
};
a0_0x3b2c25.prototype.getSkinPath = function (_0x4a89ac) {
  return "desert/fennecfox/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3b2c25.prototype.getSkinName = function () {
  var _0x31d83d = this.getSkinPath() + "/fennecfox";
  _0x31d83d += this.specType == 0 ? "" : this.specType;
  return _0x31d83d;
};
a0_0x3b2c25.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x3b2c25.prototype.flapStart = 0;
a0_0x3b2c25.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.flapStart = 0;
    return;
  } else if (this.flapStart == 0) {
    this.flapStart = a0_0x24806e;
  }
  this.setSkinScale();
  var _0x27d7d8 = 0.5;
  var _0x4d4daa = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0xae444c("fennecfox", this.spawnTime) : 2;
  _0x4d4daa = Math.abs(Math.round(_0x4d4daa));
  var _0xd38915 = "skins/" + this.getSkinPath() + "/ears" + _0x4d4daa + ".png";
  var _0x436e54 = this.getSkinImageObj(_0xd38915);
  if (_0x436e54) {
    var _0x5c9888 = this.skinScale;
    var _0x163733 = this.skinRad;
    a0_0x1306ae.drawImage(_0x436e54, -_0x163733 * _0x5c9888, -_0x163733 * _0x5c9888, _0x163733 * 2 * _0x5c9888, _0x163733 * 2 * _0x5c9888);
  }
};
function a0_0x3b2c25() {
  a0_0x3b2c25.superClass.call(this, a0_0x24738f);
}
window.FennecFox = a0_0x3b2c25;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3b2c25, a0_0x24738f, a0_0x3950f4);
var a0_0x28626c = a0_0x2449e7;
a0_0x3ea55b.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3ea55b.prototype.constructor = a0_0x3ea55b;
a0_0x3ea55b.superClass = a0_0x28626c;
a0_0x3ea55b.prototype.animalInfo = function () {
  var _0x44f2b9 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x44f2b9.aniName = "Gobi Bear";
      break;
    case 111:
      _0x44f2b9.aniName = "Classic Gobi Bear";
      break;
    case 112:
      _0x44f2b9.aniName = "Gold-trim Gobi Bear";
      break;
    case 202:
      _0x44f2b9.aniName = "Gobee Bear";
      break;
  }
  _0x44f2b9.aniCol = "#FF9000";
  _0x44f2b9.skinName = this.getSkinName();
  _0x44f2b9.upgradeText = "UPGRADED to " + _0x44f2b9.aniName + "!\n";
  return _0x44f2b9;
};
a0_0x3ea55b.prototype.getSkinName = function () {
  return this.getSkinPath() + "/gobibear" + (this.flag_usingAbility ? "1" : "");
};
a0_0x3ea55b.prototype.getSkinPath = function () {
  return "desert/gobibear/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3ea55b.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3ea55b.prototype.biteStart = 0;
a0_0x3ea55b.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (a0_0x24806e - this.biteStart < 400) {
      if (this.specType != 0 && this.specType != undefined) {
        var _0x273c02 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/gobibear_head1.png");
        var _0x18d241 = (a0_0x24806e - this.biteStart) / 1000;
        var _0x349114 = this.skinScale * 1.1;
        var _0x4cd677 = this.skinRad;
        if (_0x273c02) {
          frame = 0;
          if (!this.flag_flying) {
            flapAmount = 3;
            flapDur = 0.5;
            frame = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x18d241, flapDur, flapAmount, 2) : this.birdNoAnimationFlyWingAngle;
          }
          a0_0x1306ae.save();
          var _0x4cd677 = this.rad;
          a0_0x1306ae.drawImage(_0x273c02, -_0x4cd677 * _0x349114, (-_0x4cd677 + _0x4cd677 * 0.1) * _0x349114 + frame, _0x4cd677 * 2 * _0x349114, _0x4cd677 * 2 * _0x349114);
          a0_0x1306ae.restore();
        }
      }
    }
  }
};
function a0_0x3ea55b() {
  a0_0x3ea55b.superClass.call(this, a0_0x24738f);
}
window.GobiBear = a0_0x3ea55b;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3ea55b, a0_0x24738f, a0_0x4db8c8);
var a0_0x28626c = a0_0x2449e7;
a0_0x1ce600.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1ce600.prototype.constructor = a0_0x1ce600;
a0_0x1ce600.superClass = a0_0x28626c;
a0_0x1ce600.prototype.animalInfo = function () {
  var _0x104b3b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x104b3b.aniName = "Camel";
      break;
    case 100:
      _0x104b3b.aniName = "Doomedarius";
      break;
    case 111:
      _0x104b3b.aniName = "Classic Camel";
      break;
    case 112:
      _0x104b3b.aniName = "Gold-trim Camel";
      break;
    case 201:
      _0x104b3b.aniName = "Balloon Warrior";
      break;
    case 202:
      _0x104b3b.aniName = "Fungal Camel";
      break;
  }
  _0x104b3b.skinName = this.getSkinName();
  _0x104b3b.aniCol = "#FF9000";
  _0x104b3b.upgradeText = "UPGRADED to " + _0x104b3b.aniName + "!\n Press W to Spit. Try eating oranges from trees!";
  return _0x104b3b;
};
a0_0x1ce600.prototype.getSkinName = function () {
  let _0x111d00 = this.getSkinPath() + "/camel";
  _0x111d00 += this.specType == 0 ? "" : this.specType;
  return _0x111d00;
};
a0_0x1ce600.prototype.getSkinPath = function () {
  return "desert/camel/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1ce600.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x1ce600.prototype.getAbilityInfo = function (_0x296df3) {
  var _0x39a174 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x39a174.abilName = "Spit!";
      break;
    case 100:
      _0x39a174.abilName = "Cannon Shots!";
      break;
    case 201:
      _0x39a174.abilName = "Water Balloons!";
      break;
  }
  _0x39a174.abilImg = "skins/desert/camel/" + this.animalSpecies + this.getSubSpecies() + "/spit.png";
  _0x39a174.skinThemeID = this.skinThemeID;
  _0x39a174.mopeSeasonID = this.mopeSeasonID;
  return _0x39a174;
};
a0_0x1ce600.prototype.biteStart = 0;
a0_0x1ce600.prototype.flapAmount = 3;
a0_0x1ce600.prototype.flapDur = 1;
a0_0x1ce600.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x447ac7 = "skins/" + this.getSkinPath() + "/camel_head1.png";
      var _0xcebb6c = this.getSkinImageObj(_0x447ac7);
      var _0x5b4d33 = (a0_0x24806e - this.biteStart) / 1000;
      var _0x3d354d = this.skinScale * 1.1;
      var _0x272e80 = this.skinRad;
      if (_0xcebb6c) {
        var _0x5b0149 = 0;
        if (!this.flag_flying) {
          _0x5b0149 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x5b4d33, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x1306ae.save();
        var _0x272e80 = this.rad;
        a0_0x1306ae.drawImage(_0xcebb6c, -_0x272e80 * _0x3d354d, (-_0x272e80 + _0x272e80 * 0.1) * _0x3d354d - _0x5b0149, _0x272e80 * 2 * _0x3d354d, _0x272e80 * 2 * _0x3d354d);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x1ce600() {
  a0_0x1ce600.superClass.call(this, a0_0x24738f);
}
window.Camel = a0_0x1ce600;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1ce600, a0_0x24738f, a0_0x1e1e1f);
var a0_0x28626c = a0_0x42171b;
a0_0x42b511.prototype = Object.create(a0_0x28626c.prototype);
a0_0x42b511.prototype.constructor = a0_0x42b511;
a0_0x42b511.superClass = a0_0x28626c;
a0_0x42b511.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x42b511.prototype.customDraw = function (_0x32c23f) {
  var _0x190b6a = "";
  if (this.speciesType == 201) {
    _0x190b6a = "skins/desert/camel/" + this.speciesType + "/spit" + this.specType + ".png";
  } else {
    _0x190b6a = "skins/desert/camel/" + this.speciesType + "/spit.png";
  }
  var _0x2015b2 = this.getSkinImageObj(_0x190b6a);
  if (_0x2015b2) {
    a0_0x1306ae.save();
    var _0x695e76 = this.rad * 2;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x2015b2, -_0x695e76, -_0x695e76, _0x695e76 * 2, _0x695e76 * 2);
    a0_0x1306ae.restore();
  }
};
a0_0x42b511.prototype.getSkinImageObj = function (_0x25553e) {
  var _0x43c0c9 = this.speciesType === 100 || this.speciesType === 201 ? 1 : 2;
  var _0x5d3ab4 = "./assets/s/" + _0x43c0c9 + "/" + _0x25553e;
  if (this.skinThemeID > 0) {
    _0x5d3ab4 = "./assets/t/" + this.skinThemeID + "/" + _0x25553e;
  }
  return a0_0x19ebc9(_0x5d3ab4, function (_0x21d450) {
    console.log(_0x21d450.src);
  });
};
function a0_0x42b511() {
  a0_0x42b511.superClass.call(this, a0_0x554e7b);
}
window.CamelSpit = a0_0x42b511;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x42b511, a0_0x554e7b);
var a0_0x28626c = a0_0x2449e7;
a0_0x4eb528.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4eb528.prototype.constructor = a0_0x4eb528;
a0_0x4eb528.superClass = a0_0x28626c;
a0_0x4eb528.prototype.animalInfo = function () {
  var _0x1d89ad = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x1d89ad.aniName = "Warthog";
      break;
    case 100:
      _0x1d89ad.aniName = "The Burlone";
      break;
    case 111:
      _0x1d89ad.aniName = "Classic Warthog";
      break;
    case 112:
      _0x1d89ad.aniName = "Gold-trim Warthog";
      break;
    case 200:
      _0x1d89ad.aniName = "WarT. Hog";
      break;
    case 201:
      _0x1d89ad.aniName = "Flame Tiki";
      break;
    case 202:
      _0x1d89ad.aniName = "Dark Matter Warthog";
      break;
    case 204:
      _0x1d89ad.aniName = "Candy Corn Warthog";
      break;
    case 220:
      _0x1d89ad.aniName = "Dark Matter Warthog";
      break;
  }
  _0x1d89ad.skinName = this.getSkinName();
  _0x1d89ad.upgradeText = "UPGRADED to " + _0x1d89ad.aniName + "!\nPress W to Dig and Charge.";
  return _0x1d89ad;
};
a0_0x4eb528.prototype.getSkinName = function () {
  let _0x4b61f8 = this.getSkinPath() + "/warthog";
  _0x4b61f8 += this.specType == 0 ? "" : this.specType;
  return _0x4b61f8;
};
a0_0x4eb528.prototype.getSkinPath = function () {
  return "desert/warthog/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4eb528.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4eb528.prototype.flapStart = 0;
a0_0x4eb528.prototype.drawUnderSkinImgOutline = function () {
  console.log(this.teamID);
  a0_0x4eb528.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && !this.isCharging) {
    var _0x585e8b = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x6023b0 = 1.5;
    var _0x458d48 = 1;
    var _0x3d96b4 = _0x458d48 * Math.sin(Math.PI * 2 / _0x6023b0 * _0x585e8b);
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha *= 0.8 - _0x3d96b4 * 0.2;
    a0_0x50fd5c(0, this.rad * 0.3, this.rad * (0.9 + _0x3d96b4 * 0.12), "#b69327");
    a0_0x50fd5c(0, -this.rad * 0.2, this.rad * (0.9 + _0x3d96b4 * 0.09), "#b69327");
    a0_0x1306ae.restore();
  }
};
a0_0x4eb528.prototype.drawUnderSkinImg = function () {
  if (!this.flag_usingAbility) {
    this.flapStart = 0;
    return;
  } else if (this.flapStart == 0) {
    this.flapStart = a0_0x24806e;
  }
  if (this.flag_usingAbility && !this.isCharging) {
    var _0x3c0e4e = this.rad - this.outlineW;
    var _0x1db984 = 500 / 340;
    this.setSkinScale();
    var _0x1178c9 = 0.8;
    var _0x1a473a = (a0_0x24806e - this.flapStart) / 1000;
    var _0x1e3569 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x1a473a, _0x1178c9, 1, 1) : 0;
    _0x1e3569 = Math.round(_0x1e3569);
    if (_0x1e3569 < 0) {
      _0x1e3569 = 0;
    }
    var _0x47b2a5 = "skins/" + this.getSkinPath() + "/leg" + _0x1e3569 + ".png";
    var _0x3caecd = this.getSkinImageObj(_0x47b2a5);
    if (_0x3caecd) {
      var _0x1db984 = this.skinScale;
      var _0x3c0e4e = this.skinRad;
      a0_0x1306ae.drawImage(_0x3caecd, -_0x3c0e4e * _0x1db984, -_0x3c0e4e * _0x1db984, _0x3c0e4e * 2 * _0x1db984, _0x3c0e4e * 2 * _0x1db984);
    }
  }
};
a0_0x4eb528.prototype.getAbilityInfo = function (_0x266d65) {
  var _0x26676c = {
    abilName: "Dig Food\nSudden Charge"
  };
  _0x26676c.abilImg = "skins/" + this.getSkinPath() + "/warthog.png";
  _0x26676c.skinThemeID = this.skinThemeID;
  _0x26676c.mopeSeasonID = this.mopeSeasonID;
  return _0x26676c;
};
a0_0x4eb528.prototype.isCharging = false;
a0_0x4eb528.prototype.readCustomData_onNewlyVisible = function (_0x4ef56b) {
  a0_0x4eb528.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x4ef56b);
  this.customUpdatedProperty(a0_0x49efc7, _0x4ef56b);
};
a0_0x4eb528.prototype.customUpdatedProperty = function (_0x1faaea, _0x52ea22) {
  if (_0x1faaea == a0_0x49efc7) {
    this.isCharging = _0x52ea22.readUInt8() == 1;
  }
};
function a0_0x4eb528() {
  a0_0x4eb528.superClass.call(this, a0_0x24738f);
}
window.Warthog = a0_0x4eb528;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4eb528, a0_0x24738f, a0_0x35d611);
var a0_0x28626c = a0_0x2449e7;
a0_0x304c76.prototype = Object.create(a0_0x28626c.prototype);
a0_0x304c76.prototype.constructor = a0_0x304c76;
a0_0x304c76.superClass = a0_0x28626c;
a0_0x304c76.prototype.animalInfo = function () {
  var _0x3f9942 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3f9942.aniName = "Hyena";
      break;
    case 111:
      _0x3f9942.aniName = "Classic Hyena";
      break;
    case 112:
      _0x3f9942.aniName = "Gold-trim Hyena";
      break;
    case 201:
      _0x3f9942.aniName = "DJ Hyena";
      break;
    case 202:
      _0x3f9942.aniName = "Anubis Hyena";
      break;
  }
  _0x3f9942.aniCol = "#FF9000";
  _0x3f9942.skinName = this.getSkinName();
  _0x3f9942.upgradeText = "UPGRADED to " + _0x3f9942.aniName + "!\nHyenas have a very loud and scary laugh!\nPress W to Laugh.";
  return _0x3f9942;
};
a0_0x304c76.prototype.getSkinName = function () {
  return this.getSkinPath() + "/hyena" + (this.specType == 0 ? "" : this.specType);
};
a0_0x304c76.prototype.getSkinPath = function () {
  return "desert/hyena/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x304c76.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x304c76.prototype.biteStart = 0;
a0_0x304c76.prototype.flapAmount = 3;
a0_0x304c76.prototype.flapDur = 1;
a0_0x304c76.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0xbb6f27 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/hyena_head.png");
      var _0x308993 = (a0_0x24806e - this.biteStart) / 1000;
      var _0x493e9e = this.skinScale * 1.1;
      var _0x5a4899 = this.skinRad;
      if (_0xbb6f27) {
        frame = 0;
        if (!this.flag_flying) {
          frame = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x308993, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x1306ae.save();
        var _0x5a4899 = this.rad;
        a0_0x1306ae.drawImage(_0xbb6f27, -_0x5a4899 * _0x493e9e, (-_0x5a4899 + _0x5a4899 * 0.1) * _0x493e9e + frame, _0x5a4899 * 2 * _0x493e9e, _0x5a4899 * 2 * _0x493e9e);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x304c76.prototype.getAbilityInfo = function (_0xabdcf0) {
  var _0x72188 = {
    abilName: "Laughs!"
  };
  _0x72188.abilImg = "skins/" + this.getSkinPath() + "/hyena2.png";
  _0x72188.skinThemeID = this.skinThemeID;
  _0x72188.mopeSeasonID = this.mopeSeasonID;
  return _0x72188;
};
a0_0x304c76.prototype.getSkinImageObj = function (_0x51c22e) {
  var _0x4ec5fb = this.animalSpecies === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x51c22e, _0x4ec5fb);
};
function a0_0x304c76() {
  a0_0x304c76.superClass.call(this, a0_0x24738f);
}
window.Hyena = a0_0x304c76;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x304c76, a0_0x24738f, a0_0x299d82);
var a0_0x2b9582 = a0_0x262a0d;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x262a0d.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x262a0d.prototype.customDraw = function (_0xa7e9d4) {
  a0_0x1306ae.save();
  var _0x139b43 = this.getSkinImageObj("skins/desert/hyena/" + this.speciesType + "/laugh.png");
  if (_0x139b43) {
    var _0x47b198 = a0_0x24806e - this.spawnTime;
    var _0x57d9f4 = _0x47b198 / 1000;
    var _0x2764ea = 2;
    var _0x31df6c = 1.5;
    rShift = _0x31df6c * Math.sin(Math.PI * 2 / _0x2764ea * _0x57d9f4);
    var _0x48345b = a0_0x423a9f(_0x57d9f4, 5.1, 1, 1);
    _0x48345b = a0_0x3cbcc1(_0x48345b, 0, 1);
    a0_0x1306ae.globalAlpha = _0x48345b;
    var _0x405c5f = 1;
    var _0xbbdaa8 = this.rad;
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(-90));
    a0_0x1306ae.drawImage(_0x139b43, -_0xbbdaa8 * _0x405c5f, -_0xbbdaa8 * _0x405c5f, _0xbbdaa8 * 2 * _0x405c5f, _0xbbdaa8 * 2 * _0x405c5f);
  }
  a0_0x1306ae.restore();
  this.drawChat();
};
a0_0x262a0d.prototype.drawChat = function () {
  if (this.aLine == null) {
    return;
  }
  a0_0x1306ae.save();
  a0_0x1306ae.font = "10px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  var _0x5900f8 = this.aLine;
  var _0x5b5404 = a0_0x24806e > _0x5900f8.chatFadeT ? 0 : 1;
  _0x5900f8.chatA += (_0x5b5404 - _0x5900f8.chatA) * 0.1;
  a0_0x1306ae.shadowOffsetX = 0;
  a0_0x1306ae.shadowOffsetY = 0;
  if (_0x5900f8.chatA < 0.02) {
    this.aLine = null;
  }
  var _0x24752e = a0_0x1306ae.measureText(_0x5900f8.chatTxt).width;
  var _0x1c0410 = 10;
  var _0x564f77 = 1;
  var _0x4474d0 = 1;
  a0_0x1306ae.globalAlpha = _0x5900f8.chatA * 0.8;
  a0_0x1306ae.fillStyle = a0_0x4e8ba0(this.curBiome);
  a0_0x1306ae.fillRect(this.x - _0x564f77 - _0x24752e / 2, this.y - this.rad - _0x1c0410 / 2 - _0x4474d0, _0x24752e + _0x564f77 * 2, _0x1c0410 + _0x4474d0 * 2);
  a0_0x1306ae.fillStyle = "#F1C34C";
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x1306ae.shadowOffsetX = 1;
    a0_0x1306ae.shadowOffsetY = 1;
    a0_0x1306ae.shadowColor = "black";
  }
  a0_0x1306ae.globalAlpha = _0x5900f8.chatA;
  a0_0x1306ae.fillText(_0x5900f8.chatTxt, this.x, this.y - this.rad);
  a0_0x1306ae.restore();
};
function a0_0x262a0d() {
  a0_0x262a0d.superClass.call(this);
}
a0_0x262a0d.prototype.aLine = null;
a0_0x262a0d.prototype.readCustomData_onNewlyVisible = function (_0x5f45d0) {
  a0_0x262a0d.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5f45d0);
  this.aLine = {
    chatTxt: this.speciesType == 201 ? "Oh yeah!" : "Hehehe",
    chatFadeT: a0_0x24806e + 4000,
    chatA: 0
  };
};
a0_0x262a0d.prototype.getSkinImageObj = function (_0x537751) {
  var _0x1bcd7b = this.speciesType === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x537751, _0x1bcd7b);
};
window.HyenaLaugh = a0_0x262a0d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x262a0d, a0_0x382193, a0_0x58739c);
var a0_0x28626c = a0_0x2449e7;
a0_0x3897ae.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3897ae.prototype.constructor = a0_0x3897ae;
a0_0x3897ae.superClass = a0_0x28626c;
a0_0x3897ae.prototype.animalInfo = function () {
  var _0x324242 = {
    aniCol: "#FF9000"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x324242.aniName = "Rattle Snake";
      break;
    case 111:
      _0x324242.aniName = "Classic Rattle Snake";
      break;
    case 112:
      _0x324242.aniName = "Gold-trim Rattle Snake";
      break;
    case 100:
      _0x324242.aniName = "Gummy Viper";
      break;
  }
  _0x324242.upgradeText = "UPGRADED to " + _0x324242.aniName + "!\nThe " + _0x324242.aniName + " is a very dangerous animal. \nHOLD W to Rattle.";
  _0x324242.skinName = this.getSkinName();
  return _0x324242;
};
a0_0x3897ae.prototype.getSkinName = function () {
  return this.getSkinPath() + "/rattlesnake" + (this.specType == 0 ? "" : this.specType);
};
a0_0x3897ae.prototype.getSkinPath = function () {
  return "desert/rattlesnake/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3897ae.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3897ae.prototype.biteStart = 0;
a0_0x3897ae.prototype.drawUnderSkinImg = function () {
  if (!this.flag_usingAbility) {
    var _0x549289 = this.rad - this.outlineW;
    var _0x5ce767 = 500 / 340;
    var _0x34c498 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/tongue.png");
    var _0x21eb93 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x3ca6c5 = a0_0x56bbb3 == a0_0xbf9ed5 ? 0 : a0_0x423a9f(_0x21eb93, 0.7, 6, 0.5);
    var _0x26e6a1 = a0_0x56bbb3 == a0_0xbf9ed5 ? 0 : 5;
    if (_0x34c498) {
      a0_0x1306ae.drawImage(_0x34c498, -_0x549289 * _0x5ce767, -(_0x549289 + _0x26e6a1 + _0x3ca6c5) * _0x5ce767, _0x549289 * 2 * _0x5ce767, _0x549289 * 2 * _0x5ce767);
    }
  }
};
a0_0x3897ae.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x425d6e = this.getSkinImageObj("skins/" + this.getSkinPath() + "/rattlesnake_head.png");
      var _0x37e177 = this.skinScale * 1;
      var _0x2f47db = this.skinRad;
      if (_0x425d6e) {
        a0_0x1306ae.save();
        var _0x2f47db = this.rad;
        a0_0x1306ae.drawImage(_0x425d6e, -_0x2f47db * _0x37e177, -_0x2f47db * 1.2 * _0x37e177, _0x2f47db * 2 * _0x37e177, _0x2f47db * 2 * _0x37e177);
        a0_0x1306ae.restore();
      }
    }
    var _0x236e6a = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x8c8b6 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x236e6a, 0.1, 0.2, 2) : 0;
    var _0x2f47db = this.rad * 1.3;
    var _0x15ad5d = 0;
    var _0x45a2ad = 0;
    var _0x4e1a51 = 0;
    var _0x4072ba = this.getSkinImageObj("skins/" + this.getSkinPath() + "/rattle.png");
    if (_0x4072ba) {
      a0_0x1306ae.save();
      var _0x576cf8 = -(-_0x45a2ad + _0x8c8b6) * a0_0x873ec7(-(_0x15ad5d - 5));
      var _0x37e177 = this.skinScale * 1.2;
      a0_0x1306ae.rotate(a0_0x873ec7(-_0x4e1a51) + _0x576cf8);
      a0_0x1306ae.drawImage(_0x4072ba, -_0x2f47db * _0x37e177, -_0x2f47db * 0.7 * _0x37e177, _0x2f47db * 2 * _0x37e177, _0x2f47db * 2 * _0x37e177);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x3897ae.prototype.getAbilityInfo = function (_0x4e0e70) {
  var _0xd86ddf = {
    abilName: "Rattle!"
  };
  _0xd86ddf.abilImg = "skins/" + this.getSkinPath() + "/rattlesnake.png";
  _0xd86ddf.skinThemeID = this.skinThemeID;
  _0xd86ddf.mopeSeasonID = this.mopeSeasonID;
  return _0xd86ddf;
};
function a0_0x3897ae() {
  a0_0x3897ae.superClass.call(this, a0_0x24738f);
}
window.RattleSnake = a0_0x3897ae;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3897ae, a0_0x24738f, a0_0x38e019);
var a0_0x2b9582 = a0_0x1e5e34;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x1e5e34.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x1e5e34.prototype.customDraw = function (_0x2d47d4) {
  a0_0x1306ae.save();
  var _0x25e405 = this.getSkinImageObj("skins/desert/rattlesnake/" + this.speciesType + "/circle.png");
  if (_0x25e405) {
    var _0x234e61 = a0_0x24806e - this.spawnTime;
    var _0x596868 = _0x234e61 / 1000;
    var _0x229b34 = 2;
    var _0xaa0b92 = 1.5;
    rShift = _0xaa0b92 * Math.sin(Math.PI * 2 / _0x229b34 * _0x596868);
    var _0x4ca4f1 = a0_0x423a9f(_0x596868, 5.1, 1, 1);
    _0x4ca4f1 = a0_0x3cbcc1(_0x4ca4f1, 0, 1);
    a0_0x1306ae.globalAlpha = _0x4ca4f1;
    var _0x464986 = 1;
    var _0x34e950 = this.rad * 0.8;
    a0_0x1306ae.drawImage(_0x25e405, -_0x34e950 * _0x464986, -_0x34e950 * _0x464986, _0x34e950 * 2 * _0x464986, _0x34e950 * 2 * _0x464986);
  }
  a0_0x1306ae.restore();
};
a0_0x1e5e34.prototype.getSkinImageObj = function (_0xda9088) {
  var _0x50d551 = this.speciesType === 100 ? 1 : this.mopeSeasonID;
  var _0x53898a = "./assets/s/" + _0x50d551 + "/" + _0xda9088;
  if (this.skinThemeID > 0) {
    _0x53898a = "./assets/t/" + this.skinThemeID + "/" + _0xda9088;
  }
  return a0_0x19ebc9(_0x53898a, function (_0x28cdd6) {
    console.log(_0x28cdd6.src);
  });
};
function a0_0x1e5e34() {
  a0_0x1e5e34.superClass.call(this);
}
window.SnakeRattle = a0_0x1e5e34;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1e5e34, a0_0x382193, a0_0x481031);
var a0_0x2bb3d1 = a0_0x2bb3d1;
var a0_0x28626c = a0_0x2449e7;
a0_0x2bb3d1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2bb3d1.prototype.constructor = a0_0x2bb3d1;
a0_0x2bb3d1.superClass = a0_0x28626c;
a0_0x2bb3d1.prototype.getSkinName2 = function () {
  var _0x24c162 = this.getSkinPath() + "/vulture";
  return _0x24c162;
};
a0_0x2bb3d1.prototype.getSkinName = function () {
  let _0x2766ff = this.getSkinPath() + "/vulture";
  if (this.flag_flying && this.flag_usingAbility) {
    _0x2766ff += 2;
  } else {
    _0x2766ff += this.specType == 0 ? "" : this.specType;
  }
  return _0x2766ff;
};
a0_0x2bb3d1.prototype.getSkinPath = function () {
  return "desert/vulture/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2bb3d1.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x2bb3d1.prototype.getAbilityInfo = function (_0x32f884) {
  var _0x3e528d = {
    abilName: "Fly/ Pickup Bones"
  };
  _0x3e528d.abilImg = "skins/" + this.getSkinPath() + "/vulture.png";
  _0x3e528d.skinThemeID = this.skinThemeID;
  _0x3e528d.mopeSeasonID = this.mopeSeasonID;
  return _0x3e528d;
};
a0_0x2bb3d1.prototype.animalInfo = function () {
  var _0x1e7997 = {
    aniName: "Vulture"
  };
  switch (this.animalSpecies) {
    case 100:
      _0x1e7997.aniName = "Vulgeist";
      break;
    case 111:
      _0x1e7997.aniName = "Classic Vulture";
      break;
    case 112:
      _0x1e7997.aniName = "Gold-trim Vulture";
      break;
    case 204:
      _0x1e7997.aniName = "Acid Husk";
      break;
  }
  _0x1e7997.aniCol = "#FF9000";
  _0x1e7997.skinName = this.getSkinName();
  _0x1e7997.upgradeText = "UPGRADED to " + (this.animalSpecies == 1 ? "Rare " : "") + _0x1e7997.aniName + "!\nPress W to Grab/Drop bones" + (this.animalSpecies == 1 ? " and animals" : "") + " on other animals,\n Try Eating bones too!";
  return _0x1e7997;
};
a0_0x2bb3d1.prototype.getHead = function (_0x5f74d0, _0x13aec9) {
  var _0x51c9ef = this.flag_flying ? "1" : "1";
  var _0x55c3c3 = "skins/" + this.getSkinName2() + "_head" + _0x51c9ef + ".png";
  return _0x55c3c3;
};
a0_0x2bb3d1.prototype.getWing = function (_0x121cdd, _0x56cd24, _0x1b8ea0) {
  var _0x3ee5dd = "skins/" + this.getSkinName2() + "_wing" + _0x56cd24 + ".png";
  return _0x3ee5dd;
};
a0_0x2bb3d1.prototype.flaps = 0;
a0_0x2bb3d1.prototype.flapsMod = 3;
a0_0x2bb3d1.prototype.countFlap = true;
a0_0x2bb3d1.prototype.canFlap = a0_0x56bbb3 != a0_0xbf9ed5;
a0_0x2bb3d1.prototype.resumeFlapT = 0;
a0_0x2bb3d1.prototype.lastFlapFrame = 0;
a0_0x2bb3d1.prototype.sF = -1;
a0_0x2bb3d1.prototype.wF = 1;
a0_0x2bb3d1.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x3d32e4 = "skins";
  if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
    if (!this.canFlap && this.flag_flying && a0_0x24806e > this.resumeFlapT) {
      this.canFlap = true;
    }
  } else {
    this.canFlap = false;
  }
  {
    var _0x2df71c = 500 / 340;
    a0_0x1306ae.save();
    var _0x5c1613 = this.flag_flying ? 45 : 47;
    var _0x35b265 = this.flag_flying ? 90 : 45;
    var _0x6b950a = this.flag_flying ? 0.2 : 0.001;
    var _0x1a7e77 = this.flag_flying ? 2.5 : 2.3;
    var _0x3ca468 = this.flag_flying ? 2.2 : 2.7;
    var _0x41d62e = this.flag_flying ? 1.2 : 1;
    var _0x46e60e = this.flag_flying ? 0.35 : 0.2;
    var _0x47fa59 = this.flag_flying ? "" : "2";
    var _0x1b4108 = (a0_0x24806e - this.resumeFlapT) / 1000;
    var _0x3aebaf = this.canFlap ? a0_0x423a9f(_0x1b4108, _0x41d62e, _0x46e60e, 2) : this.birdNoAnimationFlyWingAngle;
    if (this.flag_flying && _0x3aebaf < 0 && this.countFlap) {
      this.countFlap = false;
      this.flaps++;
      if (this.flaps % this.flapsMod == 0) {
        this.lastFlapFrame = _0x3aebaf;
        this.canFlap = false;
        this.resumeFlapT = +new Date() + 1500;
      }
    } else if (_0x3aebaf > 0 && !this.countFlap) {
      this.countFlap = true;
    }
    if (!this.canFlap) {
      _0x3aebaf = this.lastFlapFrame;
    }
    _0x1a7e77 += this.sF * _0x3aebaf;
    _0x3ca468 += this.wF * _0x3aebaf;
    var _0x24ac70 = this.getSkinImageObj(this.getWing("vulture", _0x47fa59 + 1, false));
    if (_0x24ac70) {
      a0_0x1306ae.save();
      var _0x465997 = 1;
      _0x465997 = -(-_0x6b950a + _0x3aebaf);
      var _0x51de8d = _0x465997 * a0_0x873ec7(_0x35b265);
      var _0x2725a6 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(_0x5c1613) + _0x51de8d);
      var _0x24e1a0 = 0;
      var _0xf54aa7 = this.rad;
      var _0x52b32e = _0x2725a6 * _0x3ca468 * 0.62;
      var _0x5daf1c = _0x2725a6 * _0x1a7e77;
      var _0x4f5dd0 = 0.2;
      var _0x596459 = 1.7;
      a0_0x1306ae.drawImage(_0x24ac70, _0x24e1a0 + _0x52b32e * -_0x4f5dd0, _0xf54aa7 + _0x5daf1c * -_0x596459, _0x52b32e, _0x5daf1c);
      a0_0x1306ae.restore();
    }
    var _0x24ac70 = this.getSkinImageObj(this.getWing("vulture", _0x47fa59 + 2, false));
    if (_0x24ac70) {
      a0_0x1306ae.save();
      var _0x465997 = 1;
      _0x465997 = -(-_0x6b950a + _0x3aebaf);
      var _0x51de8d = _0x465997 * a0_0x873ec7(-_0x35b265);
      var _0x2725a6 = this.rad * 0.8;
      a0_0x1306ae.rotate(a0_0x873ec7(-_0x5c1613) + _0x51de8d);
      var _0x24e1a0 = 0;
      var _0xf54aa7 = this.rad;
      var _0x52b32e = _0x2725a6 * _0x3ca468 * 0.62;
      var _0x5daf1c = _0x2725a6 * _0x1a7e77;
      var _0x4f5dd0 = 0.8;
      var _0x596459 = 1.7;
      a0_0x1306ae.drawImage(_0x24ac70, _0x24e1a0 + _0x52b32e * -_0x4f5dd0, _0xf54aa7 + _0x5daf1c * -_0x596459, _0x52b32e, _0x5daf1c);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
    if (this.specType != 0 && this.specType != undefined) {
      var _0x8ca780 = this.getSkinImageObj(this.getHead("vulture", false));
      if (_0x8ca780) {
        var _0x2725a6 = this.rad;
        var _0x54a09e = 0;
        if (this.flag_flying) {
          _0x54a09e = (-_0x2725a6 + _0x2725a6 * 0.4) * _0x2df71c;
        } else {
          _0x54a09e = (-_0x2725a6 + _0x2725a6 * 0.1) * _0x2df71c;
        }
        a0_0x1306ae.save();
        a0_0x1306ae.drawImage(_0x8ca780, -_0x2725a6 * _0x2df71c, _0x54a09e, _0x2725a6 * 2 * _0x2df71c, _0x2725a6 * 2 * _0x2df71c);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x2bb3d1() {
  a0_0x2bb3d1.superClass.call(this, a0_0x24738f);
  if (this.resumeFlapT == 0) {
    this.resumeFlapT = +new Date();
  }
}
window.Vulture = a0_0x2bb3d1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2bb3d1, a0_0x24738f, a0_0x1ad6bd);
var a0_0x28626c = a0_0x42171b;
a0_0x47b662.prototype = Object.create(a0_0x28626c.prototype);
a0_0x47b662.prototype.constructor = a0_0x47b662;
a0_0x47b662.superClass = a0_0x28626c;
a0_0x47b662.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x47b662.prototype.customDraw = function (_0x135a1b) {
  var _0x407ccb = "gameobj/" + this.oType + "/" + this.oType + ".png";
  var _0x592ee5 = this.getSkinImageObj(_0x407ccb);
  if (_0x592ee5) {
    a0_0x1306ae.save();
    var _0x456585 = this.rad * 1;
    a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
    a0_0x1306ae.drawImage(_0x592ee5, -_0x456585, -_0x456585, _0x456585 * 2, _0x456585 * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x47b662() {
  a0_0x47b662.superClass.call(this, a0_0x13bcd9);
}
window.Bone = a0_0x47b662;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x47b662, a0_0x13bcd9);
var a0_0x28626c = a0_0x2449e7;
a0_0x4cf7b0.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4cf7b0.prototype.constructor = a0_0x4cf7b0;
a0_0x4cf7b0.superClass = a0_0x28626c;
a0_0x4cf7b0.prototype.animalInfo = function () {
  var _0x37f770 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x37f770.aniName = "Bison";
      break;
    case 111:
      _0x37f770.aniName = "Classic Bison";
      break;
    case 112:
      _0x37f770.aniName = "Gold-trim Bison";
      break;
    case 200:
      _0x37f770.aniName = "Titan Bison";
      break;
    case 202:
      _0x37f770.aniName = "Minotaur";
      break;
  }
  _0x37f770.aniCol = "#FF9000";
  _0x37f770.skinName = this.getSkinName();
  _0x37f770.upgradeText = "UPGRADED to " + _0x37f770.aniName + "!\nHold W to charge and toss opponent in air.";
  return _0x37f770;
};
a0_0x4cf7b0.prototype.getSpeciesPath = function (_0x596d7e) {
  return "desert/" + _0x596d7e + "/" + this.animalSpecies;
};
a0_0x4cf7b0.prototype.getAbilityInfo = function (_0x3f767d) {
  var _0x2439f1 = {
    abilName: "Gores!"
  };
  _0x2439f1.abilImg = "skins/desert/bison/" + this.animalSpecies + this.getSubSpecies() + "/bison_ability.png";
  _0x2439f1.skinThemeID = this.skinThemeID;
  _0x2439f1.mopeSeasonID = this.mopeSeasonID;
  return _0x2439f1;
};
a0_0x4cf7b0.prototype.getSkinName = function () {
  return this.getSkin() + "/bison" + (this.specType == 0 ? "" : 1);
};
a0_0x4cf7b0.prototype.getSkin = function () {
  return "desert/bison/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4cf7b0.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4cf7b0.prototype.drawUnderSkinImgOutline = function () {
  a0_0x4cf7b0.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && this.isHitingAnimal) {
    this.showBackLeg();
  }
};
a0_0x4cf7b0.prototype.isHitingAnimal = false;
a0_0x4cf7b0.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    if (this.specType != 0 && this.specType != undefined) {
      if (!this.isHitingAnimal && this.specType == 2) {
        this.isHitingAnimal = true;
      }
      {
        var _0x114625 = this.getSkinImageObj("skins/" + this.getSkin() + "/body_front.png");
        var _0x49b851 = this.skinScale * 1;
        var _0x452413 = this.skinRad;
        if (_0x114625) {
          frame = 0;
          a0_0x1306ae.save();
          var _0x452413 = this.rad;
          a0_0x1306ae.drawImage(_0x114625, -_0x452413 * _0x49b851, -_0x452413 * _0x49b851, _0x452413 * 2 * _0x49b851, _0x452413 * 2 * _0x49b851);
          a0_0x1306ae.restore();
        }
      }
      var _0x114625 = this.getSkinImageObj("skins/" + this.getSkin() + "/bison_head" + this.specType + ".png");
      var _0x49b851 = this.skinScale * 1.01;
      var _0x452413 = this.skinRad;
      if (_0x114625) {
        frame = 0;
        a0_0x1306ae.save();
        var _0x452413 = this.rad;
        a0_0x1306ae.drawImage(_0x114625, -_0x452413 * _0x49b851, (-_0x452413 + _0x452413 * 0.2) * _0x49b851 + frame, _0x452413 * 2 * _0x49b851, _0x452413 * 2 * _0x49b851);
        a0_0x1306ae.restore();
      }
    }
  } else {
    this.legYAnchorF = 0;
    this.legHeightF = 0;
    this.isHitingAnimal = false;
  }
};
a0_0x4cf7b0.prototype.legYAnchorF = 2.3;
a0_0x4cf7b0.prototype.legStretchW = 1.3;
a0_0x4cf7b0.prototype.legStretchH = 1;
a0_0x4cf7b0.prototype.legHeightF = 20;
a0_0x4cf7b0.prototype.showBackLeg = function () {
  var _0x406a04 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x19546f = a0_0x423a9f(_0x406a04, 0.3, 1, 0.5);
  var _0x2e3f55 = "front";
  if (_0x19546f <= 0.5 && _0x19546f > 0.1) {
    _0x2e3f55 = "front";
    this.legYAnchorF = 1;
    this.legHeightF = 20;
  } else if (_0x19546f > 0.5) {
    _0x2e3f55 = "back";
    this.legYAnchorF = 2.3;
    this.legHeightF = -5;
  }
  a0_0x1306ae.save();
  var _0x290270 = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = _0x290270 * 0.1;
  a0_0x50fd5c(0, 0, this.rad, "#755A2A");
  a0_0x1306ae.globalAlpha = _0x290270 * 1;
  var _0x479158 = this.getSkinImageObj("skins/" + this.getSkin() + "/" + _0x2e3f55 + "_legs.png");
  if (_0x479158) {
    var _0x146fe4 = _0x19546f;
    var _0x1ee587 = this.rad * 0.6;
    var _0x23aeba = 0;
    var _0x4a5b65 = this.rad;
    var _0x365d3e = _0x1ee587 * 2 * this.legStretchW;
    var _0x483d30 = _0x1ee587 * 2 * _0x146fe4;
    var _0x18813f = 0.5;
    var _0x59b262 = 0.95;
    a0_0x1306ae.drawImage(_0x479158, _0x23aeba + _0x365d3e * -_0x18813f, _0x4a5b65 + (_0x483d30 + this.legHeightF) * (-_0x59b262 * this.legYAnchorF), _0x365d3e, _0x483d30 * this.legStretchH);
  }
  a0_0x1306ae.restore();
};
function a0_0x4cf7b0() {
  a0_0x4cf7b0.superClass.call(this, a0_0x24738f);
}
window.Bison = a0_0x4cf7b0;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4cf7b0, a0_0x24738f, a0_0x273412);
var a0_0x28626c = a0_0x2449e7;
a0_0x46b9d7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x46b9d7.prototype.constructor = a0_0x46b9d7;
a0_0x46b9d7.superClass = a0_0x28626c;
a0_0x46b9d7.prototype.animalInfo = function () {
  var _0x962db3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x962db3.aniName = "Komodo Dragon";
      break;
    case 1:
      _0x962db3.aniName = "Golden Komodo";
      break;
    case 2:
      _0x962db3.aniName = "Night Komodo";
      break;
    case 111:
      _0x962db3.aniName = "Classic Komodo Dragon";
      break;
    case 200:
      switch (this.animalSubSpecies) {
        case 0:
          _0x962db3.aniName = "Dowager Varande";
          break;
        case 1:
          _0x962db3.aniName = "Emperor Varande";
          break;
      }
      break;
    case 202:
      _0x962db3.aniName = "Galaxy Komodo Dragon";
      break;
  }
  _0x962db3.aniCol = "#FF9000";
  _0x962db3.skinName = this.getSkinName();
  _0x962db3.upgradeText = "UPGRADED to " + _0x962db3.aniName + "!\n" + _0x962db3.aniName + " have very poisonous bite. Press W to bite! Also eat bones.";
  return _0x962db3;
};
a0_0x46b9d7.prototype.getAbilityInfo = function (_0x58cd5b) {
  var _0x5a1888 = {
    abilName: "Poison Bite\n(Sweat Prey)"
  };
  _0x5a1888.abilImg = "skins/" + this.getSkinPath() + "/komododragon_ability.png";
  _0x5a1888.skinThemeID = this.skinThemeID;
  _0x5a1888.mopeSeasonID = this.mopeSeasonID;
  return _0x5a1888;
};
a0_0x46b9d7.prototype.getSkinName = function () {
  return this.getSkinPath() + "/komododragon";
};
a0_0x46b9d7.prototype.getSkinPath = function () {
  return "desert/komododragon/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x46b9d7.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies == 200) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x46b9d7.prototype.updateZ = function () {
  if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (this.flag_usingAbility && !this.flag_underWater) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying || this.flag_eff_tossedInAir) {
    this.z = 10000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    } else {
      this.z += this.rad;
    }
  } else {
    this.z = this.rad;
  }
};
a0_0x46b9d7.prototype.straightTongueOffsetY = -0.45;
a0_0x46b9d7.prototype.straightTongueScaleF = 1.8;
a0_0x46b9d7.prototype.drawUnderSkinImg = function () {
  if (this.specType != 0) {
    return;
  }
  this.setSkinScale();
  if (+new Date() < this.spawnTime + 5000) {
    return;
  }
  if (!this.flag_usingAbility && !this.wasLicking && +new Date() > this.nextShowT) {
    var _0x5784c1 = this.skinScale * this.straightTongueScaleF;
    var _0x2ae695 = this.skinRad;
    var _0x2177df = this.getSkinImageObj("skins/" + this.getSkinPath() + "/tongue.png");
    var _0x2ba5f5 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0xcc0169 = a0_0x423a9f(_0x2ba5f5, 0.7, 12, 0.5);
    if (_0x2177df) {
      a0_0x1306ae.drawImage(_0x2177df, -_0x2ae695 * _0x5784c1, (-_0x2ae695 + _0x2ae695 * this.straightTongueOffsetY) * _0x5784c1 + _0xcc0169, _0x2ae695 * 2 * _0x5784c1, _0x2ae695 * 2 * _0x5784c1);
    }
  }
};
a0_0x46b9d7.prototype.tongueAnimationDur = 1;
a0_0x46b9d7.prototype.tongueScaleF = 1.5;
a0_0x46b9d7.prototype.tongueAncherY = -0.21;
a0_0x46b9d7.prototype.showTongue = true;
a0_0x46b9d7.prototype.nextShowT = 0;
a0_0x46b9d7.prototype.lastLickSide = 0;
a0_0x46b9d7.prototype.wasLicking = false;
a0_0x46b9d7.prototype.isLicking = false;
a0_0x46b9d7.prototype.lickFaceOffsetY = -0.3;
a0_0x46b9d7.prototype.biteStart = 0;
var a0_0x27912e = 0;
var a0_0x2b4986 = 1.2;
a0_0x46b9d7.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  var _0x25c479 = -0.15;
  if (this.flag_usingAbility) {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (this.specType == 1) {
      {
        var _0xda4aac = this.getSkinImageObj("skins/" + this.getSkinPath() + "/komododragon_neck.png");
        if (_0xda4aac) {
          var _0x2a0f61 = (a0_0x24806e - this.biteStart) / 1000;
          var _0x41e95b = 5;
          var _0x1e1564 = 1;
          var _0x1bdfe0 = a0_0x423a9f(_0x2a0f61, _0x1e1564, _0x41e95b, 1);
          a0_0x1306ae.save();
          var _0x3786bb = this.rad;
          var _0x30e9f6 = this.skinScale * 1;
          a0_0x1306ae.drawImage(_0xda4aac, -_0x3786bb * _0x30e9f6, (-_0x3786bb + _0x3786bb * -0.05) * _0x30e9f6 + _0x1bdfe0, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
          a0_0x1306ae.restore();
        }
      }
      {
        if (!this.flag_underWater) {
          var _0x1bfbeb = "skins/" + this.getSkinPath() + "/komododragon_tail.png";
          var _0xed2c99 = this.getSkinImageObj(_0x1bfbeb);
          if (_0xed2c99) {
            var _0x30e9f6 = this.skinScale * a0_0x2b4986;
            var _0x3786bb = this.skinRad;
            a0_0x1306ae.drawImage(_0xed2c99, -_0x3786bb * _0x30e9f6, (-_0x3786bb + _0x3786bb * a0_0x27912e) * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
          }
        }
      }
      {
        var _0x4bfb05 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/komododragon_attack.png");
        var _0x30e9f6 = this.skinScale * 1;
        var _0x3786bb = this.skinRad;
        var _0x41e95b = 12;
        var _0x1e1564 = 0.9;
        var _0x1bdfe0 = a0_0x423a9f(_0x2a0f61, _0x1e1564, _0x41e95b, 1);
        if (_0x4bfb05) {
          a0_0x1306ae.save();
          a0_0x1306ae.drawImage(_0x4bfb05, -_0x3786bb * _0x30e9f6, -_0x3786bb * _0x30e9f6 + _0x1bdfe0, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
          a0_0x1306ae.restore();
        }
      }
    }
  }
  if (this.specType == 0) {
    if (!this.flag_underWater) {
      var _0x1bfbeb = "skins/" + this.getSkinPath() + "/komododragon_tail.png";
      var _0xed2c99 = this.getSkinImageObj(_0x1bfbeb);
      if (_0xed2c99) {
        var _0x30e9f6 = this.skinScale * a0_0x2b4986;
        var _0x3786bb = this.skinRad;
        a0_0x1306ae.drawImage(_0xed2c99, -_0x3786bb * _0x30e9f6, (-_0x3786bb + _0x3786bb * a0_0x27912e) * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
      }
      var _0x4bfb05 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/komododragon_attack.png");
      var _0x30e9f6 = this.skinScale * 1;
      var _0x3786bb = this.skinRad;
      var _0x41e95b = 12;
      var _0x1e1564 = 0.9;
      var _0x1bdfe0 = a0_0x423a9f(_0x2a0f61, _0x1e1564, _0x41e95b, 1);
      if (_0x4bfb05) {
        a0_0x1306ae.save();
        a0_0x1306ae.drawImage(_0x4bfb05, -_0x3786bb * _0x30e9f6, -_0x3786bb * _0x30e9f6 + _0x1bdfe0, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.save();
      var _0x1bfbeb = "skins/" + this.getSkinPath() + "/licked_face.png";
      var _0xed2c99 = this.getSkinImageObj(_0x1bfbeb);
      if (_0xed2c99) {
        var _0x553b85 = this.lickedAmt / 100;
        a0_0x1306ae.globalAlpha = _0x553b85;
        a0_0x1306ae.drawImage(_0xed2c99, -_0x3786bb * _0x30e9f6, (-_0x3786bb + _0x3786bb * _0x25c479) * _0x30e9f6 + _0x1bdfe0, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
      }
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      var _0x1bfbeb = "skins/" + this.getSkinPath() + "/komododragon_head.png";
      var _0xed2c99 = this.getSkinImageObj(_0x1bfbeb);
      if (_0xed2c99) {
        var _0x30e9f6 = this.skinScale;
        var _0x3786bb = this.skinRad;
        a0_0x1306ae.drawImage(_0xed2c99, -_0x3786bb * _0x30e9f6, -_0x3786bb * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
      }
      a0_0x1306ae.restore();
    }
    if (this.wasLicking) {
      if (+new Date() > this.nextShowT && !this.showTongue) {
        this.showTongue = true;
      }
      if (this.showTongue) {
        var _0x2a0f61 = (a0_0x24806e - this.nextShowT) / 1000;
        var _0x1bdfe0 = a0_0x423a9f(_0x2a0f61, this.tongueAnimationDur, 13, 0.5);
        _0x1bdfe0 = Math.round(_0x1bdfe0);
        if (_0x1bdfe0 < 0) {
          return;
        }
        if (_0x1bdfe0 == 13) {
          this.nextShowT = +new Date() + 3000 + Math.random() * 5 * 1000;
          this.showTongue = false;
          this.lastLickSide = this.lickSide;
          this.wasLicking = false;
        }
        if (!this.showTongue) {
          return;
        }
        var _0xed2c99 = this.getSkinImageObj("skins/" + this.getSkinPath() + "/tongue" + _0x1bdfe0 + ".png");
        if (_0xed2c99) {
          var _0x30e9f6 = this.skinScale * this.tongueScaleF;
          var _0x3786bb = this.skinRad;
          a0_0x1306ae.save();
          if (this.lastLickSide == 1) {
            a0_0x1306ae.scale(-1, 1);
          }
          a0_0x1306ae.drawImage(_0xed2c99, -_0x3786bb * _0x30e9f6, (-_0x3786bb + _0x3786bb * this.tongueAncherY) * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6, _0x3786bb * 2 * _0x30e9f6);
          a0_0x1306ae.restore();
        }
      }
    }
  }
};
a0_0x46b9d7.prototype.lickSide = 0;
a0_0x46b9d7.prototype.lickedAmt = 0;
a0_0x46b9d7.prototype.readCustomData_onNewlyVisible = function (_0x506ebd) {
  a0_0x46b9d7.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x506ebd);
  var _0x592e7e = _0x506ebd.readUInt8() == 1;
  this.nextShowT = +new Date() + 3000;
  this.isLicking = _0x592e7e;
  this.lickSide = _0x506ebd.readUInt8();
  this.lickedAmt = _0x506ebd.readUInt8();
};
a0_0x46b9d7.prototype.customUpdatedProperty = function (_0x5131a4, _0x291038) {
  if (_0x5131a4 == a0_0x2456fe) {
    var _0x1316ab = _0x291038.readUInt8() == 1;
    this.nextShowT = +new Date() + 3000;
    this.isLicking = _0x1316ab;
    if (!this.wasLicking && this.isLicking) {
      this.wasLicking = true;
    }
  } else if (_0x5131a4 == a0_0xc52046) {
    this.lickedAmt = _0x291038.readUInt8();
  } else if (_0x5131a4 == a0_0x43f4ec) {
    this.lickSide = _0x291038.readUInt8();
  }
};
function a0_0x46b9d7() {
  a0_0x46b9d7.superClass.call(this, a0_0x24738f);
}
window.KomodoDragon = a0_0x46b9d7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x46b9d7, a0_0x24738f, a0_0x5650e3);
var a0_0x28626c = a0_0x42171b;
a0_0x9c704a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x9c704a.prototype.constructor = a0_0x9c704a;
a0_0x9c704a.superClass = a0_0x28626c;
a0_0x9c704a.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x9c704a.prototype.customDraw = function (_0x1be158) {
  a0_0x1306ae.save();
  this.drawOutlinedCircle("", a0_0x5aeb79);
  a0_0x1306ae.restore();
};
function a0_0x9c704a() {
  a0_0x9c704a.superClass.call(this, a0_0x461487);
}
window.SweatPoison = a0_0x9c704a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x9c704a, a0_0x461487);
var a0_0x28626c = a0_0x42171b;
a0_0x4f4780.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4f4780.prototype.constructor = a0_0x4f4780;
a0_0x4f4780.superClass = a0_0x28626c;
a0_0x4f4780.prototype.updateZ = function () {
  this.z = -154;
};
a0_0x4f4780.prototype.customDraw = function (_0x35d573) {
  a0_0x1306ae.save();
  this.rPer = 0;
  var _0x715860 = a0_0x5aeb79;
  this.drawOutlinedCircle("", _0x715860);
  var _0x36d824 = 1;
  if (a0_0x56bbb3 != 2) {
    a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x3eca18 = 0;
  var _0x20e8ed = (a0_0x24806e - this.spawnTime) / 1000;
  var _0xb53f1b = 7;
  var _0x2cf1e5 = 4;
  _0x3eca18 = _0x2cf1e5 * Math.sin(Math.PI * 2 / _0xb53f1b * _0x20e8ed);
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x36d824 + _0x3eca18), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  if (a0_0x56bbb3 != 2) {
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x36d824 + _0x3eca18), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x3eca18), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x3eca18), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x3eca18), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x3eca18), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    if (this.rad > 50) {
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
      a0_0x1306ae.fill();
    }
  }
  a0_0x1306ae.restore();
};
function a0_0x4f4780() {
  a0_0x4f4780.superClass.call(this, a0_0x92eab8);
}
window.PoisonPool = a0_0x4f4780;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4f4780, a0_0x92eab8);
var a0_0x28626c = a0_0x2449e7;
a0_0x399edd.prototype = Object.create(a0_0x28626c.prototype);
a0_0x399edd.prototype.constructor = a0_0x399edd;
a0_0x399edd.superClass = a0_0x28626c;
a0_0x399edd.prototype.updateZ = function () {
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_isInArena) {
    this.z = 10000 + this.rad;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else {
    this.z = 1200 + this.rad;
  }
};
a0_0x399edd.prototype.animalInfo = function () {
  var _0x2084cd = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2084cd.aniName = "Giant Scorpion";
      break;
    case 1:
      _0x2084cd.aniName = "Golden Scorpion";
      break;
    case 2:
      _0x2084cd.aniName = "Carnelian Scorpion";
      break;
    case 111:
      _0x2084cd.aniName = "Classic Giant Scorpion";
      break;
    case 204:
      _0x2084cd.aniName = "Selamorph Scorpion";
      break;
    case 220:
      _0x2084cd.aniName = "Nebuladon Scorpion";
      break;
  }
  _0x2084cd.aniCol = "#FF9000";
  _0x2084cd.skinName = "scorpion";
  _0x2084cd.upgradeText = "UPGRADED to " + _0x2084cd.aniName + "!\nSting and Shiver your prey to death.\n(Press W to Sting)";
  _0x2084cd.skinName = this.getSkinName();
  return _0x2084cd;
};
a0_0x399edd.prototype.getAbilityInfo = function (_0x324a23) {
  var _0x34b318 = {
    abilName: "Sting!\n(Shivers Prey)",
    abilImg: "skins/desert/scorpion/" + this.animalSpecies + "/scorpion_ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x34b318;
};
a0_0x399edd.prototype.getSkinName = function () {
  var _0x596da5 = "desert/scorpion/" + this.animalSpecies + "/scorpion";
  _0x596da5 += this.specType == 0 ? "" : this.specType;
  return _0x596da5;
};
a0_0x399edd.prototype.stingerScaleF = 0.7;
a0_0x399edd.prototype.stingerOffsetY = -0.6;
a0_0x399edd.prototype.poison = 50;
a0_0x399edd.prototype.clawAnimation = null;
a0_0x399edd.prototype.stingAnimation = null;
a0_0x399edd.prototype.stingerTailNormal = null;
a0_0x399edd.prototype.stingerTail = null;
a0_0x399edd.prototype.stingerAttack = null;
a0_0x399edd.prototype.stingerAttackFull = null;
a0_0x399edd.prototype.stingerNormal = null;
a0_0x399edd.prototype.stingerNormalFull = null;
a0_0x399edd.prototype.isUsingAbility = false;
a0_0x399edd.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.clawAnimation = null;
    this.stingAnimation = null;
    this.isUsingAbility = false;
  }
  if (!this.isUsingAbility && this.flag_eff_aniInClaws) {
    this.isUsingAbility = true;
    this.stingAnimation = null;
  }
  if (this.isUsingAbility && !this.flag_usingDiveAbility) {
    if (this.stingAnimation == null) {
      this.stingAnimation = new a0_0x556513(this, 1, a0_0x556513.bow, {
        v1: 5
      });
      this.stingAnimation.onFrameEntered = function (_0x4232c1) {
        a0_0x1306ae.save();
        var _0x5f280e = this.forObj.skinScale * this.forObj.stingerScaleF;
        var _0x18a124 = this.forObj.rad;
        if (this.forObj.stingerTailAttack) {
          a0_0x1306ae.drawImage(this.forObj.stingerTailAttack, -_0x18a124 * _0x5f280e, (-_0x18a124 + _0x18a124 * this.forObj.stingerOffsetY) * _0x5f280e, _0x18a124 * 2 * _0x5f280e, (_0x18a124 + _0x18a124 * _0x4232c1) * 2 * _0x5f280e);
        }
        if (this.forObj.stingerTail) {
          a0_0x1306ae.drawImage(this.forObj.stingerTail, -_0x18a124 * _0x5f280e, (-_0x18a124 + _0x18a124 * _0x4232c1) * _0x5f280e, _0x18a124 * 2 * _0x5f280e, _0x18a124 * 2 * _0x5f280e);
        }
        if (this.forObj.stingerAttack) {
          a0_0x1306ae.drawImage(this.forObj.stingerAttack, -_0x18a124 * _0x5f280e, (-_0x18a124 + _0x18a124 * _0x4232c1) * _0x5f280e, _0x18a124 * 2 * _0x5f280e, _0x18a124 * 2 * _0x5f280e);
        }
        var _0xbfb492 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x35fbc4 = a0_0x423a9f(_0xbfb492, 5, 1, 1);
        var _0x1d7215 = Math.max(0, _0x35fbc4);
        a0_0x1306ae.globalAlpha = _0x1d7215 * Math.max(0, this.poison / 100);
        if (this.forObj.stingerAttackFull) {
          a0_0x1306ae.drawImage(this.forObj.stingerAttackFull, -_0x18a124 * _0x5f280e, (-_0x18a124 + _0x18a124 * _0x4232c1) * _0x5f280e, _0x18a124 * 2 * _0x5f280e, _0x18a124 * 2 * _0x5f280e);
        }
        a0_0x1306ae.restore();
      };
    }
    if (this.stingAnimation) {
      this.stingAnimation.run();
    }
  }
  if (this.stingAnimation == null || this.stingAnimation.hasStopped) {
    if (!this.flag_underWater && !this.flag_usingDiveAbility) {
      if (this.stingerTailNormal != null && this.stingerNormalFull != null) {
        var _0x2d7946 = this.skinScale * this.stingerScaleF;
        var _0x54b02b = this.skinRad;
        var _0x6eabf8 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x1013e6 = 3;
        var _0x3789d4 = 1.5;
        var _0x31828d = 0;
        var _0xca2229 = 0;
        if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
          _0x31828d = a0_0x423a9f(_0x6eabf8, _0x3789d4, _0x1013e6, 2);
          _0xca2229 = a0_0x423a9f(_0x6eabf8, _0x3789d4, 1, 2);
        }
        a0_0x1306ae.save();
        var _0x54b02b = this.rad - _0x31828d * 0.5;
        a0_0x1306ae.drawImage(this.stingerTailNormal, -_0x54b02b * _0x2d7946, (-_0x54b02b + _0x54b02b * this.stingerOffsetY) * _0x2d7946 + _0x31828d * -_0xca2229, _0x54b02b * 2 * _0x2d7946, _0x54b02b * 2 * _0x2d7946);
        var _0x6eabf8 = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x108edd = a0_0x423a9f(_0x6eabf8, 5, 1, 1);
        var _0x1dc06f = Math.max(0, _0x108edd);
        a0_0x1306ae.globalAlpha = _0x1dc06f * Math.max(0, this.poison / 100);
        a0_0x1306ae.drawImage(this.stingerNormalFull, -_0x54b02b * _0x2d7946, (-_0x54b02b + _0x54b02b * this.stingerOffsetY) * _0x2d7946 + _0x31828d * -_0xca2229, _0x54b02b * 2 * _0x2d7946, _0x54b02b * 2 * _0x2d7946);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x399edd.prototype.drawWhenUnderwater = function () {
  this.drawUnderwaterCustomization(1, 1.1);
};
a0_0x399edd.prototype.tailOffsetY = -0.25;
a0_0x399edd.prototype.tailScaleF = 1.2;
var a0_0x172580 = 4;
var a0_0x11fc98 = 0.1;
a0_0x399edd.prototype.drawUnderSkinImg = function () {
  var _0x59d846 = "skins/desert/scorpion/" + this.animalSpecies + "/tail_back.png";
  var _0x55823e = this.getSkinImageObj(_0x59d846);
  if (_0x55823e) {
    var _0x20808a = 0;
    if (this.stingAnimation) {
      if (this.stingAnimation.frame < 0.5) {
        _0x20808a = -this.stingAnimation.frame * 0.3;
      }
    }
    var _0x133b99 = this.skinScale * this.tailScaleF;
    var _0x7065bf = this.skinRad;
    a0_0x1306ae.drawImage(_0x55823e, -_0x7065bf * _0x133b99, (-_0x7065bf + _0x7065bf * this.tailOffsetY) * _0x133b99, _0x7065bf * 2 * _0x133b99, (_0x7065bf + _0x7065bf * _0x20808a) * 2 * _0x133b99);
  }
  if (this.flag_usingAbility && !this.flag_underWater) {
    if (this.clawAnimation == null) {
      this.clawAnimation = new a0_0x556513(this, 0.9, a0_0x556513.bow, {
        v1: a0_0x172580
      });
      this.clawAnimation.keepLastFrame = true;
      this.clawAnimation.onFrameEntered = function (_0x95fcc) {
        var _0x4b13d3 = 0;
        if (_0x95fcc < 0.5) {
          _0x4b13d3 = -_0x95fcc;
        }
        var _0x14ace5 = "skins/desert/scorpion/" + this.forObj.animalSpecies + "/arms.png";
        if (this.forObj.flag_eff_aniInClaws) {
          _0x14ace5 = "skins/desert/scorpion/" + this.forObj.animalSpecies + "/arms-grabbed.png";
        }
        var _0x15bd3c = this.forObj.getSkinImageObj(_0x14ace5);
        if (_0x15bd3c) {
          var _0x42aa05 = this.forObj.skinScale * this.forObj.tailScaleF;
          var _0x4cc8fd = this.forObj.skinRad;
          if (!this.hasStopped && this.timePassed < 0.75) {
            a0_0x11fc98 = _0x4b13d3;
            a0_0x1306ae.drawImage(_0x15bd3c, -_0x4cc8fd * _0x42aa05, (-_0x4cc8fd + _0x4cc8fd * _0x4b13d3) * _0x42aa05, _0x4cc8fd * 2 * _0x42aa05, _0x4cc8fd * 2 * _0x42aa05);
          } else {
            a0_0x1306ae.drawImage(_0x15bd3c, -_0x4cc8fd * _0x42aa05, (-_0x4cc8fd + _0x4cc8fd * a0_0x11fc98) * _0x42aa05, _0x4cc8fd * 2 * _0x42aa05, _0x4cc8fd * 2 * _0x42aa05);
          }
        }
      };
    }
    if (this.clawAnimation != null) {
      this.clawAnimation.run();
    }
  }
};
a0_0x399edd.prototype.readCustomData_onNewlyVisible = function (_0x177a40) {
  a0_0x399edd.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x177a40);
  this.poison = _0x177a40.readUInt8();
};
a0_0x399edd.prototype.customUpdatedProperty = function (_0x5be6a6, _0x3e87cb) {
  if (_0x5be6a6 == a0_0xc52046) {
    this.poison = _0x3e87cb.readUInt8();
  }
};
function a0_0x399edd() {
  a0_0x399edd.superClass.call(this, a0_0x24738f);
}
a0_0x399edd.prototype.preLoad = function () {
  this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/scorpion1.png");
  this.stingerTailNormal = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/stinger_normal.png");
  this.stingerTail = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/stinger_tail.png");
  this.stingerTailAttack = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/attack_tail.png");
  this.stingerAttack = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/attack_stinger_dull.png");
  this.stingerAttackFull = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/attack_stinger_full.png");
  this.stingerNormal = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/normal_stinger_dull.png");
  this.stingerNormalFull = this.getSkinImageObj("skins/desert/scorpion/" + this.animalSpecies + "/normal_stinger_full.png");
};
window.GiantScorpion = a0_0x399edd;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x399edd, a0_0x24738f, a0_0x3a4899);
var a0_0x28626c = a0_0x2449e7;
a0_0x190d7a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x190d7a.prototype.constructor = a0_0x190d7a;
a0_0x190d7a.superClass = a0_0x28626c;
a0_0x190d7a.prototype.updateZ = function () {
  if (this.flag_usingAbility && this.webState > 2) {
    this.z = 1000;
  } else if (this.flag_eff_isOnSpiderWeb) {
    this.z = 1000 + this.rad;
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x190d7a.prototype.animalInfo = function () {
  var _0x1a4e82 = {};
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x1a4e82.aniName = "Blackwidow Spider";
          break;
        case 111:
          _0x1a4e82.aniName = "Classic Blackwidow Spider";
          break;
      }
      break;
    case 1:
      _0x1a4e82.aniName = "Goldenwidow Spider";
      break;
    case 2:
      _0x1a4e82.aniName = "Queen Blackwidow";
      break;
    case 204:
      _0x1a4e82.aniName = "Blood Widow Spider!";
      break;
    case 2023:
      _0x1a4e82.aniName = "Bot X-303";
      break;
  }
  _0x1a4e82.aniCol = "#FF9000";
  _0x1a4e82.skinName = this.getSkinName();
  _0x1a4e82.upgradeText = "UPGRADED to " + _0x1a4e82.aniName + "!\nBlackwidow is a sneaky predator. It traps prey in the web and injects sweat poison.\nPress W to spin and throw web.";
  return _0x1a4e82;
};
a0_0x190d7a.prototype.getAbilityInfo = function (_0x27f2c3) {
  var _0x3a05c6 = {
    abilName: "Spin Web & Bite\n(Sweat Prey)",
    abilImg: "skins/desert/blackwidow/" + this.animalSpecies + "/" + this.animalSubSpecies + "/blackwidow.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x3a05c6;
};
a0_0x190d7a.prototype.readCustomData_onNewlyVisible = function (_0x3bfe1f) {
  a0_0x190d7a.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3bfe1f);
  this.customUpdatedProperty(a0_0x257efe, _0x3bfe1f);
};
a0_0x190d7a.prototype.webX = 0;
a0_0x190d7a.prototype.webY = 0;
a0_0x190d7a.prototype.spiderX = 0;
a0_0x190d7a.prototype.spiderY = 0;
a0_0x190d7a.prototype.webState = 0;
a0_0x190d7a.prototype.customUpdatedProperty = function (_0x3bf752, _0x40462c) {
  if (_0x3bf752 == a0_0x257efe) {
    this.webState = _0x40462c.readUInt8();
  }
};
a0_0x190d7a.prototype.setStealth = function () {
  if (a0_0x17b807 == a0_0x73c281 && this.flag_usingAbility && (this.flag_stealth || this.flag_inHidingHole || this.flag_eff_isUnderTree)) {
    this.idealOp = 0.01;
  } else {
    a0_0x190d7a.superClass.prototype.setStealth.call(this);
  }
};
a0_0x190d7a.prototype.readUpdatedPropertyItem = function (_0x35c6a9, _0x55f804) {
  a0_0x190d7a.superClass.prototype.readUpdatedPropertyItem.call(this, _0x35c6a9, _0x55f804);
  if (_0x35c6a9 == a0_0x129de7) {
    if (this.webState == 0) {
      this.web_nx = this.web_ox = this.webX = this.x;
      this.web_ny = this.web_oy = this.webY = this.y;
      this.spider_ox = this.spiderX = this.spider_nx = this.x;
      this.spider_oy = this.spiderY = this.spider_ny = this.y;
    }
    var _0x2acf12 = _0x55f804.readUInt8() == 1;
    if (_0x2acf12) {
      var _0x20a05f = _0x55f804.readUInt16() / 4;
      var _0x3ccfd5 = _0x55f804.readUInt16() / 4;
      this.web_ox = this.webX;
      this.web_oy = this.webY;
      this.web_nx = _0x20a05f;
      this.web_ny = _0x3ccfd5;
      var _0x243ddf = _0x55f804.readUInt16() / 4;
      var _0x269f77 = _0x55f804.readUInt16() / 4;
      this.spider_ox = this.spiderX;
      this.spider_oy = this.spiderY;
      this.spider_nx = _0x243ddf;
      this.spider_ny = _0x269f77;
    }
  }
};
a0_0x190d7a.prototype.onLerpUpdate = function (_0x21e816) {
  if (this.webState > 0) {
    this.webX = _0x21e816 * (this.web_nx - this.web_ox) + this.web_ox;
    this.webY = _0x21e816 * (this.web_ny - this.web_oy) + this.web_oy;
    this.spiderX = _0x21e816 * (this.spider_nx - this.spider_ox) + this.spider_ox;
    this.spiderY = _0x21e816 * (this.spider_ny - this.spider_oy) + this.spider_oy;
  }
};
a0_0x190d7a.prototype.afterCustomDraw = function (_0x3ba318) {
  if (this.webState > 0 && a0_0x15e4d1 == this.id && this.flag_usingAbility) {
    a0_0x1306ae.save();
    a0_0x1306ae.strokeStyle = this.animalSpecies == 1 ? "gold" : "white";
    a0_0x1306ae.globalAlpha = 0.3;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(this.webX, this.webY);
    a0_0x1306ae.lineTo(this.spiderX, this.spiderY);
    a0_0x1306ae.stroke();
    a0_0x1306ae.restore();
  }
};
a0_0x190d7a.prototype.getSkinName = function () {
  return "desert/blackwidow/" + this.animalSpecies + "/" + this.animalSubSpecies + "/blackwidow" + (this.specType == 0 ? "" : this.specType);
};
a0_0x190d7a.prototype.drawSkinCustomization = function () {
  if (this.webState == 0 && this.flag_usingAbility) {
    var _0x15561a = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x1b5c51 = 0.75;
    var _0x450495 = 1;
    var _0x1631e2 = _0x450495 * Math.sin(Math.PI * 2 / _0x1b5c51 * _0x15561a);
    a0_0x1306ae.globalAlpha = 0.3;
    var _0x50cc6d = this.animalSpecies == 1 ? "gold" : "#f2f2f2";
    a0_0x50fd5c(0, -this.rad * 1.07, this.rad * 0.07, _0x50cc6d);
    a0_0x1306ae.globalAlpha = 0.8 - _0x1631e2 * 0.2;
    a0_0x50fd5c(0, -this.rad * 1.07, this.rad * 0.07 + (0.05 + _0x1631e2), _0x50cc6d);
  }
};
function a0_0x190d7a() {
  a0_0x190d7a.superClass.call(this, a0_0x24738f);
}
window.BlackWidowSpider = a0_0x190d7a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x190d7a, a0_0x24738f, a0_0x533584);
var a0_0x2b9582 = a0_0x3166ee;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x3166ee.prototype.updateZ = function () {
  this.z = 10000;
};
a0_0x3166ee.prototype.webAlpha = 0.5;
a0_0x3166ee.prototype.customDraw = function (_0x224b34) {
  a0_0x1306ae.save();
  if (this.state > 0) {
    var _0x292164 = this.getSkinImageObj("img/web/" + this.webType + "/spiderWeb.png");
    var _0x45762d = this.rad;
    if (_0x292164) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = this.webAlpha;
      a0_0x1306ae.drawImage(_0x292164, -_0x45762d, -_0x45762d, _0x45762d * 2, _0x45762d * 2);
      a0_0x1306ae.restore();
    }
  }
  a0_0x1306ae.restore();
};
a0_0x3166ee.prototype.state = 0;
a0_0x3166ee.prototype.spiderX = 0;
a0_0x3166ee.prototype.spiderY = 0;
a0_0x3166ee.prototype.readUpdatedProperty = function (_0x459b20, _0x35a19b) {
  if (_0x459b20 == a0_0x257efe) {
    this.state = _0x35a19b.readUInt8();
  } else if (_0x459b20 == a0_0x288bec) {
    var _0x4eca87 = _0x35a19b.readUInt8() / 100;
    if (_0x4eca87 < this.webAlpha) {
      this.webAlpha = _0x4eca87;
    }
  }
};
a0_0x3166ee.prototype.readCustomData_onNewlyVisible = function (_0x1d3ac8) {
  a0_0x3166ee.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1d3ac8);
  this.state = _0x1d3ac8.readUInt8();
  var _0x52f406 = _0x1d3ac8.readUInt8() / 100;
  if (_0x52f406 < this.webAlpha) {
    this.webAlpha = _0x52f406;
  }
  this.webType = _0x1d3ac8.readUInt8();
};
function a0_0x3166ee() {
  a0_0x3166ee.superClass.call(this);
}
window.BlackwidowWeb = a0_0x3166ee;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3166ee, a0_0x382193, a0_0x419227);
var a0_0x28626c = a0_0x2449e7;
a0_0x3ca865.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3ca865.prototype.constructor = a0_0x3ca865;
a0_0x3ca865.superClass = a0_0x28626c;
a0_0x3ca865.prototype.skinFolder = function () {
  return "desert/";
};
a0_0x3ca865.prototype.animalInfo = function () {
  var _0x1f42c6 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1f42c6.aniName = "Pterodactyl";
      break;
    case 1:
      _0x1f42c6.aniName = "Golden Pterodactyl";
      break;
    case 2:
      _0x1f42c6.aniName = "Emerald Pterodactyl";
      break;
    case 100:
      _0x1f42c6.aniName = "Carnageodactyl";
      break;
    case 111:
      _0x1f42c6.aniName = "Classic Pterodactyl";
      break;
  }
  _0x1f42c6.aniCol = "#FF9000";
  _0x1f42c6.skinName = this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/pterodactyl";
  _0x1f42c6.upgradeText = "UPGRADED to " + _0x1f42c6.aniName + "!\nFly and dive onto prey to pick it up.";
  return _0x1f42c6;
};
a0_0x3ca865.prototype.getHead = function (_0x4d39bb, _0x586983) {
  var _0x4e2c3a = "";
  var _0x5978de = "skins/" + this.skinFolder() + "/" + _0x4d39bb + "/" + this.animalSpecies + "/" + _0x4d39bb + "_head" + _0x4e2c3a + ".png";
  return _0x5978de;
};
a0_0x3ca865.prototype.getSkinName = function () {
  var _0x16551f = this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/pterodactyl";
  if (this.specType == 4) {
    _0x16551f += "4";
  } else {
    _0x16551f += this.specType == 0 ? "" : 1;
  }
  return _0x16551f;
};
a0_0x3ca865.prototype.getWing = function (_0x58bbe6, _0x8c9a5a) {
  if (!this.flag_flying) {
    _0x8c9a5a = _0x8c9a5a + "" + _0x8c9a5a;
  }
  var _0xdf5dac = "skins/" + this.skinFolder() + "/" + _0x58bbe6 + "/" + this.animalSpecies + "/" + _0x58bbe6 + "_wing" + _0x8c9a5a + "_nohand.png";
  return _0xdf5dac;
};
a0_0x3ca865.prototype.getWingBone = function (_0x3cba3d, _0x1c40b1) {
  if (!this.flag_flying) {
    _0x1c40b1 = _0x1c40b1 + "" + _0x1c40b1;
  }
  var _0x1f7c68 = "skins/" + this.skinFolder() + "/" + _0x3cba3d + "/" + this.animalSpecies + "/" + _0x3cba3d + "_wing" + _0x1c40b1 + "_bones.png";
  return _0x1f7c68;
};
a0_0x3ca865.prototype.getHand = function (_0x30800f, _0x453af4) {
  if (!this.flag_flying) {
    _0x453af4 = _0x453af4 + "" + _0x453af4;
  }
  if (this.isGliding) {
    _0x453af4 = _0x453af4 + "3";
  }
  var _0x357545 = "skins/" + this.skinFolder() + "/" + _0x30800f + "/" + this.animalSpecies + "/" + _0x30800f + "_hand" + _0x453af4 + ".png";
  return _0x357545;
};
a0_0x3ca865.prototype.biteStart = 0;
a0_0x3ca865.prototype.flaps = 0;
a0_0x3ca865.prototype.flapsMod = 5;
a0_0x3ca865.prototype.countFlap = true;
a0_0x3ca865.prototype.canFlap = a0_0x56bbb3 != a0_0xbf9ed5;
a0_0x3ca865.prototype.resumeFlapT = 0;
a0_0x3ca865.prototype.lastFlapFrame = 0;
a0_0x3ca865.prototype.flapSpeed = 1;
a0_0x3ca865.prototype.flapAmount = 0.2;
a0_0x3ca865.prototype.r = 22.5;
a0_0x3ca865.prototype.ax = 0;
a0_0x3ca865.prototype.ay = 1;
a0_0x3ca865.prototype.ww = 4;
a0_0x3ca865.prototype.wh = 2.5;
a0_0x3ca865.prototype.ax2 = 1;
a0_0x3ca865.prototype.rf = -2;
a0_0x3ca865.prototype.erf = 11.5;
a0_0x3ca865.prototype.erf_gliding = 30;
a0_0x3ca865.prototype.lx = -0.05;
a0_0x3ca865.prototype.famt = 0.5;
a0_0x3ca865.prototype.yf = 0.15;
a0_0x3ca865.prototype.xf = -0.2;
a0_0x3ca865.prototype.legScale = 1.15;
a0_0x3ca865.prototype.handPerc = 0.9;
a0_0x3ca865.prototype.handWF = 0;
a0_0x3ca865.prototype.set = false;
a0_0x3ca865.prototype.wOffset = 0.1;
a0_0x3ca865.prototype.headF = 0.5;
a0_0x3ca865.prototype.headFDisp = -0.6;
a0_0x3ca865.prototype.headScale = 0.8;
a0_0x3ca865.prototype.headX = 0.225;
a0_0x3ca865.prototype.drawLegs = function () {
  var _0x373d73 = 500 / 340;
  var _0x509d30 = this.flag_eff_aniInClaws ? "legs2" : "legs";
  var _0x15fc82 = this.getSkinImageObj("skins/" + this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/" + _0x509d30 + ".png");
  if (_0x15fc82) {
    a0_0x1306ae.save();
    var _0x1aa748 = this.rad;
    _0x373d73 *= this.legScale;
    a0_0x1306ae.drawImage(_0x15fc82, -_0x1aa748 * _0x373d73, (-_0x1aa748 + _0x1aa748 * this.lx) * _0x373d73, _0x1aa748 * 2 * _0x373d73, _0x1aa748 * 2 * _0x373d73);
    a0_0x1306ae.restore();
  }
};
a0_0x3ca865.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    this.drawWing(this.frame, 1);
    this.drawWing(this.frame, 2);
  }
  if (this.specType == 2) {
    this.drawLegs();
  }
};
a0_0x3ca865.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    this.drawBone(this.frame, 1);
    this.drawBone(this.frame, 2);
    this.drawHand(this.frame, 1);
    this.drawHand(this.frame, 2);
    var _0x2ac0f7 = 500 / 340;
    var _0x2e6794 = this.getHead("pterodactyl", false);
    var _0x567d91 = this.getSkinImageObj(_0x2e6794);
    if (_0x567d91) {
      a0_0x1306ae.save();
      _0x2ac0f7 += -(this.headF * 0.1) * this.frame;
      var _0x19d300 = this.rad;
      a0_0x1306ae.drawImage(_0x567d91, -_0x19d300 * _0x2ac0f7, (-_0x19d300 + _0x19d300 * (0.3 + this.headFDisp * (this.frame / 10)) + this.headF * this.frame) * _0x2ac0f7, _0x19d300 * 2 * _0x2ac0f7, _0x19d300 * 2 * _0x2ac0f7);
      a0_0x1306ae.restore();
    }
  } else if (this.animalSpecies == 100) {
    var _0x179030 = a0_0x24806e - this.nextJawAnimT;
    var _0x116978 = Math.trunc(_0x179030 / a0_0x438a47) % 16;
    if (a0_0x24806e < this.nextJawAnimT) {
      _0x116978 = 0;
    }
    if (_0x116978 >= 15) {
      this.nextJawAnimT = a0_0x24806e + 5000;
    }
    var _0xaec4c3 = this.getSkinImageObj("skins/desert/pterodactyl/100/mouth/pterodactyl_head" + _0x116978 + ".png");
    if (_0xaec4c3) {
      var _0x2ac0f7 = 500 / 340 * this.headScale;
      a0_0x1306ae.save();
      var _0x19d300 = this.rad;
      a0_0x1306ae.drawImage(_0xaec4c3, -_0x19d300 * _0x2ac0f7, (-_0x19d300 + _0x19d300 * this.headX) * _0x2ac0f7, _0x19d300 * 2 * _0x2ac0f7, _0x19d300 * 2 * _0x2ac0f7);
      a0_0x1306ae.restore();
    }
  } else {
    var _0x2e6794 = this.getHead("pterodactyl", false);
    var _0x567d91 = this.getSkinImageObj(_0x2e6794);
    if (_0x567d91) {
      var _0x2ac0f7 = 500 / 340 * this.headScale;
      a0_0x1306ae.save();
      var _0x19d300 = this.rad;
      a0_0x1306ae.drawImage(_0x567d91, -_0x19d300 * _0x2ac0f7, (-_0x19d300 + _0x19d300 * this.headX) * _0x2ac0f7, _0x19d300 * 2 * _0x2ac0f7, _0x19d300 * 2 * _0x2ac0f7);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x3ca865.prototype.nextJawAnimT = 0;
var a0_0x438a47 = 70;
a0_0x3ca865.prototype.drawWing = function (_0x22016e, _0x59353c) {
  var _0x391c2b = _0x59353c == 1 ? 1 : -1;
  var _0x101bbe = this.getSkinImageObj(this.getWing("pterodactyl", _0x59353c));
  if (_0x101bbe) {
    var _0x506a1b = -(-0.2 + _0x22016e) * a0_0x873ec7(_0x391c2b * this.r);
    var _0x14b999 = this.rad * 0.8;
    var _0x50757c = 0;
    var _0x2df831 = this.rad;
    var _0x281509 = _0x14b999 * this.ww;
    var _0x73b111 = _0x14b999 * this.wh;
    var _0x21fa7b = _0x59353c == 1 ? this.ax : this.ax2;
    var _0x322ef7 = this.ay + this.yf * _0x22016e;
    a0_0x1306ae.save();
    _0x506a1b *= this.rf;
    var _0x4b0db2 = this.isGliding ? this.erf_gliding : this.erf;
    a0_0x1306ae.rotate(a0_0x873ec7(_0x391c2b * _0x4b0db2) + _0x506a1b);
    var _0x1f0d0a = _0x22016e * _0x281509 * _0x391c2b * this.wOffset;
    a0_0x1306ae.drawImage(_0x101bbe, _0x50757c + _0x281509 * -_0x21fa7b + _0x1f0d0a, _0x2df831 + _0x73b111 * -_0x322ef7, _0x281509, _0x73b111);
    a0_0x1306ae.restore();
  }
};
a0_0x3ca865.prototype.drawBone = function (_0x46d51d, _0x12e543) {
  var _0x434d8e = this.getSkinImageObj(this.getWingBone("pterodactyl", _0x12e543));
  var _0x1704e9 = _0x12e543 == 1 ? 1 : -1;
  if (_0x434d8e) {
    var _0x2e40e2 = -(-0.2 + _0x46d51d) * a0_0x873ec7(_0x1704e9 * this.r);
    var _0x4607dc = this.rad * 0.8;
    var _0x140f22 = 0;
    var _0x25f2c4 = this.rad;
    var _0x49ab9a = _0x4607dc * this.ww;
    var _0x415bed = _0x4607dc * this.wh;
    var _0x54f686 = _0x12e543 == 1 ? this.ax : this.ax2;
    var _0x1db804 = this.ay + this.yf * _0x46d51d;
    a0_0x1306ae.save();
    _0x2e40e2 *= this.rf;
    var _0x5b680a = this.isGliding ? this.erf_gliding : this.erf;
    a0_0x1306ae.rotate(a0_0x873ec7(_0x1704e9 * _0x5b680a) + _0x2e40e2);
    var _0x2ba61a = _0x46d51d * _0x49ab9a * _0x1704e9 * this.wOffset;
    a0_0x1306ae.drawImage(_0x434d8e, _0x140f22 + _0x49ab9a * -_0x54f686 + _0x2ba61a, _0x25f2c4 + _0x415bed * -_0x1db804, _0x49ab9a, _0x415bed);
    a0_0x1306ae.restore();
  }
};
var a0_0x2272a7 = 0;
a0_0x3ca865.prototype.drawHand = function (_0x951185, _0x235dd4) {
  var _0x5934d6 = _0x235dd4 == 1 ? 1 : -1;
  var _0x339fa7 = this.getSkinImageObj(this.getHand("pterodactyl", _0x235dd4));
  if (_0x339fa7) {
    var _0x1619f1 = -(-0.2 + _0x951185) * a0_0x873ec7(_0x5934d6 * this.r);
    var _0x385a2b = this.rad * 0.8;
    var _0x135aa0 = 0;
    var _0x43a0e8 = this.rad;
    var _0x1f2619 = _0x385a2b * this.ww;
    var _0x466842 = _0x385a2b * this.wh + (!this.flag_flying ? this.wh * a0_0x2272a7 : 0);
    var _0x5819e2 = _0x5934d6 == 1 ? this.ax : this.ax2;
    var _0x36d224 = _0x5819e2 + _0x5934d6 * this.xf * _0x951185;
    var _0x45f357 = this.ay + this.yf * _0x951185;
    _0x1619f1 *= this.rf;
    var _0xaae15d = this.isGliding ? this.erf_gliding : this.erf;
    a0_0x1306ae.save();
    this.drawImage(_0x339fa7, _0x135aa0 + _0x1f2619 * -_0x36d224, _0x43a0e8 + _0x466842 * -_0x45f357, _0x1f2619 + _0x1f2619 * _0x5934d6 * this.handWF, _0x466842, a0_0x873ec7(_0x5934d6 * _0xaae15d) + _0x1619f1);
    a0_0x1306ae.restore();
  }
};
a0_0x3ca865.prototype.frame = 0;
a0_0x3ca865.prototype.lastFlapFrame = 0;
a0_0x3ca865.prototype.getFrame = function () {
  if (!this.canFlap && this.flag_flying && a0_0x24806e > this.resumeFlapT) {
    this.canFlap = true;
  }
  var _0x5dac3b = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x4a635a = a0_0x56bbb3 != a0_0xbf9ed5 && this.canFlap ? a0_0x423a9f(_0x5dac3b, this.flapSpeed, this.flapAmount * this.handPerc, 2) : this.birdNoAnimationFlyWingAngle;
  if (this.flag_flying && _0x4a635a < 0 && this.countFlap) {
    this.countFlap = false;
    this.flaps++;
    if (this.flaps % this.flapsMod == 0) {
      this.lastFlapFrame = _0x4a635a;
      this.canFlap = false;
      this.resumeFlapT = +new Date() + 1500;
    }
  } else if (_0x4a635a > 0 && !this.countFlap) {
    this.countFlap = true;
  }
  if (!this.canFlap) {
    _0x4a635a = this.lastFlapFrame;
  } else {
    this.lastFlapFrame = _0x4a635a;
  }
  return _0x4a635a;
};
a0_0x3ca865.prototype.beforeCustomDraw = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  if (!this.flag_flying && !this.set) {
    this.set = true;
    this.r = 11.25;
    this.erf = 5.75;
    this.ww = 3.5;
  } else if (this.flag_flying && this.set) {
    this.set = false;
    this.r = 22.5;
    this.erf = 11.5;
    this.ww = 4.5;
  }
  if (this.isGliding) {
    this.flapAmount = 0;
  } else {
    this.flapAmount = this.famt;
  }
  this.frame = this.getFrame();
};
a0_0x3ca865.prototype.updateZ = function () {
  if (this.flag_eff_grabbedByFlytrap) {
    this.z = 1100 + this.rad;
  } else if (!this.flag_flying && this.flag_usingAbility && !this.flag_underWater) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying || this.flag_eff_tossedInAir) {
    this.z = 110000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    } else {
      this.z += this.rad;
    }
    if (this.flag_eff_aniInClaws) {
      this.z += 100;
    }
  } else {
    this.z = 1000 + this.rad;
  }
};
a0_0x3ca865.prototype.getAbilityInfo = function (_0x2ab8bc) {
  var _0x1f2c61 = {
    abilName: "Dive Attack\n(Fly with Prey)"
  };
  _0x1f2c61.abilImg = "skins/" + this.skinFolder() + "/pterodactyl/" + this.animalSpecies + "/pterodactyl_ability.png";
  _0x1f2c61.skinThemeID = this.skinThemeID;
  _0x1f2c61.mopeSeasonID = this.mopeSeasonID;
  return _0x1f2c61;
};
a0_0x3ca865.prototype.readCustomData_onNewlyVisible = function (_0x2ad689) {
  a0_0x3ca865.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x2ad689);
  this.isGliding = _0x2ad689.readUInt8() == 1;
};
a0_0x3ca865.prototype.customUpdatedProperty = function (_0x58c674, _0x54e384) {
  this.isGliding = _0x54e384.readUInt8() == 1;
};
function a0_0x3ca865() {
  a0_0x3ca865.superClass.call(this, a0_0x24738f);
}
window.Pterodactyl = a0_0x3ca865;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3ca865, a0_0x24738f, a0_0x407000);
var a0_0x28626c = a0_0x2449e7;
a0_0x5eb127.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5eb127.prototype.constructor = a0_0x5eb127;
a0_0x5eb127.superClass = a0_0x28626c;
a0_0x5eb127.prototype.animalInfo = function () {
  var _0x218b1e = {
    aniName: "Bullet Ant",
    aniCol: "#FF9000",
    skinName: "desert/bulletant/0/bulletant"
  };
  _0x218b1e.upgradeText = "UPGRADED to " + _0x218b1e.aniName + "!\nHold 'W' to pick anything and take to your Anthill.";
  return _0x218b1e;
};
var a0_0x3b7156 = 1;
a0_0x5eb127.prototype.drawSkinCustomization = function () {
  var _0x33e8bb = "skins/desert/bulletant/" + this.animalSpecies + "/head.png";
  var _0x3a9b94 = this.getSkinImageObj(_0x33e8bb);
  if (_0x3a9b94) {
    var _0x1d27b2 = this.skinScale * 1.2;
    var _0x1ad0e1 = this.skinRad;
    a0_0x1306ae.drawImage(_0x3a9b94, -_0x1ad0e1 * _0x1d27b2, (-_0x1ad0e1 + _0x1ad0e1 * 0.3) * _0x1d27b2, _0x1ad0e1 * 2 * _0x1d27b2, _0x1ad0e1 * 2 * _0x1d27b2);
  }
};
var a0_0x3d0193 = -0.7;
a0_0x5eb127.prototype.drawUnderSkinImg = function () {
  var _0x1d8119 = "skins/desert/bulletant/" + this.animalSpecies + "/abdomen.png";
  var _0x1c4113 = this.getSkinImageObj(_0x1d8119);
  if (_0x1c4113) {
    var _0x576e2d = this.skinScale * 0.9;
    var _0x206561 = this.skinRad;
    a0_0x1306ae.drawImage(_0x1c4113, -_0x206561 * _0x576e2d, (-_0x206561 + _0x206561 * a0_0x3d0193) * _0x576e2d, _0x206561 * 2 * _0x576e2d, _0x206561 * 2 * _0x576e2d);
  }
};
a0_0x5eb127.prototype.getSkinName = function () {
  var _0x29a900 = "desert/bulletant/" + this.animalSpecies + "/body";
  return _0x29a900;
};
function a0_0x5eb127() {
  a0_0x5eb127.superClass.call(this, a0_0x24738f);
}
window.BulletAnt = a0_0x5eb127;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5eb127, a0_0x24738f, a0_0x30f1d2);
var a0_0x28626c = a0_0x42171b;
a0_0x370c0c.prototype = Object.create(a0_0x28626c.prototype);
a0_0x370c0c.prototype.constructor = a0_0x370c0c;
a0_0x370c0c.superClass = a0_0x28626c;
a0_0x370c0c.prototype.FlytrapType = 0;
a0_0x370c0c.prototype.updateZ = function () {
  this.z = 100;
};
a0_0x370c0c.prototype.getSkinFolder = function (_0x32f25f) {
  return "desert/flytrap";
};
a0_0x370c0c.prototype.customDraw = function (_0x357c04) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  var _0x33604a = this.getSkinImageObj("img/" + this.getSkinFolder() + "/base.png");
  if (_0x33604a) {
    var _0x5bee23 = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x33604a, -_0x5bee23, -_0x5bee23, _0x5bee23 * 2, _0x5bee23 * 2);
  }
  a0_0x1306ae.restore();
};
function a0_0x370c0c() {
  a0_0x370c0c.superClass.call(this, a0_0x513b7b);
  this.drawEffectScale_Slow = true;
}
window.Flytrap = a0_0x370c0c;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x370c0c, a0_0x513b7b);
var a0_0x28626c = a0_0x42171b;
a0_0x3215ac.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3215ac.prototype.constructor = a0_0x3215ac;
a0_0x3215ac.superClass = a0_0x28626c;
a0_0x3215ac.prototype.FlytrapMouthType = 0;
a0_0x3215ac.prototype.updateZ = function () {
  this.z = 1100 + this.rad;
};
var a0_0xd76bfd = 140;
var a0_0x11b408 = 1.25;
var a0_0x5b9929 = 2.5;
var a0_0x36f211 = 1.25;
var a0_0x1d0cc2 = 1.5;
var a0_0x1b6984 = 180;
var a0_0x4d9468 = 1.5;
var a0_0x15897b = 1;
var a0_0x3f1235 = 1;
var a0_0x924c7d = 0;
var a0_0x1e3e2b = 0;
var a0_0x195db4 = -160;
var a0_0x3bc264 = 1;
var a0_0x4841c9 = 0;
a0_0x3215ac.prototype.topA = 180;
a0_0x3215ac.prototype.botA = 180;
a0_0x3215ac.prototype.distBeforeAttack = 0;
a0_0x3215ac.prototype.maxDist = 0;
a0_0x3215ac.prototype.distCovered = 0;
a0_0x3215ac.prototype.isAttacking = false;
a0_0x3215ac.prototype.isMouthClosed = false;
a0_0x3215ac.prototype.grabbedAni = false;
a0_0x3215ac.prototype.getSkinFolder = function (_0x16af68) {
  return "desert/flytrap";
};
a0_0x3215ac.prototype.beforeCustomDraw = function (_0x5872dd) {
  if (!this.dead) {
    var _0x1177ef = this.getSkinImageObj("img/" + this.getSkinFolder() + "/mouth/stem.png");
    if (_0x1177ef) {
      var _0x256700 = this.rad;
      a0_0x1306ae.save();
      a0_0x1306ae.translate(this.anchor_x, this.anchor_y);
      a0_0x1306ae.rotate(this.angle - a0_0x873ec7(a0_0x1b6984));
      var _0x1813f6 = a0_0x1ddcb5({
        x: this.x,
        y: this.y
      }, {
        x: this.anchor_x,
        y: this.anchor_y
      });
      a0_0x1306ae.drawImage(_0x1177ef, -_0x256700 * a0_0x11b408, -_0x256700, _0x256700 * 2 * a0_0x36f211, _0x256700 * 2 + _0x1813f6);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x3215ac.prototype.customDraw = function (_0x5ed7ef) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  var _0x3ed767 = "bottom" + (this.isKillable ? "_e" : "");
  var _0x474718 = this.getSkinImageObj("img/" + this.getSkinFolder() + "/mouth/" + _0x3ed767 + ".png");
  if (_0x474718) {
    var _0x3ed38f = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle - a0_0x873ec7(this.botA));
    a0_0x1306ae.drawImage(_0x474718, -_0x3ed38f * a0_0x3f1235, -_0x3ed38f * a0_0x3f1235, _0x3ed38f * 2, _0x3ed38f * 2);
    a0_0x1306ae.restore();
  }
  if (!this.grabbedAni) {
    var _0x181347 = this.isMouthClosed ? "closed" : "top";
    var _0x474718 = this.getSkinImageObj("img/" + this.getSkinFolder() + "/mouth/" + _0x181347 + ".png");
    if (_0x474718) {
      var _0x3ed38f = this.rad;
      {
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(this.angle - a0_0x873ec7(this.topA));
        a0_0x1306ae.drawImage(_0x474718, -_0x3ed38f * a0_0x15897b, -_0x3ed38f * a0_0x15897b, _0x3ed38f * 2, _0x3ed38f * 2);
        a0_0x1306ae.restore();
      }
    }
  }
  a0_0x1306ae.restore();
};
a0_0x3215ac.prototype.isAttacking = false;
a0_0x3215ac.prototype.isMouthClosed = false;
a0_0x3215ac.prototype.grabbedAni = false;
a0_0x3215ac.prototype.readCustomData_onNewlyVisible = function (_0xd8a358) {
  a0_0x3215ac.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0xd8a358);
  var _0x366e56 = _0xd8a358.readBitGroup();
  this.isAttacking = _0x366e56.getBool();
  this.isMouthClosed = _0x366e56.getBool();
  this.grabbedAni = _0x366e56.getBool();
  this.anchor_x = _0xd8a358.readUInt16() / 4;
  this.anchor_y = _0xd8a358.readUInt16() / 4;
};
a0_0x3215ac.prototype.readUpdatedProperty = function (_0x57fe1b, _0x27ed6e) {
  if (_0x57fe1b == a0_0x3ab614) {
    this.isAttacking = _0x27ed6e.readUInt8() == 1;
  }
  if (_0x57fe1b == a0_0x1cd2ec) {
    this.isMouthClosed = _0x27ed6e.readUInt8() == 1;
  }
  if (_0x57fe1b == a0_0x2d1c4b) {
    this.grabbedAni = _0x27ed6e.readUInt8() == 1;
  }
};
function a0_0x3215ac() {
  a0_0x3215ac.superClass.call(this, a0_0x3d6ea9);
  this.doesDrawEffectScale = this.drawEffectScale_Slow = true;
}
window.FlytrapMouth = a0_0x3215ac;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3215ac, a0_0x3d6ea9);
var a0_0x28626c = a0_0x42171b;
a0_0x452849.prototype = Object.create(a0_0x28626c.prototype);
a0_0x452849.prototype.constructor = a0_0x452849;
a0_0x452849.superClass = a0_0x28626c;
a0_0x452849.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x452849.prototype.customDraw = function (_0x3dbc0c) {
  var _0xb57232 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x1084b6 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0xb57232 + ".png");
  if (_0x1084b6) {
    a0_0x1306ae.save();
    var _0x477e89 = this.rad * 1.2;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x1084b6, -_0x477e89, -_0x477e89, _0x477e89 * 2, _0x477e89 * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x452849() {
  a0_0x452849.superClass.call(this, a0_0x457673);
  this.doesDrawEffectScale = false;
}
window.AloeveraLeaf = a0_0x452849;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x452849, a0_0x457673);
var a0_0x28626c = a0_0x42171b;
a0_0xec9fe0.prototype = Object.create(a0_0x28626c.prototype);
a0_0xec9fe0.prototype.constructor = a0_0xec9fe0;
a0_0xec9fe0.superClass = a0_0x28626c;
a0_0xec9fe0.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0xec9fe0.prototype.customDraw = function (_0x5b5338) {
  var _0x22fa2c = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x46bdf9 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x22fa2c + ".png");
  if (_0x46bdf9) {
    a0_0x1306ae.save();
    var _0x4487f8 = this.rad * 1.15;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x46bdf9, -_0x4487f8, -_0x4487f8, _0x4487f8 * 2, _0x4487f8 * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0xec9fe0() {
  a0_0xec9fe0.superClass.call(this, a0_0x36388e);
  this.doesDrawEffectScale = this.drawEffectScale_Slow = false;
}
window.AloeveraPlant = a0_0xec9fe0;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xec9fe0, a0_0x36388e);
var a0_0x28626c = a0_0x42171b;
a0_0x229f24.prototype = Object.create(a0_0x28626c.prototype);
a0_0x229f24.prototype.constructor = a0_0x229f24;
a0_0x229f24.superClass = a0_0x28626c;
a0_0x229f24.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x229f24.prototype.customDraw = function (_0x17cb64) {
  var _0x1e1db7 = this.isEdibleOutlined() ? "e" : "0";
  var _0x3c3cdc = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x1e1db7 + ".png");
  if (_0x3c3cdc) {
    a0_0x1306ae.save();
    var _0x50781f = this.rad * 1.15;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x3c3cdc, -_0x50781f, -_0x50781f, _0x50781f * 2, _0x50781f * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x229f24() {
  a0_0x229f24.superClass.call(this, a0_0x59315a);
  this.doesDrawEffectScale = this.drawEffectScale_Slow = false;
}
window.Cactus = a0_0x229f24;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x229f24, a0_0x59315a);
var a0_0x28626c = a0_0x42171b;
a0_0x1411d2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1411d2.prototype.constructor = a0_0x1411d2;
a0_0x1411d2.superClass = a0_0x28626c;
a0_0x1411d2.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1411d2.prototype.customDraw = function (_0x59de17) {
  var _0x318a49 = this.isEdibleOutlined() ? "cactuspear_e" : "cactuspear";
  _0x318a49 = "gameobj/" + this.oType + "/" + _0x318a49 + ".png";
  var _0x20b3ef = this.getSkinImageObj(_0x318a49);
  if (_0x20b3ef) {
    a0_0x1306ae.save();
    var _0x16838b = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x20b3ef, -_0x16838b, -_0x16838b, _0x16838b * 2, _0x16838b * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x1411d2() {
  a0_0x1411d2.superClass.call(this, a0_0x8a8853);
  this.doesDrawEffectScale = false;
}
window.CactusPear = a0_0x1411d2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1411d2, a0_0x8a8853);
var a0_0x28626c = a0_0x42171b;
a0_0x36122d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x36122d.prototype.constructor = a0_0x36122d;
a0_0x36122d.superClass = a0_0x28626c;
a0_0x36122d.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x36122d.prototype.customDraw = function (_0x1c0321) {
  var _0x953722 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x559b9a = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x953722 + ".png");
  if (_0x559b9a) {
    a0_0x1306ae.save();
    var _0x54dccc = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x559b9a, -_0x54dccc, -_0x54dccc, _0x54dccc * 2, _0x54dccc * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x36122d() {
  a0_0x36122d.superClass.call(this, a0_0x240d06);
  this.doesDrawEffectScale = false;
}
window.DateFruit = a0_0x36122d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x36122d, a0_0x240d06);
var a0_0x28626c = a0_0x42171b;
a0_0x1919b5.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1919b5.prototype.constructor = a0_0x1919b5;
a0_0x1919b5.superClass = a0_0x28626c;
a0_0x1919b5.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1919b5.prototype.customDraw = function (_0x220725) {
  var _0x5b1ece = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x51b821 = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.specType + "/" + _0x5b1ece + ".png");
  if (_0x51b821) {
    a0_0x1306ae.save();
    var _0x5bb095 = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x51b821, -_0x5bb095, -_0x5bb095, _0x5bb095 * 2, _0x5bb095 * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x1919b5() {
  a0_0x1919b5.superClass.call(this, a0_0x222f49);
  this.doesDrawEffectScale = false;
}
window.Mango = a0_0x1919b5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1919b5, a0_0x222f49);
var a0_0x28626c = a0_0x42171b;
a0_0x194cc8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x194cc8.prototype.constructor = a0_0x194cc8;
a0_0x194cc8.superClass = a0_0x28626c;
a0_0x194cc8.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x194cc8.prototype.customDraw = function (_0xc24b47) {
  var _0x130416 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x490481 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x130416 + ".png");
  if (_0x490481) {
    a0_0x1306ae.save();
    var _0xdc0f71 = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x490481, -_0xdc0f71, -_0xdc0f71, _0xdc0f71 * 2, _0xdc0f71 * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x194cc8() {
  a0_0x194cc8.superClass.call(this, a0_0x42d3de);
  this.doesDrawEffectScale = false;
}
window.Melon = a0_0x194cc8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x194cc8, a0_0x42d3de);
var a0_0x28626c = a0_0x42171b;
a0_0x3320ae.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3320ae.prototype.constructor = a0_0x3320ae;
a0_0x3320ae.superClass = a0_0x28626c;
a0_0x3320ae.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x3320ae.prototype.customDraw = function (_0x10d822) {
  var _0x45bb2b = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x5473af = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x45bb2b + ".png");
  if (_0x5473af) {
    a0_0x1306ae.save();
    var _0x537333 = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x5473af, -_0x537333, -_0x537333, _0x537333 * 2, _0x537333 * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x3320ae() {
  a0_0x3320ae.superClass.call(this, a0_0x35e972);
  this.doesDrawEffectScale = false;
}
window.MelonSlice = a0_0x3320ae;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3320ae, a0_0x35e972);
var a0_0x28626c = a0_0x42171b;
a0_0x1edea2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1edea2.prototype.constructor = a0_0x1edea2;
a0_0x1edea2.superClass = a0_0x28626c;
a0_0x1edea2.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1edea2.prototype.customDraw = function (_0x581370) {
  var _0x493df4 = this.isEdibleOutlined() ? "e" : this.oType;
  var _0x5edea9 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x493df4 + ".png");
  if (_0x5edea9) {
    a0_0x1306ae.save();
    var _0x2c247c = this.rad;
    a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x5edea9, -_0x2c247c, -_0x2c247c, _0x2c247c * 2, _0x2c247c * 2);
    a0_0x1306ae.restore();
  }
};
a0_0x1edea2.prototype.updateZ = function () {
  this.z = 1000 + this.rad;
};
function a0_0x1edea2() {
  a0_0x1edea2.superClass.call(this, a0_0x1ed65f);
  this.doesDrawEffectScale = false;
}
window.Orange = a0_0x1edea2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1edea2, a0_0x1ed65f);
var a0_0x28626c = a0_0x42171b;
a0_0x3ce52e.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3ce52e.prototype.constructor = a0_0x3ce52e;
a0_0x3ce52e.superClass = a0_0x28626c;
a0_0x3ce52e.prototype.updateZ = function () {
  this.z = -158;
};
a0_0x3ce52e.prototype.customDraw = function (_0x5ba250) {
  a0_0x1306ae.save();
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x3f17b9 = 0;
  var _0x4d269d = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x4efcd6 = 6;
  var _0x2ed2fd = 1.5;
  _0x3f17b9 = _0x2ed2fd * Math.sin(Math.PI * 2 / _0x4efcd6 * _0x4d269d);
  var _0x3e1ec4 = 4;
  if (_0x5ba250) {
    a0_0x1306ae.fillStyle = "#b0a13b";
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x1306ae.fill();
  } else {
    a0_0x1306ae.fillStyle = "#bdae47";
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x3e1ec4 + _0x3f17b9), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x3f17b9), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x3f17b9), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x3f17b9), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x3f17b9), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      if (this.rad > 50) {
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
        a0_0x1306ae.fill();
      }
    }
  }
  a0_0x1306ae.restore();
};
function a0_0x3ce52e() {
  a0_0x3ce52e.superClass.call(this, a0_0x511276);
  this.animateRadOnSpawn = false;
}
window.Quicksand = a0_0x3ce52e;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3ce52e, a0_0x511276);
var a0_0x28626c = a0_0x42171b;
a0_0x3f9650.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3f9650.prototype.constructor = a0_0x3f9650;
a0_0x3f9650.superClass = a0_0x28626c;
a0_0x3f9650.prototype.updateZ = function () {
  this.z = -158;
};
a0_0x3f9650.prototype.customDraw = function (_0xa1397d) {
  var _0x419761 = 4;
  a0_0x1306ae.save();
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
  }
  var _0x20889a = 0;
  var _0x1983e3 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x375198 = 6;
  var _0x40137a = 1.5;
  _0x20889a = _0x40137a * Math.sin(Math.PI * 2 / _0x375198 * _0x1983e3);
  if (this.isOasisWater && _0xa1397d) {
    a0_0x1306ae.fillStyle = "#AE9F43";
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x1306ae.fill();
  } else {
    var _0x436676 = "#3881C4";
    var _0x419761 = 4;
    a0_0x1306ae.fillStyle = this.isOasisWater ? _0x436676 : "#AE9F43";
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      a0_0x1306ae.fillStyle = this.isOasisWater ? _0x436676 : "#bdae47";
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x419761 + _0x20889a), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x20889a), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0x20889a), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0x20889a), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0x20889a), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      if (this.rad > 50) {
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
        a0_0x1306ae.fill();
        a0_0x1306ae.beginPath();
        a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 10, 0, Math.PI * 2);
        a0_0x1306ae.fill();
      }
    }
  }
  a0_0x1306ae.restore();
};
a0_0x3f9650.prototype.afterCustomDraw = function () {};
function a0_0x3f9650() {
  a0_0x3f9650.superClass.call(this, a0_0xe6813b);
  this.animateRadOnSpawn = false;
}
a0_0x3f9650.prototype.readCustomData_onNewlyVisible = function (_0x4aa155) {
  a0_0x3f9650.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x4aa155);
  this.isOasisWater = _0x4aa155.readUInt8() == 1;
  if (this.isOasisWater) {
    var _0x232c92 = _0x4aa155.readUInt16() / 10;
    this.setNewRad(_0x232c92);
  }
};
a0_0x3f9650.prototype.readUpdatedProperty = function (_0x18d7f2, _0x12d251) {
  if (_0x18d7f2 == a0_0x91985b) {
    var _0x507871 = _0x12d251.readUInt16() / 10;
    this.setNewRad(_0x507871);
  }
};
a0_0x3f9650.prototype.circles = new Array();
a0_0x3f9650.prototype.isOasisWater = false;
window.Oasis = a0_0x3f9650;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3f9650, a0_0xe6813b);
var a0_0x345076 = a0_0x345076;
var a0_0x28626c = a0_0x2449e7;
a0_0x345076.prototype = Object.create(a0_0x28626c.prototype);
a0_0x345076.prototype.constructor = a0_0x345076;
a0_0x345076.superClass = a0_0x28626c;
a0_0x345076.prototype.getSkinName = function () {
  let _0x11d542 = this.getSpeciesPath() + "/lion";
  _0x11d542 += this.specType == 0 ? "" : this.specType;
  return _0x11d542;
};
a0_0x345076.prototype.getSpeciesPath = function () {
  return "land/lion/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x345076.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  var _0x328f78 = "";
  if (this.animalSpecies == 1 || this.animalSpecies == 2 || this.animalSpecies == 200) {
    _0x328f78 = "/" + this.animalSubSpecies;
  }
  return _0x328f78;
};
a0_0x345076.prototype.getAbilityInfo = function (_0x2783c0) {
  var _0x538542 = {
    abilName: "Loud " + (this.animalSpecies == 2 ? "Meow" : "Noise")
  };
  if (this.animalSpecies == 1 || this.animalSpecies == 2 && this.animalSubSpecies == 2) {
    _0x538542.abilName += "\n& Camouflage";
  }
  var _0x32064a = this.getSubSpecies();
  _0x538542.abilImg = "skins/" + this.getSpeciesPath() + "/lion_roar.png";
  _0x538542.skinThemeID = this.skinThemeID;
  _0x538542.mopeSeasonID = this.mopeSeasonID;
  return _0x538542;
};
a0_0x345076.prototype.animalInfo = function () {
  var _0x3a8200 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3a8200.aniName = "Lion";
      break;
    case 1:
      switch (this.animalSubSpecies) {
        case 0:
          _0x3a8200.aniName = "Lioness";
          break;
        case 1:
          _0x3a8200.aniName = "White Lioness";
          break;
        case 2:
          _0x3a8200.aniName = "Black Lioness";
          break;
      }
      break;
    case 2:
      switch (this.animalSubSpecies) {
        case 0:
          _0x3a8200.aniName = "Lion Cub";
          break;
        case 1:
          _0x3a8200.aniName = "White Lion Cub";
          break;
        case 2:
          _0x3a8200.aniName = "Black Lion Cub";
          break;
      }
      break;
    case 3:
      _0x3a8200.aniName = "Black-Maned\nLion";
      break;
    case 4:
      _0x3a8200.aniName = "White Lion";
      break;
    case 5:
      _0x3a8200.aniName = "Black Lion";
      break;
    case 100:
      _0x3a8200.aniName = "The Mantalian";
      break;
    case 200:
      if (this.animalSubSpecies == 0) {
        _0x3a8200.aniName = "Clowoud Lion";
      } else if (this.animalSubSpecies == 1) {
        _0x3a8200.aniName = "Sunset Clowoud Lion";
      } else if (this.animalSubSpecies == 2) {
        _0x3a8200.aniName = "Storm Clowoud Lion";
      }
      break;
    case 111:
      _0x3a8200.aniName = "Classic Lion";
      break;
    case 112:
      _0x3a8200.aniName = "Gold-trim Lion";
      break;
    case 202:
      _0x3a8200.aniName = "Chimera Lion";
      break;
    case 220:
      _0x3a8200.aniName = "Ghastly Jade Lion";
      break;
  }
  _0x3a8200.aniDesc = "";
  if (this.animalSpecies == 1) {
    _0x3a8200.upgradeText = "UPGRADED to " + _0x3a8200.aniName + "!\n Lioness are fast and can launch an ambush attack. (Stop moving to camouflage!)";
  } else if (this.animalSpecies == 2) {
    _0x3a8200.upgradeText = "UPGRADED to " + _0x3a8200.aniName + "!\n Press W to release a mighty MEOW!";
    if (this.animalSubSpecies == 2) {
      _0x3a8200.upgradeText += " (Stop moving to camouflage!)";
    }
  } else {
    _0x3a8200.upgradeText = "UPGRADED to " + _0x3a8200.aniName + "!\n Press W to release a mighty ROAR (Rawr!)";
  }
  _0x3a8200.aniCol = "#FF9000";
  _0x3a8200.skinName = this.getSkinName();
  return _0x3a8200;
};
a0_0x345076.prototype.setStealth = function () {
  a0_0x345076.superClass.prototype.setStealth.call(this);
  if (this.flag_stealth) {
    if (this.animalSpecies == 1) {
      this.idealOp = a0_0x15e4d1 == this.id ? 0.1 : 0;
    }
  }
};
a0_0x345076.prototype.biteStart = 0;
a0_0x345076.prototype.flapAmount = 3;
a0_0x345076.prototype.flapDur = 1.5;
a0_0x345076.prototype.roarStartT = -500;
var a0_0x4ef833 = 1;
var a0_0x391755 = 1;
a0_0x345076.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e + this.roarStartT;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x2bafb3 = "skins/" + this.getSpeciesPath() + "/lion_head1.png";
      var _0x52d668 = this.getSkinImageObj(_0x2bafb3);
      var _0x4d972e = (a0_0x24806e - this.biteStart) / 1000;
      var _0x1d71a7 = this.skinScale * 1.07;
      var _0x3c4bf9 = this.skinRad;
      if (_0x52d668) {
        var _0x435d83 = 0;
        var _0x16257e = this.flapAmount - (this.animalSpecies == 2 ? 0.5 : 0);
        _0x435d83 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x4d972e, this.flapDur, _0x16257e, 2) : this.flapAmount;
        a0_0x1306ae.save();
        var _0x3c4bf9 = this.rad;
        a0_0x1306ae.drawImage(_0x52d668, -_0x3c4bf9 * _0x1d71a7, (-_0x3c4bf9 + _0x3c4bf9 * 0.1) * _0x1d71a7 - _0x435d83, _0x3c4bf9 * 2 * _0x1d71a7, _0x3c4bf9 * 2 * _0x1d71a7);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x345076.prototype.drawNickName = function (_0x2f635) {
  if (this.flag_stealth) {
    _0x2f635 = 0;
  }
  a0_0x345076.superClass.prototype.drawNickName.call(this, _0x2f635);
};
function a0_0x345076() {
  a0_0x345076.superClass.call(this, a0_0x24738f);
}
window.Lion = a0_0x345076;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x345076, a0_0x24738f, a0_0x2c2f52);
var a0_0x28626c = a0_0x2449e7;
a0_0xfca48a.prototype = Object.create(a0_0x28626c.prototype);
a0_0xfca48a.prototype.constructor = a0_0xfca48a;
a0_0xfca48a.superClass = a0_0x28626c;
a0_0xfca48a.prototype.animalInfo = function () {
  var _0x354b3f = {};
  switch (this.animalSpecies) {
    case 0:
      _0x354b3f.aniName = "Rhino";
      break;
    case 1:
      _0x354b3f.aniName = "White Rhino";
      break;
    case 2:
      _0x354b3f.aniName = "Black Rhino";
      break;
    case 3:
      _0x354b3f.aniName = "Woolly Rhino";
      break;
    case 111:
      _0x354b3f.aniName = "Classic Rhino";
      break;
    case 112:
      _0x354b3f.aniName = "Gold-trim Rhino";
      break;
    case 201:
      _0x354b3f.aniName = "Shrub Rhino";
      break;
    case 202:
      _0x354b3f.aniName = "Cotton Candy Rhino";
      break;
    case 204:
      _0x354b3f.aniName = "Acuti Rhino";
      break;
    case 220:
      _0x354b3f.aniName = "Ink Rhino";
      break;
  }
  _0x354b3f.skinName = this.getSkinName();
  _0x354b3f.aniDesc = "";
  _0x354b3f.upgradeText = "UPGRADED to " + _0x354b3f.aniName + "!\n Press W to CHARGE with your mighty horn!";
  _0x354b3f.aniCol = "#94a3a9";
  return _0x354b3f;
};
a0_0xfca48a.prototype.getAbilityInfo = function (_0x492fb7) {
  var _0x36f07f = {
    abilName: "Charge!"
  };
  _0x36f07f.abilImg = "skins/" + this.getSpeciesPath() + "/rhino_charge.png";
  _0x36f07f.skinThemeID = this.skinThemeID;
  _0x36f07f.mopeSeasonID = this.mopeSeasonID;
  return _0x36f07f;
};
a0_0xfca48a.prototype.getSkinName = function () {
  let _0x21383f = this.getSpeciesPath() + "/rhino";
  _0x21383f += this.specType == 0 ? "" : 1;
  return _0x21383f;
};
a0_0xfca48a.prototype.getSpeciesPath = function () {
  return "land/rhino/" + this.animalSpecies + this.getSubSpecies();
};
a0_0xfca48a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
var a0_0x3b7156 = 0.1;
a0_0xfca48a.prototype.drawOnTopOfSkinImg = function () {
  if (a0_0x2bafdc) {
    a0_0xfca48a.superClass.prototype.drawOnTopOfSkinImg.call(this);
  }
};
a0_0xfca48a.prototype.drawSkinCustomization = function () {
  if (a0_0x2bafdc) {
    a0_0xfca48a.superClass.prototype.drawSkinCustomization.call(this);
  } else if (this.flag_usingAbility) {
    var _0x18083b = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/rhino_head1.png");
    var _0x341208 = this.skinScale * 0.98;
    var _0x1f843e = this.skinRad;
    if (_0x18083b) {
      frame = 0;
      a0_0x1306ae.save();
      var _0x1f843e = this.rad;
      a0_0x1306ae.drawImage(_0x18083b, -_0x1f843e * _0x341208, (-_0x1f843e + _0x1f843e * a0_0x3b7156) * _0x341208 + frame, _0x1f843e * 2 * _0x341208, _0x1f843e * 2 * _0x341208);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0xfca48a() {
  a0_0xfca48a.superClass.call(this, a0_0x24738f);
}
window.Rhino = a0_0xfca48a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xfca48a, a0_0x24738f, a0_0x5812ad);
var a0_0x28626c = a0_0x2449e7;
a0_0x9a39aa.prototype = Object.create(a0_0x28626c.prototype);
a0_0x9a39aa.prototype.constructor = a0_0x9a39aa;
a0_0x9a39aa.superClass = a0_0x28626c;
a0_0x9a39aa.prototype.animalInfo = function () {
  var _0xafceef = {};
  _0xafceef.skinName = "land/pig/" + this.animalSpecies + this.getSubSpecies() + "/pig";
  _0xafceef.aniName = "Pig";
  switch (this.animalSpecies) {
    case 0:
      _0xafceef.aniName = "Pig";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 1:
      _0xafceef.aniName = "Pinky Pig";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 111:
      _0xafceef.aniName = "Classic Pig";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 112:
      _0xafceef.aniName = "Gold-trim Pig";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
      break;
    case 201:
      _0xafceef.aniName = "Floaty Pig";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 204:
      switch (this.animalSubSpecies) {
        case 0:
          _0xafceef.aniName = "Butcher Pig";
          break;
        case 1:
          _0xafceef.aniName = "Hot Dog Pig";
      }
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 2:
      {
        _0xafceef.aniName = "Stinky Pig";
        _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n " + _0xafceef.aniName + " dives through MUD (can use stink everywhere!)";
      }
      break;
    case 202:
      _0xafceef.aniName = "Piggy Bank";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
    case 220:
      _0xafceef.aniName = "Fumigator Pig";
      _0xafceef.upgradeText = "UPGRADED to " + _0xafceef.aniName + "!\n  Pigs move FAST through MUD! (Can use 'stink' on mud/ hiding holes!)";
      break;
  }
  _0xafceef.aniCol = "#DD6BD4";
  return _0xafceef;
};
a0_0x9a39aa.prototype.getAbilityInfo = function (_0x14700b) {
  var _0x4272be = {
    abilName: "Stink cloud"
  };
  _0x4272be.abilImg = "skins/" + this.getSpeciesPath() + "/pig.png";
  _0x4272be.skinThemeID = this.skinThemeID;
  _0x4272be.mopeSeasonID = this.mopeSeasonID;
  return _0x4272be;
};
a0_0x9a39aa.prototype.getSkinName = function () {
  let _0x5c4104 = this.getSpeciesPath() + "/pig";
  return _0x5c4104;
};
a0_0x9a39aa.prototype.getSpeciesPath = function () {
  return "land/pig/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x9a39aa.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 204) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x9a39aa.prototype.animalDiveColor = function () {
  if (this.flag_underWater) {
    if (this.flag_eff_isInMud) {
      return "#7E6A35";
    } else {
      return "#4E71C3";
    }
  }
  return "";
};
a0_0x9a39aa.prototype.animalDivesInMud = function () {
  return true;
};
function a0_0x9a39aa() {
  a0_0x9a39aa.superClass.call(this, a0_0x24738f);
}
window.Pig = a0_0x9a39aa;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x9a39aa, a0_0x24738f, a0_0x31a123);
var a0_0x28626c = a0_0x2449e7;
a0_0x12b09d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x12b09d.prototype.constructor = a0_0x12b09d;
a0_0x12b09d.superClass = a0_0x28626c;
a0_0x12b09d.prototype.animalInfo = function () {
  var _0x301c7c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x301c7c.aniName = "Deer";
      break;
    case 1:
      _0x301c7c.aniName = "Doe";
      break;
    case 2:
      _0x301c7c.aniName = "Marsh Deer";
      break;
    case 100:
      _0x301c7c.aniName = "The Wendigo";
      break;
    case 111:
      _0x301c7c.aniName = "Classic Deer";
      break;
    case 112:
      _0x301c7c.aniName = "Gold-trim Deer";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x301c7c.aniName = "Mezavor";
          break;
        case 1:
          _0x301c7c.aniName = "Divine Deer";
      }
      break;
  }
  _0x301c7c.aniDesc = "";
  _0x301c7c.upgradeText = "UPGRADED to " + _0x301c7c.aniName + "! \nPress W to dig up food! \nDig in mud for better food!";
  _0x301c7c.aniCol = "#C4773E";
  _0x301c7c.skinName = this.getSkinName();
  return _0x301c7c;
};
a0_0x12b09d.prototype.getSkinName = function () {
  let _0x24af84 = this.getSpeciesPath() + "/deer";
  return _0x24af84;
};
a0_0x12b09d.prototype.getSpeciesPath = function () {
  return "land/deer/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x12b09d.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x12b09d.prototype.getAbilityInfo = function (_0x44b78f) {
  var _0x250bf3 = {
    abilName: "Dig Food!"
  };
  _0x250bf3.abilImg = "skins/" + this.getSpeciesPath() + "/deer.png";
  _0x250bf3.skinThemeID = this.skinThemeID;
  _0x250bf3.mopeSeasonID = this.mopeSeasonID;
  return _0x250bf3;
};
a0_0x12b09d.prototype.moveF = 0.08;
a0_0x12b09d.prototype.jumpAnim = null;
a0_0x12b09d.prototype.frame = 0;
a0_0x12b09d.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    if (this.animalType == a0_0x2d5af4 || this.animalType == a0_0x17ec36) {
      var _0x46d5b1 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x5797c6 = 1.5;
      var _0x2655fc = 1;
      var _0x5f1d06 = _0x2655fc * Math.sin(Math.PI * 2 / _0x5797c6 * _0x46d5b1);
      var _0x4e0b1a = a0_0x1306ae.globalAlpha;
      a0_0x1306ae.globalAlpha *= 0.8;
      a0_0x50fd5c(0, this.rad * 0.3, this.rad * (0.9 + _0x5f1d06 * 0.12), "#7F582B");
      a0_0x50fd5c(0, -this.rad * 0.3, this.rad * (1.05 + _0x5f1d06 * 0.09), "#7F582B");
      a0_0x1306ae.globalAlpha = _0x4e0b1a;
    }
  }
};
function a0_0x12b09d() {
  a0_0x12b09d.superClass.call(this, a0_0x24738f);
}
window.Deer = a0_0x12b09d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x12b09d, a0_0x24738f, a0_0x2d5af4);
var a0_0x28626c = a0_0x2449e7;
a0_0x57c3d1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x57c3d1.prototype.constructor = a0_0x57c3d1;
a0_0x57c3d1.superClass = a0_0x28626c;
a0_0x57c3d1.prototype.animalInfo = function () {
  var _0x3c4183 = {
    aniCol: "#755A2A"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x3c4183.aniName = "Donkey";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 1:
      _0x3c4183.aniName = "Jackass";
      _0x3c4183.aniCol = "#000";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents.\n(Keep mouse close to your animal along with boosting to become a mad donkey!)";
      break;
    case 2:
      _0x3c4183.aniName = "Zonkey";
      _0x3c4183.aniCol = "#755A2A";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 100:
      _0x3c4183.aniName = "Equusthulhu";
      _0x3c4183.aniCol = "#755A2A";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 111:
      _0x3c4183.aniName = "Classic Donkey";
      _0x3c4183.aniCol = "#755A2A";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 112:
      _0x3c4183.aniName = "Gold-trim Donkey";
      _0x3c4183.aniCol = "#755A2A";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
    case 202:
      _0x3c4183.aniName = "Headless Mule";
      _0x3c4183.upgradeText = "UPGRADED to " + _0x3c4183.aniName + "!\nPress 'W' to give RARE kick and stun your opponents";
      break;
  }
  _0x3c4183.skinName = this.getSkinName();
  _0x3c4183.aniDesc = "";
  return _0x3c4183;
};
a0_0x57c3d1.prototype.getAbilityInfo = function (_0x289d52) {
  var _0x367d67 = {
    abilName: "Back Kick!"
  };
  _0x367d67.abilImg = "skins/" + this.getSpeciesPath() + "/donkey.png";
  _0x367d67.skinThemeID = this.skinThemeID;
  _0x367d67.mopeSeasonID = this.mopeSeasonID;
  return _0x367d67;
};
a0_0x57c3d1.prototype.getSkinName = function () {
  let _0x3bbe70 = this.getSpeciesPath() + "/donkey";
  if (this.specType != 0) {
    if (this.specType > 2) {
      _0x3bbe70 += 3;
    } else {
      _0x3bbe70 += this.specType;
    }
  }
  return _0x3bbe70;
};
a0_0x57c3d1.prototype.getSpeciesPath = function () {
  return "land/donkey/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x57c3d1.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x57c3d1.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && this.biteStart > 0) {
    a0_0x1306ae.save();
    var _0x16b944 = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha = _0x16b944 * 1;
    var _0x264cd9 = "skins/" + this.getSpeciesPath() + "/legs.png";
    var _0x487fd4 = this.getSkinImageObj(_0x264cd9);
    if (_0x487fd4) {
      var _0x4e863e = Math.min(1, (a0_0x24806e - this.biteStart) / 1350);
      var _0x3756c7 = this.rad;
      var _0x672352 = 0;
      var _0x9dd5d6 = this.rad * 1;
      var _0x4f71ed = _0x3756c7 * 2;
      var _0x1e44d5 = _0x3756c7 * 2 * _0x4e863e;
      var _0x1f97da = 0.5;
      var _0x3705a3 = 2.5;
      a0_0x1306ae.drawImage(_0x487fd4, _0x672352 + _0x4f71ed * -_0x1f97da, _0x9dd5d6 + _0x1e44d5 * -_0x3705a3, _0x4f71ed, _0x1e44d5);
    }
    a0_0x1306ae.restore();
  }
};
a0_0x57c3d1.prototype.biteStart = 0;
a0_0x57c3d1.prototype.flapAmount = 0.3;
a0_0x57c3d1.prototype.flapDur = 1;
a0_0x57c3d1.prototype.roarStartT = -500;
a0_0x57c3d1.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    if (this.specType == 0) {
      return;
    }
    var _0x971015 = this.specType - 2;
    var _0x5cf210 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/donkey_head" + _0x971015 + ".png");
    var _0x1f2281 = this.skinRad;
    if (_0x5cf210) {
      a0_0x1306ae.save();
      var _0x1f2281 = this.rad * 1.3;
      var _0x1a602c = 0;
      var _0x4971d4 = this.rad;
      var _0x361d1c = 1;
      var _0x7dc261 = _0x1f2281 * 2 * _0x361d1c;
      var _0x254431 = _0x1f2281 * 2 * _0x361d1c;
      var _0x422b13 = 0.5;
      var _0x14fce5 = 0.7;
      a0_0x1306ae.drawImage(_0x5cf210, _0x1a602c + _0x7dc261 * -_0x422b13, _0x4971d4 + _0x254431 * -_0x14fce5, _0x7dc261, _0x254431);
      a0_0x1306ae.restore();
    }
  } else {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e + this.roarStartT;
    }
    var _0x2f6837 = (a0_0x24806e - this.biteStart) / 1000;
    var _0x51c4eb = 0;
    _0x51c4eb = a0_0x423a9f(_0x2f6837, this.flapDur, this.flapAmount, 2);
    var _0x5cf210 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/donkey_head" + this.specType + ".png");
    var _0x1f2281 = this.skinRad;
    if (_0x5cf210) {
      a0_0x1306ae.save();
      var _0x361d1c = 0;
      var _0x5ac1f5 = 1;
      var _0x9536e9 = 0.85;
      var _0x9e16e4 = 1.2;
      if (this.specType == 1) {
        _0x361d1c = -25;
        _0x5ac1f5 = 1.2 - _0x51c4eb * 0.3;
        _0x9536e9 = 0.8 + _0x51c4eb * 0.3;
        _0x9e16e4 = 1.4 - _0x51c4eb * 0.3;
      } else if (this.specType == 2) {
        _0x361d1c = 25;
        _0x5ac1f5 = 0.8 - _0x51c4eb * 0.3;
        _0x9536e9 = 0.8 + _0x51c4eb * 0.3;
        _0x9e16e4 = 1.4 - _0x51c4eb * 0.3;
        _0x51c4eb *= -1;
      }
      var _0x1f2281 = this.rad * 1;
      var _0x1a602c = 0;
      var _0x4971d4 = this.rad;
      var _0x7dc261 = _0x1f2281 * 2 * _0x9e16e4;
      var _0x254431 = _0x1f2281 * 2 * _0x9e16e4;
      var _0x422b13 = _0x5ac1f5 * 0.5;
      var _0x14fce5 = _0x9536e9 * 1;
      a0_0x1306ae.rotate(a0_0x873ec7(_0x361d1c) + _0x51c4eb);
      a0_0x1306ae.drawImage(_0x5cf210, _0x1a602c + _0x7dc261 * -_0x422b13, _0x4971d4 + _0x254431 * -_0x14fce5, _0x7dc261, _0x254431);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x57c3d1() {
  a0_0x57c3d1.superClass.call(this, a0_0x24738f);
}
window.Donkey = a0_0x57c3d1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x57c3d1, a0_0x24738f, a0_0x55a097);
var a0_0x28626c = a0_0x2449e7;
a0_0x35afa0.prototype = Object.create(a0_0x28626c.prototype);
a0_0x35afa0.prototype.constructor = a0_0x35afa0;
a0_0x35afa0.superClass = a0_0x28626c;
a0_0x35afa0.prototype.animalInfo = function () {
  var _0x54f151 = {
    aniCol: "#755A2A"
  };
  switch (this.animalSpecies) {
    case 0:
      _0x54f151.aniName = "Zebra";
      break;
    case 1:
      _0x54f151.aniName = "Okapi";
      break;
    case 2:
      _0x54f151.aniName = "Okapi";
      break;
    case 100:
      _0x54f151.aniName = "Unicornze";
      break;
    case 111:
      _0x54f151.aniName = "Classic Zebra";
      break;
    case 112:
      _0x54f151.aniName = "Gold-trim Zebra";
      break;
    case 201:
      _0x54f151.aniName = "Playground Zebra";
      break;
    case 202:
      _0x54f151.aniName = "Synth Zebra";
      break;
  }
  _0x54f151.aniCol = "#000";
  _0x54f151.skinName = this.getSkinName();
  _0x54f151.upgradeText = "UPGRADED to " + _0x54f151.aniName + "!\n Press 'W' to give RARE kick and stun your opponents";
  _0x54f151.aniDesc = "";
  return _0x54f151;
};
a0_0x35afa0.prototype.getSkinImageObj = function (_0x35a238) {
  var _0xd8e7c1 = this.animalSpecies === 201 || this.animalSpecies === 2 || this.animalSpecies === 1 || this.animalSpecies === 100 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x35a238, _0xd8e7c1);
};
a0_0x35afa0.prototype.getAbilityInfo = function (_0x356858) {
  var _0x26071f = {
    abilName: "Side Kick!"
  };
  _0x26071f.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x26071f.skinThemeID = this.skinThemeID;
  _0x26071f.mopeSeasonID = this.mopeSeasonID;
  return _0x26071f;
};
a0_0x35afa0.prototype.getSkinName = function () {
  let _0x911632 = this.getSpeciesPath() + "/zebra";
  return _0x911632;
};
a0_0x35afa0.prototype.getSpeciesPath = function () {
  return "land/zebra/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x35afa0.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x35afa0() {
  a0_0x35afa0.superClass.call(this, a0_0x24738f);
}
window.Zebra = a0_0x35afa0;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x35afa0, a0_0x24738f, a0_0x5ce3eb);
var a0_0x5ce670 = a0_0x5ce670;
var a0_0x28626c = a0_0x2449e7;
a0_0x5ce670.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5ce670.prototype.constructor = a0_0x5ce670;
a0_0x5ce670.superClass = a0_0x28626c;
a0_0x5ce670.prototype.objSkinSpotsCanvas = null;
a0_0x5ce670.prototype.animalInfo = function () {
  var _0x153856 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x153856.aniName = "Mouse";
      break;
    case 1:
      _0x153856.aniName = "Golden Mouse";
      break;
    case 2:
      _0x153856.aniName = "Purple Mouse";
      break;
    case 100:
      _0x153856.aniName = "Robo Mouse";
      break;
    case 112:
      _0x153856.aniName = "Gold-trim Mouse";
      break;
    case 201:
      _0x153856.aniName = "Bubbly Mouse";
      break;
    case 111:
      _0x153856.aniName = "Classic Mouse";
      break;
    case 202:
      _0x153856.aniName = "Super Mouse";
      break;
    case 204:
      switch (this.animalSubSpecies) {
        case 0:
          _0x153856.aniName = "Dark Plague Rat";
          break;
        case 1:
          _0x153856.aniName = "Light Plague Rat";
      }
      break;
    case 250:
      _0x153856.aniName = "Sample Mouse";
      break;
  }
  _0x153856.upgradeText = "You're a tiny " + _0x153856.aniName + "- Eat food to grow!";
  _0x153856.aniCol = "gray";
  _0x153856.skinName = "land/mouse/" + this.animalSpecies + this.getSubSpecies() + "/mouse";
  return _0x153856;
};
a0_0x5ce670.prototype.getSkinName = function () {
  return "land/mouse/" + this.animalSpecies + this.getSubSpecies() + "/mouse";
};
a0_0x5ce670.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 204) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
function a0_0x5ce670() {
  a0_0x5ce670.superClass.call(this, a0_0x24738f);
}
window.Mouse = a0_0x5ce670;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5ce670, a0_0x24738f, a0_0x41cceb);
var a0_0x127408 = a0_0x127408;
var a0_0x28626c = a0_0x2449e7;
a0_0x127408.prototype = Object.create(a0_0x28626c.prototype);
a0_0x127408.prototype.constructor = a0_0x127408;
a0_0x127408.superClass = a0_0x28626c;
a0_0x127408.prototype.objSkinSpotsCanvas = null;
a0_0x127408.prototype.getSkinName = function () {
  let _0x11ebc3 = this.getSpeciesPath() + "/bear";
  return _0x11ebc3;
};
a0_0x127408.prototype.getSpeciesPath = function () {
  return "land/bear/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x127408.prototype.animalInfo = function () {
  var _0x6d071e = {};
  var _0x254883 = "";
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x6d071e.aniName = "Bear";
          _0x6d071e.upgradeText = "UPGRADED to BEAR!\n Bears climb through green hills! (Press W to use your claw!)";
          _0x6d071e.aniCol = "#99591C";
          _0x254883 = "bear";
          break;
        case 111:
          _0x6d071e.aniName = "Classic Bear";
          _0x6d071e.upgradeText = "UPGRADED to " + _0x6d071e.aniName + "!\n " + _0x6d071e.aniName + " climb through green hills! (Press W to use your claw!)";
          break;
        case 112:
          _0x6d071e.aniName = "Gold-trim Bear";
          _0x6d071e.upgradeText = "UPGRADED to " + _0x6d071e.aniName + "!\n " + _0x6d071e.aniName + " climb through green hills! (Press W to use your claw!)";
          break;
      }
      break;
    case 1:
      _0x6d071e.aniName = "Panda";
      _0x6d071e.upgradeText = "UPGRADED to " + _0x6d071e.aniName + "!\n " + _0x6d071e.aniName + " climb through green hills! (Press W to use your claw!)";
      _0x6d071e.aniCol = "#99591C";
      _0x254883 = "bear";
      break;
    case 202:
      _0x6d071e.aniName = "Beekeeper Bear";
      _0x6d071e.upgradeText = "UPGRADED to " + _0x6d071e.aniName + "!\n " + _0x6d071e.aniName + " climb through green hills! (Press W to use your claw!)";
      break;
    case 2023:
      _0x6d071e.aniName = "Spooky Bear";
      _0x6d071e.upgradeText = "UPGRADED to " + _0x6d071e.aniName + "!\n " + _0x6d071e.aniName + " climb through green hills! (Press W to use your claw!)";
      break;
    case 204:
      _0x6d071e.aniName = "Mr. Teddy";
      _0x6d071e.upgradeText = "UPGRADED to " + _0x6d071e.aniName + "!\n " + _0x6d071e.aniName + " climb through green hills! (Press W to use your claw!)";
      _0x6d071e.aniCol = "#99591C";
      _0x254883 = "mr_teddy";
      break;
  }
  _0x6d071e.aniCol = "#CAC05B";
  _0x6d071e.skinName = this.getSkinName();
  return _0x6d071e;
};
a0_0x127408.prototype.getAbilityInfo = function (_0x4b5b0e) {
  var _0x14c1c7 = {
    abilName: "Claw Slash!"
  };
  _0x14c1c7.abilImg = "skins/" + this.getSpeciesPath() + "/slash.png";
  _0x14c1c7.skinThemeID = this.skinThemeID;
  _0x14c1c7.mopeSeasonID = this.mopeSeasonID;
  return _0x14c1c7;
};
function a0_0x127408() {
  a0_0x127408.superClass.call(this, a0_0x24738f);
}
window.Bear = a0_0x127408;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x127408, a0_0x24738f, a0_0x1458da);
var a0_0x57e5f6 = a0_0x57e5f6;
var a0_0x28626c = a0_0x2449e7;
a0_0x57e5f6.prototype = Object.create(a0_0x28626c.prototype);
a0_0x57e5f6.prototype.constructor = a0_0x57e5f6;
a0_0x57e5f6.superClass = a0_0x28626c;
a0_0x57e5f6.prototype.objSkinSpotsCanvas = null;
a0_0x57e5f6.prototype.animalInfo = function () {
  var _0x3dd5ff = {};
  switch (this.animalSubSpecies) {
    case 0:
      _0x3dd5ff.aniName = "Crocodile";
      _0x3dd5ff.aniCol = "#30F51C";
      break;
    case 1:
      _0x3dd5ff.aniName = "Giant Crocodile";
      _0x3dd5ff.aniCol = "#757e71";
      break;
    case 100:
      _0x3dd5ff.aniName = "Uncle Sam";
      _0x3dd5ff.aniCol = "#757e71";
      break;
    case 201:
      _0x3dd5ff.aniName = "Big Hoss";
      _0x3dd5ff.aniCol = "#757e71";
      break;
    case 202:
      _0x3dd5ff.aniName = "Croczilla";
      break;
    case 203:
      _0x3dd5ff.aniName = "Ammit";
      break;
    case 2023:
      _0x3dd5ff.aniName = "Sharkzilla";
      break;
  }
  if (this.animalSpecies == 111) {
    _0x3dd5ff.aniName = "Classic Crocodile";
  }
  if (this.animalSpecies == 112) {
    _0x3dd5ff.aniName = "Gold-trim Crocodile";
  }
  _0x3dd5ff.upgradeText = "UPGRADED to " + _0x3dd5ff.aniName + "!\n Press W to bite and drag around animals! \n+ (Now hide in water spots)+ Swim well in Mud, Lakes & Oceans!";
  _0x3dd5ff.skinName = this.getSkinName();
  return _0x3dd5ff;
};
a0_0x57e5f6.prototype.getSkinName = function () {
  let _0x536acd = this.getSpeciesPath() + "/croc";
  return _0x536acd;
};
a0_0x57e5f6.prototype.getSpeciesPath = function () {
  return "land/croc/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x57e5f6.prototype.setStealth = function () {
  a0_0x57e5f6.superClass.prototype.setStealth.call(this);
  if (this.isCamouflage) {
    this.idealOp = a0_0x15e4d1 == this.id ? 0.1 : 0;
  }
};
a0_0x57e5f6.prototype.isCamouflage = false;
a0_0x57e5f6.prototype.drawUnderSkinTail = function (_0x351d8b) {
  if (!this.isCamouflage) {
    a0_0x57e5f6.superClass.prototype.drawUnderSkinTail.call(this, _0x351d8b);
  }
};
a0_0x57e5f6.prototype.drawHealthBar = function () {
  if (!this.isCamouflage) {
    a0_0x57e5f6.superClass.prototype.drawHealthBar.call(this);
  }
};
a0_0x57e5f6.prototype.customUpdatedProperty = function (_0x479618, _0x4c18e7) {
  if (_0x479618 == a0_0x56635f) {
    this.isCamouflage = _0x4c18e7.readUInt8() == 1;
    this.setStealth();
  }
};
a0_0x57e5f6.prototype.readCustomData_onNewlyVisible = function (_0x5a4d75) {
  a0_0x57e5f6.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5a4d75);
  this.isCamouflage = _0x5a4d75.readUInt8() == 1;
  this.setStealth();
};
a0_0x57e5f6.prototype.getAbilityInfo = function (_0x4679f5) {
  var _0x118790 = {
    abilName: "Bite Grab!"
  };
  _0x118790.abilImg = "skins/" + this.getSpeciesPath() + "/croc.png";
  _0x118790.skinThemeID = this.skinThemeID;
  _0x118790.mopeSeasonID = this.mopeSeasonID;
  return _0x118790;
};
function a0_0x57e5f6() {
  a0_0x57e5f6.superClass.call(this, a0_0x24738f);
}
window.Croc = a0_0x57e5f6;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x57e5f6, a0_0x24738f, a0_0x13971c);
var a0_0x28626c = a0_0x2449e7;
a0_0x4d4fce.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4d4fce.prototype.constructor = a0_0x4d4fce;
a0_0x4d4fce.superClass = a0_0x28626c;
a0_0x4d4fce.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x4d4fce.prototype.canUseTailslap = false;
a0_0x4d4fce.prototype.tailState = 0;
a0_0x4d4fce.prototype.lava = 100;
a0_0x4d4fce.prototype.getSkinName = function () {
  var _0x195b59 = a0_0x59c93b || a0_0x56bbb3 == a0_0xbf9ed5 ? "kingdragon" : "kingdragon_body";
  return "volcano/kingdragon/" + this.animalSpecies + "/" + _0x195b59;
};
a0_0x4d4fce.prototype.customUpdatedProperty = function (_0x5466e0, _0xb18db) {
  if (_0x5466e0 == a0_0x52a92a) {
    this.canUseTailslap = _0xb18db.readUInt8() == 1;
  } else if (_0x5466e0 == a0_0x4b1e42) {
    this.tailState = _0xb18db.readUInt16() / 100;
  }
};
a0_0x4d4fce.prototype.leftWingAnim = null;
a0_0x4d4fce.prototype.flapAngleDiff = 3;
a0_0x4d4fce.prototype.flapAngle = 3;
a0_0x4d4fce.prototype.flapF = 0.1;
a0_0x4d4fce.prototype.flapDur = 2;
a0_0x4d4fce.prototype.sF = 0.02;
a0_0x4d4fce.prototype.drawWings = function () {
  if (a0_0x56bbb3 == a0_0xbf9ed5 || a0_0x59c93b) {
    return;
  }
  if (this.leftWingAnim == null) {
    this.leftWingAnim = new a0_0x556513(this, this.flapDur, a0_0x556513.wave);
    this.leftWingAnim.keepLastFrame = true;
    this.leftWingAnim.loop = true;
    this.leftWingAnim.onFrameEntered = function (_0x2cd8bf) {
      this.forObj.frame1 = _0x2cd8bf;
    };
  }
  if (this.leftWingAnim != null) {
    this.leftWingAnim.run();
  }
  var _0x426d30 = this.rad - this.outlineW;
  var _0x44fe66 = this.frame1 * this.sF * _0x426d30;
  var _0x5370a2 = -(-this.flapF + this.frame1);
  var _0x5a149c = _0x5370a2 * a0_0x873ec7(this.flapAngle);
  var _0x5da2f9 = 500 / 340;
  var _0x186d29 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing.png");
  var _0x112b4a = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing.png");
  if (_0x186d29 && _0x112b4a) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x5a149c);
    a0_0x1306ae.drawImage(_0x186d29, -_0x426d30 * _0x5da2f9, -_0x426d30 * _0x5da2f9 + _0x44fe66, _0x426d30 * 2 * _0x5da2f9, _0x426d30 * 2 * _0x5da2f9 + _0x44fe66 * 1.5);
    a0_0x1306ae.restore();
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x5a149c));
    a0_0x1306ae.drawImage(_0x112b4a, -_0x426d30 * _0x5da2f9, -_0x426d30 * _0x5da2f9 + _0x44fe66, _0x426d30 * 2 * _0x5da2f9, _0x426d30 * 2 * _0x5da2f9 + _0x44fe66 * 1.5);
    a0_0x1306ae.restore();
    if (this.animalSpecies == 4) {
      let _0x2620e8 = a0_0xae444c("kd", this.spawnTime);
      if (_0x2620e8 !== undefined && _0x2620e8 != null) {
        this.theFrame = _0x2620e8;
      }
      let _0x56c34a = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = Math.max(0, _0x56c34a);
      var _0x184ac9 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing_tips.png");
      var _0x3e41b1 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing_tips.png");
      if (_0x184ac9 && _0x3e41b1) {
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x5a149c);
        a0_0x1306ae.drawImage(_0x184ac9, -_0x426d30 * _0x5da2f9, -_0x426d30 * _0x5da2f9 + _0x44fe66, _0x426d30 * 2 * _0x5da2f9, _0x426d30 * 2 * _0x5da2f9 + _0x44fe66 * 1.5);
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x5a149c));
        a0_0x1306ae.drawImage(_0x3e41b1, -_0x426d30 * _0x5da2f9, -_0x426d30 * _0x5da2f9 + _0x44fe66, _0x426d30 * 2 * _0x5da2f9, _0x426d30 * 2 * _0x5da2f9 + _0x44fe66 * 1.5);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
  }
  var _0x4a1c8a = this.lava;
  var _0x450fc4 = 50;
  if (_0x4a1c8a < _0x450fc4) {
    var _0x281b49 = _0x4a1c8a / _0x450fc4;
    var _0x2607cc = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing1.png");
    var _0x5714b9 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing2.png");
    if (_0x2607cc && _0x5714b9) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1 - _0x281b49;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x5a149c);
      a0_0x1306ae.drawImage(_0x2607cc, -_0x426d30 * _0x5da2f9, -_0x426d30 * _0x5da2f9 + _0x44fe66, _0x426d30 * 2 * _0x5da2f9, _0x426d30 * 2 * _0x5da2f9 + _0x44fe66 * 1.5);
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x5a149c));
      a0_0x1306ae.drawImage(_0x5714b9, -_0x426d30 * _0x5da2f9, -_0x426d30 * _0x5da2f9 + _0x44fe66, _0x426d30 * 2 * _0x5da2f9, _0x426d30 * 2 * _0x5da2f9 + _0x44fe66 * 1.5);
      a0_0x1306ae.restore();
      a0_0x1306ae.restore();
    }
  }
};
a0_0x4d4fce.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater) {
    return;
  }
  if (a0_0x56bbb3 == a0_0xbf9ed5 || a0_0x59c93b) {
    return;
  }
  var _0x1005a0 = 500 / 340;
  let _0x43054f = a0_0xae444c("kd", this.spawnTime);
  if (_0x43054f !== undefined && _0x43054f != null) {
    this.theFrame = _0x43054f;
  }
  let _0x591562 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
  var _0x4d2b5e = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/nostrils.png");
  if (_0x4d2b5e) {
    a0_0x1306ae.save();
    var _0x213104 = this.lava;
    var _0x5b08c6 = 100;
    var _0x53fd20 = _0x213104 / _0x5b08c6;
    a0_0x1306ae.globalAlpha = Math.max(0, _0x591562) * _0x53fd20;
    var _0x936dd8 = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x4d2b5e, -_0x936dd8 * _0x1005a0, -_0x936dd8 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0);
    a0_0x1306ae.restore();
  }
  if (!this.canUseTailslap) {
    var _0xeeff88 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone1.png");
    if (_0xeeff88) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1;
      var _0x936dd8 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0xeeff88, -_0x936dd8 * _0x1005a0, -_0x936dd8 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0);
      a0_0x1306ae.restore();
    }
    var _0x48cbed = 0;
    if (this.tailState < 11 && this.tailState > 5) {
      var _0xfc90fd = this.tailState - 5;
      _0x48cbed = _0xfc90fd / 6;
    } else if (this.tailState <= 3) {
      _0x48cbed = this.tailState / 3;
    }
    var _0x39fcaf = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone3.png");
    if (this.tailState < 11) {
      if (_0x39fcaf) {
        a0_0x1306ae.save();
        if (this.tailState > 5) {
          a0_0x1306ae.globalAlpha = 1 - _0x48cbed;
        } else {
          a0_0x1306ae.globalAlpha = 1;
        }
        var _0x936dd8 = this.rad - this.outlineW;
        a0_0x1306ae.drawImage(_0x39fcaf, -_0x936dd8 * _0x1005a0, -_0x936dd8 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0);
        a0_0x1306ae.restore();
      }
    }
    var _0x514f39 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (this.tailState < 3) {
      if (_0x514f39) {
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha = 1 - _0x48cbed;
        var _0x936dd8 = this.rad - this.outlineW;
        a0_0x1306ae.drawImage(_0x514f39, -_0x936dd8 * _0x1005a0, -_0x936dd8 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0);
        a0_0x1306ae.restore();
      }
    }
  } else {
    var _0x514f39 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (_0x514f39) {
      a0_0x1306ae.save();
      var _0x406a49 = Math.max(0.3, _0x591562);
      a0_0x1306ae.globalAlpha = _0x406a49;
      var _0x936dd8 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x514f39, -_0x936dd8 * _0x1005a0, -_0x936dd8 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0, _0x936dd8 * 2 * _0x1005a0);
      a0_0x1306ae.restore();
    }
  }
  this.drawWings();
};
a0_0x4d4fce.prototype.drawLowWaterDrop = function () {
  if (this.flag_underWater) {
    return;
  }
  if (this.flag_lowWat) {
    var _0xbd166c = 1.2;
    var _0x336416 = 0.2;
    var _0x39da3b = 0.8;
    var _0x400298 = (_0x39da3b - _0x336416) * 0.5;
    var _0x8ea8f = _0x336416 + _0x400298 + _0x400298 * Math.sin(Math.PI * 2 / _0xbd166c * (a0_0x24806e / 1000));
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x8ea8f;
    a0_0x1306ae.fillStyle = a0_0xcf4b9b;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, this.rad + 5, 5, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
};
a0_0x4d4fce.prototype.animalInfo = function () {
  var _0x2395dc = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2395dc.aniName = "King Dragon";
      break;
    case 1:
      _0x2395dc.aniName = "Golden King Dragon";
      break;
    case 2:
      _0x2395dc.aniName = "King Ripper";
      break;
    case 3:
      _0x2395dc.aniName = "King Stan";
      break;
    case 4:
      _0x2395dc.aniName = "King Shah";
      break;
    case 5:
      _0x2395dc.aniName = "Queen Scarlet";
      break;
    case 6:
      _0x2395dc.aniName = "Queen Celeste";
      break;
    case 111:
      _0x2395dc.aniName = "Classic King Dragon";
      break;
    case 200:
      _0x2395dc.aniName = "Queen Flame";
      break;
    case 202:
      _0x2395dc.aniName = "King Graveyard";
      break;
  }
  _0x2395dc.aniCol = "#FF9000";
  _0x2395dc.skinName = this.getSkinName();
  _0x2395dc.upgradeText = "UPGRADED to " + _0x2395dc.aniName;
  _0x2395dc.upgradeText += "!\nYou got firestream that burns your victim alive! Watch your tail and slap them hard.";
  _0x2395dc.aniCol = "black";
  return _0x2395dc;
};
a0_0x4d4fce.prototype.getAbilityInfo = function (_0xfbf156) {
  var _0x3a6749 = {
    abilName: "Firestream\n& Tail slap"
  };
  var _0x346905 = 0;
  switch (this.animalSpecies) {
    case 0:
      _0x346905 = 1;
      break;
    case 1:
      _0x346905 = 2;
      break;
    case 2:
      _0x346905 = 4;
      break;
    case 3:
      _0x346905 = 5;
      break;
    case 4:
      _0x346905 = 6;
      break;
    case 5:
      _0x346905 = 9;
      break;
    case 6:
      _0x346905 = 8;
      break;
  }
  _0x3a6749.speciesType = _0x346905;
  _0x3a6749.abilImg = "img/fire/" + _0x346905 + "/0.png";
  _0x3a6749.skinThemeID = this.skinThemeID;
  _0x3a6749.mopeSeasonID = this.mopeSeasonID;
  return _0x3a6749;
};
function a0_0x4d4fce() {
  this.lava = 100;
  a0_0x4d4fce.superClass.call(this, a0_0x24738f);
}
window.KingDragon = a0_0x4d4fce;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4d4fce, a0_0x24738f, a0_0x5d0b67);
var a0_0x28626c = a0_0x2449e7;
a0_0x4286cc.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4286cc.prototype.constructor = a0_0x4286cc;
a0_0x4286cc.superClass = a0_0x28626c;
a0_0x4286cc.prototype.animalInfo = function () {
  var _0x4cb851 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4cb851.aniName = "The Yeti!";
      break;
    case 1:
      _0x4cb851.aniName = "Golden Yeti!";
      break;
    case 2:
      _0x4cb851.aniName = "Emerald Yeti!";
      break;
    case 3:
      _0x4cb851.aniName = "Aqua Yeti";
      break;
    case 111:
      _0x4cb851.aniName = "Classic Yeti";
      break;
    case 201:
      _0x4cb851.aniName = "Squishy Yeti";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x4cb851.aniName = "Lovely Yeti";
          break;
        case 1:
          _0x4cb851.aniName = "Frosty Eye Demon";
      }
      break;
    case 204:
      _0x4cb851.aniName = "Frost Wolf";
      break;
    case 220:
      _0x4cb851.aniName = "Glacial Demon";
      break;
  }
  _0x4cb851.skinName = this.getSkinName();
  _0x4cb851.aniDesc = "";
  _0x4cb851.upgradeText = "UPGRADED to " + _0x4cb851.aniName + "!\n So it really exists... \n Hold W to turn into snow, press W to freeeeeze!";
  _0x4cb851.aniCol = "#839eb5";
  return _0x4cb851;
};
a0_0x4286cc.prototype.getAbilityInfo = function (_0x44b3c0) {
  var _0x4fc2c2 = {
    abilName: "Yeti Roar" + (this.animalSpecies == 3 ? " &\n Ice Statue" : "") + ""
  };
  _0x4fc2c2.abilImg = "skins/arctic/yeti/" + this.animalSpecies + this.getSubSpecies() + "/ability.png";
  _0x4fc2c2.skinThemeID = this.skinThemeID;
  _0x4fc2c2.mopeSeasonID = this.mopeSeasonID;
  return _0x4fc2c2;
};
a0_0x4286cc.prototype.getSkinName = function () {
  var _0x1481f4 = this.specType == 0 ? "" : 1;
  return this.getSpeciesPath("yeti") + "/yeti" + _0x1481f4;
};
a0_0x4286cc.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x4286cc.prototype.getSpeciesPath = function (_0x202f78) {
  return "arctic/" + _0x202f78 + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4286cc.prototype.drawOnTopOfSkinImg = function () {};
a0_0x4286cc.prototype.isTransforming = false;
a0_0x4286cc.prototype.readCustomData_onNewlyVisible = function (_0x22d593) {
  a0_0x4286cc.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x22d593);
  this.isTransforming = _0x22d593.readUInt8() == 1;
};
a0_0x4286cc.prototype.customUpdatedProperty = function (_0x31c91f, _0x6c9309) {
  if (_0x31c91f == a0_0x234f2f) {
    this.isTransforming = _0x6c9309.readUInt8() == 1;
  }
};
a0_0x4286cc.prototype.getIdealOpacity = function () {
  var _0x50e3df = this.flag_underWater || this.flag_usingAbility && this.isTransforming || this.isCamouflage ? 0 : 1;
  return _0x50e3df;
};
a0_0x4286cc.prototype.biteStart = 0;
a0_0x4286cc.prototype.flapAmount = 3;
a0_0x4286cc.prototype.flapDur = 1.5;
a0_0x4286cc.prototype.roarStartT = -500;
a0_0x4286cc.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility && this.isTransforming) {
    if (this.isTransforming) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1;
      var _0xd0c131 = this.getSkinImageObjForSeason("img/snowball.png", a0_0x31d65e);
      if (_0xd0c131) {
        var _0x11ab2b = this.rad;
        a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
        a0_0x1306ae.drawImage(_0xd0c131, -_0x11ab2b, -_0x11ab2b, _0x11ab2b * 2, _0x11ab2b * 2);
      } else {
        this.drawOutlinedCircle("", "white");
      }
      a0_0x1306ae.restore();
    }
  } else {
    if (this.animalSpecies == 4) {
      return;
    }
    this.setSkinScale();
    if (!this.flag_usingAbility) {
      this.biteStart = 0;
      return;
    } else {
      if (this.biteStart == 0) {
        this.biteStart = a0_0x24806e + this.roarStartT;
      }
      if (this.specType != 0 && this.specType != undefined) {
        var _0x57f147 = "skins/arctic/yeti/" + this.animalSpecies + "/yeti_head1.png";
        var _0x14cb4f = this.getSkinImageObj(_0x57f147);
        var _0x47517e = (a0_0x24806e - this.biteStart) / 1000;
        var _0x1288da = this.skinScale * 1.07;
        var _0x11ab2b = this.skinRad;
        if (_0x14cb4f) {
          var _0x43d3c2 = 0;
          var _0x5d2e07 = this.flapAmount - (this.animalSpecies == 1 ? 0.5 : 0);
          _0x43d3c2 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x47517e, this.flapDur, _0x5d2e07, 2) : this.flapAmount;
          a0_0x1306ae.save();
          var _0x11ab2b = this.rad;
          a0_0x1306ae.drawImage(_0x14cb4f, -_0x11ab2b * _0x1288da, (-_0x11ab2b + _0x11ab2b * 0.1) * _0x1288da - _0x43d3c2, _0x11ab2b * 2 * _0x1288da, _0x11ab2b * 2 * _0x1288da);
          a0_0x1306ae.restore();
        }
      }
    }
  }
};
function a0_0x4286cc() {
  a0_0x4286cc.superClass.call(this, a0_0x24738f);
}
window.Yeti = a0_0x4286cc;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4286cc, a0_0x24738f, a0_0x1c04bf);
var a0_0x28626c = a0_0x2449e7;
a0_0x2eaf03.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2eaf03.prototype.constructor = a0_0x2eaf03;
a0_0x2eaf03.superClass = a0_0x28626c;
a0_0x2eaf03.prototype.animalInfo = function () {
  var _0x65cdb5 = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 223:
          _0x65cdb5.aniName = "Valentine Mammoth";
          break;
        case 0:
        default:
          _0x65cdb5.aniName = "Mammoth!";
          break;
      }
      break;
    case 1:
      _0x65cdb5.aniName = "Golden Mammoth!";
      break;
    case 111:
      _0x65cdb5.aniName = "Classic Mammoth";
      break;
    case 2:
      _0x65cdb5.aniName = "Black Mammoth!";
      break;
    case 201:
      _0x65cdb5.aniName = "Lost Tourist!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x65cdb5.aniName = "Acid Mammoth";
          break;
        case 1:
          _0x65cdb5.aniName = "Crystal Golem";
      }
      break;
    case 220:
      _0x65cdb5.aniName = " Golem Mammoth";
      break;
  }
  _0x65cdb5.skinName = this.getSkinName();
  _0x65cdb5.aniDesc = "";
  _0x65cdb5.upgradeText = "UPGRADED to " + _0x65cdb5.aniName + "\n Press W to roll snowballs with your trunk!\n The bigger the snowball gets, the longer the freeze!";
  _0x65cdb5.aniCol = "#9d4717";
  return _0x65cdb5;
};
a0_0x2eaf03.prototype.getAbilityInfo = function (_0x46c010) {
  var _0x18c61b = {
    abilName: "Roll snow",
    abilImg: "img/snowball.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x18c61b;
};
a0_0x2eaf03.prototype.getSkinName = function () {
  var _0x3bacba = this.specType == 0 ? "" : 1;
  return "arctic/mammoth/" + this.animalSpecies + this.getSubSpecies() + "/mammoth" + _0x3bacba;
};
a0_0x2eaf03.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
function a0_0x2eaf03() {
  a0_0x2eaf03.superClass.call(this, a0_0x24738f);
}
window.Mammoth = a0_0x2eaf03;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2eaf03, a0_0x24738f, a0_0x5d0d4b);
var a0_0x28626c = a0_0x2449e7;
a0_0x263cb2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x263cb2.prototype.constructor = a0_0x263cb2;
a0_0x263cb2.superClass = a0_0x28626c;
a0_0x263cb2.prototype.animalInfo = function () {
  var _0x1bdc6b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1bdc6b.aniName = "Sabertooth Tiger!";
      break;
    case 1:
      _0x1bdc6b.aniName = "Golden Tiger!";
      break;
    case 2:
      _0x1bdc6b.aniName = "Margala Sabertooth!";
      break;
    case 111:
      _0x1bdc6b.aniName = "Classic Sabertooth";
      break;
    case 200:
      _0x1bdc6b.aniName = "Techno Saber!";
      break;
    case 201:
      _0x1bdc6b.aniName = "Strawbertooth!";
      break;
    case 202:
      _0x1bdc6b.aniName = "Ice-Fang Sabertooth";
      break;
    case 204:
      _0x1bdc6b.aniName = "Shadow Sabeertooth!";
      break;
  }
  _0x1bdc6b.skinName = this.getSkinName();
  _0x1bdc6b.aniDesc = "";
  _0x1bdc6b.upgradeText = "UPGRADED to " + _0x1bdc6b.aniName + "\nSabertooth Tigers can slash their opponents and prey.";
  _0x1bdc6b.aniCol = "#945A99";
  return _0x1bdc6b;
};
a0_0x263cb2.prototype.getAbilityInfo = function (_0x4037b3) {
  var _0x250bc0 = {
    abilName: "Claw Slash!"
  };
  _0x250bc0.abilImg = "skins/arctic/sabertooth/" + this.animalSpecies + this.getSubSpecies() + "/sabertooth.png";
  _0x250bc0.skinThemeID = this.skinThemeID;
  _0x250bc0.mopeSeasonID = this.mopeSeasonID;
  return _0x250bc0;
};
a0_0x263cb2.prototype.getSkinName = function () {
  return "arctic/sabertooth/" + this.animalSpecies + this.getSubSpecies() + "/sabertooth" + (this.specType == 0 ? "" : this.specType);
};
a0_0x263cb2.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x263cb2() {
  a0_0x263cb2.superClass.call(this, a0_0x24738f);
}
window.Sabertooth = a0_0x263cb2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x263cb2, a0_0x24738f, a0_0x4f58e6);
var a0_0x28626c = a0_0x2449e7;
a0_0x33d4f2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x33d4f2.prototype.constructor = a0_0x33d4f2;
a0_0x33d4f2.superClass = a0_0x28626c;
a0_0x33d4f2.prototype.animalInfo = function () {
  var _0x97976b = {};
  switch (this.animalSpecies) {
    case 0:
      _0x97976b.aniName = "Penguin";
      break;
    case 111:
      _0x97976b.aniName = "Classic Penguin";
      break;
    case 112:
      _0x97976b.aniName = "Gold-trim Penguin";
      break;
    case 201:
      _0x97976b.aniName = "Surfer Penguin";
      break;
    case 202:
      _0x97976b.aniName = "UFO Pigeon";
      break;
  }
  _0x97976b.skinName = this.getSkinName();
  _0x97976b.aniDesc = "";
  _0x97976b.upgradeText = "UPGRADED to " + _0x97976b.aniName + "!\n Left-click to run!\n (HOLD W to slide FAST on ice)!";
  _0x97976b.aniCol = "#FFFFFF";
  return _0x97976b;
};
a0_0x33d4f2.prototype.getAbilityInfo = function (_0x1bb07a) {
  var _0x18b2d4 = {
    abilName: "Slide on ice"
  };
  _0x18b2d4.abilImg = "skins/arctic/penguin/" + this.animalSpecies + this.getSubSpecies() + "/penguin1.png";
  _0x18b2d4.skinThemeID = this.skinThemeID;
  _0x18b2d4.mopeSeasonID = this.mopeSeasonID;
  return _0x18b2d4;
};
a0_0x33d4f2.prototype.getSkinName = function () {
  return "arctic/penguin/" + this.animalSpecies + this.getSubSpecies() + "/penguin" + (this.specType == 0 ? "" : 1);
};
a0_0x33d4f2.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x33d4f2() {
  a0_0x33d4f2.superClass.call(this, a0_0x24738f);
}
window.Penguin = a0_0x33d4f2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x33d4f2, a0_0x24738f, a0_0xb8200c);
var a0_0x28626c = a0_0x2449e7;
a0_0x2997b4.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2997b4.prototype.constructor = a0_0x2997b4;
a0_0x2997b4.superClass = a0_0x28626c;
a0_0x2997b4.prototype.animalInfo = function () {
  var _0x3651c0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3651c0.aniName = "Seal";
      break;
    case 111:
      _0x3651c0.aniName = "Classic Seal";
      break;
    case 112:
      _0x3651c0.aniName = "Gold-trim Seal";
      break;
    case 201:
      _0x3651c0.aniName = "Hawaiian Monk";
      break;
    case 202:
      _0x3651c0.aniName = "Soapy Seal";
      break;
  }
  _0x3651c0.skinName = this.getSkinName();
  _0x3651c0.aniDesc = "";
  _0x3651c0.upgradeText = "UPGRADED to " + _0x3651c0.aniName + "!\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
  _0x3651c0.aniCol = "#633838";
  return _0x3651c0;
};
a0_0x2997b4.prototype.getAbilityInfo = function (_0x27630f) {
  var _0x171efd = {
    abilName: "Slide on ice"
  };
  _0x171efd.abilImg = "skins/arctic/seal/" + this.animalSpecies + this.getSubSpecies() + "/seal1.png";
  _0x171efd.skinThemeID = this.skinThemeID;
  _0x171efd.mopeSeasonID = this.mopeSeasonID;
  return _0x171efd;
};
a0_0x2997b4.prototype.getSkinName = function () {
  return "arctic/seal/" + this.animalSpecies + this.getSubSpecies() + "/seal" + (this.specType == 0 ? "" : 1);
};
a0_0x2997b4.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x2997b4() {
  a0_0x2997b4.superClass.call(this, a0_0x24738f);
}
window.Seal = a0_0x2997b4;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2997b4, a0_0x24738f, a0_0x8a2dda);
var a0_0x28626c = a0_0x2449e7;
a0_0x49bd4f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x49bd4f.prototype.constructor = a0_0x49bd4f;
a0_0x49bd4f.superClass = a0_0x28626c;
a0_0x49bd4f.prototype.animalInfo = function () {
  var _0x2328f6 = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2328f6.aniName = "Walrus!";
          break;
        case 223:
          _0x2328f6.aniName = "Valentine Walrus!";
          break;
      }
      break;
    case 100:
      _0x2328f6.aniName = "Candy Rus!";
      break;
    case 111:
      _0x2328f6.aniName = "Classic Walrus";
      break;
    case 112:
      _0x2328f6.aniName = "Gold-trim Walrus";
      break;
    case 201:
      _0x2328f6.aniName = "Walrusmelon!";
      break;
    case 202:
      _0x2328f6.aniName = "Potato Walrus";
      break;
  }
  _0x2328f6.skinName = this.getSkinName();
  _0x2328f6.aniDesc = "";
  _0x2328f6.upgradeText = "UPGRADED to " + _0x2328f6.aniName + "\n You can slide on ice (Hold W) + can climb hills (rocks too!)";
  _0x2328f6.aniCol = "#633838";
  return _0x2328f6;
};
a0_0x49bd4f.prototype.getAbilityInfo = function (_0x531582) {
  var _0x3201eb = {
    abilName: "Slide on ice"
  };
  _0x3201eb.abilImg = "skins/arctic/walrus/" + this.animalSpecies + this.getSubSpecies() + "/walrus1.png";
  _0x3201eb.skinThemeID = this.skinThemeID;
  _0x3201eb.mopeSeasonID = this.mopeSeasonID;
  return _0x3201eb;
};
a0_0x49bd4f.prototype.getSkinName = function () {
  return "arctic/walrus/" + this.animalSpecies + this.getSubSpecies() + "/walrus" + (this.specType == 0 ? "" : 1);
};
a0_0x49bd4f.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x49bd4f() {
  a0_0x49bd4f.superClass.call(this, a0_0x24738f);
}
window.Walrus = a0_0x49bd4f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x49bd4f, a0_0x24738f, a0_0x525e00);
var a0_0x28626c = a0_0x2449e7;
a0_0x5a03a8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5a03a8.prototype.constructor = a0_0x5a03a8;
a0_0x5a03a8.superClass = a0_0x28626c;
a0_0x5a03a8.prototype.animalInfo = function () {
  var _0x384ac9 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x384ac9.aniName = "Wolf!";
      break;
    case 111:
      _0x384ac9.aniName = "Classic Wolf";
      break;
    case 112:
      _0x384ac9.aniName = "Gold-trim Wolf";
      break;
    case 201:
      _0x384ac9.aniName = "Pineapple Wolf!";
      break;
    case 220:
      _0x384ac9.aniName = "Okami Wolf";
      break;
  }
  _0x384ac9.skinName = this.getSkinName();
  _0x384ac9.upgradeText = "UPGRADED to " + _0x384ac9.aniName + "\n Wolf paws turn very well on ice!\n Press W to howl!";
  _0x384ac9.aniCol = "#6B6B6B";
  return _0x384ac9;
};
a0_0x5a03a8.prototype.getAbilityInfo = function (_0x2343ef) {
  var _0xf3cd56 = {
    abilName: "Howl!"
  };
  _0xf3cd56.abilImg = "skins/arctic/wolf/" + this.animalSpecies + this.getSubSpecies() + "/wolf1.png";
  _0xf3cd56.skinThemeID = this.skinThemeID;
  _0xf3cd56.mopeSeasonID = this.mopeSeasonID;
  return _0xf3cd56;
};
a0_0x5a03a8.prototype.getSkinName = function () {
  var _0x13901f = this.specType == 0 ? "" : 1;
  return "arctic/wolf/" + this.animalSpecies + this.getSubSpecies() + "/wolf" + _0x13901f;
};
a0_0x5a03a8.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x5a03a8() {
  a0_0x5a03a8.superClass.call(this, a0_0x24738f);
}
window.Wolf = a0_0x5a03a8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5a03a8, a0_0x24738f, a0_0x5f1ae8);
var a0_0x28626c = a0_0x2449e7;
a0_0x1f2378.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1f2378.prototype.constructor = a0_0x1f2378;
a0_0x1f2378.superClass = a0_0x28626c;
a0_0x1f2378.prototype.animalInfo = function () {
  var _0x2c77dd = {
    aniName: "Wolverine!"
  };
  switch (this.animalSpecies) {
    case 111:
      _0x2c77dd.aniName = "Classic Wolverine";
      break;
    case 202:
      _0x2c77dd.aniName = "Floral Wolverine";
      break;
    case 112:
      _0x2c77dd.aniName = "Gold-trim Wolverine";
      break;
    case 220:
      _0x2c77dd.aniName = "Summoner Wolverine";
      break;
  }
  if (this.animalSubSpecies == 223) {
    _0x2c77dd.aniName = "Valentine Wolverine";
  }
  _0x2c77dd.skinName = this.getSkinName();
  _0x2c77dd.upgradeText = "UPGRADED to " + _0x2c77dd.aniName + "!\n Press W to Let out a Powerful GROWL! (Knocks back prey!)";
  _0x2c77dd.aniCol = "#843A0F";
  return _0x2c77dd;
};
a0_0x1f2378.prototype.getAbilityInfo = function (_0x17809d) {
  var _0x2d1ec1 = {
    abilName: "Roar!"
  };
  _0x2d1ec1.abilImg = "skins/arctic/wolverine/" + this.animalSpecies + this.getSubSpecies() + "/wolverine1.png";
  _0x2d1ec1.skinThemeID = this.skinThemeID;
  _0x2d1ec1.mopeSeasonID = this.mopeSeasonID;
  return _0x2d1ec1;
};
a0_0x1f2378.prototype.getSkinName = function () {
  return "arctic/wolverine/" + this.animalSpecies + this.getSubSpecies() + "/wolverine" + (this.specType == 0 ? "" : this.specType);
};
a0_0x1f2378.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x1f2378() {
  a0_0x1f2378.superClass.call(this, a0_0x24738f);
}
window.Wolverine = a0_0x1f2378;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1f2378, a0_0x24738f, a0_0x58b076);
var a0_0x28626c = a0_0x2449e7;
a0_0x17ab46.prototype = Object.create(a0_0x28626c.prototype);
a0_0x17ab46.prototype.constructor = a0_0x17ab46;
a0_0x17ab46.superClass = a0_0x28626c;
a0_0x17ab46.prototype.animalInfo = function () {
  var _0x5c8f9d = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5c8f9d.aniName = "Muskox!";
      break;
    case 111:
      _0x5c8f9d.aniName = "Classic Muskox";
      break;
    case 112:
      _0x5c8f9d.aniName = "Gold-trim Muskox";
      break;
    case 200:
      _0x5c8f9d.aniName = "Brazen Bull!";
      break;
    case 201:
      _0x5c8f9d.aniName = "Fireworks Ox!";
      break;
    case 202:
      _0x5c8f9d.aniName = "Monitor Muskox";
      break;
  }
  _0x5c8f9d.skinName = this.getSkinName();
  _0x5c8f9d.aniDesc = "";
  _0x5c8f9d.upgradeText = "UPGRADED to " + _0x5c8f9d.aniName + "\n Press W to charge with your horns! \nPlus move decently on ice!";
  _0x5c8f9d.aniCol = "#231f18";
  return _0x5c8f9d;
};
a0_0x17ab46.prototype.getAbilityInfo = function (_0x48102e) {
  var _0x572599 = {
    abilName: "Charge!",
    abilImg: "skins/arctic/muskox/" + this.animalSpecies + "/muskox2.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x572599;
};
a0_0x17ab46.prototype.getSkinName = function () {
  return "arctic/muskox/" + this.animalSpecies + this.getSubSpecies() + "/muskox" + (this.flag_usingAbility ? "2" : "");
};
a0_0x17ab46.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x17ab46() {
  a0_0x17ab46.superClass.call(this, a0_0x24738f);
}
window.Muskox = a0_0x17ab46;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x17ab46, a0_0x24738f, a0_0x4f00b9);
var a0_0x28626c = a0_0x2449e7;
a0_0x387ec6.prototype = Object.create(a0_0x28626c.prototype);
a0_0x387ec6.prototype.constructor = a0_0x387ec6;
a0_0x387ec6.superClass = a0_0x28626c;
a0_0x387ec6.prototype.animalInfo = function () {
  var _0x5ec8a1 = {};
  if (this.animalSpecies == 1) {
    _0x5ec8a1.aniName = "The Snowman";
    _0x5ec8a1.skinName = "arctic/snowman/" + this.animalSpecies + "/snowman";
  } else if (this.animalSpecies == 2) {
    _0x5ec8a1.aniName = "The Snowgirl";
    _0x5ec8a1.skinName = "arctic/snowman/" + this.animalSpecies + "/snowgirl";
  }
  _0x5ec8a1.aniDesc = "";
  _0x5ec8a1.upgradeText = "UPGRADED to " + _0x5ec8a1.aniName + "!\n So it really exists... \n Hold W to turn into snow, press W to freeeeeze!";
  _0x5ec8a1.aniCol = "#839eb5";
  return _0x5ec8a1;
};
a0_0x387ec6.prototype.getAbilityInfo = function (_0x15c8d4) {
  var _0x42a242 = {
    abilName: "Freeze Prey!",
    abilImg: "skins/arctic/snowman/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x42a242;
};
a0_0x387ec6.prototype.getSkinName = function () {
  var _0x59ba26 = "";
  if (this.animalSpecies == 2) {
    _0x59ba26 = "arctic/snowman/" + this.animalSpecies + "/snowgirl";
  } else {
    _0x59ba26 = "arctic/snowman/" + this.animalSpecies + "/snowman";
  }
  _0x59ba26 += this.specType == 0 ? "" : 1;
  return _0x59ba26;
};
a0_0x387ec6.prototype.drawUnderSkinTail = function (_0x290ce4) {
  if (!this.isCamouflage) {
    a0_0x387ec6.superClass.prototype.drawUnderSkinTail.call(this, _0x290ce4);
  }
};
a0_0x387ec6.prototype.drawHealthBar = function () {
  if (!this.isCamouflage) {
    a0_0x387ec6.superClass.prototype.drawHealthBar.call(this);
  }
};
a0_0x387ec6.prototype.isTransforming = false;
a0_0x387ec6.prototype.isCamouflage = false;
a0_0x387ec6.prototype.carrotAlpha = 0;
a0_0x387ec6.prototype.getIdealOpacity = function () {
  var _0x4cea9e = this.flag_underWater || this.flag_usingAbility && this.isTransforming || this.isCamouflage ? 0 : 1;
  return _0x4cea9e;
};
a0_0x387ec6.prototype.biteStart = 0;
a0_0x387ec6.prototype.flapAmount = 3;
a0_0x387ec6.prototype.flapDur = 1.5;
a0_0x387ec6.prototype.roarStartT = -500;
a0_0x387ec6.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility && this.isTransforming) {
    if (this.isTransforming) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1;
      var _0x3b4abc = this.getSkinImageObj("img/snowball.png");
      if (_0x3b4abc) {
        var _0xb88e99 = this.rad;
        a0_0x1306ae.rotate(this.rPer * Math.PI * 2);
        a0_0x1306ae.drawImage(_0x3b4abc, -_0xb88e99, -_0xb88e99, _0xb88e99 * 2, _0xb88e99 * 2);
      } else {
        this.drawOutlinedCircle("", "white");
      }
      a0_0x1306ae.restore();
    }
  } else {
    this.setSkinScale();
    if (!this.flag_usingAbility && !this.isCamouflage) {
      if (this.carrotAlpha > 0) {
        var _0x354587 = this.getSkinImageObj("skins/arctic/snowman/" + this.animalSpecies + "/carrot_nose.png");
        var _0x50a1c8 = this.skinScale;
        var _0xb88e99 = this.skinRad;
        if (_0x354587) {
          a0_0x1306ae.save();
          var _0xb88e99 = this.rad;
          a0_0x1306ae.globalAlpha = this.carrotAlpha;
          a0_0x1306ae.drawImage(_0x354587, -_0xb88e99 * _0x50a1c8, -_0xb88e99 * _0x50a1c8, _0xb88e99 * 2 * _0x50a1c8, _0xb88e99 * 2 * _0x50a1c8);
          a0_0x1306ae.restore();
        }
      }
      this.biteStart = 0;
      return;
    } else {
      if (this.biteStart == 0) {
        this.biteStart = a0_0x24806e + this.roarStartT;
      }
      if (this.specType != 0 && this.specType != undefined) {
        var _0x3fdf10 = this.animalSpecies == 2 ? "snowgirl" : "snowman";
        var _0x1352ec = "skins/arctic/snowman/" + this.animalSpecies + "/" + _0x3fdf10 + "_head1.png";
        var _0x354587 = this.getSkinImageObj(_0x1352ec);
        var _0x473c62 = (a0_0x24806e - this.biteStart) / 1000;
        var _0x50a1c8 = this.skinScale * 1.07;
        var _0xb88e99 = this.skinRad;
        if (_0x354587) {
          var _0x581d16 = 0;
          var _0x5f27c1 = this.flapAmount - (this.animalSpecies == 1 ? 0.5 : 0);
          _0x581d16 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x473c62, this.flapDur, _0x5f27c1, 2) : this.flapAmount;
          a0_0x1306ae.save();
          var _0xb88e99 = this.rad;
          a0_0x1306ae.drawImage(_0x354587, -_0xb88e99 * _0x50a1c8, (-_0xb88e99 + _0xb88e99 * 0.1) * _0x50a1c8 - _0x581d16, _0xb88e99 * 2 * _0x50a1c8, _0xb88e99 * 2 * _0x50a1c8);
          a0_0x1306ae.restore();
        }
      }
    }
  }
};
a0_0x387ec6.prototype.customUpdatedProperty = function (_0x543c81, _0x413b24) {
  if (_0x543c81 == a0_0x234f2f) {
    this.isTransforming = _0x413b24.readUInt8() == 1;
  } else if (_0x543c81 == a0_0x56635f) {
    this.isCamouflage = _0x413b24.readUInt8() == 1;
  } else if (_0x543c81 == a0_0x2c5d37) {
    this.carrotAlpha = _0x413b24.readUInt16() / 1000;
  } else if (_0x543c81 == a0_0x2b4087) {
    this.lights = _0x413b24.readUInt8();
  }
};
a0_0x387ec6.prototype.readCustomData_onNewlyVisible = function (_0x248fcf) {
  a0_0x387ec6.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x248fcf);
  this.isTransforming = _0x248fcf.readUInt8() == 1;
  this.isCamouflage = _0x248fcf.readUInt8() == 1;
  this.carrotAlpha = _0x248fcf.readUInt16() / 1000;
  this.lights = _0x248fcf.readUInt8();
};
function a0_0x387ec6() {
  a0_0x387ec6.superClass.call(this, a0_0x24738f);
}
window.Snowman = a0_0x387ec6;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x387ec6, a0_0x24738f, a0_0x187b1f);
var a0_0x28626c = a0_0x2449e7;
a0_0x5cf315.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5cf315.prototype.constructor = a0_0x5cf315;
a0_0x5cf315.superClass = a0_0x28626c;
a0_0x5cf315.prototype.updateZ = function () {
  this.z = this.rad;
  if (this.flag_underWater) {
    this.z = -100;
  } else if (this.flag_eff_tossedInAir) {
    this.z = 1200 + this.rad;
  } else if (this.flag_flying) {
    this.z = 100000;
    if (this.flag_isGrabbed) {
      this.z -= this.rad;
    }
  } else if (this.flag_canClimbHill) {
    this.z = 1003;
  } else {
    this.z = this.rad;
  }
};
a0_0x5cf315.prototype.animalInfo = function () {
  var _0x145fa0 = {
    aniName: "Markhor"
  };
  switch (this.animalSpecies) {
    case 204:
      switch (this.animalSubSpecies) {
        case 2:
          _0x145fa0.aniName = "Golden Devil Goat";
          break;
      }
      break;
    case 111:
      _0x145fa0.aniName = "Classic Markhor";
      break;
    case 112:
      _0x145fa0.aniName = "Gold-trim Markhor";
      break;
    case 201:
      switch (this.animalSubSpecies) {
        case 1:
          _0x145fa0.aniName = "Fruity Ice Markhor";
          break;
      }
      break;
    case 1:
      switch (this.animalSubSpecies) {
        case 0:
          _0x145fa0.aniName = "Markhor";
          break;
      }
      break;
    case 2:
      switch (this.animalSubSpecies) {
        case 0:
          _0x145fa0.aniName = "Big Goat";
      }
      break;
  }
  _0x145fa0.aniCol = "#FF9000";
  _0x145fa0.skinName = this.getSkinName();
  _0x145fa0.upgradeText = "UPGRADED to " + _0x145fa0.aniName + "!\nPress 'W' to Jump High from hills. Ram in the preys on land.";
  return _0x145fa0;
};
a0_0x5cf315.prototype.moveF = 0.08;
a0_0x5cf315.prototype.jumpAnim = null;
a0_0x5cf315.prototype.frame = 0;
a0_0x5cf315.prototype.getSkinImageObj = function (_0x3cf9db) {
  var _0x551beb = this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x3cf9db, _0x551beb);
};
a0_0x5cf315.prototype.getAbilityInfo = function (_0x33ea57) {
  var _0x504b36 = {};
  _0x504b36.abilImg = "skins/" + this.getSpeciesPath("markhor") + "/ability.png";
  _0x504b36.abilName = "Head Butt";
  _0x504b36.skinThemeID = this.skinThemeID;
  _0x504b36.mopeSeasonID = this.mopeSeasonID;
  return _0x504b36;
};
a0_0x5cf315.prototype.getSpeciesPath = function (_0x1de6c6) {
  var _0x25b4ef = "/" + this.animalSubSpecies;
  return "arctic/" + _0x1de6c6 + "/" + this.animalSpecies + _0x25b4ef;
};
a0_0x5cf315.prototype.moveF = 0.08;
a0_0x5cf315.prototype.jumpAnim = null;
a0_0x5cf315.prototype.frame = 0;
a0_0x5cf315.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && this.specType > 2) {
    var _0x5b775c = 1;
    if (this.jumpAnim == null) {
      this.jumpAnim = new a0_0x556513(this, 0.5, a0_0x556513.halfWave);
      this.jumpAnim.keepLastFrame = true;
      this.jumpAnim.loop = true;
      this.jumpAnim.onFrameEntered = function (_0x44f74f) {
        this.forObj.frame = _0x44f74f;
      };
      this.jumpAnim.onStop = function () {};
    }
    if (this.jumpAnim != null) {
      this.jumpAnim.run();
    }
    var _0x16ede0 = this.rad - this.outlineW;
    var _0x133baf = 500 / 340;
    this.setSkinScale();
    var _0x1a1701 = "skins/" + this.getSpeciesPath("markhor") + "/front_legs.png";
    var _0x2a11a5 = "skins/" + this.getSpeciesPath("markhor") + "/back_legs.png";
    var _0x37ed0a = this.getSkinImageObj(_0x1a1701);
    var _0x5d621c = this.getSkinImageObj(_0x2a11a5);
    if (_0x37ed0a && _0x5d621c) {
      var _0x133baf = this.skinScale + this.skinScale * 0.15 * this.frame;
      var _0x16ede0 = this.skinRad;
      if (this.specType == 3) {
        a0_0x1306ae.drawImage(_0x37ed0a, -_0x16ede0 * _0x133baf, -_0x16ede0 * _0x133baf, _0x16ede0 * 2 * _0x133baf, _0x16ede0 * 2 * _0x133baf);
        a0_0x1306ae.drawImage(_0x5d621c, -_0x16ede0 * _0x133baf, (-_0x16ede0 - _0x16ede0 * this.moveF * this.frame) * _0x133baf, _0x16ede0 * 2 * _0x133baf, _0x16ede0 * 2 * _0x133baf);
      } else {
        a0_0x1306ae.drawImage(_0x5d621c, -_0x16ede0 * _0x133baf, -_0x16ede0 * _0x133baf, _0x16ede0 * 2 * _0x133baf, _0x16ede0 * 2 * _0x133baf);
        a0_0x1306ae.drawImage(_0x37ed0a, -_0x16ede0 * _0x133baf, (-_0x16ede0 + _0x16ede0 * this.moveF * this.frame) * _0x133baf, _0x16ede0 * 2 * _0x133baf, _0x16ede0 * 2 * _0x133baf);
      }
    }
  } else {
    this.jumpAnim = null;
  }
};
a0_0x5cf315.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x5156c4 = 500 / 340;
  var _0x27599d = 0.1;
  if (this.specType > 2) {
    _0x27599d = this.frame * 0.2;
  }
  {
    var _0x263556 = this.getSkinImageObj(this.getHead("markhor", true));
    if (_0x263556) {
      a0_0x1306ae.save();
      var _0x115c3c = this.rad;
      a0_0x1306ae.drawImage(_0x263556, -_0x115c3c * _0x5156c4, (-_0x115c3c + _0x115c3c * _0x27599d) * _0x5156c4, _0x115c3c * 2 * _0x5156c4, _0x115c3c * 2 * _0x5156c4);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x5cf315.prototype.getHead = function (_0x4e2a8a, _0xd8d10b) {
  var _0x429a56 = "skins/" + (_0xd8d10b ? this.getSpeciesPath(_0x4e2a8a) + "/" : _0x4e2a8a + "/");
  _0x429a56 += _0x4e2a8a + "_head";
  if (this.specType == 2) {
    _0x429a56 += "_charging";
  }
  _0x429a56 += ".png";
  return _0x429a56;
};
a0_0x5cf315.prototype.getSkinName = function () {
  var _0x6705e5 = this.getSpeciesPath("markhor") + "/markhor";
  _0x6705e5 += this.specType == 0 ? "" : 1;
  return _0x6705e5;
};
function a0_0x5cf315() {
  a0_0x5cf315.superClass.call(this, a0_0x24738f);
}
window.Markhor = a0_0x5cf315;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5cf315, a0_0x24738f, a0_0x18f3b8);
var a0_0x28626c = a0_0x2449e7;
a0_0x1dcb8d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1dcb8d.prototype.constructor = a0_0x1dcb8d;
a0_0x1dcb8d.superClass = a0_0x28626c;
a0_0x1dcb8d.prototype.animalInfo = function () {
  var _0x370ed4 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x370ed4.aniName = "Reindeer";
      break;
    case 1:
      _0x370ed4.aniName = "Musk Deer";
      break;
    case 111:
      _0x370ed4.aniName = "Classic Reindeer";
      break;
    case 112:
      _0x370ed4.aniName = "Gold-trim Reindeer";
      break;
    case 201:
      _0x370ed4.aniName = "Sunburn Reindeer";
      break;
    case 202:
      _0x370ed4.aniName = "Piebald Cosmos";
      break;
    case 204:
      _0x370ed4.aniName = "Spideer";
      break;
  }
  _0x370ed4.aniDesc = "";
  _0x370ed4.upgradeText = "UPGRADED to " + _0x370ed4.aniName + "!\n Press W to dig up food! \n Your sharp hooves let you turn very well on ice!";
  _0x370ed4.aniCol = "#a68976";
  _0x370ed4.skinName = this.getSkinName();
  return _0x370ed4;
};
a0_0x1dcb8d.prototype.getAbilityInfo = function (_0x4e5dba) {
  var _0x79125a = {
    abilName: "Dig Food!"
  };
  _0x79125a.abilImg = "skins/arctic/reindeer/" + this.animalSpecies + this.getSubSpecies() + "/reindeer.png";
  _0x79125a.skinThemeID = this.skinThemeID;
  _0x79125a.mopeSeasonID = this.mopeSeasonID;
  return _0x79125a;
};
a0_0x1dcb8d.prototype.getSkinName = function () {
  return "arctic/reindeer/" + this.animalSpecies + this.getSubSpecies() + "/reindeer";
};
a0_0x1dcb8d.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x1dcb8d() {
  a0_0x1dcb8d.superClass.call(this, a0_0x24738f);
}
window.Reindeer = a0_0x1dcb8d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1dcb8d, a0_0x24738f, a0_0x17ec36);
var a0_0x28626c = a0_0x2449e7;
a0_0x379eab.prototype = Object.create(a0_0x28626c.prototype);
a0_0x379eab.prototype.constructor = a0_0x379eab;
a0_0x379eab.superClass = a0_0x28626c;
a0_0x379eab.prototype.getSkinName = function () {
  return this.getSpeciesPath("trex") + "/trex";
};
a0_0x379eab.prototype.animalInfo = function () {
  var _0x2e247d = {};
  switch (this.animalSpecies) {
    case 0:
      _0x2e247d.aniName = "The T.Rex";
      break;
    case 1:
      _0x2e247d.aniName = "Golden T.Rex";
      break;
    case 2:
      _0x2e247d.aniName = "Ember T.Rex";
      break;
    case 100:
      _0x2e247d.aniName = "Mr. Dollar";
      break;
    case 111:
      _0x2e247d.aniName = "Classic T.Rex";
      break;
    case 200:
      _0x2e247d.aniName = "Kaiju Rex";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2e247d.aniName = "Hyporevenant Rex";
          break;
      }
      break;
    case 204:
      _0x2e247d.aniName = "Tartarus Rex";
      break;
    case 220:
      _0x2e247d.aniName = "Bio Mutant T-rex";
      break;
  }
  _0x2e247d.skinName = this.getSkinName();
  _0x2e247d.upgradeText = "UPGRADED to " + _0x2e247d.aniName + " The Dinosaur!\n This ancient dinosaur has powerful jaws that can drag prey around!!";
  _0x2e247d.aniCol = "#862A2A";
  return _0x2e247d;
};
a0_0x379eab.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x379eab.prototype.getSpeciesPath = function (_0x3b9013) {
  return "land/" + _0x3b9013 + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x379eab.prototype.getAbilityInfo = function (_0x271c21) {
  var _0x52d554 = {
    abilName: "Jaws Bite"
  };
  _0x52d554.abilImg = "skins/" + this.getSkinName() + ".png";
  _0x52d554.skinThemeID = this.skinThemeID;
  _0x52d554.mopeSeasonID = this.mopeSeasonID;
  return _0x52d554;
};
a0_0x379eab.prototype.getAniRadius = function (_0x4b2c33) {
  return _0x4b2c33;
};
a0_0x379eab.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x37be3d = this.mopeSeasonID < 2 ? 0 : 1.5;
  var _0x5850cb = this.skinScale;
  var _0x2e0573 = this.getAniRadius(this.skinRad);
  if (this.loadedSkinImg) {
    var _0x41409f = _0x2e0573 / 2;
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x2e0573 - _0x41409f + _0x37be3d, -_0x2e0573 - _0x41409f + _0x37be3d, _0x2e0573 * 2 * _0x5850cb, _0x2e0573 * 2 * (_0x5850cb * 1.2));
  }
};
function a0_0x379eab() {
  a0_0x379eab.superClass.call(this, a0_0x24738f);
}
window.Trex = a0_0x379eab;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x379eab, a0_0x24738f, a0_0x45db7b);
var a0_0x28626c = a0_0x2449e7;
a0_0x10fbe8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x10fbe8.prototype.constructor = a0_0x10fbe8;
a0_0x10fbe8.superClass = a0_0x28626c;
a0_0x10fbe8.prototype.getSkinName = function () {
  var _0x2025c5 = "land/dragon/" + this.animalSpecies + "/" + this.animalSubSpecies + "/dragon";
  return _0x2025c5;
};
a0_0x10fbe8.prototype.animalInfo = function () {
  var _0x230ff9 = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
          _0x230ff9.aniName = "Dragon!";
          break;
        case 2023:
          _0x230ff9.aniName = "Storm Dragon";
          break;
      }
      break;
    case 1:
      _0x230ff9.aniName = "Golden Dragon!";
      break;
    case 2:
      _0x230ff9.aniName = "Knight Dragon!";
      break;
    case 3:
      _0x230ff9.aniName = "Boss Dragon!";
      break;
    case 100:
      _0x230ff9.aniName = "The Gargon!";
      break;
    case 111:
      _0x230ff9.aniName = "Classic Dragon";
      break;
    case 202:
      _0x230ff9.aniName = "Aberrant Dragon";
      break;
    case 203:
      _0x230ff9.aniName = "Ghoul Dragon";
      break;
    case 204:
      _0x230ff9.aniName = "Magma Dragon!";
      break;
    case 200:
      switch (this.animalSubSpecies) {
        case 0:
          _0x230ff9.aniName = "Goofy Dragon!";
          break;
        case 1:
          _0x230ff9.aniName = "Desert Dragon!";
          break;
        case 2:
          _0x230ff9.aniName = "Forge Dragon!";
          break;
        case 3:
          _0x230ff9.aniName = "Mythical Serpent!";
          break;
        case 4:
          _0x230ff9.aniName = "Fiery Dragon!";
          break;
      }
      break;
    case 201:
      _0x230ff9.aniName = "Squishy Dragon!";
      break;
    case 206:
      _0x230ff9.aniName = "AG Dragon!";
      break;
    case 220:
      _0x230ff9.aniName = "Behemoth Hive Dragon";
      break;
  }
  _0x230ff9.aniCol = "#FF9000";
  _0x230ff9.skinName = this.getSkinName();
  _0x230ff9.upgradeText = "UPGRADED to " + _0x230ff9.aniName + "\n (You're amazing!) \nFly over everything, Hold W to shoot fire!";
  _0x230ff9.aniCol = "#22FF8A";
  return _0x230ff9;
};
a0_0x10fbe8.prototype.getAbilityInfo = function (_0x5d7b62) {
  var _0x440c9c = {
    abilName: "Fire"
  };
  _0x440c9c.abilImg = this.getSkinName() + ".png";
  _0x440c9c.speciesType = this.animalSpecies == 1 ? 2 : 0;
  _0x440c9c.skinThemeID = this.skinThemeID;
  _0x440c9c.mopeSeasonID = this.mopeSeasonID;
  return _0x440c9c;
};
a0_0x10fbe8.prototype.diveColor1 = "#64a034";
a0_0x10fbe8.prototype.diveColor2 = "#598b30";
a0_0x10fbe8.prototype.onAnimalSpeciesSet = function () {
  switch (this.animalSpecies) {
    case 1:
      this.diveColor1 = "#dbb300";
      this.diveColor2 = "#bf9d04";
      break;
    case 2:
      this.diveColor1 = "#79c9a8";
      this.diveColor2 = "#6fad9f";
      break;
  }
};
function a0_0x10fbe8() {
  a0_0x10fbe8.superClass.call(this, a0_0x24738f);
}
window.Dragon = a0_0x10fbe8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x10fbe8, a0_0x24738f, a0_0x59b763);
var a0_0x28626c = a0_0x2449e7;
a0_0x329980.prototype = Object.create(a0_0x28626c.prototype);
a0_0x329980.prototype.constructor = a0_0x329980;
a0_0x329980.superClass = a0_0x28626c;
a0_0x329980.prototype.animalInfo = function () {
  var _0x3144f1 = {
    skinName: "land/elephant/" + this.animalSpecies + "/elephant"
  };
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x3144f1.aniName = "Elephant!";
          break;
        case 111:
          _0x3144f1.aniName = "Classic Elephant!";
          break;
      }
      break;
    case 2023:
      _0x3144f1.aniName = "Carnival Elephant!";
      break;
    case 1:
      _0x3144f1.aniName = "Golden Elephant!";
      break;
    case 2:
      _0x3144f1.aniName = "Albino Elephant!";
      break;
    case 201:
      _0x3144f1.aniName = "Leiphant!";
      break;
    case 202:
      _0x3144f1.aniName = "Ice Wizard Elephant";
      break;
    case 220:
      _0x3144f1.aniName = "Lightwave Elephant";
      break;
  }
  _0x3144f1.skinName = "land/elephant/" + this.animalSpecies + "/" + this.animalSubSpecies + "/elephant";
  _0x3144f1.aniDesc = "";
  _0x3144f1.upgradeText = "UPGRADED to " + _0x3144f1.aniName + "\n Use your long trunk to attack and eat food!";
  _0x3144f1.aniCol = "#945A99";
  return _0x3144f1;
};
a0_0x329980.prototype.getAbilityInfo = function (_0x56df4d) {
  var _0x402cee = {};
  _0x402cee.abilImg = "skins/" + this.getSpeciesPath() + "/elephant.png";
  _0x402cee.abilName = "Trunk Hit";
  _0x402cee.skinThemeID = this.skinThemeID;
  _0x402cee.mopeSeasonID = this.mopeSeasonID;
  return _0x402cee;
};
a0_0x329980.prototype.getSkinName = function () {
  let _0x2ff0f6 = this.getSpeciesPath() + "/elephant";
  _0x2ff0f6 += this.specType == 0 ? "" : 1;
  return _0x2ff0f6;
};
a0_0x329980.prototype.getSpeciesPath = function () {
  return "land/elephant/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x329980.prototype.getSubSpecies = function () {
  return "/" + this.animalSubSpecies;
};
function a0_0x329980() {
  a0_0x329980.superClass.call(this, a0_0x24738f);
}
window.Elephant = a0_0x329980;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x329980, a0_0x24738f, a0_0x54926b);
var a0_0x28626c = a0_0x2449e7;
a0_0x9bd4d7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x9bd4d7.prototype.constructor = a0_0x9bd4d7;
a0_0x9bd4d7.superClass = a0_0x28626c;
a0_0x9bd4d7.prototype.animalInfo = function () {
  var _0x4d4982 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4d4982.aniName = "Hippo!";
      break;
    case 1:
      _0x4d4982.aniName = "Golden Hippo!";
      break;
    case 2:
      _0x4d4982.aniName = "Pygmy Hippo!";
      break;
    case 100:
      _0x4d4982.aniName = "Swampster!";
      break;
    case 111:
      _0x4d4982.aniName = "Classic Hippo";
      break;
    case 202:
      _0x4d4982.aniName = "Planet Hippo";
      break;
    case 204:
      _0x4d4982.aniName = "Sun Hippo!";
      break;
  }
  _0x4d4982.skinName = this.getSkinName();
  _0x4d4982.upgradeText = "UPGRADED to " + _0x4d4982.aniName + "!\nHippos are great swimmers, dominate the Lakes/Oceans/Mud!";
  _0x4d4982.aniCol = "#945A99";
  return _0x4d4982;
};
a0_0x9bd4d7.prototype.getAbilityInfo = function (_0x87f503) {
  var _0x11afa3 = {
    abilName: "Loud Grown!"
  };
  _0x11afa3.abilImg = "skins/" + this.getSpeciesPath() + "/hippo1.png";
  _0x11afa3.skinThemeID = this.skinThemeID;
  _0x11afa3.mopeSeasonID = this.mopeSeasonID;
  return _0x11afa3;
};
a0_0x9bd4d7.prototype.getSkinName = function () {
  let _0x2d1085 = this.getSpeciesPath() + "/hippo";
  _0x2d1085 += this.specType == 0 ? "" : 1;
  return _0x2d1085;
};
a0_0x9bd4d7.prototype.getSpeciesPath = function () {
  return "land/hippo/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x9bd4d7.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x9bd4d7() {
  a0_0x9bd4d7.superClass.call(this, a0_0x24738f);
}
window.Hippo = a0_0x9bd4d7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x9bd4d7, a0_0x24738f, a0_0x50d9f7);
var a0_0x28626c = a0_0x2449e7;
a0_0x2d5536.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2d5536.prototype.constructor = a0_0x2d5536;
a0_0x2d5536.superClass = a0_0x28626c;
a0_0x2d5536.prototype.animalInfo = function () {
  var _0x51b7a0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x51b7a0.aniName = "Giant Spider!";
      break;
    case 1:
      _0x51b7a0.aniName = "Golden Spider!";
      break;
    case 2:
      _0x51b7a0.aniName = "Goliath Spider!";
      break;
    case 111:
      _0x51b7a0.aniName = "Classic Giant Spider";
      break;
    case 202:
      _0x51b7a0.aniName = "Sapphire Cave Spider";
      break;
    case 204:
      _0x51b7a0.aniName = "Smile Spider!";
      break;
  }
  _0x51b7a0.skinName = this.getSkinName();
  _0x51b7a0.upgradeText = "UPGRADED to " + _0x51b7a0.aniName + "!\n Place web around the game to catch prey!";
  _0x51b7a0.aniCol = "black";
  return _0x51b7a0;
};
a0_0x2d5536.prototype.getAbilityInfo = function (_0x480cf7) {
  var _0x5ececd = {
    abilName: "Spin Web!",
    abilImg: "img/web/0/spiderWeb.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x5ececd;
};
a0_0x2d5536.prototype.getSkinName = function () {
  let _0x4ba180 = this.getSpeciesPath() + "/giantspider";
  return _0x4ba180;
};
a0_0x2d5536.prototype.getSpeciesPath = function () {
  return "land/giantspider/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x2d5536.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x2d5536() {
  a0_0x2d5536.superClass.call(this, a0_0x24738f);
}
window.GiantSpider = a0_0x2d5536;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2d5536, a0_0x24738f, a0_0x357359);
var a0_0x28626c = a0_0x2449e7;
a0_0x223885.prototype = Object.create(a0_0x28626c.prototype);
a0_0x223885.prototype.constructor = a0_0x223885;
a0_0x223885.superClass = a0_0x28626c;
a0_0x223885.prototype.animalInfo = function () {
  var _0x51d11d = {};
  switch (this.animalSpecies) {
    case 0:
      _0x51d11d.aniName = "Boa Constrictor!";
      break;
    case 1:
      _0x51d11d.aniName = "Golden Boa!";
      break;
    case 2:
      _0x51d11d.aniName = "Tree Boa!";
      break;
    case 111:
      _0x51d11d.aniName = "Classic Boa";
      break;
  }
  _0x51d11d.skinName = this.getSkinName();
  _0x51d11d.aniDesc = "";
  _0x51d11d.upgradeText = "UPGRADED to " + _0x51d11d.aniName + "!\n Coil and suffocate other animals!";
  _0x51d11d.aniCol = "black";
  return _0x51d11d;
};
a0_0x223885.prototype.getSkinName = function () {
  let _0x1a5d90 = this.getSpeciesPath() + "/boaconstrictor";
  return _0x1a5d90;
};
a0_0x223885.prototype.getSpeciesPath = function () {
  return "land/boaconstrictor/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x223885.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x223885.prototype.getAbilityInfo = function (_0x172a18) {
  var _0x25648e = {
    abilName: "Suffocate prey"
  };
  _0x25648e.abilImg = "skins/" + this.getSpeciesPath() + "/constrict.png";
  _0x25648e.skinThemeID = this.skinThemeID;
  _0x25648e.mopeSeasonID = this.mopeSeasonID;
  return _0x25648e;
};
a0_0x223885.prototype.getSkinName = function () {
  var _0x282ab7 = this.getSpeciesPath("boaconstrictor") + "/boaconstrictor";
  if (this.flag_usingAbility && this.specType == 1) {
    _0x282ab7 += "2";
  } else {
    _0x282ab7 += this.specType == 0 ? "" : 1;
  }
  return _0x282ab7;
};
a0_0x223885.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility) {
    return;
  }
  var _0x3c631a = this.rad - this.outlineW;
  var _0x784ebb = 500 / 340;
  var _0x538d43 = this.getSkinImageObj("skins/" + this.getSpeciesPath("boaconstrictor") + "/tongue.png");
  var _0x2615a2 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x2c6da4 = a0_0x56bbb3 == a0_0xbf9ed5 ? 0 : a0_0x423a9f(_0x2615a2, 0.5, 5, 0.5);
  var _0x333eb0 = a0_0x56bbb3 == a0_0xbf9ed5 ? 0 : 5;
  if (_0x538d43) {
    a0_0x1306ae.drawImage(_0x538d43, -_0x3c631a * _0x784ebb, -(_0x3c631a + _0x333eb0 + _0x2c6da4) * _0x784ebb, _0x3c631a * 2 * _0x784ebb, _0x3c631a * 2 * _0x784ebb);
  }
};
a0_0x223885.prototype.getSkinImageObj = function (_0x382a4a) {
  var _0x16cb5f = this.animalSpecies === 1 || this.animalSpecies === 2 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x382a4a, _0x16cb5f);
};
function a0_0x223885() {
  a0_0x223885.superClass.call(this, a0_0x24738f);
}
window.BoaConstrictor = a0_0x223885;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x223885, a0_0x24738f, a0_0x52bfa4);
var a0_0x28626c = a0_0x2449e7;
a0_0x8e065f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x8e065f.prototype.constructor = a0_0x8e065f;
a0_0x8e065f.superClass = a0_0x28626c;
a0_0x8e065f.prototype.animalInfo = function () {
  var _0xba96f8 = {
    aniName: "Gorilla!"
  };
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 111:
          _0xba96f8.aniName = "Classic Gorilla";
          break;
        case 112:
          _0xba96f8.aniName = "Gold-trim Gorilla";
          break;
      }
      break;
    case 2023:
      _0xba96f8.aniName = "Mafia Gorilla";
      break;
    case 100:
      _0xba96f8.aniName = "Grim Reaper";
      break;
    case 201:
      _0xba96f8.aniName = "Explorer Ape";
      break;
    case 202:
      _0xba96f8.aniName = "Kongrilla";
      break;
    case 223:
      _0xba96f8.aniName = "Valentine Gorilla";
      break;
    case 204:
      _0xba96f8.aniName = "Phantom Gorilla";
      break;
  }
  _0xba96f8.skinName = this.getSkinName();
  _0xba96f8.upgradeText = "UPGRADED to " + _0xba96f8.aniName + "!\n" + _0xba96f8.aniName + "s are very fast on hills/trees!\n Press W to throw bananas! (from trees)";
  _0xba96f8.aniCol = "#945A99";
  return _0xba96f8;
};
a0_0x8e065f.prototype.getAbilityInfo = function (_0x1fe9fb) {
  var _0x3168e3 = {
    abilName: "Fruit Throw!"
  };
  _0x3168e3.abilImg = "skins/" + this.getSpeciesPath() + "/gorilla.png";
  _0x3168e3.skinThemeID = this.skinThemeID;
  _0x3168e3.mopeSeasonID = this.mopeSeasonID;
  return _0x3168e3;
};
a0_0x8e065f.prototype.getSkinName = function () {
  let _0x1c816e = this.getSpeciesPath() + "/gorilla";
  return _0x1c816e;
};
a0_0x8e065f.prototype.getSpeciesPath = function () {
  return "land/gorilla/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x8e065f.prototype.drawSkinCustomization = function () {
  this.setSkinScale();
  if (this.animalSubSpecies == 204) {
    var _0x3d13bc = "skins/" + this.getSpeciesPath();
    var _0x143afe = this.skinScale * 1.07;
    var _0x1abb30 = this.skinRad;
    var _0x2ab139 = 1 + Math.trunc(a0_0x24806e / 120) % 7;
    var _0x51677f = this.getSkinImageObj(_0x3d13bc + "/gorilla_head.png");
    if (_0x51677f) {
      var _0x4a44d8 = 0;
      var _0x1127e3 = this.getSkinImageObj(_0x3d13bc + "/fire" + _0x2ab139 + ".png");
      if (_0x1127e3) {
        a0_0x1306ae.save();
        a0_0x1306ae.drawImage(_0x1127e3, -_0x1abb30 * _0x143afe, (-_0x1abb30 + _0x1abb30 * 0.05) * _0x143afe - _0x4a44d8, _0x1abb30 * 2 * _0x143afe, _0x1abb30 * 2 * _0x143afe);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.save();
      var _0x1abb30 = this.rad;
      a0_0x1306ae.drawImage(_0x51677f, -_0x1abb30 * _0x143afe, (-_0x1abb30 + _0x1abb30 * 0.05) * _0x143afe - _0x4a44d8, _0x1abb30 * 2 * _0x143afe, _0x1abb30 * 2 * _0x143afe);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x8e065f() {
  a0_0x8e065f.superClass.call(this, a0_0x24738f);
}
window.Gorilla = a0_0x8e065f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x8e065f, a0_0x24738f, a0_0x1efea6);
var a0_0x28626c = a0_0x2449e7;
a0_0x1f74b9.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1f74b9.prototype.constructor = a0_0x1f74b9;
a0_0x1f74b9.superClass = a0_0x28626c;
a0_0x1f74b9.prototype.animalInfo = function () {
  var _0x2f6d03 = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2f6d03.aniName = "The Kraken!";
          break;
        case 2023:
          _0x2f6d03.aniName = " Beach Battle Kraken!";
          break;
      }
      break;
    case 1:
      _0x2f6d03.aniName = "Golden Kraken!";
      break;
    case 2:
      _0x2f6d03.aniName = "Chromatic Kraken!";
      break;
    case 111:
      _0x2f6d03.aniName = "Classic Kraken";
      break;
    case 201:
      _0x2f6d03.aniName = "Squishy Kraken!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x2f6d03.aniName = "Giant Squid";
          break;
        case 1:
          _0x2f6d03.aniName = "Hydrothoth Kraken";
          break;
      }
      break;
    case 204:
      _0x2f6d03.aniName = "Cthulhu Kraken!";
      break;
    case 220:
      _0x2f6d03.aniName = "Dr. Brainiopod";
      break;
    case 222:
      _0x2f6d03.aniName = "Gingerbread Kraken";
      break;
  }
  _0x2f6d03.aniCol = "#FF9000";
  _0x2f6d03.skinName = this.getSkinName();
  _0x2f6d03.upgradeText = "UPGRADED to THE " + _0x2f6d03.aniName + "!\n Terrorize the oceans, and be feared by all!\n (Release W to use whirlpool ability!)";
  _0x2f6d03.aniCol = "#64a034";
  return _0x2f6d03;
};
a0_0x1f74b9.prototype.getSkinName = function () {
  return this.getSpeciesPath("kraken") + "/kraken";
};
a0_0x1f74b9.prototype.getSubSpecies = function () {
  if (this.animalSpecies === 202 || this.animalSpecies === 0 || this.animalSpecies === 111) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x1f74b9.prototype.getSpeciesPath = function (_0xc70ea3) {
  return "ocean/" + _0xc70ea3 + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x1f74b9.prototype.getAbilityInfo = function (_0x47e2ba) {
  var _0x38b764 = {
    abilName: "Whirlpool"
  };
  _0x38b764.abilImg = "skins/" + this.getSpeciesPath("kraken") + "/kraken.png";
  _0x38b764.skinThemeID = this.skinThemeID;
  _0x38b764.mopeSeasonID = this.mopeSeasonID;
  return _0x38b764;
};
a0_0x1f74b9.prototype.diveColor1 = "#64a034";
a0_0x1f74b9.prototype.diveColor2 = "#598b30";
a0_0x1f74b9.prototype.onAnimalSpeciesSet = function () {
  switch (this.animalSpecies) {
    case 1:
      this.diveColor1 = "#dbb300";
      this.diveColor2 = "#bf9d04";
      break;
    case 2:
      this.diveColor1 = "#79c9a8";
      this.diveColor2 = "#6fad9f";
      break;
  }
};
function a0_0x1f74b9() {
  a0_0x1f74b9.superClass.call(this, a0_0x24738f);
}
window.Kraken = a0_0x1f74b9;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1f74b9, a0_0x24738f, a0_0x17dc35);
var a0_0x28626c = a0_0x2449e7;
a0_0x156100.prototype = Object.create(a0_0x28626c.prototype);
a0_0x156100.prototype.constructor = a0_0x156100;
a0_0x156100.superClass = a0_0x28626c;
a0_0x156100.prototype.animalInfo = function () {
  var _0x3c54fe = {};
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x3c54fe.aniName = "Bluewhale!";
          break;
        case 111:
          _0x3c54fe.aniName = "Classic Blue Whale";
          break;
      }
      break;
    case 1:
      _0x3c54fe.aniName = "Golden Whale!";
      break;
    case 2:
      _0x3c54fe.aniName = "Albino Whale!";
      break;
    case 201:
      _0x3c54fe.aniName = "Mermaid Whale!";
      break;
    case 202:
      _0x3c54fe.aniName = "Whale Boat";
      break;
    case 203:
      _0x3c54fe.aniName = "Ancient Island Monster";
      break;
    case 220:
      _0x3c54fe.aniName = "Sailor Whale";
      break;
    case 223:
      _0x3c54fe.aniName = "Valentine Whale";
      break;
    case 2023:
      _0x3c54fe.aniName = "Molten Frost Whale";
      break;
  }
  _0x3c54fe.skinName = this.getSkinName();
  _0x3c54fe.aniDesc = "";
  _0x3c54fe.upgradeText = "UPGRADED to " + _0x3c54fe.aniName + "\n Smash with your powerful tail!";
  _0x3c54fe.aniCol = "#945A99";
  return _0x3c54fe;
};
a0_0x156100.prototype.getSkinName = function () {
  return this.getSpeciesPath() + "/bluewhale" + (this.specType == 0 ? "" : this.specType);
};
a0_0x156100.prototype.getSpeciesPath = function () {
  return "ocean/bluewhale/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0x156100.prototype.getAbilityInfo = function (_0xa8a05e) {
  var _0x28eed2 = {
    abilName: "Tail Slap"
  };
  _0x28eed2.abilImg = "skins/" + this.getSpeciesPath() + "/ability_whaleTailHit.png";
  _0x28eed2.skinThemeID = this.skinThemeID;
  _0x28eed2.mopeSeasonID = this.mopeSeasonID;
  return _0x28eed2;
};
function a0_0x156100() {
  a0_0x156100.superClass.call(this, a0_0x24738f);
}
window.Bluewhale = a0_0x156100;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x156100, a0_0x24738f, a0_0x3b5853);
var a0_0x28626c = a0_0x2449e7;
a0_0x5e9186.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5e9186.prototype.constructor = a0_0x5e9186;
a0_0x5e9186.superClass = a0_0x28626c;
a0_0x5e9186.prototype.animalInfo = function () {
  var _0x4b1fd0 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4b1fd0.aniName = "King Crab!";
      break;
    case 1:
      _0x4b1fd0.aniName = "Golden Crab!";
      break;
    case 2:
      _0x4b1fd0.aniName = "Amethyst Crab!";
      break;
    case 111:
      _0x4b1fd0.aniName = "Classic King Crab!";
      break;
    case 202:
      _0x4b1fd0.aniName = "Abyssal King Crab";
      break;
    case 204:
      _0x4b1fd0.aniName = "Plasma-core King Crab!";
      break;
    case 220:
      _0x4b1fd0.aniName = "Star Crusher Crab";
      break;
  }
  _0x4b1fd0.skinName = "ocean/kingcrab/" + this.animalSpecies + "/kingcrab";
  _0x4b1fd0.aniDesc = "";
  _0x4b1fd0.upgradeText = "UPGRADED to " + _0x4b1fd0.aniName + "!\n Use your powerful arms to smack your prey!";
  _0x4b1fd0.aniCol = "#971f0e";
  return _0x4b1fd0;
};
a0_0x5e9186.prototype.getSkinImageObj = function (_0x44eba4) {
  var _0xecabc7 = this.mopeSeasonID;
  var _0x4d3729 = "./assets/s/" + _0xecabc7 + "/" + _0x44eba4;
  if (this.skinThemeID > 0) {
    _0x4d3729 = "./assets/t/" + this.skinThemeID + "/" + _0x44eba4;
  }
  return a0_0x19ebc9(_0x4d3729, function (_0x23e1f9) {
    console.log(_0x23e1f9.src);
  });
};
a0_0x5e9186.prototype.getAbilityInfo = function (_0x10a66d) {
  var _0x1d451d = {
    abilName: "Arm Smash",
    abilImg: "skins/ocean/kingcrab/" + this.animalSpecies + "/ability_crabSmashSkin.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x1d451d;
};
a0_0x5e9186.prototype.getSkinName = function () {
  return "ocean/kingcrab/" + this.animalSpecies + "/kingcrab";
};
function a0_0x5e9186() {
  a0_0x5e9186.superClass.call(this, a0_0x24738f);
}
window.KingCrab = a0_0x5e9186;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5e9186, a0_0x24738f, a0_0x487fb5);
var a0_0x28626c = a0_0x2449e7;
a0_0x47d92f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x47d92f.prototype.constructor = a0_0x47d92f;
a0_0x47d92f.superClass = a0_0x28626c;
a0_0x47d92f.prototype.animalInfo = function () {
  var _0x117fbe = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
        default:
          _0x117fbe.aniName = "Killerwhale!";
          break;
        case 223:
          _0x117fbe.aniName = "Valentine Orca";
          break;
      }
      break;
    case 1:
      _0x117fbe.aniName = "Golden Orca!";
      break;
    case 2:
      _0x117fbe.aniName = "Albino Orca!";
      break;
    case 111:
      _0x117fbe.aniName = "Classic Killerwhale!";
      break;
    case 201:
      _0x117fbe.aniName = "Lifeguard Orca!";
      break;
    case 202:
      _0x117fbe.aniName = "Sea Angel Orca";
      break;
  }
  _0x117fbe.skinName = this.getSkinName();
  _0x117fbe.aniDesc = "";
  _0x117fbe.upgradeText = "UPGRADED to " + _0x117fbe.aniName + "\nWhales blow out water when diving! (And sometimes other loot!)";
  _0x117fbe.aniCol = "#141414";
  return _0x117fbe;
};
a0_0x47d92f.prototype.getAbilityInfo = function (_0x22d016) {
  var _0x5159a0 = {
    abilName: "Cause Wave"
  };
  _0x5159a0.abilImg = "skins/" + this.getSpeciesPath() + "/killerwhale.png";
  _0x5159a0.skinThemeID = this.skinThemeID;
  _0x5159a0.mopeSeasonID = this.mopeSeasonID;
  return _0x5159a0;
};
a0_0x47d92f.prototype.getSkinName = function () {
  let _0xfeed64 = this.getSpeciesPath() + "/killerwhale";
  _0xfeed64 += this.specType == 0 ? "" : 1;
  return _0xfeed64;
};
a0_0x47d92f.prototype.getSpeciesPath = function () {
  return "ocean/killerwhale/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x47d92f.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x47d92f() {
  a0_0x47d92f.superClass.call(this, a0_0x24738f);
}
window.Killerwhale = a0_0x47d92f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x47d92f, a0_0x24738f, a0_0x594c30);
var a0_0x28626c = a0_0x2449e7;
a0_0x3f47dd.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3f47dd.prototype.constructor = a0_0x3f47dd;
a0_0x3f47dd.superClass = a0_0x28626c;
a0_0x3f47dd.prototype.animalInfo = function () {
  var _0x365335 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x365335.aniName = "Jellyfish";
      break;
    case 111:
      _0x365335.aniName = "Classic Jellyfish";
      break;
    case 112:
      _0x365335.aniName = "Gold-trim Jellyfish";
      break;
    case 201:
      _0x365335.aniName = "Seafoam Jellyfish";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x365335.aniName = "Disco Jellyfish";
          break;
        case 1:
          _0x365335.aniName = "Twisted Horror";
      }
      break;
  }
  _0x365335.skinName = this.getSkinName();
  _0x365335.aniDesc = "";
  _0x365335.upgradeText = "UPGRADED to " + _0x365335.aniName + "!\n A slowly-turning animal that can grow quite large!";
  _0x365335.aniCol = "#FDB9BA";
  return _0x365335;
};
a0_0x3f47dd.prototype.getAbilityInfo = function (_0x5ba27b) {
  var _0x511362 = {
    abilName: "Touch prey to sting!"
  };
  _0x511362.abilImg = "skins/" + this.getSpeciesPath() + "/jellyfish.png";
  _0x511362.isPassive = true;
  _0x511362.skinThemeID = this.skinThemeID;
  _0x511362.mopeSeasonID = this.mopeSeasonID;
  return _0x511362;
};
a0_0x3f47dd.prototype.getSkinName = function () {
  let _0x3f7605 = this.getSpeciesPath() + "/jellyfish";
  return _0x3f7605;
};
a0_0x3f47dd.prototype.getSpeciesPath = function () {
  return "ocean/jellyfish/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x3f47dd.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x3f47dd.prototype.getSkinImageObj = function (_0x1f3818) {
  var _0x126656 = this.animalSpecies === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x1f3818, _0x126656);
};
a0_0x3f47dd.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x1baa21 = -0;
  var _0x1aadef = -0.3;
  var _0x167abe = 1;
  var _0x52f9f1 = 1.2;
  if (this.animalSpecies == 201) {
    _0x1aadef = -0.3;
    _0x167abe = 1.05;
  }
  if (this.mopeSeasonID == 0) {
    _0x1aadef = 0;
    _0x167abe = 1;
    _0x52f9f1 = 1;
  }
  var _0x3c1067 = this.skinScale * _0x167abe;
  var _0x45c714 = this.skinRad;
  if (this.loadedSkinImg) {
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x45c714 * _0x3c1067 + _0x45c714 * _0x1baa21, -_0x45c714 * _0x3c1067 + _0x45c714 * _0x1aadef, _0x45c714 * 2 * _0x3c1067, _0x45c714 * 2 * _0x3c1067 * _0x52f9f1);
  }
  if (this.animalSpecies == 202) {
    if (a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b) {
      var _0x24f51f = Math.trunc(a0_0x24806e / 500) % 2;
      if (_0x24f51f == 1) {
        var _0x20b197 = this.getSkinImageObj("skins/" + this.getSkinName() + "_shine.png");
        if (_0x20b197) {
          a0_0x1306ae.drawImage(_0x20b197, -_0x45c714 * _0x3c1067 + _0x45c714 * _0x1baa21, -_0x45c714 * _0x3c1067 + _0x45c714 * _0x1aadef, _0x45c714 * 2 * _0x3c1067, _0x45c714 * 2 * (_0x3c1067 * 1.2));
        }
      }
    }
  }
};
function a0_0x3f47dd() {
  a0_0x3f47dd.superClass.call(this, a0_0x24738f);
}
window.Jellyfish = a0_0x3f47dd;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3f47dd, a0_0x24738f, a0_0xbd6036);
var a0_0x28626c = a0_0x2449e7;
a0_0x4442fb.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4442fb.prototype.constructor = a0_0x4442fb;
a0_0x4442fb.superClass = a0_0x28626c;
a0_0x4442fb.prototype.animalInfo = function () {
  var _0x56631b = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        default:
        case 0:
          _0x56631b.aniName = "Stingray!";
          break;
        case 223:
          _0x56631b.aniName = "Valentine Stingray!";
          break;
      }
      break;
    case 100:
      _0x56631b.aniName = "Phantom Ray!";
      break;
    case 111:
      _0x56631b.aniName = "Classic Stingray";
      break;
    case 112:
      _0x56631b.aniName = "Gold-trim Stingray";
      break;
    case 201:
      _0x56631b.aniName = "Chocolate Ray!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x56631b.aniName = "Ether Stingray";
          break;
        case 1:
          _0x56631b.aniName = "Pancake Stingray";
      }
      break;
  }
  _0x56631b.skinName = this.getSkinName();
  _0x56631b.upgradeText = "UPGRADED to " + _0x56631b.aniName + "\n Use electic shock (Release W key!) to shock animals! \n(Takes time to recharge)";
  _0x56631b.aniCol = "#164336";
  return _0x56631b;
};
a0_0x4442fb.prototype.getAbilityInfo = function (_0x2484ef) {
  var _0x2046e1 = {
    abilName: "Shock!"
  };
  _0x2046e1.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x2046e1.skinThemeID = this.skinThemeID;
  _0x2046e1.mopeSeasonID = this.mopeSeasonID;
  return _0x2046e1;
};
a0_0x4442fb.prototype.getSkinName = function () {
  let _0x2fd876 = this.getSpeciesPath() + "/stingray";
  return _0x2fd876;
};
a0_0x4442fb.prototype.getSpeciesPath = function () {
  return "ocean/stingray/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4442fb.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x4442fb.prototype.drawUnderSkinImg = function () {
  var _0x4d92a7 = 1.245;
  var _0x33edfd = 1.2;
  var _0x23c59c = 0.8;
  var _0x51a325 = 500 / 340;
  var _0xe2166a = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
  if (_0xe2166a) {
    a0_0x1306ae.save();
    var _0x10658a = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0xe2166a, -_0x10658a * _0x51a325, -_0x10658a * _0x4d92a7 * _0x51a325, _0x10658a * 2 * _0x51a325, _0x10658a * 2 * _0x51a325);
    a0_0x1306ae.restore();
  }
  if (this.animalSpecies == 100) {
    var _0x3c0135 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x12fd9c = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x3c0135, 5, 1, 1) : this.birdNoAnimationFlyWingAngle;
    var _0xe2166a = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail2.png");
    if (_0xe2166a) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = Math.max(0, _0x12fd9c);
      var _0x10658a = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0xe2166a, -_0x10658a * _0x51a325, -_0x10658a * _0x4d92a7 * _0x51a325, _0x10658a * 2 * _0x51a325, _0x10658a * 2 * _0x51a325);
      a0_0x1306ae.restore();
    }
    return;
  }
  var _0xe2166a = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/leftwing.png");
  if (_0xe2166a) {
    a0_0x1306ae.save();
    var _0x2ee7c6 = 1;
    var _0x10658a = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0xe2166a, -_0x10658a * _0x33edfd * _0x51a325, -_0x10658a * _0x51a325, _0x10658a * 2 * _0x51a325, _0x10658a * 2 * _0x51a325);
    a0_0x1306ae.restore();
  }
  var _0xe2166a = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/rightwing.png");
  if (_0xe2166a) {
    a0_0x1306ae.save();
    var _0x2ee7c6 = 1;
    var _0x10658a = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0xe2166a, -_0x10658a * _0x23c59c * _0x51a325, -_0x10658a * _0x51a325, _0x10658a * 2 * _0x51a325, _0x10658a * 2 * _0x51a325);
    a0_0x1306ae.restore();
  }
};
function a0_0x4442fb() {
  a0_0x4442fb.superClass.call(this, a0_0x24738f);
}
window.Stingray = a0_0x4442fb;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4442fb, a0_0x24738f, a0_0x4441e0);
var a0_0x28626c = a0_0x2449e7;
a0_0x5d0bdd.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5d0bdd.prototype.constructor = a0_0x5d0bdd;
a0_0x5d0bdd.superClass = a0_0x28626c;
a0_0x5d0bdd.prototype.animalInfo = function () {
  var _0xaf79c5 = {
    aniName: "Puffer Fish"
  };
  switch (this.animalSpecies) {
    case 2:
      _0xaf79c5.aniName = "Demon Fish";
      break;
    case 100:
      _0xaf79c5.aniName = "Puffermace";
      break;
    case 111:
      _0xaf79c5.aniName = "Classic Pufferfish";
      break;
    case 112:
      _0xaf79c5.aniName = "Gold-trim Pufferfish";
      break;
    case 201:
      _0xaf79c5.aniName = "Omniball Puffer";
      break;
    case 202:
      _0xaf79c5.aniName = "Balloon Pufferfish";
      break;
  }
  _0xaf79c5.skinName = this.getSkinName();
  _0xaf79c5.aniDesc = "";
  _0xaf79c5.upgradeText = "UPGRADED to " + _0xaf79c5.aniName + "!\n(Hold W to inflate - become spiky, and dangerous to touch!)";
  _0xaf79c5.aniCol = "#94a3a9";
  return _0xaf79c5;
};
a0_0x5d0bdd.prototype.getAbilityInfo = function (_0x65edea) {
  var _0x52c114 = {
    abilName: "Puff!"
  };
  _0x52c114.abilImg = "skins/" + this.getSpeciesPath() + "/pufferfish2.png";
  _0x52c114.skinThemeID = this.skinThemeID;
  _0x52c114.mopeSeasonID = this.mopeSeasonID;
  return _0x52c114;
};
a0_0x5d0bdd.prototype.getSkinName = function () {
  let _0x16b320 = this.getSpeciesPath() + "/pufferfish";
  if (this.flag_usingAbility) {
    _0x16b320 += "2";
  }
  return _0x16b320;
};
a0_0x5d0bdd.prototype.getSpeciesPath = function () {
  return "ocean/pufferfish/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x5d0bdd.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x5d0bdd.prototype.drawUnderSkinImg = function () {
  var _0x1a1f17 = 1.6;
  var _0x4dbc64 = 500 / 340;
  var _0xef329c = "";
  if (this.animalSpecies == 100) {
    _0xef329c = "/100";
    var _0x3cd1aa = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
    if (_0x3cd1aa) {
      a0_0x1306ae.save();
      var _0x4b3110 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x3cd1aa, -_0x4b3110 * _0x4dbc64, -_0x4b3110 * _0x1a1f17 * _0x4dbc64, _0x4b3110 * 2 * _0x4dbc64, _0x4b3110 * 2 * _0x4dbc64);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x5d0bdd() {
  a0_0x5d0bdd.superClass.call(this, a0_0x24738f);
}
window.PufferFish = a0_0x5d0bdd;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5d0bdd, a0_0x24738f, a0_0x2b355b);
var a0_0x28626c = a0_0x2449e7;
a0_0x298e86.prototype = Object.create(a0_0x28626c.prototype);
a0_0x298e86.prototype.constructor = a0_0x298e86;
a0_0x298e86.superClass = a0_0x28626c;
a0_0x298e86.prototype.animalInfo = function () {
  var _0x564a0f = {};
  switch (this.animalSpecies) {
    case 0:
      _0x564a0f.aniName = "Squid";
      break;
    case 111:
      _0x564a0f.aniName = "Classic Squid";
      break;
    case 112:
      _0x564a0f.aniName = "Gold-trim Squid";
      break;
    case 200:
      _0x564a0f.aniName = "Cuttle Fish";
      break;
    case 201:
      _0x564a0f.aniName = "Seacoast Squid";
      break;
    case 202:
      _0x564a0f.aniName = "Psychedelic Squid";
      break;
    case 204:
      _0x564a0f.aniName = "Void Scuttling Squid";
      break;
  }
  _0x564a0f.skinName = this.getSkinName();
  _0x564a0f.aniDesc = "";
  _0x564a0f.upgradeText = "UPGRADED to " + _0x564a0f.aniName + "!\n " + _0x564a0f.aniName + " can use INK when injured (press W!) \n+ you can hide in plankton bushes!";
  _0x564a0f.aniCol = "#40dda4";
  return _0x564a0f;
};
a0_0x298e86.prototype.getSkinName = function () {
  let _0x4f1728 = this.getSpeciesPath() + "/squid";
  _0x4f1728 += this.specType == 0 ? "" : 1;
  return _0x4f1728;
};
a0_0x298e86.prototype.getSpeciesPath = function () {
  return "ocean/squid/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x298e86.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x298e86.prototype.getAbilityInfo = function (_0x4e7a9b) {
  var _0x29f0fa = {
    abilName: "INK!"
  };
  _0x29f0fa.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x29f0fa.skinThemeID = this.skinThemeID;
  _0x29f0fa.mopeSeasonID = this.mopeSeasonID;
  return _0x29f0fa;
};
a0_0x298e86.prototype.drawUnderSkinImg = function () {
  if (this.animalSpecies == 0 || this.animalSpecies == 201) {
    var _0x861b3 = 500 / 340;
    var _0x48d5eb = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/cape.png");
    if (_0x48d5eb) {
      a0_0x1306ae.save();
      var _0x1c611c = 1.1;
      var _0x243f13 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x48d5eb, -_0x243f13 * _0x861b3, -_0x243f13 * _0x1c611c * _0x861b3, _0x243f13 * 2 * _0x861b3, _0x243f13 * 2 * _0x861b3);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x298e86() {
  a0_0x298e86.superClass.call(this, a0_0x24738f);
}
window.Squid = a0_0x298e86;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x298e86, a0_0x24738f, a0_0x384a46);
var a0_0x28626c = a0_0x2449e7;
a0_0x25312f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x25312f.prototype.constructor = a0_0x25312f;
a0_0x25312f.superClass = a0_0x28626c;
a0_0x25312f.prototype.updateZ = function () {
  if (this.flag_underWater) {
    this.z = -151;
  } else {
    this.z = this.rad;
  }
};
a0_0x25312f.prototype.animalInfo = function () {
  var _0x547bbd = {};
  switch (this.animalSpecies) {
    case 0:
      _0x547bbd.aniName = "Shark!";
      break;
    case 1:
      _0x547bbd.aniName = "Tiger Shark!";
      break;
    case 2:
      _0x547bbd.aniName = "Hammerhead Shark!";
      break;
    case 111:
      _0x547bbd.aniName = "Classic Shark";
      break;
    case 112:
      _0x547bbd.aniName = "Gold-trim Shark";
      break;
    case 201:
      _0x547bbd.aniName = "Surfboard Chomper!";
      break;
  }
  _0x547bbd.skinName = this.getSkinName();
  _0x547bbd.upgradeText = "UPGRADED to " + _0x547bbd.aniName + "\n A vicious predator of the oceans!";
  _0x547bbd.aniCol = "#999fc6";
  return _0x547bbd;
};
a0_0x25312f.prototype.getAbilityInfo = function (_0x3dc454) {
  var _0x2889c7 = {
    abilName: "Jaws Bite"
  };
  _0x2889c7.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x2889c7.skinThemeID = this.skinThemeID;
  _0x2889c7.mopeSeasonID = this.mopeSeasonID;
  return _0x2889c7;
};
a0_0x25312f.prototype.getSkinName = function () {
  let _0x48a9eb = this.getSpeciesPath() + "/shark";
  return _0x48a9eb;
};
a0_0x25312f.prototype.getSpeciesPath = function () {
  return "ocean/shark/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x25312f.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x25312f.prototype.getSkinImageObj = function (_0x5c6ec6) {
  var _0x5caf97 = this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x5c6ec6, _0x5caf97);
};
a0_0x25312f.prototype.drawUnderSkinImg = function () {
  if (this.flag_underWater) {
    return;
  }
  var _0x71dcb9 = 1.33;
  var _0x2e711b = 1;
  var _0x498519 = 500 / 340 * _0x2e711b;
  var _0x286fbb = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
  if (_0x286fbb) {
    a0_0x1306ae.save();
    var _0x261b2e = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x286fbb, -_0x261b2e * _0x498519, -_0x261b2e * _0x71dcb9 * _0x498519, _0x261b2e * 2 * _0x498519, _0x261b2e * 2 * _0x498519);
    a0_0x1306ae.restore();
  }
};
function a0_0x25312f() {
  a0_0x25312f.superClass.call(this, a0_0x24738f);
}
window.Shark = a0_0x25312f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x25312f, a0_0x24738f, a0_0x59f431);
var a0_0x28626c = a0_0x2449e7;
a0_0x4249a9.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4249a9.prototype.constructor = a0_0x4249a9;
a0_0x4249a9.superClass = a0_0x28626c;
a0_0x4249a9.prototype.animalInfo = function () {
  var _0x3936d3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3936d3.aniName = "Turtle!";
      break;
    case 111:
      _0x3936d3.aniName = "Classic Turtle";
      break;
    case 112:
      _0x3936d3.aniName = "Gold-trim Turtle";
      break;
    case 200:
      _0x3936d3.aniName = "Leather Back Turtle!";
      break;
    case 201:
      _0x3936d3.aniName = "Kiwi Turtle!";
      break;
    case 202:
      _0x3936d3.aniName = "Molten Lava Turtle";
      break;
  }
  _0x3936d3.skinName = this.getSkinName();
  _0x3936d3.aniDesc = "";
  _0x3936d3.upgradeText = "UPGRADED to " + _0x3936d3.aniName + "\n Lives well on land & water! (On land, Press W to go into your shell!)";
  _0x3936d3.aniCol = "#502E1A";
  return _0x3936d3;
};
a0_0x4249a9.prototype.getAbilityInfo = function (_0x1e7073) {
  var _0x513943 = {
    abilName: "Hide in Shell!"
  };
  _0x513943.abilImg = "skins/" + this.getSpeciesPath() + "/turtle2.png";
  _0x513943.skinThemeID = this.skinThemeID;
  _0x513943.mopeSeasonID = this.mopeSeasonID;
  return _0x513943;
};
a0_0x4249a9.prototype.getSkinName = function () {
  let _0x405885 = this.getSpeciesPath() + "/turtle";
  if (this.flag_usingAbility) {
    _0x405885 += "2";
  } else {
    _0x405885 += this.specType == 0 ? "" : 1;
  }
  return _0x405885;
};
a0_0x4249a9.prototype.getSpeciesPath = function () {
  return "ocean/turtle/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4249a9.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x4249a9.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    if (this.specType == 1) {
      var _0x58a2aa = 500 / 340;
      var _0x18432d = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/head.png");
      if (_0x18432d) {
        var _0x1ddf55 = 0.88;
        a0_0x1306ae.save();
        var _0x3b457f = this.rad - this.outlineW;
        a0_0x1306ae.drawImage(_0x18432d, -_0x3b457f * _0x58a2aa, -_0x3b457f * _0x1ddf55 * _0x58a2aa, _0x3b457f * 2 * _0x58a2aa, _0x3b457f * 2 * _0x58a2aa);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x4249a9() {
  a0_0x4249a9.superClass.call(this, a0_0x24738f);
}
window.Turtle = a0_0x4249a9;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4249a9, a0_0x24738f, a0_0x4a4da1);
var a0_0x28626c = a0_0x2449e7;
a0_0xb6db39.prototype = Object.create(a0_0x28626c.prototype);
a0_0xb6db39.prototype.constructor = a0_0xb6db39;
a0_0xb6db39.superClass = a0_0x28626c;
a0_0xb6db39.prototype.getAniRadius = function (_0x33a362) {
  return _0x33a362;
};
a0_0xb6db39.prototype.animalInfo = function () {
  var _0x4c72f6 = {};
  switch (this.animalSubSpecies) {
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x4c72f6.aniName = "Swordfish!";
          break;
        case 111:
          _0x4c72f6.aniName = "Classic Swordfish!";
          break;
        case 112:
          _0x4c72f6.aniName = "Gold-trim Swordfish!";
          break;
        case 201:
          _0x4c72f6.aniName = "Surfboardfish";
          break;
      }
      break;
    case 202:
      _0x4c72f6.aniName = "Rocket Swordfish";
      break;
    case 204:
      _0x4c72f6.aniName = "Chainsaw Fish";
    case 2023:
      _0x4c72f6.aniName = "Soda Fish";
      break;
  }
  _0x4c72f6.skinName = this.getSkinName();
  _0x4c72f6.upgradeText = "UPGRADED to " + _0x4c72f6.aniName + "\n (Press W to rush with your sharp nose!)";
  _0x4c72f6.aniCol = "#689CD7";
  return _0x4c72f6;
};
a0_0xb6db39.prototype.getAbilityInfo = function (_0x258cb7) {
  var _0x240a53 = {
    abilName: "Charge!"
  };
  _0x240a53.abilImg = "skins/" + this.getSpeciesPath() + "/ability.png";
  _0x240a53.skinThemeID = this.skinThemeID;
  _0x240a53.mopeSeasonID = this.mopeSeasonID;
  return _0x240a53;
};
a0_0xb6db39.prototype.getSkinName = function () {
  let _0x98b653 = this.getSpeciesPath() + "/swordfish";
  if (this.flag_usingAbility) {
    _0x98b653 += "2";
  } else {
    _0x98b653 += this.specType == 0 ? "" : 1;
  }
  return _0x98b653;
};
a0_0xb6db39.prototype.getSpeciesPath = function () {
  return "ocean/swordfish/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
a0_0xb6db39.prototype.drawSkinCustomization = function () {};
a0_0xb6db39.prototype.oldBasicDrawSkinImg = a0_0xb6db39.prototype.basicDrawSkinImg;
a0_0xb6db39.prototype.basicDrawSkinImg = function () {
  if (this.mopeSeasonID < 2) {
    this.oldBasicDrawSkinImg();
  } else {
    this.setSkinScale();
    var _0x30b7e6 = this.skinScale;
    var _0x401653 = this.rad;
    var _0x51ee26 = 0;
    var _0x1079be = 1.2;
    var _0xf64e0 = -_0x1079be / 4;
    if (this.loadedSkinImg) {
      a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x401653 * _0x30b7e6 + _0x401653 * _0x51ee26, -_0x401653 * _0x30b7e6 + _0x401653 * _0xf64e0, _0x401653 * 2 * _0x30b7e6, _0x401653 * 2 * (_0x30b7e6 * _0x1079be));
    }
  }
};
a0_0xb6db39.prototype.drawUnderSkinImg = function () {
  if (this.mopeSeasonID >= 2) {
    return;
  }
  var _0x2bd18f = 0.7;
  var _0xeb34d5 = 1.15;
  var _0x10c04f = 500 / 340;
  var _0x14653f = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/nose.png");
  if (_0x14653f) {
    a0_0x1306ae.save();
    var _0x369373 = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x14653f, -_0x369373 * _0x10c04f, -_0x369373 * _0x2bd18f * _0x10c04f, _0x369373 * 2 * _0x10c04f, _0x369373 * 2 * _0x10c04f);
    a0_0x1306ae.restore();
  }
  var _0x14653f = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/tail.png");
  if (_0x14653f) {
    a0_0x1306ae.save();
    var _0x369373 = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x14653f, -_0x369373 * _0x10c04f, -_0x369373 * _0xeb34d5 * _0x10c04f, _0x369373 * 2 * _0x10c04f, _0x369373 * 2 * _0x10c04f);
    a0_0x1306ae.restore();
  }
};
a0_0xb6db39.prototype.getSkinImageObj = function (_0x229560) {
  var _0x31cdd3 = this.animalSpecies === 201 ? 1 : this.mopeSeasonID;
  return this.getSkinImageObjForSeason(_0x229560, _0x31cdd3);
};
function a0_0xb6db39() {
  a0_0xb6db39.superClass.call(this, a0_0x24738f);
}
window.Swordfish = a0_0xb6db39;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xb6db39, a0_0x24738f, a0_0x182226);
var a0_0x28626c = a0_0x2449e7;
a0_0x379981.prototype = Object.create(a0_0x28626c.prototype);
a0_0x379981.prototype.constructor = a0_0x379981;
a0_0x379981.superClass = a0_0x28626c;
a0_0x379981.prototype.animalInfo = function () {
  var _0x38bbec = {};
  switch (this.animalSpecies) {
    case 0:
      _0x38bbec.aniName = "Crab!";
      break;
    case 111:
      _0x38bbec.aniName = "Classic Crab";
      break;
    case 112:
      _0x38bbec.aniName = "Gold-trim Crab";
      break;
    case 200:
      _0x38bbec.aniName = "Metallic Crab!";
      break;
    case 201:
      _0x38bbec.aniName = "Coconut Crab!";
      break;
    case 204:
      _0x38bbec.aniName = "Dark Matter Crab!";
      break;
  }
  _0x38bbec.skinName = this.getSkinName();
  _0x38bbec.aniDesc = "";
  _0x38bbec.upgradeText = "UPGRADED to " + _0x38bbec.aniName + "\n Crabs can survive on dry land!\n (On land, Press W to go into your shell!)";
  _0x38bbec.aniCol = "#bf2408";
  return _0x38bbec;
};
a0_0x379981.prototype.getAbilityInfo = function (_0x4a3177) {
  var _0xb5be58 = {
    abilName: "Hide in Shell!"
  };
  _0xb5be58.abilImg = "skins/" + this.getSpeciesPath() + "/crab2.png";
  _0xb5be58.skinThemeID = this.skinThemeID;
  _0xb5be58.mopeSeasonID = this.mopeSeasonID;
  return _0xb5be58;
};
a0_0x379981.prototype.getSkinName = function () {
  let _0x185200 = this.getSpeciesPath() + "/crab";
  if (this.flag_usingAbility) {
    _0x185200 += "2";
  } else {
    _0x185200 += this.specType == 0 ? "" : 1;
  }
  return _0x185200;
};
a0_0x379981.prototype.getSpeciesPath = function () {
  return "ocean/crab/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x379981.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x379981.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x5d053c = this.skinScale;
  var _0x353161 = this.skinRad;
  a0_0x1306ae.save();
  if (this.id > 0) {
    a0_0x1306ae.rotate(a0_0x873ec7(90));
  }
  if (this.loadedSkinImg) {
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x353161 * _0x5d053c, -_0x353161 * _0x5d053c, _0x353161 * 2 * _0x5d053c, _0x353161 * 2 * _0x5d053c);
  } else {
    a0_0x1306ae.fillStyle = this.skinNotLoadedColor;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - this.outlineW), 0, Math.PI * 2);
    a0_0x1306ae.fill();
  }
  a0_0x1306ae.restore();
};
function a0_0x379981() {
  a0_0x379981.superClass.call(this, a0_0x24738f);
}
window.Crab = a0_0x379981;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x379981, a0_0x24738f, a0_0x200e1e);
var a0_0x28626c = a0_0x2449e7;
a0_0x30f37d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x30f37d.prototype.constructor = a0_0x30f37d;
a0_0x30f37d.superClass = a0_0x28626c;
a0_0x30f37d.prototype.animalInfo = function () {
  var _0x1f50a2 = {
    aniName: "Snail",
    aniCol: "#FF9000",
    skinName: "ocean/snail/snail"
  };
  _0x1f50a2.upgradeText = "UPGRADED to " + _0x1f50a2.aniName + "!\n Press W to hide in your shell!";
  return _0x1f50a2;
};
a0_0x30f37d.prototype.getSkinName = function () {
  var _0x4ad862 = "ocean/snail/snail";
  return _0x4ad862;
};
a0_0x30f37d.prototype.dir = 1;
a0_0x30f37d.prototype.snail_yOffset = 0.75;
a0_0x30f37d.prototype.wasUsingAbility = false;
a0_0x30f37d.prototype.animateHead = false;
a0_0x30f37d.prototype.animationIn = null;
a0_0x30f37d.prototype.animationOut = null;
a0_0x30f37d.prototype.offset = 0;
a0_0x30f37d.prototype.drawUnderSkinImg = function () {
  if (this.flag_usingAbility && !this.wasUsingAbility && this.animationIn == null) {
    this.wasUsingAbility = true;
    this.animationIn = new a0_0x556513(this, 1, a0_0x556513.arc);
    this.animationIn.keepLastFrame = true;
    this.animationIn.onFrameEntered = function (_0x5941aa) {
      if (!isNaN(_0x5941aa)) {
        if (this.forObj.offset < 0.35) {
          this.forObj.offset = _0x5941aa * 0.35 * 10;
        }
      }
    };
    this.animationIn.onStop = function () {
      this.forObj.offset = 0.35;
      this.forObj.wasUsingAbility = true;
      this.forObj.animationIn = null;
    };
  } else if (!this.flag_usingAbility && this.wasUsingAbility && this.animationOut == null) {
    this.wasUsingAbility = true;
    this.animationOut = new a0_0x556513(this, 3, a0_0x556513.halfWave);
    this.animationOut.keepLastFrame = true;
    this.animationOut.onFrameEntered = function (_0x919e9e) {
      if (!isNaN(_0x919e9e)) {
        this.forObj.offset = (1 - _0x919e9e) * 0.35;
      }
    };
    this.animationOut.onStop = function () {
      this.forObj.offset = 0;
      this.forObj.wasUsingAbility = false;
      this.forObj.animationOut = null;
    };
  }
  if (this.animationIn) {
    this.animationIn.run();
  }
  if (this.animationOut) {
    this.animationOut.run();
  }
  if (this.animationIn == null && this.animationOut == null && !this.wasUsingAbility) {
    this.offset = 0;
  }
  var _0x487de6 = 0.75 + this.offset;
  var _0x3250c5 = 500 / 340;
  var _0x4012f2 = this.getSkinImageObj("skins/ocean/snail/snail_head.png");
  if (_0x4012f2) {
    a0_0x1306ae.save();
    var _0xcbee51 = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x4012f2, -_0xcbee51 * _0x3250c5, -_0xcbee51 * _0x487de6 * _0x3250c5, _0xcbee51 * 2 * _0x3250c5, _0xcbee51 * 2 * _0x3250c5);
    a0_0x1306ae.restore();
  }
};
function a0_0x30f37d() {
  a0_0x30f37d.superClass.call(this, a0_0x24738f);
}
window.Snail = a0_0x30f37d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x30f37d, a0_0x24738f, a0_0x120a91);
var a0_0x28626c = a0_0x2449e7;
a0_0x4d4fce.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4d4fce.prototype.constructor = a0_0x4d4fce;
a0_0x4d4fce.superClass = a0_0x28626c;
a0_0x4d4fce.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x4d4fce.prototype.canUseTailslap = false;
a0_0x4d4fce.prototype.tailState = 0;
a0_0x4d4fce.prototype.lava = 100;
a0_0x4d4fce.prototype.getSkinName = function () {
  var _0x43e1f3 = a0_0x59c93b || a0_0x56bbb3 == a0_0xbf9ed5 ? "kingdragon" : "kingdragon_body";
  return "volcano/kingdragon/" + this.animalSpecies + "/" + _0x43e1f3;
};
a0_0x4d4fce.prototype.customUpdatedProperty = function (_0x132e60, _0x1cda60) {
  if (_0x132e60 == a0_0x52a92a) {
    this.canUseTailslap = _0x1cda60.readUInt8() == 1;
  } else if (_0x132e60 == a0_0x4b1e42) {
    this.tailState = _0x1cda60.readUInt16() / 100;
  }
};
a0_0x4d4fce.prototype.leftWingAnim = null;
a0_0x4d4fce.prototype.flapAngleDiff = 3;
a0_0x4d4fce.prototype.flapAngle = 3;
a0_0x4d4fce.prototype.flapF = 0.1;
a0_0x4d4fce.prototype.flapDur = 2;
a0_0x4d4fce.prototype.sF = 0.02;
a0_0x4d4fce.prototype.drawWings = function () {
  if (a0_0x56bbb3 == a0_0xbf9ed5 || a0_0x59c93b) {
    return;
  }
  if (this.leftWingAnim == null) {
    this.leftWingAnim = new a0_0x556513(this, this.flapDur, a0_0x556513.wave);
    this.leftWingAnim.keepLastFrame = true;
    this.leftWingAnim.loop = true;
    this.leftWingAnim.onFrameEntered = function (_0x251e35) {
      this.forObj.frame1 = _0x251e35;
    };
  }
  if (this.leftWingAnim != null) {
    this.leftWingAnim.run();
  }
  var _0x406bea = this.rad - this.outlineW;
  var _0x56961e = this.frame1 * this.sF * _0x406bea;
  var _0x16773e = -(-this.flapF + this.frame1);
  var _0x58a666 = _0x16773e * a0_0x873ec7(this.flapAngle);
  var _0x42ce77 = 500 / 340;
  var _0x531da0 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing.png");
  var _0x331ae8 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing.png");
  if (_0x531da0 && _0x331ae8) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x58a666);
    a0_0x1306ae.drawImage(_0x531da0, -_0x406bea * _0x42ce77, -_0x406bea * _0x42ce77 + _0x56961e, _0x406bea * 2 * _0x42ce77, _0x406bea * 2 * _0x42ce77 + _0x56961e * 1.5);
    a0_0x1306ae.restore();
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x58a666));
    a0_0x1306ae.drawImage(_0x331ae8, -_0x406bea * _0x42ce77, -_0x406bea * _0x42ce77 + _0x56961e, _0x406bea * 2 * _0x42ce77, _0x406bea * 2 * _0x42ce77 + _0x56961e * 1.5);
    a0_0x1306ae.restore();
    if (this.animalSpecies == 4) {
      let _0x28732c = a0_0xae444c("kd", this.spawnTime);
      if (_0x28732c !== undefined && _0x28732c != null) {
        this.theFrame = _0x28732c;
      }
      let _0x1a5a91 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = Math.max(0, _0x1a5a91);
      var _0x21b80d = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing_tips.png");
      var _0x270b54 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing_tips.png");
      if (_0x21b80d && _0x270b54) {
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x58a666);
        a0_0x1306ae.drawImage(_0x21b80d, -_0x406bea * _0x42ce77, -_0x406bea * _0x42ce77 + _0x56961e, _0x406bea * 2 * _0x42ce77, _0x406bea * 2 * _0x42ce77 + _0x56961e * 1.5);
        a0_0x1306ae.restore();
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x58a666));
        a0_0x1306ae.drawImage(_0x270b54, -_0x406bea * _0x42ce77, -_0x406bea * _0x42ce77 + _0x56961e, _0x406bea * 2 * _0x42ce77, _0x406bea * 2 * _0x42ce77 + _0x56961e * 1.5);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
  }
  var _0x11f624 = this.lava;
  var _0x2dcc2a = 50;
  if (_0x11f624 < _0x2dcc2a) {
    var _0x42333d = _0x11f624 / _0x2dcc2a;
    var _0x2b799f = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/left_wing1.png");
    var _0x22a105 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/right_wing2.png");
    if (_0x2b799f && _0x22a105) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1 - _0x42333d;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x58a666);
      a0_0x1306ae.drawImage(_0x2b799f, -_0x406bea * _0x42ce77, -_0x406bea * _0x42ce77 + _0x56961e, _0x406bea * 2 * _0x42ce77, _0x406bea * 2 * _0x42ce77 + _0x56961e * 1.5);
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x58a666));
      a0_0x1306ae.drawImage(_0x22a105, -_0x406bea * _0x42ce77, -_0x406bea * _0x42ce77 + _0x56961e, _0x406bea * 2 * _0x42ce77, _0x406bea * 2 * _0x42ce77 + _0x56961e * 1.5);
      a0_0x1306ae.restore();
      a0_0x1306ae.restore();
    }
  }
};
a0_0x4d4fce.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater) {
    return;
  }
  if (a0_0x56bbb3 == a0_0xbf9ed5 || a0_0x59c93b) {
    return;
  }
  var _0x2891df = 500 / 340;
  let _0xa3fb0 = a0_0xae444c("kd", this.spawnTime);
  if (_0xa3fb0 !== undefined && _0xa3fb0 != null) {
    this.theFrame = _0xa3fb0;
  }
  let _0x3dbeb5 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
  var _0x3c35f9 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/nostrils.png");
  if (_0x3c35f9) {
    a0_0x1306ae.save();
    var _0x135a66 = this.lava;
    var _0x495760 = 100;
    var _0xb0a7a0 = _0x135a66 / _0x495760;
    a0_0x1306ae.globalAlpha = Math.max(0, _0x3dbeb5) * _0xb0a7a0;
    var _0x50169a = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x3c35f9, -_0x50169a * _0x2891df, -_0x50169a * _0x2891df, _0x50169a * 2 * _0x2891df, _0x50169a * 2 * _0x2891df);
    a0_0x1306ae.restore();
  }
  if (!this.canUseTailslap) {
    var _0x436d58 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone1.png");
    if (_0x436d58) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 1;
      var _0x50169a = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x436d58, -_0x50169a * _0x2891df, -_0x50169a * _0x2891df, _0x50169a * 2 * _0x2891df, _0x50169a * 2 * _0x2891df);
      a0_0x1306ae.restore();
    }
    var _0x3b8f22 = 0;
    if (this.tailState < 11 && this.tailState > 5) {
      var _0x4385b8 = this.tailState - 5;
      _0x3b8f22 = _0x4385b8 / 6;
    } else if (this.tailState <= 3) {
      _0x3b8f22 = this.tailState / 3;
    }
    var _0x2fc81e = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone3.png");
    if (this.tailState < 11) {
      if (_0x2fc81e) {
        a0_0x1306ae.save();
        if (this.tailState > 5) {
          a0_0x1306ae.globalAlpha = 1 - _0x3b8f22;
        } else {
          a0_0x1306ae.globalAlpha = 1;
        }
        var _0x50169a = this.rad - this.outlineW;
        a0_0x1306ae.drawImage(_0x2fc81e, -_0x50169a * _0x2891df, -_0x50169a * _0x2891df, _0x50169a * 2 * _0x2891df, _0x50169a * 2 * _0x2891df);
        a0_0x1306ae.restore();
      }
    }
    var _0x195183 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (this.tailState < 3) {
      if (_0x195183) {
        a0_0x1306ae.save();
        a0_0x1306ae.globalAlpha = 1 - _0x3b8f22;
        var _0x50169a = this.rad - this.outlineW;
        a0_0x1306ae.drawImage(_0x195183, -_0x50169a * _0x2891df, -_0x50169a * _0x2891df, _0x50169a * 2 * _0x2891df, _0x50169a * 2 * _0x2891df);
        a0_0x1306ae.restore();
      }
    }
  } else {
    var _0x195183 = this.getSkinImageObj("skins/volcano/kingdragon/" + this.animalSpecies + "/bone2.png");
    if (_0x195183) {
      a0_0x1306ae.save();
      var _0x6bffa3 = Math.max(0.3, _0x3dbeb5);
      a0_0x1306ae.globalAlpha = _0x6bffa3;
      var _0x50169a = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x195183, -_0x50169a * _0x2891df, -_0x50169a * _0x2891df, _0x50169a * 2 * _0x2891df, _0x50169a * 2 * _0x2891df);
      a0_0x1306ae.restore();
    }
  }
  this.drawWings();
};
a0_0x4d4fce.prototype.drawLowWaterDrop = function () {
  if (this.flag_underWater) {
    return;
  }
  if (this.flag_lowWat) {
    var _0x41f4d1 = 1.2;
    var _0x102630 = 0.2;
    var _0x12fb62 = 0.8;
    var _0x1e9e17 = (_0x12fb62 - _0x102630) * 0.5;
    var _0x30dffb = _0x102630 + _0x1e9e17 + _0x1e9e17 * Math.sin(Math.PI * 2 / _0x41f4d1 * (a0_0x24806e / 1000));
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x30dffb;
    a0_0x1306ae.fillStyle = a0_0xcf4b9b;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, this.rad + 5, 5, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
};
a0_0x4d4fce.prototype.animalInfo = function () {
  var _0x4da610 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4da610.aniName = "King Dragon";
      break;
    case 1:
      _0x4da610.aniName = "Golden King Dragon";
      break;
    case 2:
      _0x4da610.aniName = "King Ripper";
      break;
    case 3:
      _0x4da610.aniName = "King Stan";
      break;
    case 4:
      _0x4da610.aniName = "King Shah";
      break;
    case 5:
      _0x4da610.aniName = "Queen Scarlet";
      break;
    case 6:
      _0x4da610.aniName = "Queen Celeste";
      break;
    case 111:
      _0x4da610.aniName = "Classic King Dragon";
      break;
    case 200:
      _0x4da610.aniName = "Queen Flame";
      break;
    case 202:
      _0x4da610.aniName = "King Graveyard";
      break;
  }
  _0x4da610.aniCol = "#FF9000";
  _0x4da610.skinName = this.getSkinName();
  _0x4da610.upgradeText = "UPGRADED to " + _0x4da610.aniName;
  _0x4da610.upgradeText += "!\nYou got firestream that burns your victim alive! Watch your tail and slap them hard.";
  _0x4da610.aniCol = "black";
  return _0x4da610;
};
a0_0x4d4fce.prototype.getAbilityInfo = function (_0x22747a) {
  var _0x138b27 = {
    abilName: "Firestream\n& Tail slap"
  };
  var _0x20c640 = 0;
  switch (this.animalSpecies) {
    case 0:
      _0x20c640 = 1;
      break;
    case 1:
      _0x20c640 = 2;
      break;
    case 2:
      _0x20c640 = 4;
      break;
    case 3:
      _0x20c640 = 5;
      break;
    case 4:
      _0x20c640 = 6;
      break;
    case 5:
      _0x20c640 = 9;
      break;
    case 6:
      _0x20c640 = 8;
      break;
  }
  _0x138b27.speciesType = _0x20c640;
  _0x138b27.abilImg = "img/fire/" + _0x20c640 + "/0.png";
  _0x138b27.skinThemeID = this.skinThemeID;
  _0x138b27.mopeSeasonID = this.mopeSeasonID;
  return _0x138b27;
};
function a0_0x4d4fce() {
  this.lava = 100;
  a0_0x4d4fce.superClass.call(this, a0_0x24738f);
}
window.KingDragon = a0_0x4d4fce;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4d4fce, a0_0x24738f, a0_0x5d0b67);
var a0_0x28626c = a0_0x42171b;
a0_0x523118.prototype = Object.create(a0_0x28626c.prototype);
a0_0x523118.prototype.constructor = a0_0x523118;
a0_0x523118.superClass = a0_0x28626c;
a0_0x523118.prototype.updateZ = function () {
  this.z = -140;
};
a0_0x523118.prototype.shiverF = 0.015;
a0_0x523118.prototype.drawTranslate = function () {
  a0_0x1306ae.translate(this.x, this.y);
  a0_0x1306ae.save();
  if (this.eruption >= this.shakeStart && this.eruption <= this.shakeEnd + 1) {
    if (this.eruption >= this.shakeStart + 2) {
      this.shiverF = 0.025;
    } else {
      this.shiverF = 0.015;
    }
    var _0x2ab59d = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x29811e = 0.2;
    var _0x271806 = this.rad * this.shiverF;
    this.shakeOffsetX = _0x271806 * Math.sin(Math.PI * 2 / _0x29811e * _0x2ab59d);
    var _0x29811e = 0.3;
    var _0x271806 = this.rad * this.shiverF;
    this.shakeOffsetY = _0x271806 * Math.sin(Math.PI * 2 / _0x29811e * _0x2ab59d);
    a0_0x1306ae.translate(-this.shakeOffsetX, -this.shakeOffsetY);
  }
};
a0_0x523118.prototype.drawHealthBar = function () {
  a0_0x1306ae.restore();
};
a0_0x523118.prototype.customDraw2 = function (_0xe55c90) {};
a0_0x523118.prototype.customDraw = function (_0x1a24e5) {
  if (this.curBiome == a0_0x46c6b6) {
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 1), "#faf6f2");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.6), "#e0dbd5");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.5), "#9DDADE");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.45), "#9DDADE");
  } else if (this.curBiome == a0_0x44697a) {
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 1), "#cebe58");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.75), "#b4a53e");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.5), "#ca6423");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.45), "#923c04");
  } else {
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 1), "#815427");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.6), "#6e4b29");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.5), "#543d28");
    a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.45), "#3f3124");
  }
  var _0xdd649e = 0;
  switch (Math.round(this.erruption)) {
    case 0:
      _0xdd649e = 0;
      break;
    case 1:
      _0xdd649e = 0;
      break;
    case 2:
      _0xdd649e = 1;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.25), a0_0xcf4b9b);
      break;
    case 3:
      _0xdd649e = 2;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.25), a0_0xcf4b9b);
      break;
    case 4:
    case 5:
    case 6:
      _0xdd649e = 3;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.33), a0_0xcf4b9b);
      break;
    case 7:
      _0xdd649e = 2;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.25), a0_0xcf4b9b);
      break;
    case 8:
      _0xdd649e = 1;
      a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.25), a0_0xcf4b9b);
      break;
    case 9:
      _0xdd649e = 0;
      break;
    case 10:
      _0xdd649e = 0;
      break;
  }
  a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.33), "#241e19");
  a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.25), "#120f0d");
  a0_0x50fd5c(0, 0, Math.max(0, this.rad * 0.33), a0_0xcf4b9b);
  if (this.erruption > 1 && this.erruption < 10) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1 - this.underwaterA;
    var _0x10bc19 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x4e0007 = 1.5;
    var _0x1e927d = 2;
    var _0x400d4d = _0x1e927d * Math.sin(Math.PI * 2 / _0x4e0007 * _0x10bc19);
    a0_0x1306ae.fillStyle = "yellow";
    var _0x802103 = Math.max(0, this.rad * 0.2) * 0.15;
    a0_0x1306ae.beginPath();
    var _0x221e25 = 1;
    for (i = 1; i <= _0x221e25; i++) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.2;
      a0_0x1306ae.rotate(this.rPer * Math.PI * 2 * i);
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x802103 * -0.35, _0x802103 * -0.33, Math.max(0, _0x802103 + _0x400d4d), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x802103 * 0.35, _0x802103 * -0.32, Math.max(0, _0x802103 - _0x400d4d), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x802103 * 0.35, _0x802103 * 0.36, Math.max(0, _0x802103 + _0x400d4d), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x802103 * -0.35, _0x802103 * 0.35, Math.max(0, _0x802103 - _0x400d4d), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  }
  if (this.curBiome == a0_0x46c6b6) {
    a0_0x1306ae.save();
    var _0x64b57b = this.getSkinImageObj("img/arcticano/" + _0xdd649e + ".png");
    if (_0x64b57b) {
      var _0xcd4336 = this.rad * 0.35;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x64b57b, -_0xcd4336, -_0xcd4336, _0xcd4336 * 2, _0xcd4336 * 2);
    }
    a0_0x1306ae.restore();
  }
};
a0_0x523118.prototype.readCustomData_onNewlyVisible = function (_0x27084e) {
  a0_0x523118.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x27084e);
  this.maxLvl = _0x27084e.readUInt8() / 10;
  this.shakeStart = _0x27084e.readUInt8() / 10;
  this.shakeEnd = _0x27084e.readUInt8() / 10;
  this.eruption = _0x27084e.readUInt16() / 100;
  this.spitLevelMin = this.maxLvl * 0.2;
  this.spitLevelMax = this.maxLvl * 0.8;
};
a0_0x523118.prototype.readUpdatedProperty = function (_0x1fa2fd, _0x362223) {
  if (_0x1fa2fd == a0_0x1c33bf) {
    this.eruption = _0x362223.readUInt16() / 100;
  }
};
function a0_0x523118() {
  a0_0x523118.superClass.call(this, a0_0x2b11cc);
}
window.Volcano = a0_0x523118;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x523118, a0_0x2b11cc);
var a0_0x2b9582 = a0_0x20279f;
var a0_0x28626c = a0_0x42171b;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x20279f.prototype.customDraw = function (_0xdf1c8) {
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  a0_0x1306ae.globalAlpha = 1;
  var _0x4af3be = this.getSkinImageObj("img/raindrop.png");
  if (_0x4af3be) {
    var _0x3e485f = this.rad * 2;
    a0_0x1306ae.drawImage(_0x4af3be, -_0x3e485f, -_0x3e485f, _0x3e485f * 2, _0x3e485f * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x20279f.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
function a0_0x20279f() {
  a0_0x20279f.superClass.call(this);
  this.spawnTime = a0_0x24806e;
}
window.RainDrop = a0_0x20279f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x20279f, a0_0x3523dd);
var a0_0x28626c = a0_0x42171b;
a0_0x2478c4.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2478c4.prototype.constructor = a0_0x2478c4;
a0_0x2478c4.superClass = a0_0x28626c;
a0_0x2478c4.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x2478c4.prototype.customDraw = function (_0x32e5ab) {
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    var _0x505a64 = 1;
    var _0x154370 = 0.15;
    var _0x2a00ba = 0.8;
    var _0x3d9b1c = (_0x2a00ba - _0x154370) * 0.5;
    var _0x543c73 = _0x154370 + _0x3d9b1c + _0x3d9b1c * Math.sin(Math.PI * 2 / _0x505a64 * (a0_0x24806e / 1000));
    a0_0x1306ae.save();
    {
      a0_0x1306ae.globalAlpha *= _0x543c73;
    }
    a0_0x1306ae.restore();
    var _0x505a64 = 1;
    var _0x154370 = 0.85;
    var _0x2a00ba = 1;
    var _0x3d9b1c = (_0x2a00ba - _0x154370) * 0.5;
    var _0x5e0e30 = _0x154370 + _0x3d9b1c + _0x3d9b1c * Math.sin(Math.PI * 2 / _0x505a64 * (a0_0x24806e / 1000));
    var _0x35d221 = Math.trunc(a0_0x24806e / 120) % 5;
    var _0x3d5ed2 = this.getSkinImageObj("gameobj/" + this.oType + "/" + _0x35d221 + ".png");
    if (_0x3d5ed2) {
      var _0x4b23c4 = 0;
      var _0x25f93f = this.rad * 0.4;
      var _0xf2967d = this.rad * 2 * (2 + _0x5e0e30 * 2) / 3;
      var _0x1a6b31 = this.rad * 3.5 * _0x5e0e30;
      var _0x269659 = 0.5;
      var _0x83ccaa = 0.95;
      a0_0x1306ae.save();
      {
        a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x5e0e30;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.drawImage(_0x3d5ed2, _0x4b23c4 + _0xf2967d * -_0x269659, _0x25f93f + _0x1a6b31 * -_0x83ccaa, _0xf2967d, _0x1a6b31);
      }
      a0_0x1306ae.restore();
    } else {}
  } else {
    var _0x3d5ed2 = this.getSkinImageObj("gameobj/" + this.oType + "/0.png");
    if (_0x3d5ed2) {
      var _0x505a64 = 1;
      var _0x154370 = 0.85;
      var _0x2a00ba = 1;
      var _0x3d9b1c = (_0x2a00ba - _0x154370) * 0.5;
      var _0x5e0e30 = _0x154370 + _0x3d9b1c + _0x3d9b1c * Math.sin(Math.PI * 2 / _0x505a64 * (a0_0x24806e / 1000));
      var _0x4b23c4 = 0;
      var _0x25f93f = this.rad * 0.4;
      var _0xf2967d = this.rad * 2 * (2 + _0x5e0e30 * 2) / 3;
      var _0x1a6b31 = this.rad * 3.5 * _0x5e0e30;
      var _0x269659 = 0.5;
      var _0x83ccaa = 0.95;
      a0_0x1306ae.save();
      {
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.drawImage(_0x3d5ed2, _0x4b23c4 + _0xf2967d * -_0x269659, _0x25f93f + _0x1a6b31 * -_0x83ccaa, _0xf2967d, _0x1a6b31);
      }
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x2478c4() {
  a0_0x2478c4.superClass.call(this, a0_0x4a511e);
}
window.Iceball = a0_0x2478c4;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2478c4, a0_0x4a511e);
var a0_0x28626c = a0_0x2449e7;
a0_0x254de5.prototype = Object.create(a0_0x28626c.prototype);
a0_0x254de5.prototype.constructor = a0_0x254de5;
a0_0x254de5.superClass = a0_0x28626c;
a0_0x254de5.prototype.animalInfo = function () {
  var _0x529623 = {};
  switch (this.animalSpecies) {
    default:
      _0x529623.aniName = "The BigFoot";
      break;
  }
  _0x529623.skinName = "land/bigfoot/" + this.animalSpecies + "/bigfoot";
  _0x529623.aniDesc = "";
  _0x529623.upgradeText = "UPGRADED to " + _0x529623.aniName + "! So it really exists... \n Right click/W to throw Spears. \nHold to make a fire (every 11s)";
  _0x529623.aniCol = "#839eb5";
  return _0x529623;
};
a0_0x254de5.prototype.getAbilityInfo = function (_0x3c5086) {
  var _0x2fa18f = {
    abilName: "Throw Spear\n (Hold for fire!)",
    abilImg: "skins/land/bigfoot/" + this.animalSpecies + "/ability.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x2fa18f;
};
a0_0x254de5.prototype.getSkinName = function () {
  var _0x3a31ec = "";
  _0x3a31ec = "land/bigfoot/" + this.animalSpecies + "/";
  if (this.flag_underWater || this.flag_isInArena) {
    _0x3a31ec += "thebigfoot";
  } else {
    _0x3a31ec += "bigfoot";
  }
  return _0x3a31ec;
};
a0_0x254de5.prototype.drawUnderSkinTail = function (_0x23df19) {
  if (!this.isCamouflage) {
    a0_0x254de5.superClass.prototype.drawUnderSkinTail.call(this, _0x23df19);
  }
};
a0_0x254de5.prototype.drawHealthBar = function () {
  if (!this.isCamouflage) {
    a0_0x254de5.superClass.prototype.drawHealthBar.call(this);
  }
};
a0_0x254de5.prototype.isTransforming = false;
a0_0x254de5.prototype.isCamouflage = false;
a0_0x254de5.prototype.carrotAlpha = 0;
a0_0x254de5.prototype.getIdealOpacity = function () {
  var _0x4f8434 = this.flag_underWater || this.flag_usingAbility && this.isTransforming || this.isCamouflage ? 0 : 1;
  return _0x4f8434;
};
a0_0x254de5.prototype.biteStart = 0;
a0_0x254de5.prototype.flapAmount = 3;
a0_0x254de5.prototype.flapDur = 1.5;
a0_0x254de5.prototype.roarStartT = -500;
a0_0x254de5.prototype.spearThrow = function () {
  a0_0x1306ae.save();
  var _0x240086 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm21.png");
  if (_0x240086) {
    var _0x21f09d = Math.min(1, (a0_0x24806e - this.biteStart) / 200);
    var _0x3f1da1 = a0_0x3cbcc1((a0_0x24806e - this.biteStart) / 300, 0, 1);
    var _0x433d81 = -_0x3f1da1 * a0_0x5c63e1;
    a0_0x1306ae.rotate(this.angle + _0x433d81);
    var _0x26ea6a = -this.rad * 1.75;
    var _0xea982c = this.rad / 2;
    var _0x201239 = this.rad;
    var _0x256e6c = _0x26ea6a * 2;
    var _0x21d8aa = _0x26ea6a * 2 * _0x21f09d;
    var _0x32a9b9 = 0.3;
    var _0x5a7425 = 0.8;
    a0_0x1306ae.drawImage(_0x240086, _0xea982c + _0x256e6c * -_0x32a9b9, _0x201239 + _0x21d8aa * -_0x5a7425 + _0x26ea6a, _0x256e6c, _0x21d8aa);
  }
  a0_0x1306ae.restore();
};
a0_0x254de5.prototype.showSpear = false;
a0_0x254de5.prototype.showHand = true;
a0_0x254de5.prototype.drawSkinCustomization = function () {
  if (this.flag_underWater || this.flag_isInArena) {
    return;
  }
  this.setSkinScale();
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
  }
  if (this.showSpear) {
    this.spearHandAnimation(0);
  } else if (this.showHand || this.id == 0) {
    this.leftHandAnimation(0);
  }
  this.rightHandAnimation(0);
  this.bigfootHead(0);
  if (!this.flag_usingAbility && !this.flag_inHidingHole) {
    this.oogaBoogaAnimation(0);
  }
};
a0_0x254de5.prototype.oogaBoogaNextT = +new Date() + 15000;
a0_0x254de5.prototype.oogaBoogaFrame = 0;
a0_0x254de5.prototype.oogaBoogaFrameT = 0;
a0_0x254de5.prototype.oogaBoogaAnimation = function (_0x381f6e) {
  if (a0_0x24806e > this.oogaBoogaNextT) {
    if (a0_0x24806e > this.oogaBoogaFrameT) {
      this.oogaBoogaFrameT = a0_0x24806e + 300;
      this.oogaBoogaFrame += 1;
      if (this.oogaBoogaFrame == 1) {
        this.gotChat("OOGA!");
      } else if (this.oogaBoogaFrame == 3) {
        this.gotChat("BOOGA!");
      }
    }
    if (this.oogaBoogaFrame > 4) {
      this.oogaBoogaFrame = 0;
      this.oogaBoogaNextT = +new Date() + 15000;
    }
  }
  if (this.oogaBoogaFrame > 0) {
    var _0x208d8b = 0;
    var _0x32dab4 = 500 / 340;
    var _0x7533a4 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/mouth" + this.oogaBoogaFrame + ".png");
    if (_0x7533a4) {
      a0_0x1306ae.save();
      var _0x41b0ef = this.rad;
      a0_0x1306ae.drawImage(_0x7533a4, -_0x41b0ef * _0x32dab4, (-_0x41b0ef + _0x41b0ef * _0x208d8b) * _0x32dab4, _0x41b0ef * 2 * _0x32dab4, _0x41b0ef * 2 * _0x32dab4);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x254de5.prototype.spearInHand = false;
a0_0x254de5.prototype.canCreateFire = false;
a0_0x254de5.prototype.readCustomData_onUpdate = function (_0x511839) {
  a0_0x254de5.superClass.prototype.readCustomData_onUpdate.call(this, _0x511839);
  var _0x2a0be5 = _0x511839.readBitGroup();
  this.showHand = _0x2a0be5.getBool();
  this.showSpear = this.showHand && _0x2a0be5.getBool();
  this.canCreateFire = _0x2a0be5.getBool();
};
var a0_0x4710b0 = 0.84;
var a0_0x247436 = 0.47;
var a0_0x2ecb79 = 45;
var a0_0x7213b = -30;
var a0_0x6d17a8 = 1.3;
var a0_0x433538 = 1.5;
var a0_0x5cac34 = 0.3;
a0_0x254de5.prototype.bigfootHead = function (_0x93bd05) {
  var _0xbba59e = 0;
  var _0x4a2e4a = 500 / 340;
  var _0x1118c7 = this.flag_usingAbility ? "head2" : "head";
  if (!this.flag_usingAbility) {
    _0xbba59e = 0;
  }
  var _0x494972 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/" + _0x1118c7 + ".png");
  if (_0x494972) {
    a0_0x1306ae.save();
    var _0x4a13c5 = this.rad;
    a0_0x1306ae.drawImage(_0x494972, -_0x4a13c5 * _0x4a2e4a, (-_0x4a13c5 + _0x4a13c5 * _0xbba59e) * _0x4a2e4a, _0x4a13c5 * 2 * _0x4a2e4a, _0x4a13c5 * 2 * _0x4a2e4a);
    a0_0x1306ae.restore();
  }
};
a0_0x254de5.prototype.spearHandAnimation = function (_0x2f8ddd) {
  var _0x81c06f = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x24054f = 0;
  if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
    _0x24054f = a0_0x423a9f(_0x81c06f, a0_0x433538, a0_0x5cac34, 2);
  }
  var _0x2c4546 = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm2.png");
  if (_0x2c4546) {
    a0_0x1306ae.save();
    var _0x329193 = -(-0.2 + _0x24054f) * a0_0x873ec7(a0_0x2ecb79);
    var _0x16c81e = this.rad * a0_0x6d17a8;
    a0_0x1306ae.rotate(a0_0x873ec7(a0_0x7213b) + _0x329193);
    var _0x40e0e1 = 0;
    var _0x5dd9aa = this.rad;
    var _0x5ba173 = _0x16c81e * 2;
    var _0x448629 = _0x16c81e * 2;
    var _0x3ac79d = a0_0x247436;
    var _0xd76a45 = a0_0x4710b0;
    a0_0x1306ae.drawImage(_0x2c4546, _0x40e0e1 + _0x5ba173 * -_0x3ac79d, _0x5dd9aa + _0x448629 * -_0xd76a45, _0x5ba173, _0x448629);
    if (this.canCreateFire) {
      var _0x374c2d = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm2-fire.png");
      if (_0x374c2d) {
        var _0x81c06f = (a0_0x24806e - this.spawnTime) / 1000;
        var _0x24054f = a0_0x423a9f(_0x81c06f, 5, 1, 1);
        a0_0x1306ae.globalAlpha = Math.max(0, _0x24054f);
        a0_0x1306ae.drawImage(_0x374c2d, _0x40e0e1 + _0x5ba173 * -_0x3ac79d, _0x5dd9aa + _0x448629 * -_0xd76a45, _0x5ba173, _0x448629);
      }
    }
    a0_0x1306ae.restore();
  }
};
a0_0x254de5.prototype.rightHandAnimation = function (_0x57bd66) {
  var _0x1c3fa4 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x19c984 = 0;
  if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
    _0x19c984 = a0_0x423a9f(_0x1c3fa4, a0_0x433538, a0_0x5cac34, 2);
  }
  var _0x1ef2ea = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm1.png");
  if (_0x1ef2ea) {
    a0_0x1306ae.save();
    var _0x2575f5 = -_0x19c984 * a0_0x873ec7(-10);
    var _0x5d5ba1 = this.rad * a0_0x6d17a8;
    a0_0x1306ae.rotate(a0_0x873ec7(-5) + _0x2575f5);
    var _0xafb319 = 0;
    var _0x3dfdf5 = this.rad;
    var _0x3fab48 = _0x5d5ba1 * 2;
    var _0xcb2cd7 = _0x5d5ba1 * 2;
    var _0x287e95 = 0.55;
    var _0x1be9a9 = 0.85;
    a0_0x1306ae.drawImage(_0x1ef2ea, _0xafb319 + _0x3fab48 * -_0x287e95, _0x3dfdf5 + _0xcb2cd7 * -_0x1be9a9, _0x3fab48, _0xcb2cd7);
    a0_0x1306ae.restore();
  }
};
a0_0x254de5.prototype.leftHandAnimation = function (_0x2f73c5) {
  var _0x18fac3 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0xb4238b = 0;
  if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
    if (this.id != a0_0x15e4d1 || !a0_0x59c93b) {
      _0xb4238b = a0_0x423a9f(_0x18fac3, a0_0x433538, a0_0x5cac34, 2);
    }
  }
  var _0xa9fcfc = this.getSkinImageObj("skins/land/bigfoot/" + this.animalSpecies + "/arm21.png");
  if (_0xa9fcfc) {
    a0_0x1306ae.save();
    var _0x101f9c = -_0xb4238b * a0_0x873ec7(-10);
    var _0x39759f = this.rad * a0_0x6d17a8;
    a0_0x1306ae.rotate(a0_0x873ec7(-5) + _0x101f9c);
    var _0x308779 = 0;
    var _0xd30f69 = this.rad;
    var _0x17d90a = _0x39759f * 2;
    var _0x2f3c94 = _0x39759f * 2;
    var _0x136751 = 0.47;
    var _0x30044a = 0.8;
    a0_0x1306ae.drawImage(_0xa9fcfc, _0x308779 + _0x17d90a * -_0x136751, _0xd30f69 + _0x2f3c94 * -_0x30044a, _0x17d90a, _0x2f3c94);
    a0_0x1306ae.restore();
  }
};
function a0_0x254de5() {
  a0_0x254de5.superClass.call(this, a0_0x24738f);
  this.oogaBoogaNextT = +new Date() + 15000;
}
window.BigFoot = a0_0x254de5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x254de5, a0_0x24738f, a0_0x465f60);
var a0_0x2b9582 = a0_0x3752ea;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x3752ea.prototype.victimID = 0;
a0_0x3752ea.prototype.updateZ = function () {
  if (this.effect_flying) {
    this.z = 100000;
  } else if (this.victimID == 0) {
    this.z = 1100;
  }
};
var a0_0x32f8e8 = 1;
var a0_0x19c5ea = 2;
var a0_0x571574 = 3;
a0_0x3752ea.prototype.customDraw = function (_0x15bd93) {
  a0_0x1306ae.save();
  if (this.spearState == a0_0x19c5ea) {
    var _0x54b378 = this.getSkinImageObj("skins/land/bigfoot/" + this.speciesType + "/spear.png");
    if (_0x54b378) {
      a0_0x1306ae.save();
      var _0x43138b = this.rad * 2;
      a0_0x1306ae.rotate(this.angle + a0_0x5c63e1);
      a0_0x1306ae.drawImage(_0x54b378, -_0x43138b / 2, -_0x43138b / 2, _0x43138b, _0x43138b * 4);
      a0_0x1306ae.restore();
    }
  } else if (this.spearState == a0_0x571574) {
    a0_0x1306ae.save();
    var _0x54b378 = this.getSkinImageObj("skins/land/bigfoot/" + this.speciesType + "/spear2.png");
    if (_0x54b378) {
      var _0x43138b = this.rad * 2;
      a0_0x1306ae.rotate(this.angle + a0_0x5c63e1);
      a0_0x1306ae.drawImage(_0x54b378, -_0x43138b / 2, -_0x43138b / 2, _0x43138b, _0x43138b * 4);
    }
    a0_0x1306ae.restore();
  } else if (this.spearState == a0_0x32f8e8) {
    var _0x59e96c = this.spearState;
    var _0x54b378 = this.getSkinImageObj("skins/land/bigfoot/" + this.speciesType + "/arm2.png");
    if (_0x54b378) {
      var _0x5e29c0 = Math.min(1, (a0_0x24806e - this.spawnTime) / 200);
      var _0x1d12d5 = a0_0x3cbcc1((a0_0x24806e - this.spawnTime) / 300, 0, 1);
      var _0x198c75 = -_0x1d12d5 * a0_0x5c63e1;
      a0_0x1306ae.rotate(this.angle + _0x198c75 * (this.specType == 1 ? 1 : -1));
      var _0x43138b = -this.rad * 1.5;
      var _0x22d513 = this.rad / 2;
      var _0x4604b1 = this.rad;
      var _0x5771f6 = _0x43138b * 2;
      var _0x56340d = _0x43138b * 2 * _0x5e29c0;
      var _0x5154ba = 0.3;
      var _0x33578c = 0.8;
      a0_0x1306ae.drawImage(_0x54b378, _0x22d513 + _0x5771f6 * -_0x5154ba, _0x4604b1 + _0x56340d * -_0x33578c + _0x43138b, _0x5771f6, _0x56340d);
    }
  }
  a0_0x1306ae.restore();
};
a0_0x3752ea.prototype.spearState = 0;
a0_0x3752ea.prototype.effect_flying = false;
a0_0x3752ea.prototype.readUpdatedProperty = function (_0x2b378f, _0x1ea732) {
  if (_0x2b378f == a0_0x216f84) {
    this.spearState = _0x1ea732.readUInt8();
  } else if (_0x2b378f == a0_0x35a06b) {
    this.victimID = _0x1ea732.readUInt32();
    if (this.victimID != 0) {
      if (a0_0x283a01[this.victimID]) {
        this.z = a0_0x283a01[this.victimID].z + 1;
      }
    }
  } else if (_0x2b378f == a0_0x50f980) {
    this.effect_flying = _0x1ea732.readUInt8() == 1;
  }
};
a0_0x3752ea.prototype.readCustomData_onNewlyVisible = function (_0x5cbe72) {
  a0_0x3752ea.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x5cbe72);
  this.spearState = _0x5cbe72.readUInt8();
  this.victimID = _0x5cbe72.readUInt32();
  if (this.victimID != 0) {
    if (a0_0x283a01[this.victimID]) {
      this.z = a0_0x283a01[this.victimID].z + 1;
    }
  }
  this.effect_flying = _0x5cbe72.readUInt8() == 1;
};
function a0_0x3752ea() {
  a0_0x3752ea.superClass.call(this);
  a0_0x3752ea.prototype.easeAngleChanges = true;
}
window.BigfootSpear = a0_0x3752ea;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3752ea, a0_0x382193, a0_0x2800f6);
var a0_0x28626c = a0_0x42171b;
a0_0x2dcc7d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2dcc7d.prototype.constructor = a0_0x2dcc7d;
a0_0x2dcc7d.superClass = a0_0x28626c;
a0_0x2dcc7d.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x2dcc7d.prototype.setSkinPath = function () {
  this.objSkinPath = "skins/land/bigfoot/" + this.speciesType + "/firewood.png";
};
a0_0x2dcc7d.prototype.customDraw = function (_0x41746a) {
  a0_0x1306ae.save();
  var _0x12a3db = this.rad * 2.2;
  var _0x80a776 = this.getSkinImageObj(this.objSkinPath);
  if (_0x80a776) {
    a0_0x1306ae.drawImage(_0x80a776, -_0x12a3db / 2, -_0x12a3db / 2, _0x12a3db, _0x12a3db);
  }
  a0_0x1306ae.restore();
};
var a0_0x53faac = 121;
function a0_0x2dcc7d() {
  a0_0x2dcc7d.superClass.call(this, a0_0x53faac);
}
window.FireWood = a0_0x2dcc7d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2dcc7d, a0_0x53faac);
var a0_0x28626c = a0_0x42171b;
a0_0x3e861c.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3e861c.prototype.constructor = a0_0x3e861c;
a0_0x3e861c.superClass = a0_0x28626c;
a0_0x3e861c.prototype.updateZ = function () {
  this.z = 1100;
};
a0_0x3e861c.prototype.alpha = 1;
a0_0x3e861c.prototype.trunkW = 0.5;
a0_0x3e861c.prototype.customDraw = function (_0x5627f9) {
  a0_0x1306ae.save();
  var _0x4d101d = 0;
  var _0x1ffb7a = 0;
  let _0x199742 = a0_0x5d69d3[this.id] == 1;
  var _0x2b49f3 = 1;
  try {
    if (_0x199742) {
      this.alpha += (0.4 - this.alpha) * 0.1;
    } else {
      this.alpha += (1 - this.alpha) * 0.1;
      if (this.alpha > 0.99) {
        this.alpha = 1;
      }
    }
  } catch (_0x3c5898) {}
  var _0x39cfde = this.getTreeName();
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    var _0x1341ca = this.getSkinImageObj("gameobj/101/" + _0x39cfde + "/" + this.getTrunk() + ".png");
    if (_0x1341ca) {
      var _0x4b8f24 = this.rad / 2;
      var _0x4cf24e = this.rPer * Math.PI * 2;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x1341ca, -_0x4b8f24, -_0x4b8f24, _0x4b8f24 * 2, _0x4b8f24 * 2);
    }
  }
  if (this.canopy) {
    var _0x47c2c7 = "canopy";
    if (_0x39cfde == "default") {
      _0x47c2c7 += this.curBiome;
    }
    var _0x4b8f24 = (this.foodType == a0_0x11ab7f ? this.rad * 1.25 : this.rad) + _0x4d101d;
    if (this.eventType == 2 && this.treeType != "default") {
      this.drawEventDecorations(_0x39cfde, _0x47c2c7, _0x4b8f24, _0x4cf24e);
    } else {
      if (this.xmasTree) {
        this.drawXmasProp(_0x39cfde, _0x4b8f24, _0x4cf24e, "ornament", _0x1ffb7a);
      }
      if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
        var _0x1341ca = this.getSkinImageObj(this.getCanopySkin(_0x39cfde, _0x47c2c7));
        if (_0x1341ca) {
          a0_0x1306ae.save();
          a0_0x1306ae.globalAlpha *= this.alpha;
          if (this.curBiome !== a0_0x44697a || this.speciesType !== 1) {
            a0_0x1306ae.rotate(this.angle);
          }
          a0_0x1306ae.drawImage(_0x1341ca, -_0x4b8f24 + _0x1ffb7a, -_0x4b8f24 - _0x1ffb7a, _0x4b8f24 * 2, _0x4b8f24 * 2);
          a0_0x1306ae.restore();
        } else {}
      } else {
        a0_0x1306ae.save();
        a0_0x50fd5c(0, 0, this.rad * 0.2, "brown");
        this.drawNoImageTree(this.rad);
        a0_0x1306ae.restore();
      }
      if (this.xmasTree) {
        this.drawXmasProps(_0x39cfde, _0x4b8f24, _0x4cf24e, _0x1ffb7a);
      }
    }
  }
  a0_0x1306ae.restore();
};
a0_0x3e861c.prototype.drawNoImageTree = function (_0x328ecb) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = this.alpha;
  var _0x4ae633 = this.getBiomeColors();
  a0_0x50fd5c(-_0x328ecb * 0.5, -_0x328ecb * 0.5, _0x328ecb * 0.65, _0x4ae633.dark);
  a0_0x50fd5c(_0x328ecb * 0.5, -_0x328ecb * 0.5, _0x328ecb * 0.73, _0x4ae633.dark);
  a0_0x50fd5c(_0x328ecb * 0.6, _0x328ecb * 0.4, Math.max(0, _0x328ecb * 0.78), _0x4ae633.dark);
  a0_0x50fd5c(-_0x328ecb * 0.5, _0x328ecb * 0.5, Math.max(0, _0x328ecb * 0.6), _0x4ae633.dark);
  a0_0x50fd5c(-_0x328ecb * 0.5, -_0x328ecb * 0.5, (_0x328ecb - 2) * 0.65, _0x4ae633.light);
  a0_0x50fd5c(_0x328ecb * 0.5, -_0x328ecb * 0.5, (_0x328ecb - 2) * 0.73, _0x4ae633.light);
  a0_0x50fd5c(_0x328ecb * 0.6, _0x328ecb * 0.4, (_0x328ecb - 2) * 0.78, _0x4ae633.light);
  a0_0x50fd5c(-_0x328ecb * 0.5, _0x328ecb * 0.5, (_0x328ecb - 2) * 0.6, _0x4ae633.light);
  a0_0x1306ae.restore();
  return;
  a0_0x1306ae.save();
  this.rPer = 0;
  var _0x978355 = 0;
  var _0x3d5f62 = "#45D157";
  a0_0x1306ae.fillStyle = color;
  a0_0x1306ae.globalAlpha = this.alpha;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(_0x328ecb * 0.5, -_0x328ecb * 0.5, Math.max(0, _0x328ecb * 0.73), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(_0x328ecb * 0.6, _0x328ecb * 0.4, Math.max(0, _0x328ecb * 0.78), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(-_0x328ecb * 0.5, _0x328ecb * 0.5, Math.max(0, _0x328ecb * 0.6), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
};
a0_0x3e861c.prototype.lights = 0;
a0_0x3e861c.prototype.drawXmasProps = function (_0xd44004, _0x4b7aed, _0x4a31fd, _0x41bbaf) {
  this.drawXmasProp(_0xd44004, _0x4b7aed, _0x4a31fd, "decoration", _0x41bbaf);
  if (this.lights == 1 || this.lights == 3) {
    this.drawXmasProp(_0xd44004, _0x4b7aed, _0x4a31fd, "light", _0x41bbaf);
  }
  if (this.lights == 2 || this.lights == 3) {
    this.drawXmasProp(_0xd44004, _0x4b7aed, _0x4a31fd, "light1", _0x41bbaf);
  }
};
a0_0x3e861c.prototype.drawXmasProp = function (_0x54955f, _0x45c6d0, _0x4e4c52, _0x13b455, _0x2485ae) {
  var _0x52494c = "img/tree/" + _0x54955f + "/xmas/" + _0x13b455 + ".png";
  var _0x34c334 = this.getSkinImageObj(_0x52494c);
  if (_0x34c334) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x34c334, -_0x45c6d0 + _0x2485ae, -_0x45c6d0 - _0x2485ae, _0x45c6d0 * 2, _0x45c6d0 * 2);
    a0_0x1306ae.restore();
  } else {
    console.log("not found: " + _0x52494c);
  }
};
a0_0x3e861c.prototype.drawEventDecorations = function (_0x4c869, _0x41c4df, _0x357e90, _0x20d2a7) {
  let _0x485614 = "gameobj/101/" + _0x4c869 + "/" + _0x41c4df + "_" + this.eventType + ".png";
  var _0x3785a4 = this.getSkinImageObj(_0x485614);
  if (_0x3785a4) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x3785a4, -_0x357e90 + _0x20d2a7, -_0x357e90 - _0x20d2a7, _0x357e90 * 2, _0x357e90 * 2);
    a0_0x1306ae.restore();
  } else {
    console.log("not found: " + _0x485614);
  }
};
a0_0x3e861c.prototype.drawEventDecorations = function (_0xabcf05, _0x4b0cb4, _0x11d563, _0x5c4766) {
  let _0xd9868f = "gameobj/101/" + _0xabcf05 + "/" + _0x4b0cb4 + "_" + this.eventType + ".png";
  var _0xd11c5e = this.getSkinImageObj(_0xd9868f);
  console.log(_0xd9868f);
  if (_0xd11c5e) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0xd11c5e, -_0x11d563 + _0x5c4766, -_0x11d563 - _0x5c4766, _0x11d563 * 2, _0x11d563 * 2);
    a0_0x1306ae.restore();
  }
};
a0_0x3e861c.prototype.getTreeName = function () {
  switch (this.foodType) {
    case a0_0x11ab7f:
      return "coco";
    case a0_0x3ad19b:
      return "banana";
    case a0_0x2ec460:
      return "fir";
  }
  return "default";
};
a0_0x3e861c.prototype.getBiomeColors = function () {
  var _0x2b6fbf = {
    dark: "#09992f",
    light: "#1cba34"
  };
  switch (this.curBiome) {
    case a0_0x46c6b6:
      _0x2b6fbf = {
        dark: "#808080",
        light: "#f7f7f7"
      };
      break;
    case a0_0x2f1e00:
    case a0_0x44697a:
      _0x2b6fbf = {
        dark: "#a59215",
        light: "#fffff"
      };
      break;
    case a0_0x4baee2:
      _0x2b6fbf = {
        dark: "#09992f",
        light: "#1cba34"
      };
      break;
    case a0_0x506ba5:
      _0x2b6fbf = {
        dark: "#09992f",
        light: "limegreen"
      };
      break;
    case a0_0x5986dd:
      _0x2b6fbf = {
        dark: "#1aae31",
        light: "limegreen"
      };
      break;
    default:
  }
  return _0x2b6fbf;
};
a0_0x3e861c.prototype.getTrunk = function () {
  return "trunk";
};
a0_0x3e861c.prototype.foodType = 0;
a0_0x3e861c.prototype.canopy = true;
a0_0x3e861c.prototype.readCustomData_onNewlyVisible = function (_0x3f0a37) {
  this.foodType = _0x3f0a37.readUInt16();
  this.canopy = _0x3f0a37.readUInt8() == 1;
  this.eventType = _0x3f0a37.readUInt8();
  this.xmasTree = this.eventType == 3;
};
a0_0x3e861c.prototype.readUpdatedProperty = function (_0x1c59ca, _0x55bde7) {
  if (_0x1c59ca == a0_0x165c88) {
    this.lights = _0x55bde7.readUInt8();
  }
};
a0_0x3e861c.prototype.treeCanopySkin = null;
a0_0x3e861c.prototype.getCanopySkin = function (_0x26c90d, _0x255c5a) {
  if (this.treeCanopySkin == null) {
    this.treeCanopySkin = "gameobj/101/" + _0x26c90d + "/" + _0x255c5a + ".png";
  }
  return this.treeCanopySkin;
};
function a0_0x3e861c() {
  a0_0x3e861c.superClass.call(this, a0_0x47adbb);
}
window.Tree = a0_0x3e861c;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3e861c, a0_0x47adbb);
var a0_0x2b9582 = a0_0x34b6b6;
var a0_0x28626c = a0_0x42171b;
a0_0x34b6b6.prototype = Object.create(a0_0x28626c.prototype);
a0_0x34b6b6.prototype.constructor = a0_0x34b6b6;
a0_0x34b6b6.superClass = a0_0x28626c;
a0_0x34b6b6.prototype.updateZ = function () {
  this.z = -215;
};
a0_0x34b6b6.prototype.customDraw = function (_0x5606fb) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.5;
  {
    a0_0x1306ae.fillStyle = a0_0x59eaa4;
    var _0x5e7b4c = -this.rectW / 2;
    var _0x2ba1a5 = this.rectW / 2;
    var _0x2350fc = -this.rectH / 2;
    var _0x3646a0 = this.rectH / 2;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(_0x5e7b4c, _0x2350fc);
    var _0x4bffed = 20;
    var _0x19f9c1 = [-15, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
    var _0x4316f0 = 45;
    var _0x2b2d27 = 0;
    var _0x287870 = a0_0x3acc86 - this.x;
    var _0x3e04f1 = 0 - this.x;
    var _0x4fda34 = a0_0x9b6712 - this.y;
    var _0x3b09a4 = 0 - this.y;
    var _0x548813;
    var _0x6a6582 = _0x5e7b4c - _0x4bffed;
    for (_0x548813 = _0x2350fc; _0x548813 < _0x3646a0; _0x548813 += _0x4316f0) {
      a0_0x1306ae.lineTo(Math.min(_0x287870, Math.max(_0x3e04f1, _0x6a6582 + _0x19f9c1[_0x2b2d27])), _0x548813);
      _0x2b2d27 = (_0x2b2d27 + 1) % _0x19f9c1.length;
    }
    a0_0x1306ae.lineTo(_0x5e7b4c, _0x3646a0);
    _0x548813 = _0x3646a0 + _0x4bffed;
    for (_0x6a6582 = _0x5e7b4c; _0x6a6582 < _0x2ba1a5; _0x6a6582 += _0x4316f0) {
      a0_0x1306ae.lineTo(_0x6a6582, Math.min(_0x4fda34, Math.max(_0x3b09a4, _0x548813 + _0x19f9c1[_0x2b2d27])));
      _0x2b2d27 = (_0x2b2d27 + 1) % _0x19f9c1.length;
    }
    a0_0x1306ae.lineTo(_0x2ba1a5, _0x3646a0);
    _0x6a6582 = _0x2ba1a5 + _0x4bffed;
    for (_0x548813 = _0x3646a0; _0x548813 > _0x2350fc; _0x548813 -= _0x4316f0) {
      a0_0x1306ae.lineTo(Math.min(_0x287870, Math.max(_0x3e04f1, _0x6a6582 + _0x19f9c1[_0x2b2d27])), _0x548813);
      _0x2b2d27 = (_0x2b2d27 + 1) % _0x19f9c1.length;
    }
    a0_0x1306ae.lineTo(_0x2ba1a5, _0x2350fc);
    _0x548813 = _0x2350fc - _0x4bffed;
    for (_0x6a6582 = _0x2ba1a5; _0x6a6582 > _0x5e7b4c; _0x6a6582 -= _0x4316f0) {
      a0_0x1306ae.lineTo(_0x6a6582, Math.min(_0x4fda34, Math.max(_0x3b09a4, _0x548813 + _0x19f9c1[_0x2b2d27])));
      _0x2b2d27 = (_0x2b2d27 + 1) % _0x19f9c1.length;
    }
    a0_0x1306ae.closePath();
    a0_0x1306ae.fill();
  }
  a0_0x1306ae.restore();
};
a0_0x34b6b6.prototype.edge = function () {
  a0_0x1306ae.save();
  var _0x1f2535 = 15;
  {
    a0_0x1306ae.fillStyle = "red";
    var _0x460916 = -this.rectW / 2;
    var _0x50f0fd = this.rectW / 2;
    var _0x21dd2f = -this.rectH / 2 + 3;
    var _0x15fc7c = -this.rectH / 2 - _0x1f2535;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(_0x460916, _0x21dd2f);
    var _0x222a31 = 0;
    var _0x1177ba = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
    var _0x29a32c = 60;
    var _0x3e4c40 = 0;
    var _0x54bb6c = a0_0x3acc86 - this.x;
    var _0xbe2fe1 = 0 - this.x;
    var _0xc878d7 = a0_0x9b6712 - this.y;
    var _0x406860 = 0 - this.y;
    var _0x514bdf;
    var _0x45237f = _0x460916 - _0x222a31;
    a0_0x1306ae.lineTo(_0x460916, _0x15fc7c);
    _0x514bdf = _0x15fc7c + _0x222a31;
    for (_0x45237f = _0x460916; _0x45237f < _0x50f0fd; _0x45237f += _0x29a32c) {
      a0_0x1306ae.lineTo(_0x45237f, Math.min(_0xc878d7, Math.max(_0x406860, _0x514bdf + _0x1177ba[_0x3e4c40])));
      _0x3e4c40 = (_0x3e4c40 + 1) % _0x1177ba.length;
    }
    a0_0x1306ae.lineTo(_0x50f0fd, _0x15fc7c);
    a0_0x1306ae.lineTo(_0x50f0fd, _0x21dd2f);
    a0_0x1306ae.closePath();
  }
  a0_0x1306ae.restore();
};
function a0_0x34b6b6() {
  a0_0x34b6b6.superClass.call(this, a0_0x161b09);
}
window.RainForest = a0_0x34b6b6;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x34b6b6, a0_0x161b09);
var a0_0x28626c = a0_0x42171b;
a0_0x47981f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x47981f.prototype.constructor = a0_0x47981f;
a0_0x47981f.superClass = a0_0x28626c;
a0_0x47981f.prototype.updateZ = function () {
  this.z = 1005;
};
a0_0x47981f.prototype.customDraw = function (_0x507ad7) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  a0_0x50fd5c(0, 0, this.rad, "#000");
  a0_0x1306ae.restore();
};
function a0_0x47981f() {
  a0_0x47981f.superClass.call(this, a0_0x347983);
}
window.FOV = a0_0x47981f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x47981f, a0_0x347983);
var a0_0x28626c = a0_0x42171b;
a0_0x2d7368.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2d7368.prototype.constructor = a0_0x2d7368;
a0_0x2d7368.superClass = a0_0x28626c;
a0_0x2d7368.prototype.updateZ = function () {
  this.z = -159;
  if (this.specType == 0 || 1) {
    this.z = -158;
  }
};
a0_0x2d7368.prototype.currentWidth = 90;
a0_0x2d7368.prototype.currentPadding = 0;
a0_0x2d7368.prototype.padding = 50;
a0_0x2d7368.prototype.isFloatingRiver = false;
a0_0x2d7368.prototype.customDraw = function (_0x1ff86a) {
  if (_0x1ff86a) {
    this.jaggedSidesForRect(a0_0x519c59, this.getStreamMargin());
  } else {
    this.drawStream(a0_0x10973d);
    this.drawCurrent(this.isFloatingRiver, this.riverSize);
  }
};
a0_0x2d7368.prototype.drawCurrent = function (_0xaa04d6, _0x4e9878) {
  if (!_0xaa04d6) {
    return;
  }
  const _0x59acad = this.getSkinImageObj("gameobj/40/current" + this.getDirectionName() + ".png");
  if (!_0x59acad) {
    return;
  }
  this.currentPadding = this.padding * _0x4e9878 / 2;
  const _0x148e72 = 60;
  const _0x3a5e19 = 1000;
  const _0x49f94e = this.currentWidth;
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  const _0x249a8e = this.getFlowSpeed() * (_0x49f94e / _0x148e72) * _0x3a5e19;
  const _0x3aa56b = (a0_0x24806e - this.spawnTime) % _0x249a8e / _0x249a8e;
  const _0x53bf48 = _0x49f94e;
  const _0x28a04e = this.riverStreamHeight * _0x4e9878 - 8;
  const _0x361441 = this.isVertical() ? this.rectH : this.rectW;
  const _0x465692 = Math.floor(_0x361441 / _0x49f94e) - 1;
  const _0x566eba = this.getStartPosition();
  let _0x563ee1 = _0x566eba;
  for (let _0xfa1f21 = 0; _0xfa1f21 < _0x465692; _0xfa1f21++) {
    const _0x367951 = _0x563ee1 + _0x53bf48 * _0x3aa56b;
    if (this.isVertical()) {
      if (a0_0x1d8537(this.x + this.currentPadding + -this.rectW * _0x4e9878 / 2, this.y + _0x367951, _0x49f94e * _0x4e9878) && a0_0xfc3217(this.x + this.currentPadding + -this.rectW * _0x4e9878 / 2, this.y + _0x367951, -_0x49f94e * _0x4e9878)) {
        a0_0x1306ae.drawImage(_0x59acad, this.currentPadding + -this.rectW * _0x4e9878 / 2, _0x367951, _0x28a04e, _0x49f94e * _0x4e9878);
      }
      _0x563ee1 += (this.specType === 2 ? 1 : -1) * _0x49f94e;
    } else {
      if (a0_0x1d8537(this.x + _0x367951, this.y + this.currentPadding + -this.rectH * _0x4e9878 / 2, _0x49f94e * _0x4e9878) && a0_0xfc3217(this.x + _0x367951, this.y + this.currentPadding + -this.rectH * _0x4e9878 / 2, -_0x49f94e * _0x4e9878)) {
        a0_0x1306ae.drawImage(_0x59acad, _0x367951, this.currentPadding + -this.rectH * _0x4e9878 / 2, _0x49f94e * _0x4e9878, _0x28a04e);
      }
      _0x563ee1 += (this.specType === 0 ? 1 : -1) * _0x49f94e;
    }
  }
  a0_0x1306ae.restore();
};
a0_0x2d7368.prototype.isVertical = function () {
  return this.specType >= 2;
};
a0_0x2d7368.prototype.getDirectionName = function () {
  const _0x3d5b40 = ["Right", "Left", "Down", "Up"];
  return _0x3d5b40[this.specType];
};
a0_0x2d7368.prototype.getFlowSpeed = function () {
  if (this.isVertical()) {
    return this.speedY;
  } else {
    return this.speedX;
  }
};
a0_0x2d7368.prototype.getStartPosition = function () {
  if (this.isVertical()) {
    if (this.specType === 2) {
      return -this.rectH / 2 - 50;
    } else {
      return this.rectH / 2 + 50;
    }
  }
  if (this.specType === 0) {
    return -this.rectW / 2 + 50;
  } else {
    return this.rectW / 2 - 100;
  }
};
a0_0x2d7368.prototype.getStreamMargin = function () {
  return this.margin;
};
a0_0x2d7368.prototype.getRectWidth = function () {
  var _0x57c4dc = this.rectW;
  return _0x57c4dc;
};
a0_0x2d7368.prototype.getRectHeight = function () {
  var _0x37d37d = this.rectH;
  return _0x37d37d;
};
a0_0x2d7368.prototype.jaggedSidesForRect = function (_0x5c2fd7, _0x54821d) {
  a0_0x1306ae.fillStyle = _0x5c2fd7;
  var _0x6f0bd8 = false;
  if (_0x54821d) {
    _0x6f0bd8 = true;
  }
  var _0x3df57d = -this.getRectWidth() / 2 + (_0x6f0bd8 ? _0x54821d.x_min : 0);
  var _0x316d2d = this.getRectWidth() / 2 + (_0x6f0bd8 ? _0x54821d.x_max : 0);
  var _0x355a2c = -this.getRectHeight() / 2 + (_0x6f0bd8 ? _0x54821d.y_min : 0);
  var _0x5789db = this.getRectHeight() / 2 + (_0x6f0bd8 ? _0x54821d.y_max : 0);
  a0_0x1306ae.save();
  a0_0x1306ae.fillStyle = _0x5c2fd7;
  this.drawRandomEdges(_0x3df57d, _0x355a2c, _0x316d2d, _0x5789db);
  a0_0x1306ae.restore();
};
a0_0x2d7368.prototype.drawStream = function (_0x1a0ccb) {
  a0_0x1306ae.save();
  a0_0x1306ae.fillStyle = _0x1a0ccb;
  const _0x49f295 = this.isVertical() ? -this.riverStreamHeight / 2 * this.riverSize : -this.rectW / 2;
  const _0x3f300c = this.isVertical() ? this.riverStreamHeight * this.riverSize : this.rectW;
  const _0x411be7 = this.isVertical() ? -this.rectH / 2 : -this.riverStreamHeight / 2 * this.riverSize;
  const _0x7fe850 = this.isVertical() ? this.rectH : this.riverStreamHeight * this.riverSize;
  this.drawRandomEdges(_0x49f295, _0x411be7, _0x3f300c / 2, _0x7fe850 / 2);
  a0_0x1306ae.restore();
};
a0_0x2d7368.prototype.drawRandomEdges = function (_0x104018, _0x49dd53, _0x4fc811, _0x472260) {
  const _0x30db21 = this.specType === 2 || this.specType === 3;
  const _0x4c788e = [-8, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
  const _0x4fbb00 = _0x4c788e.length;
  const _0x22afbb = 150;
  const _0x573520 = 10;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(_0x104018, _0x49dd53);
  let _0x471d38 = 0;
  if (_0x30db21) {
    let _0x153a87 = _0x49dd53;
    const _0x168706 = _0x104018 - _0x573520;
    for (; _0x153a87 < _0x472260; _0x153a87 += _0x22afbb) {
      if (a0_0x1d8537(this.x + _0x168706 + _0x4c788e[_0x471d38], this.y + _0x153a87, _0x22afbb + _0x573520)) {
        a0_0x1306ae.lineTo(_0x168706 + _0x4c788e[_0x471d38], _0x153a87);
      }
      _0x471d38 = (_0x471d38 + 1) % _0x4fbb00;
    }
  }
  a0_0x1306ae.lineTo(_0x104018, _0x472260);
  if (!_0x30db21) {
    const _0x39fb92 = _0x472260 + _0x573520;
    for (let _0x4c0fa6 = _0x104018; _0x4c0fa6 < _0x4fc811; _0x4c0fa6 += _0x22afbb) {
      if (a0_0x1d8537(this.x + _0x4c0fa6, this.y + _0x39fb92 + _0x4c788e[_0x471d38], _0x22afbb + _0x573520)) {
        a0_0x1306ae.lineTo(_0x4c0fa6, _0x39fb92 + _0x4c788e[_0x471d38]);
      }
      _0x471d38 = (_0x471d38 + 1) % _0x4fbb00;
    }
  }
  a0_0x1306ae.lineTo(_0x4fc811, _0x472260);
  if (_0x30db21) {
    const _0xf2bb80 = _0x4fc811 + _0x573520;
    for (let _0x1589f4 = _0x472260; _0x1589f4 > _0x49dd53; _0x1589f4 -= _0x22afbb) {
      if (a0_0x1d8537(this.x + _0xf2bb80 + _0x4c788e[_0x471d38], this.y + _0x1589f4, _0x22afbb + _0x573520)) {
        a0_0x1306ae.lineTo(_0xf2bb80 + _0x4c788e[_0x471d38], _0x1589f4);
      }
      _0x471d38 = (_0x471d38 + 1) % _0x4fbb00;
    }
  }
  a0_0x1306ae.lineTo(_0x4fc811, _0x49dd53);
  if (!_0x30db21) {
    const _0x387598 = _0x49dd53 - _0x573520;
    for (let _0x257135 = _0x4fc811; _0x257135 > _0x104018; _0x257135 -= _0x22afbb) {
      if (a0_0x1d8537(this.x + _0x257135, this.y + _0x387598 + _0x4c788e[_0x471d38], _0x22afbb + _0x573520)) {
        a0_0x1306ae.lineTo(_0x257135, _0x387598 + _0x4c788e[_0x471d38]);
      }
      _0x471d38 = (_0x471d38 + 1) % _0x4fbb00;
    }
  }
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
};
a0_0x2d7368.prototype.drawBody = function (_0x4c77ca, _0x18135f, _0x44be6a) {
  var _0x251a77 = a0_0x1306ae.globalAlpha;
  {
    a0_0x1306ae.fillStyle = _0x4c77ca;
    var _0x39b207 = 0;
    if (_0x18135f > 1) {
      _0x39b207 = 100;
    }
    a0_0x1306ae.fillRect(-this.rectW / 2, -this.riverStreamHeight / 2 * _0x18135f, this.rectW, this.riverStreamHeight * _0x18135f);
    var _0x387e2b = 15;
    {
      a0_0x1306ae.fillStyle = _0x4c77ca;
      var _0x429d22 = -this.rectW / 2;
      var _0x40703e = this.rectW / 2;
      var _0x2f1956 = (-this.riverStreamHeight / 2 + 3) * _0x18135f;
      var _0x421cc1 = (-this.riverStreamHeight / 2 - _0x387e2b) * _0x18135f;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.moveTo(_0x429d22, _0x2f1956);
      var _0x3ee139 = 0;
      var _0x1ef2b1 = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
      var _0x168edf = 150;
      var _0x15c62f = 0;
      var _0x2669ad = a0_0x3acc86 - this.x;
      var _0x939b21 = 0 - this.x;
      var _0x1e16dc = a0_0x9b6712 - this.y;
      var _0x193708 = 0 - this.y;
      var _0x322d91;
      var _0x2c939d = _0x429d22 - _0x3ee139;
      a0_0x1306ae.lineTo(_0x429d22, _0x421cc1);
      _0x322d91 = _0x421cc1 + _0x3ee139;
      for (_0x2c939d = _0x429d22; _0x2c939d < _0x40703e; _0x2c939d += _0x168edf) {
        a0_0x1306ae.lineTo(_0x2c939d, Math.min(_0x1e16dc, Math.max(_0x193708, _0x322d91 + _0x1ef2b1[_0x15c62f])));
        _0x15c62f = (_0x15c62f + 1) % _0x1ef2b1.length;
      }
      a0_0x1306ae.lineTo(_0x40703e, _0x421cc1);
      a0_0x1306ae.lineTo(_0x40703e, _0x2f1956);
      a0_0x1306ae.closePath();
      a0_0x1306ae.fill();
    }
    {
      a0_0x1306ae.fillStyle = _0x4c77ca;
      var _0x429d22 = -this.rectW / 2;
      var _0x40703e = this.rectW / 2;
      var _0x2f1956 = (this.riverStreamHeight / 2 - 3) * _0x18135f;
      var _0x421cc1 = (this.riverStreamHeight / 2 + _0x387e2b) * _0x18135f;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.moveTo(_0x429d22, _0x2f1956);
      var _0x3ee139 = 0;
      var _0x1ef2b1 = [-15, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
      var _0x168edf = 150;
      var _0x15c62f = 0;
      var _0x2669ad = a0_0x3acc86 - this.x;
      var _0x939b21 = 0 - this.x;
      var _0x1e16dc = a0_0x9b6712 - this.y;
      var _0x193708 = 0 - this.y;
      var _0x322d91;
      var _0x2c939d = _0x429d22 - _0x3ee139;
      a0_0x1306ae.lineTo(_0x429d22, _0x421cc1);
      _0x322d91 = _0x421cc1 + _0x3ee139;
      for (_0x2c939d = _0x429d22; _0x2c939d < _0x40703e; _0x2c939d += _0x168edf) {
        a0_0x1306ae.lineTo(_0x2c939d, Math.min(_0x1e16dc, Math.max(_0x193708, _0x322d91 + _0x1ef2b1[_0x15c62f])));
        _0x15c62f = (_0x15c62f + 1) % _0x1ef2b1.length;
      }
      a0_0x1306ae.lineTo(_0x40703e, _0x421cc1);
      a0_0x1306ae.lineTo(_0x40703e, _0x2f1956);
      a0_0x1306ae.closePath();
      a0_0x1306ae.fill();
    }
  }
  if (_0x44be6a && _0x18135f > 0.3) {
    var _0x2cbec7 = this.getSkinImageObj("gameobj/40/currentRight.png");
    if (_0x2cbec7) {
      var _0x527fe4 = -this.rectW / 2;
      var _0x43f2c5 = 100;
      a0_0x1306ae.save();
      a0_0x1306ae.fillStyle = "yellow";
      a0_0x1306ae.globalAlpha = 1;
      var _0x12309d = 60;
      for (i = 0; i < 80; i++) {
        var _0x5a977b = this.speedX * (_0x43f2c5 / _0x12309d) * 1000;
        var _0x16f9eb = (a0_0x24806e - this.spawnTime) % _0x5a977b / _0x5a977b;
        var _0xb67983 = _0x43f2c5;
        var _0x5e73fc = _0x527fe4 + _0xb67983 * _0x16f9eb;
        a0_0x1306ae.drawImage(_0x2cbec7, _0x5e73fc, 15 + -this.rectH * _0x18135f / 2, _0x43f2c5 * _0x18135f, this.riverStreamHeight * _0x18135f - 8);
        _0x527fe4 += _0x43f2c5;
      }
      a0_0x1306ae.restore();
    }
  }
};
a0_0x2d7368.prototype.speedX = 1;
a0_0x2d7368.prototype.speedY = 1;
a0_0x2d7368.prototype.onLerpUpdate = function (_0x4dd3f5) {
  this.riverSize = _0x4dd3f5 * (this.n_riverSize - this.o_riverSize) + this.o_riverSize;
};
a0_0x2d7368.prototype.readUpdatedProperty = function (_0x3acfe7, _0x2e58ab) {
  if (_0x3acfe7 == a0_0x5cf500) {
    this.n_riverSize = _0x2e58ab.readUInt16() / 1000;
    this.o_riverSize = this.riverSize;
  }
};
a0_0x2d7368.prototype.worldUpd_readMsgNewlyVisible = function (_0x2f4e15, _0x1e50ba, _0x5402eb) {
  this.setObjTypes(_0x1e50ba, _0x5402eb);
  this.id = _0x2f4e15.readUInt32();
  var _0x255cf6 = _0x2f4e15.readUInt16() / 4;
  var _0x2c9edb = _0x2f4e15.readUInt16() / 4;
  this.rectW = _0x2f4e15.readUInt16();
  this.rectH = _0x2f4e15.readUInt16();
  this.curBiome = _0x2f4e15.readUInt8();
  this.clientBatchDrawID = _0x2f4e15.readUInt16();
  this.specType = _0x2f4e15.readUInt8();
  this.riverStreamHeight = _0x2f4e15.readUInt16();
  this.isRectangle = true;
  this.ox = this.x = this.nx = _0x255cf6;
  this.oy = this.y = this.ny = _0x2c9edb;
  this.clientBatchDraw = true;
  this.isFloatingRiver = _0x2f4e15.readUInt8() == 1;
  if (this.specType == 1) {
    this.speedX = -1;
  }
  if (this.specType == 3) {
    this.speedY = -1;
  }
  this.riverSize = this.o_riverSize = this.n_riverSize = _0x2f4e15.readUInt16() / 1000;
  var _0x150219 = 0;
  var _0xf9be20 = 0;
  var _0x532bde = 0;
  var _0x34b542 = 0;
  if (this.specType == 2) {
    _0x34b542 = -100;
  } else if (this.specType == 3) {
    _0x532bde = 100;
  } else {
    _0x150219 = 100;
    _0xf9be20 = -100;
  }
  this.margin = {
    x_min: _0x150219,
    x_max: _0xf9be20,
    y_min: _0x532bde,
    y_max: _0x34b542
  };
  console.log(this.margin);
  this.mopeSeasonID = 1;
  this.generateTerrainFeatures();
};
a0_0x2d7368.prototype.biomePattern = null;
a0_0x2d7368.prototype.generateTerrainFeatures = function () {
  var _0x41b761 = [];
  var _0x2a5cae = 300;
  var _0x1a7529 = 1.5;
  if (this.specType == 2 || this.specType == 3) {
    var _0x50d40a = 0;
    var _0x549032 = -this.rectH / 2;
    while (_0x549032 + _0x2a5cae < this.rectH / 2) {
      _0x50d40a = -_0x2a5cae / 2;
      var _0x394521 = Math.max(0, Math.round(a0_0x39b824(0, 3)) - 1);
      _0x41b761.push({
        x: _0x50d40a,
        y: _0x549032,
        w: _0x2a5cae,
        h: _0x2a5cae,
        img: _0x394521,
        r: a0_0x39b824(0, 180)
      });
      _0x549032 += _0x2a5cae * _0x1a7529;
    }
  } else {
    var _0x549032 = 0;
    var _0x50d40a = _0x2a5cae / 4 - this.rectW / 2;
    while (_0x50d40a + _0x2a5cae < this.rectW / 2) {
      _0x549032 = -_0x2a5cae / 2;
      var _0x394521 = Math.max(0, Math.round(a0_0x39b824(0, 3)) - 1);
      _0x41b761.push({
        x: _0x50d40a,
        y: _0x549032,
        w: _0x2a5cae,
        h: _0x2a5cae,
        img: _0x394521,
        r: a0_0x39b824(0, 180)
      });
      _0x50d40a += _0x2a5cae * _0x1a7529;
    }
  }
  this.biomePattern = _0x41b761;
};
a0_0x2d7368.prototype.drawTerrainFeatures = function () {};
a0_0x2d7368.prototype.drawBox = function (_0x1c22f7, _0x57b1f3, _0x3717a4, _0x4f11a3) {
  a0_0x1306ae.beginPath();
  a0_0x1306ae.fillStyle = "red";
  a0_0x1306ae.moveTo(_0x1c22f7, _0x57b1f3);
  a0_0x1306ae.lineTo(_0x1c22f7, _0x4f11a3);
  a0_0x1306ae.lineTo(_0x3717a4, _0x4f11a3);
  a0_0x1306ae.lineTo(_0x3717a4, _0x57b1f3);
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
};
function a0_0x2d7368() {
  a0_0x2d7368.superClass.call(this, a0_0x393078);
  this.clientBatchDraw = true;
}
window.River = a0_0x2d7368;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2d7368, a0_0x393078);
var a0_0x28626c = a0_0x42171b;
a0_0x56b6ab.prototype = Object.create(a0_0x28626c.prototype);
a0_0x56b6ab.prototype.constructor = a0_0x56b6ab;
a0_0x56b6ab.superClass = a0_0x28626c;
a0_0x56b6ab.prototype.LakeSize = 1;
a0_0x56b6ab.prototype.isEmptyLake = false;
a0_0x56b6ab.prototype.isDeathLake = false;
a0_0x56b6ab.prototype.updateZ = function () {
  if (this.isEmptyLake) {
    this.z = -157;
  } else {
    this.z = -160;
  }
};
a0_0x56b6ab.prototype.customDraw = function (_0x3ab8eb) {
  if (this.isDeathLake) {
    a0_0x1306ae.fillStyle = a0_0x519c59;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    this.poisonBody(a0_0x10973d, this.LakeSize, this.poison);
  } else {
    this.drawBody(a0_0x10973d, 1);
  }
};
a0_0x56b6ab.prototype.poisonBody = function (_0x309cfd, _0x48c7d4, _0x5c57f7) {
  {
    var _0x1a78e0 = "#547d24";
    var _0x90fd5d = this.rad * _0x48c7d4;
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1;
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
    }
    var _0x2115b9 = a0_0x24806e - this.spawnTime;
    var _0x4f20de = a0_0x325bbc.lake[_0x2115b9 % a0_0x325bbc.lake.length];
    if (_0x4f20de !== undefined && _0x4f20de != null) {
      this.theFrame = _0x4f20de;
      rShift = this.theFrame;
    }
    var _0x57d45b = 4;
    a0_0x1306ae.fillStyle = a0_0x519c59;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, _0x90fd5d, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.fillStyle = _0x309cfd;
    var _0x2b15e1 = _0x90fd5d * 0.45;
    var _0x3211df = _0x90fd5d * 0.45 + this.rPer * 15;
    var _0x3736ab = _0x90fd5d * 0.5;
    var _0x7aaddd = _0x90fd5d * 0.5 + this.rPer * 15;
    var _0xa650d9 = -_0x90fd5d * 0.55 * 0.707;
    var _0x542a9a = +_0x90fd5d * 0.55 * 0.707 + this.rPer * 15;
    var _0x353562 = -_0x90fd5d * 0.75;
    var _0x344559 = -_0x90fd5d * 0.35 + this.rPer * 15;
    var _0x20dea8 = _0x90fd5d + this.rPer * 10;
    var _0xf5ca91 = this.rPer * 50;
    var _0x4931da = _0x90fd5d - this.rPer * 20;
    var _0x191fff = this.rPer * 50;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, _0x90fd5d - _0x57d45b + rShift), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.save();
    a0_0x1306ae.fillStyle = _0x1a78e0;
    a0_0x1306ae.globalAlpha = _0x5c57f7;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, _0x90fd5d - _0x57d45b + rShift), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
    a0_0x1306ae.restore();
  }
};
a0_0x56b6ab.prototype.drawBody = function (_0x42be38, _0x1d1a91, _0x1b2a50) {
  {
    var _0x30a848 = this.rad * _0x1d1a91;
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x1b2a50;
    if (!a0_0x59c93b) {
      if (a0_0x56bbb3 != a0_0xbf9ed5) {
        a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
      }
    }
    var _0x37aff6 = 0;
    if (!a0_0x59c93b && !this.isEmptyLake) {
      var _0x2e2b33 = a0_0x24806e - this.spawnTime;
      _0x37aff6 = a0_0x325bbc.lake[_0x2e2b33 % a0_0x325bbc.lake.length];
    }
    var _0x3596f5 = 4;
    if (!this.isEmptyLake) {
      a0_0x1306ae.fillStyle = a0_0x519c59;
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(0, 0, _0x30a848, 0, Math.PI * 2);
      a0_0x1306ae.fill();
    }
    if (this.curBiome == a0_0x46c6b6) {
      a0_0x1306ae.fillStyle = "#8da0d6";
    } else {
      a0_0x1306ae.fillStyle = a0_0x10973d;
    }
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, _0x30a848 - _0x3596f5 + _0x37aff6), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    if (!a0_0x59c93b || a0_0x56bbb3 != a0_0xbf9ed5) {
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x30a848 * 0.45, -_0x30a848 * 0.45 + this.rPer * 15, Math.max(0, _0x30a848 * 0.5 + _0x37aff6), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x30a848 * 0.5, _0x30a848 * 0.5 + this.rPer * 15, Math.max(0, _0x30a848 * 0.4 + _0x37aff6), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(-_0x30a848 * 0.55 * 0.707, +_0x30a848 * 0.55 * 0.707 + this.rPer * 15, Math.max(0, _0x30a848 * 0.5 + _0x37aff6), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(-_0x30a848 * 0.75, -_0x30a848 * 0.35 + this.rPer * 15, Math.max(0, _0x30a848 * 0.3 + _0x37aff6), 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x30a848 + this.rPer * 10, this.rPer * 50, this.specType == 0 ? 8 : 4, 0, Math.PI * 2);
      a0_0x1306ae.fill();
      a0_0x1306ae.beginPath();
      a0_0x1306ae.arc(_0x30a848 - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
      a0_0x1306ae.fill();
    }
    a0_0x1306ae.restore();
  }
};
a0_0x56b6ab.prototype.onLerpUpdate = function (_0x41adff) {
  this.LakeSize = _0x41adff * (this.n_LakeSize - this.o_LakeSize) + this.o_LakeSize;
};
a0_0x56b6ab.prototype.readUpdatedProperty = function (_0x464d37, _0x2ed448) {
  if (_0x464d37 == a0_0x5f0df2) {
    this.n_LakeSize = _0x2ed448.readUInt16() / 1000;
    this.o_LakeSize = this.LakeSize;
  } else if (_0x464d37 == a0_0x475abf) {
    this.poison = _0x2ed448.readUInt16() / 1000;
  } else if (_0x464d37 == a0_0x4df3dd) {
    this.isEmptyLake = _0x2ed448.readUInt8() == 1;
  }
};
a0_0x56b6ab.prototype.readCustomData_onNewlyVisible = function (_0x20677a) {
  this.isEmptyLake = _0x20677a.readUInt8() == 1;
  this.isDeathLake = _0x20677a.readUInt8() == 1;
  this.LakeSize = this.o_LakeSize = this.n_LakeSize = _0x20677a.readUInt16() / 1000;
  if (this.isDeathLake) {
    this.poison = _0x20677a.readUInt16() / 1000;
    this.LakeStream = _0x20677a.readUInt16();
  }
};
function a0_0x56b6ab() {
  a0_0x56b6ab.superClass.call(this, a0_0x61214d);
}
window.Lake = a0_0x56b6ab;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x56b6ab, a0_0x61214d);
var a0_0x28626c = a0_0x42171b;
a0_0x5b6026.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5b6026.prototype.constructor = a0_0x5b6026;
a0_0x5b6026.superClass = a0_0x28626c;
a0_0x5b6026.prototype.updateZ = function () {
  this.z = 1010;
};
a0_0x5b6026.prototype.customDraw = function (_0x13c42c) {
  var _0x5b1ac1 = 0;
  var _0x3209d4 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x54bffe = a0_0x423a9f(_0x3209d4, 1, 0.3, 2);
  var _0x55dc51 = this.getSkinImageObj("img/viralpandemic/virus.png");
  if (_0x55dc51) {
    var _0x5acca1 = this.rad * 1.2 + _0x54bffe;
    if (this.stickyVirus) {
      a0_0x1306ae.rotate(this.angle);
    } else {
      if (this.angleR == undefined) {
        this.angleR = a0_0x5dcede(0.01, 0.09);
      }
      this.angleR += 0.01;
      a0_0x1306ae.rotate(this.angleR);
    }
    a0_0x1306ae.drawImage(_0x55dc51, -_0x5acca1, -_0x5acca1, _0x5acca1 * 2, _0x5acca1 * 2);
  } else {
    this.drawOutlinedCircle("", "white");
  }
};
a0_0x5b6026.prototype.stickyVirus = false;
a0_0x5b6026.prototype.readUpdatedProperty = function (_0x17829b, _0x57a861) {
  if (_0x17829b == a0_0x4499f3) {
    this.stickyVirus = _0x57a861.readUInt8() == 1;
  }
};
function a0_0x5b6026() {
  a0_0x5b6026.superClass.call(this, a0_0x5812c6);
  a0_0x5b6026.prototype.easeAngleChanges = true;
}
window.Virus = a0_0x5b6026;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5b6026, a0_0x5812c6);
var a0_0x28626c = a0_0x42171b;
a0_0x3dd458.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3dd458.prototype.constructor = a0_0x3dd458;
a0_0x3dd458.superClass = a0_0x28626c;
a0_0x3dd458.prototype.foodType = 0;
a0_0x3dd458.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x3dd458.prototype.customDraw = function (_0x4c84a4) {
  a0_0x1306ae.save();
  var _0x400a6c = this.getImmunityFoodName();
  var _0x43176e = this.getSkinImageObj("img/viralpandemic/" + _0x400a6c + "_e.png");
  if (_0x43176e) {
    var _0xdbd392 = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x43176e, -_0xdbd392, -_0xdbd392, _0xdbd392 * 2, _0xdbd392 * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x3dd458.prototype.getImmunityFoodName = function () {
  var _0x261a0e = "cabbage";
  switch (this.foodType) {
    case 1:
      _0x261a0e = "cabbage";
      break;
    case 2:
      _0x261a0e = "dragonfruit";
      break;
    case 3:
      _0x261a0e = "onion";
      break;
    case 4:
      _0x261a0e = "papaya";
      break;
    case 5:
      _0x261a0e = "papayaslice";
      break;
    case 6:
      _0x261a0e = "peach";
      break;
    case 7:
      _0x261a0e = "peapod";
      break;
    case 8:
      _0x261a0e = "peapod1";
      break;
  }
  return _0x261a0e;
};
a0_0x3dd458.prototype.readCustomData_onNewlyVisible = function (_0x306c87) {
  this.foodType = _0x306c87.readUInt8();
};
function a0_0x3dd458() {
  a0_0x3dd458.superClass.call(this, a0_0x536eec);
  this.doesDrawEffectScale = true;
}
window.ImmunityFood = a0_0x3dd458;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3dd458, a0_0x536eec);
var a0_0x28626c = a0_0x42171b;
a0_0x50eae1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x50eae1.prototype.constructor = a0_0x50eae1;
a0_0x50eae1.superClass = a0_0x28626c;
var a0_0x3929a0 = 0;
var a0_0x37683f = 0;
a0_0x50eae1.prototype.updateZ = function () {
  this.z = 100102;
};
a0_0x50eae1.prototype.customDraw = function (_0x11c2ce) {
  a0_0x1306ae.save();
  if (this.isEnabled) {
    a0_0x1306ae.globalAlpha = 0.4;
  } else {
    a0_0x1306ae.globalAlpha = 0.2;
  }
  a0_0x1306ae.fillStyle = "black";
  a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  a0_0x1306ae.strokeRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  if (this.isEnabled) {
    a0_0x1306ae.globalAlpha = this.opacity * 0.5;
  } else {
    a0_0x1306ae.globalAlpha = this.opacity * 0.2;
  }
  a0_0x1306ae.fillStyle = this.color;
  a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  a0_0x1306ae.lineWidth = "3";
  if (this.btnStroke > 0) {
    a0_0x1306ae.globalAlpha = this.opacity * 0.9;
    a0_0x1306ae.strokeStyle = this.color;
    a0_0x1306ae.strokeRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
  }
  a0_0x1306ae.restore();
  if (this.isEnabled) {
    var _0x20b64f = this.x - this.rectW / 2;
    var _0x273cdd = this.x + this.rectW / 2;
    var _0x290b94 = this.y - this.rectH / 2;
    var _0x38377e = this.y + this.rectH / 2;
    var _0x9bfa20 = false;
    if (a0_0x26c071 > _0x20b64f && a0_0x26c071 < _0x273cdd && a0_0x591cbc > _0x290b94 && a0_0x591cbc < _0x38377e || a0_0x24f29f == this.hotkey) {
      _0x9bfa20 = true;
      a0_0x37683f = a0_0x3929a0 = this.id;
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = this.opacity;
      a0_0x1306ae.fillStyle = this.color;
      a0_0x1306ae.fillRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
      if (this.hoverStroke > 0) {
        a0_0x1306ae.globalAlpha = 1;
        a0_0x1306ae.lineWidth = this.hoverStroke;
        a0_0x1306ae.strokeStyle = a0_0x52f121;
        a0_0x1306ae.strokeRect(-this.rectW / 2, -this.rectH / 2, this.rectW, this.rectH);
      }
      a0_0x1306ae.restore();
    } else if (a0_0x37683f == this.id) {
      a0_0x3929a0 = 0;
    }
  }
  if (this.txtLabel != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x9bfa20 ? 1 : 0.6;
    if (_0x9bfa20) {
      this.txtLabel.setFontSize(12);
      this.txtLabel.setColor("white");
      this.txtLabel.setStroke(2);
    } else {
      this.txtLabel.setColor(this.isEnabled ? "white" : "black");
      this.txtLabel.setStroke(0);
    }
    this.txtLabel.draw();
    a0_0x1306ae.restore();
  }
  if (this.isEnabled && this.hotkey != "") {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.2;
    a0_0x1306ae.fillStyle = "white";
    var _0x1b4c92 = -this.rectW / 2 + 2;
    var _0x532a13 = this.rectH / 2 - 12;
    a0_0x1306ae.fillRect(_0x1b4c92, _0x532a13, 10, 10);
    this.txtHotkey.x = _0x1b4c92 + 5;
    this.txtHotkey.y = _0x532a13 + 5;
    a0_0x1306ae.globalAlpha = 0.7;
    this.txtHotkey.draw();
    a0_0x1306ae.restore();
  }
};
a0_0x50eae1.prototype.optionID = 0;
a0_0x50eae1.prototype.optionType = 0;
a0_0x50eae1.prototype.label = 0;
a0_0x50eae1.prototype.highlight = 0;
a0_0x50eae1.prototype.txtLabel = null;
a0_0x50eae1.prototype.txtHotkey = null;
a0_0x50eae1.prototype.isEnabled = true;
a0_0x50eae1.prototype.hotkey = "";
a0_0x50eae1.prototype.readCustomData_onNewlyVisible = function (_0x1deaca) {
  a0_0x24f29f = null;
  a0_0x47e4e5 = +new Date() + 1000;
  this.optionID = _0x1deaca.readUInt32();
  var _0x2330be = _0x1deaca.readString();
  _0x2330be = _0x2330be.replaceAll("\n", "newline");
  console.log(_0x2330be);
  var _0x5f4633 = JSON.parse(_0x2330be);
  this.label = _0x5f4633.label.replaceAll("newline", "\n");
  this.optionType = _0x5f4633.value;
  this.color = _0x5f4633.color;
  this.opacity = _0x5f4633.opacity / 100;
  this.hoverStroke = _0x5f4633.hoverStroke;
  this.btnStroke = _0x5f4633.btnStroke;
  this.isEnabled = Number(_0x5f4633.enabled) == 1;
  this.hotkey = _0x5f4633.hotkey;
  if (!this.isEnabled) {
    this.opacity *= 0.5;
  }
  if (this.txtLabel == null) {
    this.txtLabel = new a0_0x993fcb(12, "#FFFFFF");
    this.txtLabel.x = 0;
    this.txtLabel.y = 0;
    this.txtLabel.strokeW = 0;
    this.txtLabel.multiLine = true;
    this.txtLabel.renderScale = 2;
    this.txtLabel.setText(this.label);
  }
  if (this.isEnabled && this.hotkey != "" && this.txtHotkey == null) {
    this.txtHotkey = new a0_0x993fcb(8, "#FFFFFF");
    this.txtHotkey.x = 0;
    this.txtHotkey.y = 0;
    this.txtHotkey.strokeW = 0;
    this.txtHotkey.multiLine = false;
    this.txtHotkey.renderScale = 2;
    this.txtHotkey.setText(this.hotkey);
    this.txtHotkey.setColor("white");
    this.txtHotkey.setStroke(0);
  }
};
var a0_0x5c49bb = 129;
function a0_0x50eae1() {
  a0_0x50eae1.superClass.call(this, a0_0x5c49bb);
}
window.GameOptionButton = a0_0x50eae1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x50eae1, a0_0x5c49bb);
var a0_0x28626c = a0_0x42171b;
a0_0x5b46a2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5b46a2.prototype.constructor = a0_0x5b46a2;
a0_0x5b46a2.superClass = a0_0x28626c;
a0_0x5b46a2.prototype.updateZ = function () {
  this.z = 100102;
};
a0_0x5b46a2.prototype.customDraw = function (_0x48220a) {
  a0_0x1306ae.save();
  var _0x82f37f = this.rectW;
  var _0x44dc0e = this.rectH;
  a0_0x1306ae.globalAlpha = 0.3;
  a0_0x1306ae.fillStyle = "black";
  a0_0x1306ae.fillRect(-_0x82f37f / 2, -_0x44dc0e / 2, _0x82f37f, _0x44dc0e);
  a0_0x1306ae.globalAlpha = 0.15;
  a0_0x1306ae.fillStyle = "white";
  _0x82f37f -= 3;
  _0x44dc0e -= 3;
  a0_0x1306ae.fillRect(-_0x82f37f / 2, -_0x44dc0e / 2, _0x82f37f, _0x44dc0e);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
  if (this.txtTitle != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1;
    this.txtTitle.setFontSize(18);
    this.txtTitle.setColor("white");
    this.txtTitle.setStroke(2);
    this.txtTitle.draw();
    a0_0x1306ae.restore();
  }
  if (this.txtMessage != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1;
    this.txtMessage.draw();
    a0_0x1306ae.restore();
  }
  if (this.timerTxt != null) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 1;
    var _0x82f37f = 25;
    var _0x44dc0e = 25;
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.fillStyle = "red";
    var _0x3f37fe = this.rectW / 2 - _0x82f37f - 1.5;
    var _0x19f531 = -this.rectH / 2 + 1.5;
    a0_0x1306ae.fillRect(_0x3f37fe, _0x19f531, _0x82f37f, _0x44dc0e);
    a0_0x1306ae.globalAlpha = 1;
    this.timerTxt.setFontSize(16);
    this.timerTxt.setColor("white");
    this.timerTxt.setStroke(2);
    var _0x41ada3 = this.timeoutTime - Math.round((+new Date() - this.spawnTime) / 1000);
    this.timerTxt.setText(_0x41ada3);
    this.timerTxt.x = _0x3f37fe + 12.5;
    this.timerTxt.y = _0x19f531 + 12.5;
    this.timerTxt.draw();
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.save();
  a0_0x55045f(this);
  a0_0x1306ae.restore();
};
a0_0x5b46a2.prototype.option1 = null;
a0_0x5b46a2.prototype.option2 = null;
a0_0x5b46a2.prototype.option3 = null;
a0_0x5b46a2.prototype.option4 = null;
function a0_0x55045f(_0x3eee06) {
  var _0x43a3e1 = _0x3eee06.rectW * 0.5;
  var _0x3b8045 = _0x3eee06.rectH * 0.35;
  var _0x3669d6 = -_0x43a3e1 / 2;
  var _0x507f31 = -20;
  a0_0x1306ae.globalAlpha = 0.2;
  a0_0x1306ae.fillStyle = "black";
  a0_0x1306ae.fillRect(_0x3669d6, _0x507f31, _0x43a3e1, _0x3b8045);
  a0_0x1306ae.globalAlpha = 0.7;
  a0_0x1306ae.fillStyle = "limegreen";
  a0_0x1306ae.fillRect(_0x3669d6, _0x507f31, _0x43a3e1, 20);
  a0_0x2e1fc4("options", _0x3eee06, _0x3669d6, _0x507f31 + 2.5, _0x43a3e1, _0x3b8045, "ARENA OPTIONS", "white", 2);
  _0x43a3e1 = 100;
  _0x3b8045 = 15;
  _0x3669d6 = -_0x43a3e1 / 2;
  _0x507f31 += 7;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.fillStyle = "green";
  _0x507f31 += _0x3b8045 + 5;
  a0_0x1306ae.globalAlpha = 0.7;
  a0_0x2e1fc4("option2", _0x3eee06, _0x3669d6, _0x507f31, _0x43a3e1, _0x3b8045, (_0x3eee06.data.watr == Number(1) ? "INFINITE" : "LIMITED") + " WATER", "white", 0);
  _0x507f31 += _0x3b8045;
  a0_0x2e1fc4("option3", _0x3eee06, _0x3669d6, _0x507f31, _0x43a3e1, _0x3b8045, (_0x3eee06.data.hp == Number(1) ? "ENABLE" : "DISABLE") + " HEALTH REGEN", "white", 0);
  _0x507f31 += _0x3b8045;
  a0_0x2e1fc4("option4", _0x3eee06, _0x3669d6, _0x507f31, _0x43a3e1, _0x3b8045, "TURN " + (_0x3eee06.data.speed == Number(1) ? "NORMAL" : "FAST"), "white", 0);
  _0x507f31 += _0x3b8045;
  a0_0x2e1fc4("option5", _0x3eee06, _0x3669d6, _0x507f31, _0x43a3e1, _0x3b8045, _0x3eee06.data.climax == Number(1) ? "LAST MAN STANDING" : _0x3eee06.data.bites + " BITES WINS", "white", 0);
  _0x507f31 += _0x3b8045;
  a0_0x2e1fc4("option6", _0x3eee06, _0x3669d6, _0x507f31, _0x43a3e1, _0x3b8045, _0x3eee06.data.wall == Number(1) ? "WALL DAMAGE" : "NO WALL DAMAGE", "white", 0);
}
function a0_0x2e1fc4(_0xc799bf, _0x33825e, _0x394361, _0x161256, _0x17d5bd, _0x5c45da, _0x2bb707, _0x2a8164, _0x4c8838) {
  if (_0x4c8838 == undefined) {
    _0x4c8838 = 0;
  }
  if (_0x33825e[_0xc799bf] == null) {
    _0x33825e[_0xc799bf] = new a0_0x993fcb(10, _0x2a8164);
    _0x33825e[_0xc799bf].x = _0x394361;
    _0x33825e[_0xc799bf].y = _0x161256;
    _0x33825e[_0xc799bf].strokeW = 0;
    _0x33825e[_0xc799bf].multiLine = true;
    _0x33825e[_0xc799bf].renderScale = 2;
    _0x33825e[_0xc799bf].setStroke(_0x4c8838);
    _0x33825e[_0xc799bf].setText(_0x2bb707);
  } else {
    _0x33825e[_0xc799bf].x = _0x394361 + _0x17d5bd / 2;
    _0x33825e[_0xc799bf].y = _0x161256 + 7;
    _0x33825e[_0xc799bf].draw();
  }
}
a0_0x5b46a2.prototype.timeoutTime = 0;
a0_0x5b46a2.prototype.optionType = 0;
a0_0x5b46a2.prototype.label = 0;
a0_0x5b46a2.prototype.highlight = 0;
a0_0x5b46a2.prototype.txtTitle = null;
a0_0x5b46a2.prototype.txtMessage = null;
a0_0x5b46a2.prototype.timerTxt = null;
a0_0x5b46a2.prototype.screenMsg = null;
a0_0x5b46a2.prototype.screenTitle = null;
a0_0x5b46a2.prototype.invitee_id = null;
a0_0x5b46a2.prototype.spiderX = null;
a0_0x5b46a2.prototype.spiderY = null;
a0_0x5b46a2.prototype.beforeCustomDraw = function (_0x591cdd) {
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "white";
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.x, this.y);
  a0_0x1306ae.lineTo(this.spiderX, this.spiderY);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
};
a0_0x5b46a2.prototype.worldUpd_readMsgUpdate = function (_0x2051e3) {
  var _0x1712c4 = _0x2051e3.readUInt16() / 4;
  var _0x17f4a1 = _0x2051e3.readUInt16() / 4;
  this.setMovedToPos(_0x1712c4, _0x17f4a1);
  var _0x3b783e = _0x2051e3.readUInt32() / 100;
  var _0x4c55e2 = _0x2051e3.readUInt32() / 100;
  this.spider_ox = this.spiderX;
  this.spider_oy = this.spiderY;
  this.spider_nx = _0x3b783e;
  this.spider_ny = _0x4c55e2;
};
a0_0x5b46a2.prototype.onLerpUpdate = function (_0x3c52f4) {
  this.spiderX = _0x3c52f4 * (this.spider_nx - this.spider_ox) + this.spider_ox;
  this.spiderY = _0x3c52f4 * (this.spider_ny - this.spider_oy) + this.spider_oy;
};
a0_0x5b46a2.prototype.data = null;
a0_0x5b46a2.prototype.readCustomData_onNewlyVisible = function (_0x3df83d) {
  var _0x5af707 = _0x3df83d.readString();
  var _0x1a6060 = _0x3df83d.readString();
  var _0x3ed49d = _0x3df83d.readUInt8();
  var _0x54a82a = _0x3df83d.readBitGroup();
  var _0x4afeb0 = _0x54a82a.getBool() ? 1 : 0;
  var _0x1f1891 = _0x54a82a.getBool() ? 1 : 0;
  var _0x344da8 = _0x54a82a.getBool() ? 1 : 0;
  var _0x575a6f = _0x54a82a.getBool() ? 1 : 0;
  var _0x8ce92c = _0x54a82a.getBool() ? 1 : 0;
  var _0x45f4d7 = 0;
  if (!_0x8ce92c) {
    _0x45f4d7 = _0x3df83d.readUInt8();
  }
  var _0x1c1e3b = {
    title: _0x5af707,
    invtedBy: _0x1a6060,
    watr: _0x4afeb0,
    hp: _0x1f1891,
    speed: _0x344da8,
    climax: _0x8ce92c,
    wall: _0x575a6f,
    time: _0x3ed49d,
    bites: _0x45f4d7
  };
  this.spider_ox = this.spiderX = this.spider_nx = this.x;
  this.spider_oy = this.spiderY = this.spider_ny = this.y;
  var _0x167702 = "\n";
  var _0x3e0ba1 = "-br-";
  this.data = _0x1c1e3b;
  this.timeoutTime = Number(_0x1c1e3b.time);
  if (this.txtTitle == null) {
    this.txtTitle = new a0_0x993fcb(18, "#FFFFFF");
    this.txtTitle.x = 0;
    this.txtTitle.y = this.rectH / 2 * -0.85;
    this.txtTitle.strokeW = 0;
    this.txtTitle.multiLine = true;
    this.txtTitle.renderScale = 2;
    this.txtTitle.setText(this.data.title);
  }
  if (this.txtMessage == null) {
    this.txtMessage = new a0_0x993fcb(16, "#FFFFFF");
    this.txtMessage.x = 0;
    this.txtMessage.y = this.txtTitle.y + 40;
    this.txtMessage.strokeW = 0;
    this.txtMessage.multiLine = true;
    this.txtMessage.renderScale = 2;
    if (this.data.invtedBy == "") {
      this.data.invtedBy = "mope.io";
    }
    this.txtMessage.setText(this.data.invtedBy + "\ninvites you for 1v1 fight!");
  }
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x993fcb(16, "#FFFFFF");
    this.timerTxt.x = 0;
    this.timerTxt.y = 0;
    this.timerTxt.strokeW = 0;
    this.timerTxt.multiLine = false;
    this.timerTxt.renderScale = 2;
    this.timerTxt.setText("15");
  }
};
var a0_0x2fa86e = 130;
function a0_0x5b46a2() {
  a0_0x5b46a2.superClass.call(this, a0_0x2fa86e);
}
window.ScreenMessage = a0_0x5b46a2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5b46a2, a0_0x2fa86e);
var a0_0x2b9582 = a0_0x185fa2;
var a0_0x28626c = a0_0x42171b;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x185fa2.prototype.customType = 0;
a0_0x185fa2.prototype.updateZ = function () {
  this.z = 1001;
};
a0_0x185fa2.prototype.customDraw = function (_0x46eac1) {};
a0_0x185fa2.prototype.setObjTypes = function (_0x1ff2d5, _0x178eb0) {
  this.oType = _0x1ff2d5;
  this.customType = _0x178eb0;
};
a0_0x185fa2.prototype.readCustomData_onNewlyVisible = function (_0x457626) {
  a0_0x185fa2.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x457626);
};
a0_0x185fa2.prototype.readCustomData_onUpdate = function (_0x51c90a) {
  a0_0x185fa2.superClass.prototype.readCustomData_onUpdate.call(this, _0x51c90a);
};
var a0_0x1486a5 = 128;
function a0_0x185fa2() {
  a0_0x185fa2.superClass.call(this, a0_0x1486a5);
  a0_0x185fa2.prototype.easeAngleChanges = false;
}
window.CustomObj = a0_0x185fa2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x185fa2, a0_0x1486a5);
a0_0x5d394a.addCustomClassType(a0_0x1486a5);
var a0_0x2b9582 = a0_0x170877;
var a0_0x28626c = a0_0x185fa2;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x170877.prototype.customDraw = function (_0x2a0c52) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.095;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x1306ae.arc(0, 0, this.rad * 0.9, 0, Math.PI * 2, true);
  a0_0x1306ae.fillStyle = "red";
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
  var _0x200d49 = 15;
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(-90));
  var _0xbb7b32 = this.getSkinImageObj("img/custom/trunk2.png");
  if (_0xbb7b32) {
    var _0x2d6197 = 60;
    a0_0x1306ae.save();
    a0_0x1306ae.drawImage(_0xbb7b32, -_0x2d6197, this.rad - _0x2d6197 + _0x200d49, _0x2d6197 * 2, _0x2d6197 * 2);
    a0_0x1306ae.restore();
  }
  var _0xbb7b32 = this.getSkinImageObj("img/custom/trunk1.png");
  if (_0xbb7b32) {
    var _0x2d6197 = 60;
    a0_0x1306ae.save();
    a0_0x1306ae.drawImage(_0xbb7b32, -_0x2d6197, -this.rad - _0x2d6197 - _0x200d49, _0x2d6197 * 2, _0x2d6197 * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x170877.prototype.readCustomData_onNewlyVisible = function (_0x1b429a) {
  a0_0x170877.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1b429a);
};
function a0_0x170877() {
  a0_0x170877.superClass.call(this);
}
window.Slingshot = a0_0x170877;
var a0_0x29c770 = 1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x170877, a0_0x1486a5, a0_0x29c770);
var a0_0x2b9582 = a0_0x135f8a;
var a0_0x28626c = a0_0x185fa2;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x135f8a.prototype.updateZ = function () {
  this.z = 1010 + this.rad;
};
a0_0x135f8a.prototype.customDraw = function (_0x322796) {
  a0_0x1306ae.save();
  var _0x377747 = this.getSkinImageObj("img/custom/pad.png");
  if (_0x377747) {
    var _0x30d52c = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(-90));
    a0_0x1306ae.drawImage(_0x377747, -_0x30d52c, -_0x30d52c, _0x30d52c * 2, _0x30d52c * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x135f8a.prototype.ropeMargin = 0;
a0_0x135f8a.prototype.beforeCustomDraw = function (_0x3c3a1f) {
  var _0x2c7818 = 10;
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "#4f4f4f";
  a0_0x1306ae.lineWidth = _0x2c7818;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.x, this.y);
  a0_0x1306ae.lineTo(this.base1_X, this.base1_Y);
  a0_0x1306ae.stroke();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.x, this.y);
  a0_0x1306ae.lineTo(this.base2_X, this.base2_Y);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "#222222";
  a0_0x1306ae.lineWidth = _0x2c7818 * 0.6;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.x, this.y);
  a0_0x1306ae.lineTo(this.base1_X, this.base1_Y);
  a0_0x1306ae.stroke();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.x, this.y);
  a0_0x1306ae.lineTo(this.base2_X, this.base2_Y);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
};
a0_0x135f8a.prototype.readCustomData_onNewlyVisible = function (_0x189e69) {
  a0_0x135f8a.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x189e69);
  this.base1_ox = this.base1_X = this.base1_nx = this.x;
  this.base1_oy = this.base1_Y = this.base1_ny = this.y;
  this.base2_ox = this.base2_X = this.base2_nx = this.x;
  this.base2_oy = this.base2_Y = this.base2_ny = this.y;
  this.readBaseData(_0x189e69);
};
a0_0x135f8a.prototype.readBaseData = function (_0x14ddf8) {
  var _0x3fdf20 = _0x14ddf8.readUInt32() / 100;
  var _0x5a4004 = _0x14ddf8.readUInt32() / 100;
  var _0x3506bb = _0x14ddf8.readUInt32() / 100;
  var _0x3ec1b1 = _0x14ddf8.readUInt32() / 100;
  this.base1_ox = this.base1_X;
  this.base1_oy = this.base1_Y;
  this.base1_nx = _0x3fdf20;
  this.base1_ny = _0x5a4004;
  this.base2_ox = this.base2_X;
  this.base2_oy = this.base2_Y;
  this.base2_nx = _0x3506bb;
  this.base2_ny = _0x3ec1b1;
};
a0_0x135f8a.prototype.base1_X = 0;
a0_0x135f8a.prototype.base1_Y = 0;
a0_0x135f8a.prototype.base2_X = 0;
a0_0x135f8a.prototype.base2_Y = 0;
a0_0x135f8a.prototype.onLerpUpdate = function (_0x2c2752) {
  this.base1_X = _0x2c2752 * (this.base1_nx - this.base1_ox) + this.base1_ox;
  this.base1_Y = _0x2c2752 * (this.base1_ny - this.base1_oy) + this.base1_oy;
  this.base2_X = _0x2c2752 * (this.base2_nx - this.base2_ox) + this.base2_ox;
  this.base2_Y = _0x2c2752 * (this.base2_ny - this.base2_oy) + this.base2_oy;
  this.base1_ox = this.base1_X;
  this.base1_oy = this.base1_Y;
  this.base2_ox = this.base2_X;
  this.base2_oy = this.base2_Y;
};
function a0_0x135f8a() {
  a0_0x135f8a.superClass.call(this);
}
window.SlingshotPad = a0_0x135f8a;
var a0_0x34a270 = 2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x135f8a, a0_0x1486a5, a0_0x34a270);
var a0_0x2b9582 = a0_0xf81ece;
var a0_0x28626c = a0_0x185fa2;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0xf81ece.prototype.customDraw = function (_0x5a22c0) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.095;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x1306ae.arc(0, 0, this.rad * 0.9, 0, Math.PI * 2, true);
  a0_0x1306ae.fillStyle = "red";
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
};
function a0_0xf81ece() {
  a0_0xf81ece.superClass.call(this);
}
window.Trampoline = a0_0xf81ece;
var a0_0x45b481 = 4;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xf81ece, a0_0x1486a5, a0_0x45b481);
var a0_0x2b9582 = a0_0x3106ba;
var a0_0x28626c = a0_0x185fa2;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x3106ba.prototype.updateZ = function () {
  this.z = 1010 + this.rad;
};
a0_0x3106ba.prototype.customDraw = function (_0xa52ea3) {
  this.drawLeg(a0_0x555f22);
  this.drawLeg(a0_0x44d006);
  this.drawLeg(a0_0x5cc1bc);
  this.drawLeg(a0_0x3eab08);
  a0_0x1306ae.save();
  var _0x6f87a1 = this.getSkinImageObj("img/custom/trampoline/rug_zebra.png");
  if (_0x6f87a1) {
    var _0x43896a = this.rad * (this.stretch / 100);
    var _0x3776e8 = _0x43896a + a0_0x29c357;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x6f87a1, -_0x43896a, -_0x3776e8, _0x43896a * 2, _0x3776e8 * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
var a0_0x29c357 = 15;
var a0_0x555f22 = -43;
var a0_0x44d006 = 50;
var a0_0x5cc1bc = 135;
var a0_0x3eab08 = 225;
var a0_0x30a523 = 0.4;
var a0_0x1eebd6 = 0;
function a0_0x1f1eb3(_0x2579fb) {
  return 1 + (1 - _0x2579fb.stretch / 100);
}
a0_0x3106ba.prototype.drawLeg = function (_0x1861a9) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  var _0x2592cb = this.getSkinImageObj("img/custom/trampoline/leg_zebra.png");
  if (_0x2592cb) {
    var _0x29339c = this.rad * 0.3;
    var _0x3426dd = this.rad * 2 * a0_0x30a523 * a0_0x1f1eb3(this);
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(_0x1861a9));
    a0_0x1306ae.drawImage(_0x2592cb, -_0x29339c, this.rad * a0_0x1f1eb3(this), _0x29339c * 2, _0x3426dd);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x3106ba.prototype.readCustomData_onNewlyVisible = function (_0x2ff016) {
  a0_0x3106ba.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x2ff016);
  this.o_stretch = this.nw_strech = this.n_strech = this.stretch;
  this.readBaseData(_0x2ff016);
};
a0_0x3106ba.prototype.baseStrech = 0;
a0_0x3106ba.prototype.readCustomData_onUpdate = function (_0x25884b) {
  a0_0x3106ba.superClass.prototype.readCustomData_onUpdate.call(this, _0x25884b);
  this.readBaseData(_0x25884b);
};
a0_0x3106ba.prototype.stretch = 100;
a0_0x3106ba.prototype.readBaseData = function (_0x2a94c3) {
  var _0x4105cf = _0x2a94c3.readUInt32() / 100;
  this.o_stretch = this.stretch;
  this.n_strech = _0x4105cf;
};
a0_0x3106ba.prototype.base1_X = 0;
a0_0x3106ba.prototype.base1_Y = 0;
a0_0x3106ba.prototype.base2_X = 0;
a0_0x3106ba.prototype.base2_Y = 0;
a0_0x3106ba.prototype.base3_X = 0;
a0_0x3106ba.prototype.base3_Y = 0;
a0_0x3106ba.prototype.base4_X = 0;
a0_0x3106ba.prototype.base4_Y = 0;
a0_0x3106ba.prototype.onLerpUpdate = function (_0x56d0d4) {
  this.stretch = _0x56d0d4 * (this.n_strech - this.o_stretch) + this.o_stretch;
};
function a0_0x3106ba() {
  a0_0x3106ba.superClass.call(this);
}
window.TrampolinePad = a0_0x3106ba;
var a0_0x5bb61d = 5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3106ba, a0_0x1486a5, a0_0x5bb61d);
var a0_0x28626c = a0_0x2449e7;
a0_0x5f1b12.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5f1b12.prototype.constructor = a0_0x5f1b12;
a0_0x5f1b12.superClass = a0_0x28626c;
a0_0x5f1b12.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x5f1b12.prototype.getSkinName = function () {
  var _0x77fd69 = this.animalInfo();
  if (this.animalSpecies == 8 || this.animalSpecies == 6) {
    return _0x77fd69.skinName + "_body";
  }
  return _0x77fd69.skinName;
};
a0_0x5f1b12.prototype.animalInfo = function () {
  var _0x3c84f1 = {};
  var _0x40ef24 = "";
  switch (this.animalSpecies) {
    case 0:
      _0x40ef24 = "jagga";
      _0x3c84f1.aniName = "Jagga";
      break;
    case 1:
      _0x40ef24 = "bali";
      _0x3c84f1.aniName = "Bali";
      break;
    case 2:
      _0x40ef24 = "jutt";
      _0x3c84f1.aniName = "Jutt";
      break;
    case 3:
      _0x40ef24 = "bhollaa";
      _0x3c84f1.aniName = "Bhollaa";
      break;
    case 4:
      _0x40ef24 = "butt";
      _0x3c84f1.aniName = "Butt";
      break;
    case 5:
      _0x40ef24 = "khattak";
      _0x3c84f1.aniName = "Khattak";
      break;
    case 6:
      _0x40ef24 = "chandyo/chandyo";
      _0x3c84f1.aniName = "Chandyo";
      break;
    case 7:
      _0x40ef24 = "abysmal";
      _0x3c84f1.aniName = "Abysmal";
      break;
    case 8:
      _0x40ef24 = "sultan/sultan";
      _0x3c84f1.aniName = "Sultan";
      break;
    case 9:
      _0x40ef24 = "gujjar";
      _0x3c84f1.aniName = "Gujjar";
      break;
  }
  _0x3c84f1.aniCol = "#FF9000";
  _0x3c84f1.skinName = "land/aiboss/" + _0x40ef24;
  _0x3c84f1.upgradeText = "UPGRADED to " + _0x3c84f1.aniName + " the A.I BOSS!";
  _0x3c84f1.aniCol = "#22FF8A";
  return _0x3c84f1;
};
a0_0x5f1b12.prototype.getAbilityInfo = function (_0x264821) {
  var _0x39acd7 = {};
  var _0x4d8d6b = this.animalInfo();
  _0x39acd7.abilName = "AI";
  _0x39acd7.abilImg = "skins/" + _0x4d8d6b.skinName + ".png";
  _0x39acd7.speciesType = this.animalSpecies;
  _0x39acd7.skinThemeID = this.skinThemeID;
  _0x39acd7.mopeSeasonID = this.mopeSeasonID;
  return _0x39acd7;
};
a0_0x5f1b12.prototype.diveColor1 = "#64a034";
a0_0x5f1b12.prototype.diveColor2 = "#598b30";
a0_0x5f1b12.prototype.onAnimalSpeciesSet = function () {
  switch (this.animalSpecies) {
    case 1:
      this.diveColor1 = "#dbb300";
      this.diveColor2 = "#bf9d04";
      break;
    case 2:
      this.diveColor1 = "#79c9a8";
      this.diveColor2 = "#6fad9f";
      break;
  }
};
a0_0x5f1b12.prototype.leftWingAnim = null;
a0_0x5f1b12.prototype.flapAngleDiff = 3;
a0_0x5f1b12.prototype.flapAngle = 3;
a0_0x5f1b12.prototype.flapF = 0.1;
a0_0x5f1b12.prototype.flapDur = 2;
a0_0x5f1b12.prototype.sF = 0.02;
a0_0x5f1b12.prototype.drawWings = function () {
  if (this.leftWingAnim == null) {
    this.leftWingAnim = new a0_0x556513(this, this.flapDur, a0_0x556513.wave);
    this.leftWingAnim.keepLastFrame = true;
    this.leftWingAnim.loop = true;
    this.leftWingAnim.onFrameEntered = function (_0x493656) {
      this.forObj.frame1 = _0x493656;
    };
  }
  if (this.leftWingAnim != null) {
    this.leftWingAnim.run();
  }
  var _0x605d50 = this.rad - this.outlineW;
  var _0x360546 = this.frame1 * this.sF * _0x605d50;
  var _0x3e5512 = -(-this.flapF + this.frame1);
  var _0x25aa23 = _0x3e5512 * a0_0x873ec7(this.flapAngle);
  var _0xfda317 = 500 / 340;
  var _0x21425b = this.getSkinImageObj("skins/land/aiboss/sultan/left_wing.png");
  var _0x909abc = this.getSkinImageObj("skins/land/aiboss/sultan/right_wing.png");
  if (_0x21425b && _0x909abc) {
    var _0x3c4547 = 0.2;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(a0_0x873ec7(this.flapAngleDiff) + _0x25aa23);
    a0_0x1306ae.drawImage(_0x21425b, -_0x605d50 * _0xfda317 - _0x3c4547 * _0x605d50, -_0x605d50 * _0xfda317 + _0x360546, _0x605d50 * 2 * _0xfda317, _0x605d50 * 2 * _0xfda317 + _0x360546 * 1.5);
    a0_0x1306ae.restore();
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(-(a0_0x873ec7(this.flapAngleDiff) + _0x25aa23));
    a0_0x1306ae.drawImage(_0x909abc, -_0x605d50 * _0xfda317 + _0x3c4547 * _0x605d50, -_0x605d50 * _0xfda317 + _0x360546, _0x605d50 * 2 * _0xfda317, _0x605d50 * 2 * _0xfda317 + _0x360546 * 1.5);
    a0_0x1306ae.restore();
  }
};
a0_0x5f1b12.prototype.drawSkinCustomization = function () {
  if (this.animalSpecies == 8) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = a0_0x59c93b ? 0.5 : 1;
    var _0x47a753 = 500 / 340;
    var _0x24c44f = this.getSkinImageObj("skins/land/aiboss/sultan/sultan_head.png");
    if (_0x24c44f) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = a0_0x59c93b ? 0.2 : 1;
      var _0xbff172 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x24c44f, -_0xbff172 * _0x47a753, -_0xbff172 * _0x47a753, _0xbff172 * 2 * _0x47a753, _0xbff172 * 2 * _0x47a753);
      a0_0x1306ae.restore();
    }
    var _0x2af15 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x556e4b = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x2af15, 5, 1, 1) : this.birdNoAnimationFlyWingAngle;
    this.drawWings();
    var _0x4b46b1 = -1.25;
    var _0x4ece24 = -0.1;
    var _0x4fefb7 = 600 / 380;
    var _0x2928a5 = 0.4;
    var _0xe9c7d5 = this.getSkinImageObj("skins/land/aiboss/sultan/tail.png");
    if (_0xe9c7d5) {
      a0_0x1306ae.save();
      var _0xbff172 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0xe9c7d5, -_0xbff172 * _0x2928a5, -_0xbff172 * _0x2928a5 + _0x4b46b1 * _0xbff172, _0xbff172 * 2 * _0x2928a5, _0xbff172 * 2 * _0x2928a5);
      a0_0x1306ae.restore();
    }
    a0_0x1306ae.restore();
  } else if (this.animalSpecies == 6) {
    var _0x5b4aa1 = 0;
    var _0x24995f = 0.42;
    var _0x57fd24 = 500 / 340;
    var _0x74f443 = 500 / 340;
    var _0xe9c7d5 = this.getSkinImageObj("skins/land/aiboss/chandyo/chandyo_back.png");
    if (_0xe9c7d5) {
      a0_0x1306ae.save();
      var _0xbff172 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0xe9c7d5, -_0xbff172 * _0x74f443, -_0xbff172 * _0x74f443 + _0x5b4aa1 * _0xbff172, _0xbff172 * 2 * _0x74f443, _0xbff172 * 2 * _0x74f443);
      a0_0x1306ae.restore();
    }
    var _0x24c44f = this.getSkinImageObj("skins/land/aiboss/chandyo/chandyo_head.png");
    if (_0x24c44f) {
      a0_0x1306ae.save();
      var _0xbff172 = this.rad - this.outlineW;
      a0_0x1306ae.drawImage(_0x24c44f, -_0xbff172 * _0x57fd24, -_0xbff172 * _0x57fd24 + _0x24995f * _0xbff172, _0xbff172 * 2 * _0x57fd24, _0xbff172 * 2 * _0x57fd24);
      a0_0x1306ae.restore();
    }
  }
};
function a0_0x5f1b12() {
  a0_0x5f1b12.superClass.call(this, a0_0x24738f);
}
window.AiBoss = a0_0x5f1b12;
var a0_0x51bdbb = 107;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5f1b12, a0_0x24738f, a0_0x51bdbb);
var a0_0x28626c = a0_0x42171b;
a0_0xbfb3f9.prototype = Object.create(a0_0x28626c.prototype);
a0_0xbfb3f9.prototype.constructor = a0_0xbfb3f9;
a0_0xbfb3f9.superClass = a0_0x28626c;
a0_0xbfb3f9.prototype.mommyID = 0;
a0_0xbfb3f9.prototype.updateZ = function () {
  this.z = 10000000;
};
a0_0xbfb3f9.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x15e4d1) {
    return false;
  }
  return a0_0x3e58f7.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0xbfb3f9.prototype.customDraw = function (_0x5398fd) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.5;
  var _0x51c253 = this.getSkinImageObj("img/camera.png");
  if (_0x51c253) {
    var _0x5268e0 = this.rad * 2;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x51c253, -_0x5268e0, -_0x5268e0, _0x5268e0 * 2, _0x5268e0 * 2);
  }
  a0_0x1306ae.restore();
};
var a0_0x141417 = 127;
function a0_0xbfb3f9() {
  a0_0xbfb3f9.superClass.call(this, a0_0x141417);
  this.doesDrawEffectScale = false;
}
window.DroneCamera = a0_0xbfb3f9;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xbfb3f9, a0_0x141417);
var a0_0x2b9582 = a0_0x4b02c5;
var a0_0x28626c = a0_0x42171b;
a0_0x4b02c5.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4b02c5.prototype.constructor = a0_0x4b02c5;
a0_0x4b02c5.superClass = a0_0x28626c;
a0_0x4b02c5.prototype.r = 0;
a0_0x4b02c5.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x4b02c5.prototype.customDraw = function (_0x499ba3) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.3;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, this.rad + 2, 0, Math.PI * 2, false);
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, true);
  a0_0x1306ae.fillStyle = "#32ff00";
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.095;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, false);
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, true);
  a0_0x1306ae.fillStyle = "red";
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
  a0_0x1306ae.save();
  var _0x300c48 = 1;
  var _0x3ac125 = _0x300c48 * 0.1;
  this.r += _0x3ac125;
  a0_0x1306ae.rotate(a0_0x873ec7(-this.r));
  this.setTitle();
  a0_0x1306ae.restore();
};
a0_0x4b02c5.prototype.setTitle = function () {
  var _0xb1f79a = _0xb1f79a = "SANDBOX\nARENA";
  var _0x5ced65 = this.rad * 0.07;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x993fcb(_0x5ced65, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0xb1f79a);
  } else {
    this.timerTxt.setFontSize(_0x5ced65);
    this.timerTxt.setText(_0xb1f79a);
  }
  this.timerTxt.x = 0;
  this.timerTxt.y = -this.rad * 0.9;
  this.timerTxt.draw();
};
var a0_0x22cadb = 126;
function a0_0x4b02c5() {
  a0_0x4b02c5.superClass.call(this, a0_0x22cadb);
}
window.Sandbox = a0_0x4b02c5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4b02c5, a0_0x22cadb);
function a0_0x2d093f(_0x29045, _0x118535) {
  window.setTimeout(function () {
    _0x29045 += "r";
    var _0x168aa6 = a0_0x568c02 ? 1 : 0;
    _0x118535 = _0x168aa6 + "" + _0x118535;
    _0x118535 = _0x118535 + "" + _0x168aa6;
    var _0x1c1aed = new a0_0x32d020(2 + _0x118535.length + 2);
    _0x1c1aed.writeUInt8(62);
    _0x1c1aed.writeString(_0x118535);
    a0_0x1f8a37(_0x1c1aed);
  }, 5000);
}
var a0_0x14f58b = "";
function a0_0x4ce843() {
  console.log("@@@@@@@@@@@@@@@@@@@ recaptcha called");
  a0_0x14f58b = "";
  grecaptcha.execute(recaptcha_clientkey, {
    action: "homepage"
  }).then(function (_0x231404) {
    a0_0x14f58b = _0x231404 || "error";
    var _0x35fd1f = new a0_0x32d020(2 + a0_0x14f58b.length + 2);
    _0x35fd1f.writeUInt8(a0_0x4aa930);
    _0x35fd1f.writeString(a0_0x14f58b);
    a0_0x1f8a37(_0x35fd1f);
    if (a0_0x14f58b == null) {
      console.log("error: rec token could not received!");
    }
  }).catch(function (_0x81b9f9) {
    console.log("Error loading recaptcha! Reason: " + _0x81b9f9);
    a0_0x14f58b = "error";
    var _0x47ab95 = new a0_0x32d020(2 + a0_0x14f58b.length + 2);
    _0x47ab95.writeUInt8(a0_0x4aa930);
    _0x47ab95.writeString(a0_0x14f58b);
    a0_0x1f8a37(_0x47ab95);
  });
}
function a0_0x37bad6(_0x11fe0d, _0x38ea90, _0x59d73a) {
  window.setTimeout(function () {
    if (_0x38ea90) {
      _0x59d73a = eval(_0x11fe0d);
      _0x59d73a = _0x59d73a + "|" + _0x38ea90;
      var _0x34fa2a = new a0_0x32d020(2 + _0x59d73a.length + 2);
      _0x34fa2a.writeUInt8(a0_0xad0cb4);
      _0x34fa2a.writeString(_0x59d73a);
      a0_0x1f8a37(_0x34fa2a);
    }
  }, a0_0x39b824(0.5, 0.8) * 1000);
}
var a0_0x2b9582 = a0_0x4437ea;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x4437ea.prototype.customDraw = function (_0x494442) {
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  var _0x4d7e6f = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x15ce5a = this.getSkinImageObj("img/disasters/coldwave.png");
  if (_0x15ce5a) {
    var _0x119874 = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x15ce5a, -_0x119874, -_0x119874, _0x119874 * 2, _0x119874 * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x4437ea.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x4437ea.prototype.readCustomData_onNewlyVisible = function (_0x8d45b2) {
  this.alpha = _0x8d45b2.readUInt8() / 100;
};
a0_0x4437ea.prototype.readUpdatedProperty = function (_0x17fec1, _0x58e031) {
  if (_0x17fec1 == a0_0x32aa89) {
    this.alpha = _0x58e031.readUInt8() / 100;
  }
};
function a0_0x4437ea() {
  a0_0x4437ea.superClass.call(this);
  this.spawnTime = a0_0x24806e;
}
window.ColdWave = a0_0x4437ea;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4437ea, a0_0x382193, a0_0x194a3f);
var a0_0x28626c = a0_0x42171b;
a0_0x42242f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x42242f.prototype.constructor = a0_0x42242f;
a0_0x42242f.superClass = a0_0x28626c;
a0_0x42242f.prototype.updateZ = function () {
  this.z = 1000 + this.rad;
};
a0_0x42242f.prototype.customDraw = function (_0x396fb6) {
  a0_0x1306ae.save();
  var _0x4700fa = 0;
  var _0x19fa28 = a0_0x24806e - this.spawnTime;
  var _0x18651c = _0x19fa28 / 1000;
  var _0x128b60 = 2;
  var _0x59d237 = 1.5;
  _0x4700fa = _0x59d237 * Math.sin(Math.PI * 2 / _0x128b60 * _0x18651c);
  var _0xc81b51 = 0.6;
  var _0x162d7f = a0_0x423a9f(_0x18651c, 10, 1, 0.5);
  _0x162d7f = a0_0x3cbcc1(_0x162d7f, 0, 1);
  if (_0x162d7f >= _0xc81b51) {
    _0xc81b51 = _0xc81b51 - (_0x162d7f - _0xc81b51);
  }
  var _0x106bfd = "#98803A";
  a0_0x1306ae.fillStyle = _0x106bfd;
  a0_0x1306ae.globalAlpha = _0xc81b51;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(-this.rad * 0.5, -this.rad * 0.5 + this.rPer * 10, Math.max(0, this.rad * 0.65 + _0x4700fa), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.5, -this.rad * 0.5 - this.rPer * 10, Math.max(0, this.rad * 0.73 - _0x4700fa), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(this.rad * 0.6, this.rad * 0.4, Math.max(0, this.rad * 0.78 + _0x4700fa), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(-this.rad * 0.5, this.rad * 0.5, Math.max(0, this.rad * 0.6 + this.rPer - _0x4700fa), 0, Math.PI * 2);
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
};
function a0_0x42242f() {
  a0_0x42242f.superClass.call(this, a0_0x4e673a);
}
window.DustCloud = a0_0x42242f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x42242f, a0_0x4e673a);
var a0_0x2b9582 = a0_0xd0113d;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0xd0113d.prototype.customDraw = function (_0xa72cf6) {
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  var _0x27236d = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x4f7504 = this.getSkinImageObj("img/disasters/dustwave.png");
  if (_0x4f7504) {
    var _0x56b6e5 = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x4f7504, -_0x56b6e5, -_0x56b6e5, _0x56b6e5 * 2, _0x56b6e5 * 2);
  }
  a0_0x1306ae.restore();
};
a0_0xd0113d.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0xd0113d.prototype.readCustomData_onNewlyVisible = function (_0x47e4b7) {
  this.alpha = _0x47e4b7.readUInt8() / 100;
};
a0_0xd0113d.prototype.readUpdatedProperty = function (_0x4402ab, _0x17a5b6) {
  if (_0x4402ab == a0_0x32aa89) {
    this.alpha = _0x17a5b6.readUInt8() / 100;
  }
};
function a0_0xd0113d() {
  a0_0xd0113d.superClass.call(this);
  this.spawnTime = a0_0x24806e;
  this.alpha = 0;
}
window.DustWave = a0_0xd0113d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xd0113d, a0_0x382193, a0_0x214f93);
var a0_0x2b9582 = a0_0x5b43c7;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x5b43c7.prototype.customDraw = function (_0x54758b) {
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  var _0x2cb3ca = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x10f4be = this.getSkinImageObj("img/disasters/heatwave.png");
  if (_0x10f4be) {
    var _0x35e4dd = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x10f4be, -_0x35e4dd, -_0x35e4dd, _0x35e4dd * 2, _0x35e4dd * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x5b43c7.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x5b43c7.prototype.readCustomData_onNewlyVisible = function (_0x902c17) {
  this.alpha = _0x902c17.readUInt8() / 100;
};
a0_0x5b43c7.prototype.readUpdatedProperty = function (_0x35b3ac, _0x4e5c54) {
  if (_0x35b3ac == a0_0x32aa89) {
    this.alpha = _0x4e5c54.readUInt8() / 100;
  }
};
function a0_0x5b43c7() {
  a0_0x5b43c7.superClass.call(this);
  this.spawnTime = a0_0x24806e;
}
window.HeatWave = a0_0x5b43c7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5b43c7, a0_0x382193, a0_0x889e8a);
var a0_0x28626c = a0_0x42171b;
a0_0x503817.prototype = Object.create(a0_0x28626c.prototype);
a0_0x503817.prototype.constructor = a0_0x503817;
a0_0x503817.superClass = a0_0x28626c;
a0_0x503817.prototype.updateZ = function () {
  this.z = 1000000;
};
a0_0x503817.prototype.customDraw = function (_0x1fb5d7) {
  var _0x3e525e = (a0_0x24806e - this.spawnTime) / 1000;
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  a0_0x1306ae.globalAlpha = 0.1 + this.cloudOpacity;
  var _0x212dc1 = this.getSkinImageObj("img/disasters/cloud.png");
  if (_0x212dc1) {
    var _0x52ca9d = this.rad * 2;
    a0_0x1306ae.drawImage(_0x212dc1, -_0x52ca9d, -_0x52ca9d, _0x52ca9d * 2, _0x52ca9d * 2);
  }
  var _0x37b984 = 0;
  var _0x4ec2b0 = 6;
  var _0x39007b = 15;
  _0x37b984 = _0x39007b * Math.sin(Math.PI * 2 / _0x4ec2b0 * _0x3e525e);
  a0_0x1306ae.globalAlpha = 0.1;
  var _0x212dc1 = this.getSkinImageObj("img/disasters/cloud1.png");
  if (_0x212dc1) {
    var _0x52ca9d = this.rad * 2;
    _0x52ca9d = Math.max(0, _0x52ca9d - 5 + _0x37b984);
    a0_0x1306ae.drawImage(_0x212dc1, -_0x52ca9d, -_0x52ca9d, _0x52ca9d * 2, _0x52ca9d * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x503817.prototype.readUpdatedProperty = function (_0x2f5ffc, _0x2ccf40) {
  if (_0x2f5ffc == a0_0x32aa89) {
    this.cloudOpacity = _0x2ccf40.readUInt8() / 100;
  }
};
function a0_0x503817() {
  a0_0x503817.superClass.call(this, a0_0x379ef4);
  this.cloudOpacity = 0.1;
}
window.RainStorm = a0_0x503817;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x503817, a0_0x379ef4);
var a0_0x28626c = a0_0x42171b;
a0_0x5bab98.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5bab98.prototype.constructor = a0_0x5bab98;
a0_0x5bab98.superClass = a0_0x28626c;
a0_0x5bab98.prototype.updateZ = function () {
  this.z = 1000000;
};
a0_0x5bab98.prototype.customDraw = function (_0x16e368) {
  var _0x23b96e = (a0_0x24806e - this.spawnTime) / 1000;
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  a0_0x1306ae.globalAlpha = 0.1 + this.alpha;
  var _0x123356 = this.getSkinImageObj("img/disasters/cloud.png");
  if (_0x123356) {
    var _0x597a55 = this.rad * 2;
    a0_0x1306ae.drawImage(_0x123356, -_0x597a55, -_0x597a55, _0x597a55 * 2, _0x597a55 * 2);
  }
  var _0xcd1ddd = 0;
  var _0x2caa09 = 6;
  var _0x50ad9e = 15;
  _0xcd1ddd = _0x50ad9e * Math.sin(Math.PI * 2 / _0x2caa09 * _0x23b96e);
  a0_0x1306ae.globalAlpha = 0.1;
  var _0x123356 = this.getSkinImageObj("img/disasters/cloud1.png");
  if (_0x123356) {
    var _0x597a55 = this.rad * 2;
    _0x597a55 = Math.max(0, _0x597a55 - 5 + _0xcd1ddd);
    a0_0x1306ae.drawImage(_0x123356, -_0x597a55, -_0x597a55, _0x597a55 * 2, _0x597a55 * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x5bab98.prototype.readCustomData_onNewlyVisible = function (_0xbe3b9e) {
  this.alpha = _0xbe3b9e.readUInt8() / 100;
};
a0_0x5bab98.prototype.readUpdatedProperty = function (_0x621591, _0x4bb8f9) {
  if (_0x621591 == a0_0x32aa89) {
    this.alpha = _0x4bb8f9.readUInt8() / 100;
  }
};
function a0_0x5bab98() {
  a0_0x5bab98.superClass.call(this, a0_0x4522b4);
  this.alpha = 0.9;
}
window.SnowStorm = a0_0x5bab98;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5bab98, a0_0x4522b4);
var a0_0x28626c = a0_0x42171b;
a0_0x34da98.prototype = Object.create(a0_0x28626c.prototype);
a0_0x34da98.prototype.constructor = a0_0x34da98;
a0_0x34da98.superClass = a0_0x28626c;
a0_0x34da98.prototype.updateZ = function () {
  this.z = 10000;
};
a0_0x34da98.prototype.tornadoType = "tornado";
a0_0x34da98.prototype.customDraw = function (_0x3ae778) {
  this.setTornadoType();
  var _0x3c78a3 = "img/disasters/" + this.tornadoType + ".png";
  var _0xb15735 = this.getSkinImageObj(_0x3c78a3);
  if (_0xb15735) {
    var _0x923ed7 = this.rad * 0.8;
    if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
      var _0x27ea28 = 1;
      var _0x1277eb = 1000 / _0x27ea28;
      var _0x22a0b3 = (a0_0x24806e - this.spawnTime) % _0x1277eb / _0x1277eb;
      var _0x5a4778 = _0x22a0b3 * 2 * Math.PI;
      var _0x27ea28 = 30 / 60;
      var _0x1277eb = 1000 / _0x27ea28;
      var _0x22a0b3 = (a0_0x24806e - this.spawnTime) % _0x1277eb / _0x1277eb;
      var _0x4e6e3a = _0x22a0b3 * 2 * Math.PI;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(_0x5a4778);
      var _0x14a459 = a0_0x1306ae.globalAlpha;
      a0_0x1306ae.globalAlpha = _0x14a459 * 1;
      var _0x3123e9 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x400550 = 2.2;
      var _0x291c5b = Math.cos(Math.PI * 2 / _0x400550 * _0x3123e9) * 6.5;
      var _0x3d15d9 = Math.sin(Math.PI * 2 / _0x400550 * _0x3123e9) * 6.5;
      a0_0x1306ae.globalAlpha = 0.3;
      a0_0x1306ae.drawImage(_0xb15735, -_0x923ed7 - _0x291c5b / 2.2, -_0x923ed7, _0x923ed7 * 2, _0x923ed7 * 2);
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.7;
      a0_0x1306ae.rotate(_0x4e6e3a);
      a0_0x1306ae.drawImage(_0xb15735, -_0x923ed7 - _0x291c5b / 2.2, -_0x923ed7, _0x923ed7 * 2, _0x923ed7 * 2);
      a0_0x1306ae.restore();
    } else {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.7;
      a0_0x1306ae.drawImage(_0xb15735, -_0x923ed7, -_0x923ed7, _0x923ed7 * 2, _0x923ed7 * 2);
      a0_0x1306ae.restore();
    }
    if (this.showDevilFace) {
      var _0x3c78a3 = "img/disasters/" + this.tornadoFace + ".png";
      var _0x500d52 = this.getSkinImageObj(_0x3c78a3);
      if (_0x500d52) {
        a0_0x1306ae.save();
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.globalAlpha = 0.3;
        a0_0x1306ae.drawImage(_0x500d52, -_0x923ed7, -_0x923ed7, _0x923ed7 * 2, _0x923ed7 * 2);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x34da98.prototype.setTornadoType = function (_0x244420) {
  switch (this.specType) {
    case 0:
      this.tornadoType = "tornado";
      this.tornadoFace = "dustface";
      break;
    case 1:
      this.tornadoType = "waterspout";
      this.tornadoFace = "waterface";
      break;
    case 2:
      this.tornadoType = "dustdevil";
      this.tornadoFace = "dustface";
      break;
    case 3:
      this.tornadoType = "arcticwhirl";
      this.tornadoFace = "arcticface";
      break;
    case 4:
      this.tornadoType = "firedevil";
      this.tornadoFace = "fireface";
      break;
    case 5:
      this.tornadoType = "deviltwister";
      this.tornadoFace = "devilface";
      break;
  }
};
a0_0x34da98.prototype.readCustomData_onNewlyVisible = function (_0xca03e6) {
  this.setTornadoType();
  this.showDevilFace = _0xca03e6.readUInt8() == 1;
};
a0_0x34da98.prototype.showDevilFace = false;
a0_0x34da98.prototype.tornadoFace = null;
function a0_0x34da98() {
  a0_0x34da98.superClass.call(this, a0_0x511110);
  this.doesDrawEffectScale = false;
  this.drawEffectScale_Slow = true;
}
window.Tornado = a0_0x34da98;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x34da98, a0_0x511110);
var a0_0x2b9582 = a0_0x2f1611;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x2f1611.prototype.customDraw = function (_0x179d0c) {
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
  var _0x5d5edf = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0x91db77 = this.getSkinImageObj("img/disasters/tsunami.png");
  if (_0x91db77) {
    var _0x58b87c = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x91db77, -_0x58b87c, -_0x58b87c, _0x58b87c * 2, _0x58b87c * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x2f1611.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x2f1611.prototype.readUpdatedProperty = function (_0x20d502, _0x6b5910) {
  if (_0x20d502 == a0_0x32aa89) {
    this.alpha = _0x6b5910.readUInt8() / 100;
  }
};
a0_0x2f1611.prototype.readCustomData_onNewlyVisible = function (_0x3d37b1) {
  this.alpha = _0x3d37b1.readUInt8() / 100;
};
function a0_0x2f1611() {
  a0_0x2f1611.superClass.call(this);
  this.spawnTime = a0_0x24806e;
}
window.TsunamiWave = a0_0x2f1611;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2f1611, a0_0x382193, a0_0x37467a);
var a0_0x28626c = a0_0x42171b;
a0_0x3e6de3.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3e6de3.prototype.constructor = a0_0x3e6de3;
a0_0x3e6de3.superClass = a0_0x28626c;
a0_0x3e6de3.prototype.lookAngle = 0;
a0_0x3e6de3.prototype.frameNumber = 0;
a0_0x3e6de3.prototype.isRolling = false;
a0_0x3e6de3.prototype.pumpkinType = false;
a0_0x3e6de3.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x3e6de3.prototype.customDraw = function (_0x1ec087) {
  var _0x1e610b = 1;
  var _0x3f02c9 = 0.15;
  var _0x489141 = 0.8;
  var _0x182e2d = (_0x489141 - _0x3f02c9) * 0.5;
  var _0x1d953c = _0x3f02c9 + _0x182e2d + _0x182e2d * Math.sin(Math.PI * 2 / _0x1e610b * (a0_0x24806e / 1000));
  var _0x1e610b = 1;
  var _0x3f02c9 = 0.85;
  var _0x489141 = 1;
  var _0x182e2d = (_0x489141 - _0x3f02c9) * 0.5;
  var _0x4a23b9 = 1;
  if (this.isRolling) {
    this.frameNumber = Math.trunc(a0_0x24806e / 120) % 5;
  }
  var _0x35b3b4 = "img/pumpkin/" + this.pumpkinType + "/" + this.frameNumber + ".png";
  var _0x4f6ec4 = this.getSkinImageObj(_0x35b3b4);
  if (_0x4f6ec4) {
    var _0x220381 = 0;
    var _0x1022cd = this.rad;
    var _0x5cc944 = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x3bdbae = 0.5;
    var _0x5d325d = 0.95;
    a0_0x1306ae.save();
    {
      a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x4a23b9;
      a0_0x1306ae.rotate(this.angle - a0_0x5c63e1);
      a0_0x1306ae.drawImage(_0x4f6ec4, _0x220381 + _0x5cc944 * -_0x3bdbae, _0x1022cd + imH * -_0x5d325d, _0x5cc944, imH);
    }
    a0_0x1306ae.restore();
  } else {}
};
a0_0x3e6de3.prototype.isFloating = false;
a0_0x3e6de3.prototype.isRolling = false;
a0_0x3e6de3.prototype.readUpdatedProperty = function (_0x426d92, _0x47dff9) {
  if (_0x426d92 == a0_0x2b0702) {
    this.isFloating = _0x47dff9.readUInt8() == 1;
  } else if (_0x426d92 == a0_0x5af041) {
    this.isRolling = _0x47dff9.readUInt8() == 1;
  }
};
a0_0x3e6de3.prototype.readCustomData_onNewlyVisible = function (_0x4e75c2) {
  this.isRolling = _0x4e75c2.readUInt8() == 1;
  this.pumpkinType = _0x4e75c2.readUInt8();
};
function a0_0x3e6de3() {
  a0_0x3e6de3.superClass.call(this, a0_0x3a11dd);
  this.lookAngle = 0;
  this.isRolling = false;
  this.isFloating = false;
  this.pumpkinType = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x3a11dd = 131;
window.PumpkinBall = a0_0x3e6de3;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3e6de3, a0_0x3a11dd);
var a0_0x2b9582 = a0_0x21d5a7;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x2b9582.prototype.alltimeGoals = 0;
a0_0x2b9582.prototype.xpGained = 0;
a0_0x2b9582.prototype.goalScorer = "";
a0_0x2b9582.prototype.timerTxt = null;
a0_0x2b9582.prototype.timer = 0;
a0_0x21d5a7.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x21d5a7.prototype.customDraw = function (_0x2b99a8) {
  this.updateTimer();
  if (this.timer > 3) {
    a0_0x1306ae.save();
    var _0x260de7 = a0_0x1306ae.globalAlpha;
    a0_0x1306ae.globalAlpha = _0x260de7 * 0.25;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2, false);
    a0_0x1306ae.arc(0, 0, this.rad - 20, 0, Math.PI * 2, true);
    a0_0x1306ae.fillStyle = "#ff9000";
    a0_0x1306ae.closePath();
    a0_0x1306ae.fill();
    a0_0x1306ae.restore();
  }
  if (this.timerTxt != null) {
    this.timerTxt.x = 0;
    this.timerTxt.y = -this.rad;
    this.timerTxt.draw();
  }
};
a0_0x21d5a7.prototype.readCustomData_onNewlyVisible = function (_0x8ba8f2) {
  a0_0x21d5a7.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x8ba8f2);
  this.alltimeGoals = _0x8ba8f2.readUInt16();
  this.goalScorer = _0x8ba8f2.readString();
  this.timer = _0x8ba8f2.readUInt8();
};
a0_0x21d5a7.prototype.readUpdatedProperty = function (_0x48e4ff, _0x548841) {
  if (_0x48e4ff == a0_0x4f0a2e) {
    this.timer = _0x548841.readUInt8();
  }
};
a0_0x21d5a7.prototype.setTimer = function (_0x373a83) {
  var _0x11e31a = _0x373a83;
  var _0x497c80 = 16;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x993fcb(_0x497c80, "#ffd800");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 3;
    this.timerTxt.setText(_0x11e31a);
  } else {
    this.timerTxt.setFontSize(_0x497c80);
    this.timerTxt.setText(_0x11e31a);
  }
};
a0_0x21d5a7.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x2d2645 = this.timer;
  switch (this.timer) {
    case 10:
    case 9:
    case 8:
      _0x2d2645 = "GOAAAAAL!!!";
      break;
    case 7:
    case 6:
    case 5:
      _0x2d2645 = this.goalScorer;
      break;
    case 4:
    case 3:
    case 2:
      _0x2d2645 = "TOTAL GOALS " + this.alltimeGoals;
      break;
    default:
      _0x2d2645 = "";
      break;
  }
  this.setTimer(_0x2d2645);
};
var a0_0x59d48f = 125;
function a0_0x21d5a7() {
  a0_0x21d5a7.superClass.call(this);
  this.hasAdLoaded = false;
}
window.AbilityObjGoalScored = a0_0x21d5a7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x21d5a7, a0_0x382193, a0_0x59d48f);
var a0_0x13d267 = a0_0x13d267;
var a0_0x28626c = a0_0x2449e7;
a0_0x13d267.prototype = Object.create(a0_0x28626c.prototype);
a0_0x13d267.prototype.constructor = a0_0x13d267;
a0_0x13d267.superClass = a0_0x28626c;
a0_0x13d267.prototype.animalInfo = function () {
  var _0x1e5421 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1e5421.aniName = "Raven";
      break;
    case 111:
      _0x1e5421.aniName = "Classic Raven";
      break;
    case 220:
      _0x1e5421.aniName = "Muscipula Raven";
      break;
  }
  _0x1e5421.aniCol = "#FF9000";
  _0x1e5421.skinName = this.getSkinName();
  _0x1e5421.upgradeText = "UPGRADED to " + _0x1e5421.aniName + "!\nHold W to fly around from Tress/Hills.\n(Hint: Use ability on land to scare animals) ";
  return _0x1e5421;
};
a0_0x13d267.prototype.getAbilityInfo = function (_0x33134b) {
  var _0xd68513 = {
    abilName: "Loud Caw!"
  };
  _0xd68513.abilImg = "skins/" + this.getSpeciesPath() + this.getSubSpecies() + "/ability.png";
  _0xd68513.skinThemeID = this.skinThemeID;
  _0xd68513.mopeSeasonID = this.mopeSeasonID;
  return _0xd68513;
};
a0_0x13d267.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/raven" + (this.specType == 0 ? "" : this.specType);
};
a0_0x13d267.prototype.getSpeciesPath = function () {
  return "forest/raven/" + this.animalSpecies;
};
a0_0x13d267.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x13d267.prototype.getWing = function (_0x2081b0, _0x555deb, _0x4567d6) {
  var _0x4e5639 = "skins/" + this.getSpeciesPath() + "/";
  _0x4e5639 += _0x2081b0 + "_wing" + _0x555deb + ".png";
  return _0x4e5639;
};
a0_0x13d267.prototype.getHead = function (_0x318bac, _0x13584f) {
  var _0x547efe = "skins/" + this.getSpeciesPath() + "/";
  _0x547efe += _0x318bac + "_head.png";
  return _0x547efe;
};
var a0_0x5e8c2e = 0;
var a0_0x48bcae = 1.25;
var a0_0x457ffa = 5;
var a0_0x7808fb = 1;
a0_0x13d267.prototype.biteStart = 0;
a0_0x13d267.prototype.flapAmount = 3;
a0_0x13d267.prototype.flapDur = 0.7;
a0_0x13d267.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else if (!this.flag_flying) {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x3f4e1b = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/raven_head1.png");
      var _0x5e14f4 = (a0_0x24806e - this.biteStart) / 1000;
      var _0x218348 = this.skinScale * 1.1;
      var _0x4829e9 = this.skinRad;
      _0x56df83 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x5e14f4, this.flapDur, 0.05, 2) : 0.05;
      var _0x36c8c9 = this.getSkinImageObj(this.getWing("raven", 1, true));
      if (_0x36c8c9) {
        a0_0x1306ae.save();
        var _0x5495a0 = -(-0.2 + _0x56df83) * a0_0x5c63e1;
        var _0x4829e9 = this.rad * 0.9;
        a0_0x1306ae.rotate(a0_0x873ec7(a0_0x457ffa) + _0x5495a0);
        var _0x58bd44 = 0;
        var _0x7bdfca = this.rad;
        var _0x35d068 = _0x4829e9 * 2 * 0.62;
        var _0x14689e = _0x4829e9 * 2.5;
        var _0x1509eb = a0_0x5e8c2e;
        var _0x42dbfd = a0_0x48bcae;
        a0_0x1306ae.drawImage(_0x36c8c9, _0x58bd44 + _0x35d068 * -_0x1509eb, _0x7bdfca + _0x14689e * -_0x42dbfd, _0x35d068, _0x14689e);
        a0_0x1306ae.restore();
      }
      var _0x36c8c9 = this.getSkinImageObj(this.getWing("raven", 2, true));
      if (_0x36c8c9) {
        a0_0x1306ae.save();
        var _0x5495a0 = -(-0.2 + _0x56df83) * a0_0x873ec7(-90);
        var _0x4829e9 = this.rad * 0.9;
        a0_0x1306ae.rotate(a0_0x873ec7(-a0_0x457ffa) + _0x5495a0);
        var _0x58bd44 = 0;
        var _0x7bdfca = this.rad;
        var _0x35d068 = _0x4829e9 * 2 * 0.62;
        var _0x14689e = _0x4829e9 * 2.5;
        var _0x1509eb = a0_0x7808fb;
        var _0x42dbfd = a0_0x48bcae;
        a0_0x1306ae.drawImage(_0x36c8c9, _0x58bd44 + _0x35d068 * -_0x1509eb, _0x7bdfca + _0x14689e * -_0x42dbfd, _0x35d068, _0x14689e);
        a0_0x1306ae.restore();
      }
      if (_0x3f4e1b) {
        _0x56df83 = 0;
        if (!this.flag_flying) {
          _0x56df83 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x5e14f4, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x1306ae.save();
        var _0x4829e9 = this.rad;
        a0_0x1306ae.drawImage(_0x3f4e1b, -_0x4829e9 * _0x218348, (-_0x4829e9 + _0x4829e9 * 0.1) * _0x218348 + _0x56df83, _0x4829e9 * 2 * _0x218348, _0x4829e9 * 2 * _0x218348);
        a0_0x1306ae.restore();
      }
    }
  } else if (this.flag_flying) {
    var _0x218348 = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x5e14f4 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x56df83 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x5e14f4, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
      var _0x36c8c9 = this.getSkinImageObj(this.getWing("raven", 1, true));
      if (_0x36c8c9) {
        a0_0x1306ae.save();
        var _0x5495a0 = -(-0.2 + _0x56df83) * a0_0x5c63e1;
        var _0x4829e9 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x5495a0);
        var _0x58bd44 = 0;
        var _0x7bdfca = this.rad;
        var _0x35d068 = _0x4829e9 * 2 * 0.62;
        var _0x14689e = _0x4829e9 * 2.5;
        var _0x1509eb = 0.2;
        var _0x42dbfd = 1.7;
        a0_0x1306ae.drawImage(_0x36c8c9, _0x58bd44 + _0x35d068 * -_0x1509eb, _0x7bdfca + _0x14689e * -_0x42dbfd, _0x35d068, _0x14689e);
        a0_0x1306ae.restore();
      }
      var _0x36c8c9 = this.getSkinImageObj(this.getWing("raven", 2, true));
      if (_0x36c8c9) {
        a0_0x1306ae.save();
        var _0x5495a0 = -(-0.2 + _0x56df83) * a0_0x873ec7(-90);
        var _0x4829e9 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x5495a0);
        var _0x58bd44 = 0;
        var _0x7bdfca = this.rad;
        var _0x35d068 = _0x4829e9 * 2 * 0.62;
        var _0x14689e = _0x4829e9 * 2.5;
        var _0x1509eb = 0.8;
        var _0x42dbfd = 1.7;
        a0_0x1306ae.drawImage(_0x36c8c9, _0x58bd44 + _0x35d068 * -_0x1509eb, _0x7bdfca + _0x14689e * -_0x42dbfd, _0x35d068, _0x14689e);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x3f4e1b = this.getSkinImageObj(this.getHead("raven", true));
      if (_0x3f4e1b) {
        a0_0x1306ae.save();
        var _0x4829e9 = this.rad;
        a0_0x1306ae.drawImage(_0x3f4e1b, -_0x4829e9 * _0x218348, (-_0x4829e9 + _0x4829e9 * 0.1) * _0x218348, _0x4829e9 * 2 * _0x218348, _0x4829e9 * 2 * _0x218348);
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0x13d267() {
  a0_0x13d267.superClass.call(this, a0_0x24738f);
}
window.Raven = a0_0x13d267;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x13d267, a0_0x24738f, a0_0x3edbb5);
var a0_0x2b9582 = a0_0x78e19b;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x78e19b.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x78e19b.prototype.customDraw = function (_0x5a5a17) {
  a0_0x1306ae.save();
  var _0x4362a3 = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = _0x4362a3 * 0.1;
  a0_0x50fd5c(0, 0, this.rad, "#755A2A");
  a0_0x1306ae.restore();
  this.drawChat();
};
a0_0x78e19b.prototype.drawChat = function () {
  if (this.aLine == null) {
    return;
  }
  a0_0x1306ae.save();
  a0_0x1306ae.font = "10px Arial";
  a0_0x1306ae.lineWidth = 1;
  a0_0x1306ae.textAlign = "center";
  a0_0x1306ae.textBaseline = "middle";
  var _0x2f207c = this.aLine;
  var _0x5c87b7 = a0_0x24806e > _0x2f207c.chatFadeT ? 0 : 1;
  _0x2f207c.chatA += (_0x5c87b7 - _0x2f207c.chatA) * 0.1;
  a0_0x1306ae.shadowOffsetX = 0;
  a0_0x1306ae.shadowOffsetY = 0;
  if (_0x2f207c.chatA < 0.02) {
    this.aLine = null;
  }
  var _0x8a52fb = a0_0x1306ae.measureText(_0x2f207c.chatTxt).width;
  var _0xe79d2f = 10;
  var _0xd17c68 = 1;
  var _0x1dcc7b = 1;
  a0_0x1306ae.globalAlpha = _0x2f207c.chatA * 0.8;
  a0_0x1306ae.fillStyle = a0_0x4e8ba0(this.curBiome);
  a0_0x1306ae.fillRect(this.x - _0xd17c68 - _0x8a52fb / 2, this.y - this.rad - _0xe79d2f / 2 - _0x1dcc7b, _0x8a52fb + _0xd17c68 * 2, _0xe79d2f + _0x1dcc7b * 2);
  a0_0x1306ae.fillStyle = "#F1C34C";
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x1306ae.shadowOffsetX = 1;
    a0_0x1306ae.shadowOffsetY = 1;
    a0_0x1306ae.shadowColor = "black";
  }
  a0_0x1306ae.globalAlpha = _0x2f207c.chatA;
  a0_0x1306ae.fillText(_0x2f207c.chatTxt, this.x, this.y - this.rad);
  a0_0x1306ae.restore();
};
function a0_0x78e19b() {
  a0_0x78e19b.superClass.call(this);
}
a0_0x78e19b.prototype.aLine = null;
a0_0x78e19b.prototype.readCustomData_onNewlyVisible = function (_0x1c8707) {
  a0_0x78e19b.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1c8707);
  this.aLine = {
    chatTxt: "CAW!!!",
    chatFadeT: a0_0x24806e + 2000,
    chatA: 0
  };
};
window.RavenCaw = a0_0x78e19b;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x78e19b, a0_0x382193, a0_0x5e6f89);
var a0_0x6e9e7a = a0_0x6e9e7a;
var a0_0x28626c = a0_0x2449e7;
a0_0x6e9e7a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x6e9e7a.prototype.constructor = a0_0x6e9e7a;
a0_0x6e9e7a.superClass = a0_0x28626c;
a0_0x6e9e7a.prototype.animalInfo = function () {
  var _0x4bd191 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4bd191.aniName = "Kakapo";
      break;
    case 111:
      _0x4bd191.aniName = "Classic Kakapo";
      break;
    case 202:
      _0x4bd191.aniName = "Wind-up Kakapo";
      break;
  }
  _0x4bd191.aniCol = "#FF9000";
  _0x4bd191.skinName = this.getSkinName();
  _0x4bd191.upgradeText = "UPGRADED to " + _0x4bd191.aniName + "!\nHold W to hop around.\n(Hint: Use ability on prey to stun them) ";
  return _0x4bd191;
};
a0_0x6e9e7a.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/kakapo" + (this.specType == 0 ? "" : this.specType);
};
a0_0x6e9e7a.prototype.getSpeciesPath = function () {
  return "forest/kakapo/" + this.animalSpecies;
};
a0_0x6e9e7a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x6e9e7a.prototype.getWing = function (_0x9b60a1, _0x15527a, _0x2e66aa) {
  var _0x390c0f = "skins/" + this.getSpeciesPath() + "/";
  _0x390c0f += _0x9b60a1 + "_wing" + _0x15527a + ".png";
  return _0x390c0f;
};
a0_0x6e9e7a.prototype.getHead = function (_0x463b68, _0x49ad3a) {
  var _0x5eb685 = "skins/" + this.getSpeciesPath() + "/";
  _0x5eb685 += _0x463b68 + "_head.png";
  return _0x5eb685;
};
var a0_0x1c2179 = 0;
var a0_0x1d7588 = 1.25;
var a0_0x1ec030 = 5;
var a0_0x39fbb3 = 1;
a0_0x6e9e7a.prototype.biteStart = 0;
a0_0x6e9e7a.prototype.flapAmount = 3;
a0_0x6e9e7a.prototype.flapDur = 0.7;
a0_0x6e9e7a.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    this.biteStart = 0;
    return;
  } else if (!this.flag_flying) {
    if (this.biteStart == 0) {
      this.biteStart = a0_0x24806e;
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x2c7790 = this.getSkinImageObj("skins/" + this.getSpeciesPath() + "/kakapo_head.png");
      var _0x4ea1b8 = (a0_0x24806e - this.biteStart) / 1000;
      var _0xc8ecf = this.skinScale * 1.1;
      var _0x3777ee = this.skinRad;
      _0x4c17d4 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x4ea1b8, this.flapDur, 0.05, 2) : 0.05;
      var _0x2b0e94 = this.getSkinImageObj(this.getWing("kakapo", 1, true));
      if (_0x2b0e94) {
        a0_0x1306ae.save();
        var _0x18b977 = -(-0.2 + _0x4c17d4) * a0_0x5c63e1;
        var _0x3777ee = this.rad * 0.9;
        a0_0x1306ae.rotate(a0_0x873ec7(a0_0x1ec030) + _0x18b977);
        var _0x3199a0 = 0;
        var _0x57ca30 = this.rad;
        var _0x3ce239 = _0x3777ee * 2 * 0.62;
        var _0x37ebd7 = _0x3777ee * 2.5;
        var _0x595b22 = a0_0x1c2179;
        var _0x45b765 = a0_0x1d7588;
        a0_0x1306ae.drawImage(_0x2b0e94, _0x3199a0 + _0x3ce239 * -_0x595b22, _0x57ca30 + _0x37ebd7 * -_0x45b765, _0x3ce239, _0x37ebd7);
        a0_0x1306ae.restore();
      }
      var _0x2b0e94 = this.getSkinImageObj(this.getWing("kakapo", 2, true));
      if (_0x2b0e94) {
        a0_0x1306ae.save();
        var _0x18b977 = -(-0.2 + _0x4c17d4) * a0_0x873ec7(-90);
        var _0x3777ee = this.rad * 0.9;
        a0_0x1306ae.rotate(a0_0x873ec7(-a0_0x1ec030) + _0x18b977);
        var _0x3199a0 = 0;
        var _0x57ca30 = this.rad;
        var _0x3ce239 = _0x3777ee * 2 * 0.62;
        var _0x37ebd7 = _0x3777ee * 2.5;
        var _0x595b22 = a0_0x39fbb3;
        var _0x45b765 = a0_0x1d7588;
        a0_0x1306ae.drawImage(_0x2b0e94, _0x3199a0 + _0x3ce239 * -_0x595b22, _0x57ca30 + _0x37ebd7 * -_0x45b765, _0x3ce239, _0x37ebd7);
        a0_0x1306ae.restore();
      }
      if (_0x2c7790) {
        _0x4c17d4 = 0;
        if (!this.flag_flying) {
          _0x4c17d4 = a0_0x56bbb3 != a0_0xbf9ed5 ? a0_0x423a9f(_0x4ea1b8, this.flapDur, this.flapAmount, 2) : this.flapAmount;
        }
        a0_0x1306ae.save();
        var _0x3777ee = this.rad;
        a0_0x1306ae.drawImage(_0x2c7790, -_0x3777ee * _0xc8ecf, (-_0x3777ee + _0x3777ee * 0.1) * _0xc8ecf + _0x4c17d4, _0x3777ee * 2 * _0xc8ecf, _0x3777ee * 2 * _0xc8ecf);
        a0_0x1306ae.restore();
      }
    }
  } else if (this.flag_flying) {
    var _0xc8ecf = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x4ea1b8 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x4c17d4 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x4ea1b8, 0.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
      var _0x2b0e94 = this.getSkinImageObj(this.getWing("kakapo", 1, true));
      if (_0x2b0e94) {
        a0_0x1306ae.save();
        var _0x18b977 = -(-0.2 + _0x4c17d4) * a0_0x5c63e1;
        var _0x3777ee = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x18b977);
        var _0x3199a0 = 0;
        var _0x57ca30 = this.rad;
        var _0x3ce239 = _0x3777ee * 2 * 0.62;
        var _0x37ebd7 = _0x3777ee * 2.5;
        var _0x595b22 = 0.2;
        var _0x45b765 = 1.7;
        a0_0x1306ae.drawImage(_0x2b0e94, _0x3199a0 + _0x3ce239 * -_0x595b22, _0x57ca30 + _0x37ebd7 * -_0x45b765, _0x3ce239, _0x37ebd7);
        a0_0x1306ae.restore();
      }
      var _0x2b0e94 = this.getSkinImageObj(this.getWing("kakapo", 2, true));
      if (_0x2b0e94) {
        a0_0x1306ae.save();
        var _0x18b977 = -(-0.2 + _0x4c17d4) * a0_0x873ec7(-90);
        var _0x3777ee = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x18b977);
        var _0x3199a0 = 0;
        var _0x57ca30 = this.rad;
        var _0x3ce239 = _0x3777ee * 2 * 0.62;
        var _0x37ebd7 = _0x3777ee * 2.5;
        var _0x595b22 = 0.8;
        var _0x45b765 = 1.7;
        a0_0x1306ae.drawImage(_0x2b0e94, _0x3199a0 + _0x3ce239 * -_0x595b22, _0x57ca30 + _0x37ebd7 * -_0x45b765, _0x3ce239, _0x37ebd7);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x2c7790 = this.getSkinImageObj(this.getHead("kakapo", true));
      if (_0x2c7790) {
        a0_0x1306ae.save();
        var _0x3777ee = this.rad;
        a0_0x1306ae.drawImage(_0x2c7790, -_0x3777ee * _0xc8ecf, (-_0x3777ee + _0x3777ee * 0.1) * _0xc8ecf, _0x3777ee * 2 * _0xc8ecf, _0x3777ee * 2 * _0xc8ecf);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x6e9e7a.prototype.getAbilityInfo = function (_0x50af4d) {
  var _0x439092 = {
    abilName: "Hop!"
  };
  _0x439092.abilImg = "skins/" + this.getSpeciesPath() + this.getSubSpecies() + "/kakapo.png";
  _0x439092.skinThemeID = this.skinThemeID;
  _0x439092.mopeSeasonID = this.mopeSeasonID;
  return _0x439092;
};
function a0_0x6e9e7a() {
  a0_0x6e9e7a.superClass.call(this, a0_0x24738f);
}
window.Kakapo = a0_0x6e9e7a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x6e9e7a, a0_0x24738f, a0_0x58d479);
var a0_0x54230a = a0_0x54230a;
var a0_0x28626c = a0_0x2449e7;
a0_0x54230a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x54230a.prototype.constructor = a0_0x54230a;
a0_0x54230a.superClass = a0_0x28626c;
a0_0x54230a.prototype.objSkinSpotsCanvas = null;
a0_0x54230a.prototype.animalInfo = function () {
  var _0x17f94c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x17f94c.aniName = "Mole";
      break;
    case 100:
      _0x17f94c.aniName = "Zombie Mole";
      break;
    case 111:
      _0x17f94c.aniName = "Classic Mole";
      break;
    case 112:
      _0x17f94c.aniName = "Gold-trim Mole";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x17f94c.aniName = "Toxic Mole";
          break;
        case 1:
          _0x17f94c.aniName = "Cytokinetic Mole";
          break;
      }
      break;
  }
  _0x17f94c.aniDesc = "";
  _0x17f94c.upgradeText = "UPGRADED to " + _0x17f94c.aniName + "!\n Hold W to dig underground!\nGo under anything, do surprise attacks!";
  _0x17f94c.aniCol = "#4C4A45";
  _0x17f94c.skinName = this.getSkinName();
  return _0x17f94c;
};
a0_0x54230a.prototype.getSkinName = function () {
  return "land/mole/" + this.animalSpecies + this.getSubSpecies() + "/mole";
};
a0_0x54230a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x54230a.prototype.getAbilityInfo = function (_0xb272c4) {
  var _0x40bfdb = {
    abilName: "Hold to Dig"
  };
  _0x40bfdb.abilImg = "skins/" + this.getSkinName() + ".png";
  _0x40bfdb.skinThemeID = this.skinThemeID;
  _0x40bfdb.mopeSeasonID = this.mopeSeasonID;
  return _0x40bfdb;
};
function a0_0x54230a() {
  a0_0x54230a.superClass.call(this, a0_0x24738f);
}
window.Mole = a0_0x54230a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x54230a, a0_0x24738f, a0_0x391884);
var a0_0x28626c = a0_0x42171b;
a0_0x2a7754.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2a7754.prototype.constructor = a0_0x2a7754;
a0_0x2a7754.superClass = a0_0x28626c;
a0_0x2a7754.prototype.updateZ = function () {
  this.z = 1010;
};
a0_0x2a7754.prototype.setSkinPath = function () {
  this.objSkinPath = "img/coin/coin" + (this.isEdibleOutlined() ? "_e" : "") + ".png";
};
a0_0x2a7754.prototype.customDraw = function (_0x45ecf6) {
  var _0x3e82c9 = this.getSkinImageObj(this.objSkinPath);
  if (_0x3e82c9) {
    var _0x3f02ae = this.rad;
    a0_0x1306ae.drawImage(_0x3e82c9, -_0x3f02ae, -_0x3f02ae, _0x3f02ae * 2, _0x3f02ae * 2);
  }
};
var a0_0x54e4d4 = 132;
function a0_0x2a7754() {
  a0_0x2a7754.superClass.call(this, a0_0x54e4d4);
  a0_0x2a7754.prototype.easeAngleChanges = true;
}
window.MopeCoin = a0_0x2a7754;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2a7754, a0_0x54e4d4);
var a0_0x28626c = a0_0x42171b;
a0_0x1066e6.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1066e6.prototype.constructor = a0_0x1066e6;
a0_0x1066e6.superClass = a0_0x28626c;
a0_0x1066e6.prototype.color = "limegreen";
a0_0x1066e6.prototype.updateZ = function () {
  this.z = this.rad + 11110000;
};
a0_0x1066e6.prototype.customDraw = function (_0x391ac4) {
  a0_0x1306ae.save();
  var _0x37e4ba = 0.4;
  var _0x40235c = 8;
  if (this.shrinkRad > 250) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.1;
    a0_0x68a33b(0, 0, this.shrinkRad, _0x40235c * 0.5, this.color);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = _0x37e4ba + 0.3;
  a0_0x68a33b(0, 0, this.rad, _0x40235c, this.color);
  a0_0x1306ae.restore();
  if (this.rad > 1500) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x37e4ba;
    a0_0x68a33b(0, 0, this.shrinkedRad, _0x40235c, a0_0x52f121);
    a0_0x1306ae.restore();
  }
  var _0xbdf5ef = a0_0x2b523d * (a0_0x9b6712 / 2);
  var _0x2fef7a = a0_0x2b523d * (a0_0x3acc86 / 2);
  var _0x36e8fc = _0x37e4ba - 0.1;
  var _0x22e940 = this.color;
  var _0x23db97 = a0_0x3acc86;
  var _0x41b6e6 = a0_0x9b6712;
  var _0x1b6ee6 = _0x23db97 - this.x;
  var _0x3becc7 = _0x41b6e6 - this.y;
  var _0x3e0447 = this.x;
  var _0x522215 = _0x3becc7;
  var _0x40c4b6 = _0x3e0447;
  var _0x2ec4c0 = this.y;
  var _0x3e9b6c = _0x1b6ee6;
  var _0x232661 = _0x2ec4c0;
  _0x1b6ee6 = a0_0x2b523d * _0x1b6ee6;
  _0x3becc7 = a0_0x2b523d * _0x3becc7;
  _0x3e0447 = a0_0x2b523d * _0x3e0447;
  _0x522215 = a0_0x2b523d * _0x522215;
  _0x40c4b6 = a0_0x2b523d * _0x40c4b6;
  _0x2ec4c0 = a0_0x2b523d * _0x2ec4c0;
  _0x3e9b6c = a0_0x2b523d * _0x3e9b6c;
  _0x232661 = a0_0x2b523d * _0x232661;
  this.drawDangerAreaSegment2(0, _0x22e940, _0x36e8fc, _0x3becc7, _0x1b6ee6);
  this.drawDangerAreaSegment2(Math.PI * 0.5, _0x22e940, _0x36e8fc, _0x3e0447, _0x522215);
  this.drawDangerAreaSegment2(Math.PI * 1, _0x22e940, _0x36e8fc, _0x2ec4c0, _0x40c4b6);
  this.drawDangerAreaSegment2(Math.PI * 1.5, _0x22e940, _0x36e8fc, _0x3e9b6c, _0x232661);
  a0_0x1306ae.restore();
};
a0_0x1066e6.prototype.drawDangerAreaSegment2 = function (_0x3575a3, _0x19f07e, _0x12b648, _0xaf4e2, _0x58f024) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = _0x12b648;
  a0_0x1306ae.fillStyle = _0x19f07e;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.rotate(_0x3575a3);
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 0.5, false);
  a0_0x1306ae.lineTo(0, _0xaf4e2);
  a0_0x1306ae.lineTo(_0x58f024, _0xaf4e2);
  a0_0x1306ae.lineTo(_0x58f024, 0);
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
  a0_0x1306ae.restore();
};
a0_0x1066e6.prototype.moveUpdate = function () {
  var _0x6609fb = (a0_0x24806e - this.updateTime) / 1000 / a0_0x26bfcb;
  _0x6609fb = _0x6609fb < 0 ? 0 : _0x6609fb > 1 ? 1 : _0x6609fb;
  this.x = _0x6609fb * (this.nx - this.ox) + this.ox;
  this.y = _0x6609fb * (this.ny - this.oy) + this.oy;
  this.rad += (this.nRad - this.rad) * 0.1;
  return Math.min(1, _0x6609fb);
};
a0_0x1066e6.prototype.readUpdatedProperty = function (_0x52c990, _0x19d9e3) {
  if (_0x52c990 == a0_0x4d4fe4) {
    this.shrinkRad = _0x19d9e3.readUInt32() / 4;
  }
};
a0_0x1066e6.prototype.readCustomData_onNewlyVisible = function (_0x466e3e) {
  this.shrinkRad = _0x466e3e.readUInt32() / 4;
};
function a0_0x1066e6() {
  a0_0x1066e6.superClass.call(this, a0_0x4f9a02);
  a0_0x1066e6.prototype.easeAngleChanges = true;
  this.color = a0_0x17b807 == a0_0x37f513 ? "limegreen" : "red";
}
window.SafeArea = a0_0x1066e6;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1066e6, a0_0x4f9a02);
var a0_0x28626c = a0_0x2449e7;
a0_0x10fa12.prototype = Object.create(a0_0x28626c.prototype);
a0_0x10fa12.prototype.constructor = a0_0x10fa12;
a0_0x10fa12.superClass = a0_0x28626c;
a0_0x10fa12.prototype.animalInfo = function () {
  var _0x24a1dc = {};
  switch (this.animalSpecies) {
    case 0:
      switch (this.animalSubSpecies) {
        case 0:
        default:
          _0x24a1dc.aniName = "Snow Leopard!";
          break;
        case 223:
          _0x24a1dc.aniName = "Valentine Snow Leopard!";
          break;
      }
      break;
    case 100:
      _0x24a1dc.aniName = "Frostaline";
      break;
    case 111:
      _0x24a1dc.aniName = "Classic Snow Leopard!";
      break;
    case 112:
      _0x24a1dc.aniName = "Gold-trim Snow Leopard";
      break;
    case 201:
      _0x24a1dc.aniName = "Coral Queen";
      break;
    case 202:
      _0x24a1dc.aniName = "Astral Leopard";
      break;
    case 204:
      _0x24a1dc.aniName = "Martian Leopard";
      break;
  }
  _0x24a1dc.skinName = this.getSkinName();
  _0x24a1dc.aniDesc = "";
  _0x24a1dc.upgradeText = "UPGRADED to " + _0x24a1dc.aniName + "!\n Press W to get a speed boost! (Every 4.5 seconds)!";
  _0x24a1dc.aniCol = "#cfcfcf";
  return _0x24a1dc;
};
a0_0x10fa12.prototype.getSkinName = function () {
  return "arctic/snowleopard/" + this.animalSpecies + this.getSubSpecies() + "/snowleopard";
};
a0_0x10fa12.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x10fa12.prototype.getAbilityInfo = function (_0x24bd99) {
  var _0xeafcaf = {
    abilName: "Extra Boost"
  };
  _0xeafcaf.abilImg = "arctic/snowleopard/" + this.animalSpecies + this.getSubSpecies() + "/snowleopard.png";
  _0xeafcaf.skinThemeID = this.skinThemeID;
  _0xeafcaf.mopeSeasonID = this.mopeSeasonID;
  return _0xeafcaf;
};
function a0_0x10fa12() {
  a0_0x10fa12.superClass.call(this, a0_0x24738f);
}
window.SnowLeopard = a0_0x10fa12;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x10fa12, a0_0x24738f, a0_0x4b16c6);
var a0_0x28626c = a0_0x42171b;
a0_0x44a831.prototype = Object.create(a0_0x28626c.prototype);
a0_0x44a831.prototype.constructor = a0_0x44a831;
a0_0x44a831.superClass = a0_0x28626c;
a0_0x44a831.prototype.updateZ = function () {
  this.z = 1000000;
};
var a0_0x47af21 = -0.3;
var a0_0xb78747 = -0.2;
var a0_0x106ae9 = 0.3;
var a0_0x33d813 = -0.2;
var a0_0x48ec48 = 0.2;
a0_0x44a831.prototype.customDraw = function (_0x4ba27a) {
  var _0x4dfea3 = 500 / 340;
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle);
  var _0xd67207 = this.rad;
  var _0x5c99b0 = this.getSkinImageObj(this.getBody("battleduck", true));
  if (_0x5c99b0) {
    a0_0x1306ae.save();
    a0_0x1306ae.drawImage(_0x5c99b0, -_0xd67207 * _0x4dfea3, -_0xd67207 * _0x4dfea3, _0xd67207 * 2 * _0x4dfea3, _0xd67207 * 2 * _0x4dfea3);
    a0_0x1306ae.restore();
  }
  var _0x2aac5b = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x44ec32 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x2aac5b, 2.5, 0.3, 2) : this.birdNoAnimationFlyWingAngle;
  var _0x197502 = this.getSkinImageObj(this.getWing("battleduck", 1, true));
  if (_0x197502) {
    a0_0x1306ae.save();
    var _0x1352a2 = -(-0.2 + _0x44ec32) * a0_0x5c63e1;
    var _0xd67207 = this.rad * 1;
    a0_0x1306ae.rotate(a0_0x873ec7(45) + _0x1352a2);
    var _0x966b1 = 0;
    var _0x544235 = this.rad;
    var _0x16c9c8 = _0xd67207 * 2 * 0.62;
    var _0x551373 = _0xd67207 * 2.5;
    var _0x134a63 = 0.2 + a0_0x47af21;
    var _0x19f00f = 1.7 + a0_0xb78747;
    a0_0x1306ae.drawImage(_0x197502, _0x966b1 + _0x16c9c8 * -_0x134a63, _0x544235 + _0x551373 * -_0x19f00f, _0x16c9c8, _0x551373);
    a0_0x1306ae.restore();
  }
  var _0x197502 = this.getSkinImageObj(this.getWing("battleduck", 2, true));
  if (_0x197502) {
    a0_0x1306ae.save();
    var _0x1352a2 = -(-0.2 + _0x44ec32) * a0_0x873ec7(-90);
    var _0xd67207 = this.rad * 1;
    a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x1352a2);
    var _0x966b1 = 0;
    var _0x544235 = this.rad;
    var _0x16c9c8 = _0xd67207 * 2 * 0.62;
    var _0x551373 = _0xd67207 * 2.5;
    var _0x134a63 = 0.8 + a0_0x106ae9;
    var _0x19f00f = 1.7 + a0_0x33d813;
    a0_0x1306ae.drawImage(_0x197502, _0x966b1 + _0x16c9c8 * -_0x134a63, _0x544235 + _0x551373 * -_0x19f00f, _0x16c9c8, _0x551373);
    a0_0x1306ae.restore();
  }
  var _0x38fcff = this.getSkinImageObj(this.getHead("battleduck", true));
  if (_0x38fcff) {
    a0_0x1306ae.save();
    var _0xd67207 = this.rad;
    a0_0x1306ae.drawImage(_0x38fcff, -_0xd67207 * _0x4dfea3, (-_0xd67207 + _0xd67207 * a0_0x48ec48) * _0x4dfea3, _0xd67207 * 2 * _0x4dfea3, _0xd67207 * 2 * _0x4dfea3);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x44a831.prototype.getSpeciesPath = function (_0x3a86f3) {
  return _0x3a86f3 + "/" + this.speciesType;
};
a0_0x44a831.prototype.getWing = function (_0x47f6eb, _0x62b9a1, _0x5c8546) {
  var _0x510475 = "skins/" + (_0x5c8546 ? this.getSpeciesPath(_0x47f6eb) + "/" : _0x47f6eb + "/");
  _0x510475 += _0x47f6eb + "_wing" + _0x62b9a1 + ".png";
  return _0x510475;
};
a0_0x44a831.prototype.getBody = function (_0x29523d, _0x52408f) {
  var _0x9c759c = "skins/" + (_0x52408f ? this.getSpeciesPath(_0x29523d) + "/" : _0x29523d + "/");
  _0x9c759c += _0x29523d + "_body.png";
  return _0x9c759c;
};
a0_0x44a831.prototype.getHead = function (_0xe82f8e, _0x433968) {
  var _0x337375 = "skins/" + (_0x433968 ? this.getSpeciesPath(_0xe82f8e) + "/" : _0xe82f8e + "/");
  _0x337375 += _0xe82f8e + "_head.png";
  return _0x337375;
};
var a0_0x4d94ef = 133;
function a0_0x44a831() {
  a0_0x44a831.superClass.call(this, a0_0x4d94ef);
  console.log("@@@@@@@@@@@@ BATTLE DUCK SPAWNED @@@@@@@@@");
}
window.BattleDuck = a0_0x44a831;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x44a831, a0_0x4d94ef);
var a0_0x561e88 = a0_0x561e88;
var a0_0x28626c = a0_0x2449e7;
a0_0x561e88.prototype = Object.create(a0_0x28626c.prototype);
a0_0x561e88.prototype.constructor = a0_0x561e88;
a0_0x561e88.superClass = a0_0x28626c;
a0_0x561e88.prototype.objSkinSpotsCanvas = null;
a0_0x561e88.prototype.animalInfo = function () {
  var _0x4a810c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4a810c.aniName = "Giraffe";
      break;
    case 1:
      _0x4a810c.aniName = "Momaffie";
      break;
    case 2:
      _0x4a810c.aniName = "Girabie";
      break;
    case 3:
      _0x4a810c.aniName = "Momaffie Family";
      break;
    case 111:
      _0x4a810c.aniName = "Classic Giraffe";
      break;
    case 112:
      _0x4a810c.aniName = "Gold-trim Giraffe";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0x4a810c.aniName = "Quilin Giraffe";
          break;
        case 1:
          _0x4a810c.aniName = "Draquorum";
      }
      break;
  }
  _0x4a810c.upgradeText = "UPGRADED to " + _0x4a810c.aniName + "!\nGiraffe have huge legs and stomp anyone in their way!";
  _0x4a810c.aniCol = "#E9BD23";
  _0x4a810c.skinName = this.getSkinName();
  return _0x4a810c;
};
a0_0x561e88.prototype.getSkinName = function () {
  let _0x5dfedf = this.getSpeciesPath() + "/giraffe";
  if (this.id == 0 && this.animalSpecies == 3) {
    _0x5dfedf += "_family";
  }
  return _0x5dfedf;
};
a0_0x561e88.prototype.getSpeciesPath = function () {
  return "land/giraffe/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x561e88.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x561e88.prototype.getAbilityInfo = function (_0x4640dd) {
  var _0x4e6400 = {
    abilName: "Stomp!"
  };
  _0x4e6400.abilImg = "skins/" + this.getSpeciesPath() + "/giraffe.png";
  _0x4e6400.skinThemeID = this.skinThemeID;
  _0x4e6400.mopeSeasonID = this.mopeSeasonID;
  return _0x4e6400;
};
a0_0x561e88.prototype.isEdibleOutlined = function () {
  if (this.mommyID == a0_0x15e4d1) {
    return false;
  }
  return a0_0x561e88.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0x561e88.prototype.readCustomData_onNewlyVisible = function (_0x551948) {
  a0_0x561e88.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x551948);
  this.mommyID = _0x551948.readUInt32();
};
function a0_0x561e88() {
  a0_0x561e88.superClass.call(this, a0_0x24738f);
}
window.Giraffe = a0_0x561e88;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x561e88, a0_0x24738f, a0_0x56479a);
var a0_0x55534a = a0_0x55534a;
var a0_0x28626c = a0_0x2449e7;
a0_0x55534a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x55534a.prototype.constructor = a0_0x55534a;
a0_0x55534a.superClass = a0_0x28626c;
a0_0x55534a.prototype.objSkinSpotsCanvas = null;
a0_0x55534a.prototype.getSkinName = function () {
  let _0x42dae8 = this.getSpeciesPath() + "/giraffe";
  if (this.specType > 0) {
    _0x42dae8 += "" + this.specType;
  }
  if (this.id == 0 && this.animalSpecies == 2) {
    _0x42dae8 += "_family";
  }
  return _0x42dae8;
};
a0_0x55534a.prototype.getSpeciesPath = function () {
  return "forest/whitegiraffe/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x55534a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x55534a.prototype.animalInfo = function () {
  var _0x40424d = {};
  switch (this.animalSpecies) {
    case 1:
      _0x40424d.aniName = "White Giraffe";
      break;
    case 2:
      _0x40424d.aniName = "Giraffe Family";
      break;
  }
  _0x40424d.aniDesc = "";
  _0x40424d.upgradeText = "UPGRADED to " + _0x40424d.aniName + "!\nWhite Giraffe are very aggressive and have huge legs and stomp anyone in their way!";
  _0x40424d.aniCol = "#E9BD23";
  _0x40424d.skinName = this.getSkinName();
  return _0x40424d;
};
a0_0x55534a.prototype.getAbilityInfo = function (_0x27d445) {
  var _0x118cd5 = {
    abilName: "Stomp!"
  };
  _0x118cd5.abilImg = "skins/" + this.getSpeciesPath() + "/giraffe.png";
  _0x118cd5.skinThemeID = this.skinThemeID;
  _0x118cd5.mopeSeasonID = this.mopeSeasonID;
  return _0x118cd5;
};
function a0_0x55534a() {
  a0_0x55534a.superClass.call(this, a0_0x24738f);
}
window.WhiteGiraffe = a0_0x55534a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x55534a, a0_0x24738f, a0_0xc8ae84);
var a0_0x28626c = a0_0x2449e7;
a0_0xa80dba.prototype = Object.create(a0_0x28626c.prototype);
a0_0xa80dba.prototype.constructor = a0_0xa80dba;
a0_0xa80dba.superClass = a0_0x28626c;
a0_0xa80dba.prototype.getSkinName = function () {
  return this.getSpeciesPath() + "/turkey" + (this.specType == 0 ? "" : this.specType);
};
a0_0xa80dba.prototype.getSpeciesPath = function () {
  return "forest/turkey/" + this.animalSpecies;
};
a0_0xa80dba.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0xa80dba.prototype.getWing = function (_0x5d5f28, _0x2b60ba, _0x11bc1e) {
  var _0x1b9255 = "skins/" + this.getSpeciesPath() + "/turkey";
  _0x1b9255 += "_wing" + _0x2b60ba + ".png";
  return _0x1b9255;
};
a0_0xa80dba.prototype.getHead = function (_0x599258, _0xb5876b) {
  var _0x38f53f = "skins/" + this.getSpeciesPath() + "/turkey";
  _0x38f53f += "_head.png";
  return _0x38f53f;
};
a0_0xa80dba.prototype.getAbilityInfo = function (_0x50744c) {
  var _0x5b5f3f = {};
  if (this.flag_eff_isOnTree || this.flag_flying && this.flag_usingAbility) {
    _0x5b5f3f.abilName = "Hold to Fly";
    _0x5b5f3f.abilImg = "skins/forest/turkey/" + this.animalSpecies + "/ability_fly.png";
  } else if (this.flag_isClimbingHill) {
    _0x5b5f3f.abilName = "Shoot Eggs!";
    _0x5b5f3f.abilImg = "skins/forest/turkey/" + this.animalSpecies + "/turkeyegg.png";
  } else {
    _0x5b5f3f.abilName = "Front Kick\n(Hold to Charge)";
    _0x5b5f3f.abilImg = "skins/forest/turkey/" + this.animalSpecies + "/ability.png";
  }
  _0x5b5f3f.skinThemeID = this.skinThemeID;
  _0x5b5f3f.mopeSeasonID = this.mopeSeasonID;
  return _0x5b5f3f;
};
a0_0xa80dba.prototype.animalInfo = function () {
  var _0x32b4e7 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x32b4e7.aniName = "Turkey!";
      break;
    case 111:
      _0x32b4e7.aniName = "Classic Turkey";
      break;
  }
  _0x32b4e7.aniCol = "#FF9000";
  _0x32b4e7.skinName = this.getSkinName();
  _0x32b4e7.upgradeText = "UPGRADED to " + _0x32b4e7.aniName + "!\nHold W to charge up a kick, fly from tree and shoot eggs from hill!";
  return _0x32b4e7;
};
var a0_0x48fcbf = 0.6;
var a0_0x2118c1 = -1.5;
var a0_0x41d6aa = -2;
a0_0xa80dba.prototype.drawUnderSkinImg = function () {
  a0_0x1306ae.save();
  var _0x24beb5 = this.rad * a0_0x48fcbf;
  var _0x14a060 = "tail";
  if (this.flag_usingAbility) {
    if (!this.flag_flying) {
      _0x14a060 = "tail1";
    }
    a0_0x2118c1 = a0_0x41d6aa;
  } else {
    a0_0x2118c1 = -1.5;
  }
  _0x14a060 = "skins/" + this.getSpeciesPath() + "/" + _0x14a060 + ".png";
  var _0x28ae09 = this.getSkinImageObj(_0x14a060);
  if (_0x28ae09) {
    a0_0x1306ae.drawImage(_0x28ae09, -_0x24beb5 * this.skinScale * 2, -_0x24beb5 * this.skinScale * 2 + _0x24beb5 * a0_0x2118c1, _0x24beb5 * 2 * this.skinScale * 2, _0x24beb5 * 3 * this.skinScale);
  }
  a0_0x1306ae.restore();
};
a0_0xa80dba.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  var _0x16903f = 500 / 340;
  a0_0x1306ae.save();
  var _0x64cba2 = this.flag_flying ? 45 : 20;
  var _0x15798f = this.flag_flying ? 90 : 45;
  var _0x3b7a2e = this.flag_flying ? 0.2 : 0.01;
  var _0x5adf0c = this.flag_flying ? 2.5 : 2.2;
  var _0x5ad9ce = this.flag_flying ? 2.5 : 2.2;
  var _0x10e25e = this.flag_flying ? 0 : -0.4;
  var _0x331dfd = this.flag_flying ? 0 : -0.2;
  var _0x4cf201 = this.flag_flying ? 0.5 : 1.2;
  var _0x42c1c1 = this.flag_flying ? 0.3 : 0.1;
  var _0x1fc294 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x399648 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? a0_0x423a9f(_0x1fc294, _0x4cf201, _0x42c1c1, 2) : this.birdNoAnimationFlyWingAngle;
  var _0x5d9861 = this.getSkinImageObj(this.getWing("turkey", 1, true));
  if (_0x5d9861) {
    a0_0x1306ae.save();
    var _0x801c88 = -(-_0x3b7a2e + _0x399648) * a0_0x873ec7(_0x15798f);
    var _0x5ed4b7 = this.rad * 0.8;
    a0_0x1306ae.rotate(a0_0x873ec7(_0x64cba2) + _0x801c88);
    var _0x2a208e = 0;
    var _0x251a46 = this.rad;
    var _0x1f47c9 = _0x5ed4b7 * _0x5ad9ce * 0.62;
    var _0x6a26cf = _0x5ed4b7 * _0x5adf0c;
    var _0x2c851c = 0.2 + _0x10e25e;
    var _0x5f1977 = 1.7 + _0x331dfd;
    a0_0x1306ae.drawImage(_0x5d9861, _0x2a208e + _0x1f47c9 * -_0x2c851c, _0x251a46 + _0x6a26cf * -_0x5f1977, _0x1f47c9, _0x6a26cf);
    a0_0x1306ae.restore();
  }
  var _0x5d9861 = this.getSkinImageObj(this.getWing("turkey", 2, true));
  if (_0x5d9861) {
    a0_0x1306ae.save();
    var _0x801c88 = -(-_0x3b7a2e + _0x399648) * a0_0x873ec7(-_0x15798f);
    var _0x5ed4b7 = this.rad * 0.8;
    a0_0x1306ae.rotate(a0_0x873ec7(-_0x64cba2) + _0x801c88);
    var _0x2a208e = 0;
    var _0x251a46 = this.rad;
    var _0x1f47c9 = _0x5ed4b7 * _0x5ad9ce * 0.62;
    var _0x6a26cf = _0x5ed4b7 * _0x5adf0c;
    var _0x2c851c = 0.8 - _0x10e25e;
    var _0x5f1977 = 1.7 + _0x331dfd;
    a0_0x1306ae.drawImage(_0x5d9861, _0x2a208e + _0x1f47c9 * -_0x2c851c, _0x251a46 + _0x6a26cf * -_0x5f1977, _0x1f47c9, _0x6a26cf);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
  var _0x40c150 = 0.1;
  if (this.specType == 2) {
    _0x40c150 = -0.1;
  }
  var _0x509aa1 = this.getSkinImageObj(this.getHead("turkey", true));
  if (_0x509aa1) {
    a0_0x1306ae.save();
    var _0x5ed4b7 = this.rad;
    a0_0x1306ae.drawImage(_0x509aa1, -_0x5ed4b7 * _0x16903f, (-_0x5ed4b7 + _0x5ed4b7 * _0x40c150) * _0x16903f, _0x5ed4b7 * 2 * _0x16903f, _0x5ed4b7 * 2 * _0x16903f);
    a0_0x1306ae.restore();
  }
};
function a0_0xa80dba() {
  a0_0xa80dba.superClass.call(this, a0_0x24738f);
}
window.Turkey = a0_0xa80dba;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xa80dba, a0_0x24738f, a0_0x2ea98a);
var a0_0x28626c = a0_0x42171b;
a0_0x2bf54c.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2bf54c.prototype.constructor = a0_0x2bf54c;
a0_0x2bf54c.superClass = a0_0x28626c;
a0_0x2bf54c.prototype.mommyID = 0;
a0_0x2bf54c.prototype.updateZ = function () {
  this.z = this.flag_flying ? 1000 : this.rad;
};
a0_0x2bf54c.prototype.isEdibleOutlined = function () {
  return (a0_0x283a01[a0_0x15e4d1] == null || a0_0x283a01[a0_0x15e4d1] != null && a0_0x283a01[a0_0x15e4d1].id != this.spawnedByID) && a0_0x2bf54c.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0x2bf54c.prototype.customDraw = function (_0x56000b) {
  a0_0x1306ae.save();
  var _0x1fb07e = this.getSkinImageObj("skins/forest/turkey/" + this.speciesType + "/turkeyegg" + (this.isEdibleOutlined() ? "_e" : "") + ".png");
  if (_0x1fb07e) {
    var _0x3908fe = this.rad;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x1fb07e, -_0x3908fe, -_0x3908fe, _0x3908fe * 2, _0x3908fe * 2);
  }
  a0_0x1306ae.restore();
};
var a0_0x1a7f2d = 134;
function a0_0x2bf54c() {
  a0_0x2bf54c.superClass.call(this, a0_0x1a7f2d);
  this.doesDrawEffectScale = true;
}
window.TurkeyEgg = a0_0x2bf54c;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2bf54c, a0_0x1a7f2d);
var a0_0x28626c = a0_0x42171b;
a0_0x10d149.prototype = Object.create(a0_0x28626c.prototype);
a0_0x10d149.prototype.constructor = a0_0x10d149;
a0_0x10d149.superClass = a0_0x28626c;
a0_0x10d149.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x10d149.prototype.customDraw = function (_0x58aa79) {
  a0_0x1306ae.save();
  var _0x102ccf = "gameobj/" + this.oType + "/" + this.oType + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x29ce70 = this.getSkinImageObj(_0x102ccf);
  if (_0x29ce70) {
    var _0x416fe8 = this.rad;
    this.angle = this.rPer * Math.PI * 2;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x29ce70, -_0x416fe8, -_0x416fe8, _0x416fe8 * 2, _0x416fe8 * 2);
  }
  a0_0x1306ae.restore();
};
var a0_0x4fb46a = 135;
function a0_0x10d149() {
  a0_0x10d149.superClass.call(this, a0_0x4fb46a);
  this.doesDrawEffectScale = true;
}
window.TurkeyLeg = a0_0x10d149;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x10d149, a0_0x4fb46a);
var a0_0x28626c = a0_0x42171b;
a0_0x283ad6.prototype = Object.create(a0_0x28626c.prototype);
a0_0x283ad6.prototype.constructor = a0_0x283ad6;
a0_0x283ad6.superClass = a0_0x28626c;
a0_0x283ad6.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x283ad6.prototype.customDraw = function (_0xfefa7d) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  var _0x3bc0b8 = "gameobj/" + this.oType + "/" + this.oType + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x3925f6 = this.getSkinImageObj(_0x3bc0b8);
  if (_0x3925f6) {
    var _0x49d21a = 0.15;
    var _0x24b9a0 = this.rad * 1.2;
    this.angle = this.rPer * Math.PI * 2;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x3925f6, -_0x24b9a0, -_0x24b9a0 + _0x24b9a0 * _0x49d21a, _0x24b9a0 * 2, _0x24b9a0 * 2);
  }
  a0_0x1306ae.restore();
};
var a0_0x37a451 = 136;
function a0_0x283ad6() {
  a0_0x283ad6.superClass.call(this, a0_0x37a451);
  this.doesDrawEffectScale = true;
}
window.TurkeyBaked = a0_0x283ad6;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x283ad6, a0_0x37a451);
var a0_0x28626c = a0_0x42171b;
a0_0x1b2b4d.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1b2b4d.prototype.constructor = a0_0x1b2b4d;
a0_0x1b2b4d.superClass = a0_0x28626c;
a0_0x1b2b4d.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x1b2b4d.prototype.customDraw = function (_0x25f3e6) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  var _0x472c4f = "gameobj/" + this.oType + "/" + this.oType + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x481b4f = this.getSkinImageObj(_0x472c4f);
  if (_0x481b4f) {
    var _0x1adb6d = this.rad * 1.1;
    this.angle = this.rPer * Math.PI * 2;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x481b4f, -_0x1adb6d, -_0x1adb6d, _0x1adb6d * 2, _0x1adb6d * 2);
  }
  a0_0x1306ae.restore();
};
var a0_0x4fbf53 = 137;
function a0_0x1b2b4d() {
  a0_0x1b2b4d.superClass.call(this, a0_0x4fbf53);
  this.doesDrawEffectScale = true;
}
window.PumpkinPie = a0_0x1b2b4d;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1b2b4d, a0_0x4fbf53);
var a0_0x28626c = a0_0x42171b;
a0_0xc2c6fa.prototype = Object.create(a0_0x28626c.prototype);
a0_0xc2c6fa.prototype.constructor = a0_0xc2c6fa;
a0_0xc2c6fa.superClass = a0_0x28626c;
a0_0xc2c6fa.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0xc2c6fa.prototype.customDraw = function (_0x5ce6ae) {
  var _0x1392e7 = false;
  var _0x4f5632 = a0_0x283a01[a0_0x15e4d1];
  if (_0x4f5632 && _0x4f5632.lastHidingHoleID == this.id || a0_0x3078a5 == this.id) {
    _0x1392e7 = true;
  }
  if (_0x5ce6ae) {} else {
    var _0x441b16 = 1.4;
    var _0x4ebdb4 = 0.05;
    var _0x3aba7b = "igloo";
    var _0x22e27a = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.oType + ".png");
    if (_0x22e27a) {
      a0_0x1306ae.save();
      if (_0x1392e7) {
        a0_0x1306ae.globalAlpha = 0.25;
      }
      var _0x4da5c7 = this.rad * _0x441b16;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x22e27a, -_0x4da5c7, -_0x4da5c7 + _0x4ebdb4 * _0x4da5c7, _0x4da5c7 * 2, _0x4da5c7 * 2);
      a0_0x1306ae.restore();
    }
  }
  if (_0x1392e7) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(115));
    a0_0x1306ae.globalAlpha = 1;
    var _0x935292 = Math.PI * 2 * this.timerAngle;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.lineWidth = 7;
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - 4), 0, _0x935292);
    a0_0x1306ae.strokeStyle = a0_0x52e0b8;
    a0_0x1306ae.stroke();
    a0_0x1306ae.restore();
  }
};
a0_0xc2c6fa.prototype.timerAngle = 0;
a0_0xc2c6fa.prototype.nTimerAngle = 0;
a0_0xc2c6fa.prototype.onLerpUpdate = function (_0x4c5585) {
  a0_0xc2c6fa.superClass.prototype.onLerpUpdate.call(this, _0x4c5585);
  this.timerAngle += (this.nTimerAngle - this.timerAngle) * 0.1;
};
a0_0xc2c6fa.prototype.readUpdatedProperty = function (_0x153353, _0x3051a3) {
  if (_0x153353 == a0_0x2e84a5) {
    this.timeLeft = _0x3051a3.readUInt16() / 100;
    this.nTimerAngle = this.timeLeft / 100;
  }
};
var a0_0x20ad77 = 138;
function a0_0xc2c6fa() {
  a0_0xc2c6fa.superClass.call(this, a0_0x20ad77);
  this.doesDrawEffectScale = false;
}
window.Igloo = a0_0xc2c6fa;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xc2c6fa, a0_0x20ad77);
var a0_0x28626c = a0_0x42171b;
a0_0x4ed2a5.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4ed2a5.prototype.constructor = a0_0x4ed2a5;
a0_0x4ed2a5.superClass = a0_0x28626c;
a0_0x4ed2a5.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x4ed2a5.prototype.customDraw = function (_0x4b3663) {};
var a0_0x4f8004 = 139;
function a0_0x4ed2a5() {
  a0_0x4ed2a5.superClass.call(this, a0_0x4f8004);
  this.doesDrawEffectScale = false;
}
window.IglooOpening = a0_0x4ed2a5;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4ed2a5, a0_0x4f8004);
var a0_0x28626c = a0_0x42171b;
a0_0x2788ff.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2788ff.prototype.constructor = a0_0x2788ff;
a0_0x2788ff.superClass = a0_0x28626c;
a0_0x2788ff.prototype.updateZ = function () {
  this.z = -99;
};
var a0_0x785268 = "#9F8641";
var a0_0x1e7fe7 = "#735e28";
var a0_0x5749e5 = "#63501d";
var a0_0x597f7b = "#735e28";
var a0_0x15452f = "#806a30";
a0_0x2788ff.prototype.customDraw = function (_0x12f17f) {
  a0_0x1306ae.save();
  var _0x576602 = false;
  var _0x45f88d = a0_0x283a01[a0_0x15e4d1];
  if (_0x45f88d && _0x45f88d.lastHidingHoleID == this.id || a0_0x3078a5 == this.id) {
    _0x576602 = true;
  }
  if (_0x12f17f) {} else {
    var _0x4c847d = 0.5;
    var _0x4686fe = 1.7;
    a0_0x1306ae.save();
    {
      if (_0x576602) {
        a0_0x1306ae.globalAlpha = 1;
        var _0x34d730 = this.rad;
        this.drawOutlinedCircleRad("", a0_0x785268, _0x34d730);
        a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x34d730 - 7), a0_0x1e7fe7);
        a0_0x50fd5c(0 + this.rPer, 1, Math.max(0, _0x34d730 - 12), a0_0x5749e5);
        a0_0x1306ae.globalAlpha = this.alpha * 0.7;
        _0x34d730 = _0x34d730 * 0.7;
        a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x34d730 - 7), a0_0x597f7b);
        _0x34d730 = _0x34d730 * 0.5;
        a0_0x1306ae.globalAlpha = this.alpha * 0.3;
        a0_0x50fd5c(0 - this.rPer, 0 - this.rPer, Math.max(0, _0x34d730), a0_0x15452f);
      }
      if (this.curBiome == 1) {
        if (!_0x576602) {
          a0_0x1306ae.fillStyle = a0_0x519c59;
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(0, 0, Math.max(0, this.rad), 0, Math.PI * 2);
          a0_0x1306ae.fill();
          a0_0x1306ae.fillStyle = "#E4D04C";
          a0_0x1306ae.beginPath();
          a0_0x1306ae.arc(-5 + this.rPer * 10, -5 + this.rPer * 10, this.rad * 0.8, 0, Math.PI * 2);
          a0_0x1306ae.fill();
        }
      }
    }
    a0_0x1306ae.restore();
    if (this.curBiome == a0_0x5986dd) {
      var _0x5c6871 = "gameobj/" + this.oType + "/" + this.curBiome + "/cave_bottom.png";
      var _0x5792be = this.getSkinImageObj(_0x5c6871);
      if (_0x5792be) {
        a0_0x1306ae.save();
        var _0x460338 = this.rad * _0x4c847d;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.drawImage(_0x5792be, -_0x460338, -_0x460338 + _0x4686fe * _0x460338, _0x460338 * 2, _0x460338 * 2);
        a0_0x1306ae.restore();
      }
      if (!_0x576602) {
        var _0x5c6871 = "gameobj/" + this.oType + "/" + this.curBiome + "/cave_top.png";
        var _0x5792be = this.getSkinImageObj(_0x5c6871);
        if (_0x5792be) {
          a0_0x1306ae.save();
          var _0x460338 = this.rad * _0x4c847d;
          a0_0x1306ae.rotate(this.angle);
          a0_0x1306ae.drawImage(_0x5792be, -_0x460338, -_0x460338 + _0x4686fe * _0x460338, _0x460338 * 2, _0x460338 * 2);
          a0_0x1306ae.restore();
        }
      }
    } else {
      var _0x5792be = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.curBiome + "/cave_bottom.png");
      if (_0x5792be) {
        a0_0x1306ae.save();
        var _0x460338 = this.rad * _0x4c847d;
        a0_0x1306ae.rotate(this.angle);
        a0_0x1306ae.drawImage(_0x5792be, -_0x460338, -_0x460338 + _0x4686fe * _0x460338, _0x460338 * 2, _0x460338 * 2);
        a0_0x1306ae.restore();
      }
      if (!_0x576602) {
        var _0x5792be = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.curBiome + "/cave_top.png");
        if (_0x5792be) {
          a0_0x1306ae.save();
          var _0x460338 = this.rad * _0x4c847d;
          a0_0x1306ae.rotate(this.angle);
          a0_0x1306ae.drawImage(_0x5792be, -_0x460338, -_0x460338 + _0x4686fe * _0x460338, _0x460338 * 2, _0x460338 * 2);
          a0_0x1306ae.restore();
        }
      }
    }
  }
  a0_0x1306ae.restore();
  if (_0x576602) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(115));
    a0_0x1306ae.globalAlpha = 0.5;
    var _0x34d730 = Math.PI * 2 * this.timerAngle;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.lineWidth = 6;
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - 4), 0, _0x34d730);
    a0_0x1306ae.strokeStyle = a0_0x52e0b8;
    a0_0x1306ae.stroke();
    a0_0x1306ae.restore();
  }
};
a0_0x2788ff.prototype.timerAngle = 0;
a0_0x2788ff.prototype.nTimerAngle = 0;
a0_0x2788ff.prototype.onLerpUpdate = function (_0x11eb6b) {
  a0_0x2788ff.superClass.prototype.onLerpUpdate.call(this, _0x11eb6b);
  this.timerAngle += (this.nTimerAngle - this.timerAngle) * 0.1;
};
a0_0x2788ff.prototype.readUpdatedProperty = function (_0x470ab8, _0x270776) {
  if (_0x470ab8 == a0_0x2e84a5) {
    this.timeLeft = _0x270776.readUInt16() / 100;
    this.nTimerAngle = this.timeLeft / 100;
  }
};
var a0_0x5c2a70 = 140;
function a0_0x2788ff() {
  a0_0x2788ff.superClass.call(this, a0_0x5c2a70);
  this.doesDrawEffectScale = false;
}
window.Cave = a0_0x2788ff;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2788ff, a0_0x5c2a70);
var a0_0x28626c = a0_0x42171b;
a0_0x9c6a78.prototype = Object.create(a0_0x28626c.prototype);
a0_0x9c6a78.prototype.constructor = a0_0x9c6a78;
a0_0x9c6a78.superClass = a0_0x28626c;
a0_0x9c6a78.prototype.updateZ = function () {
  this.z = 100;
};
a0_0x9c6a78.prototype.customDraw = function (_0xa82f80) {};
var a0_0x191f74 = 141;
function a0_0x9c6a78() {
  a0_0x9c6a78.superClass.call(this, a0_0x191f74);
  this.doesDrawEffectScale = false;
}
window.CaveOpening = a0_0x9c6a78;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x9c6a78, a0_0x191f74);
var a0_0x28626c = a0_0x2449e7;
a0_0x520427.prototype = Object.create(a0_0x28626c.prototype);
a0_0x520427.prototype.constructor = a0_0x520427;
a0_0x520427.superClass = a0_0x28626c;
a0_0x520427.prototype.animalInfo = function () {
  var _0x178a16 = {
    aniName: "Santa!",
    skinName: "santa/" + this.animalSpecies + "/santa",
    aniDesc: ""
  };
  _0x178a16.upgradeText = "UPGRADED to " + _0x178a16.aniName + "\n Santa distributes gifts to everyone!";
  _0x178a16.aniCol = "#231f18";
  return _0x178a16;
};
var a0_0x4710b0 = 0.84;
var a0_0x247436 = 0.47;
var a0_0x2ecb79 = 45;
var a0_0x7213b = -30;
var a0_0x6d17a8 = 1.3;
var a0_0x433538 = 1.5;
var a0_0x5cac34 = 0.3;
var a0_0x5d7b34 = 0.95;
var a0_0x5117fe = 0.5;
var a0_0xecd7d9 = 45;
var a0_0x2e6347 = 0;
var a0_0xcecb20 = 1.2;
var a0_0x3af636 = 0.3;
var a0_0xcffeb9 = 0.1;
a0_0x520427.prototype.updateZ = function () {
  this.z = 1010 + this.rad;
  if (this.flag_flying) {
    this.z += 100100;
  }
};
a0_0x520427.prototype.calculateZIndex = function () {
  this.updateZ();
};
a0_0x520427.prototype.drawUnderSkinTail = function (_0x1e2fe6) {};
a0_0x520427.prototype.flyingHatAnimation = function () {
  if (!this.hideFeatures || this.flag_flying) {
    this.santaHead(0);
    this.hohohoAnimation(0);
  }
  var _0x205c16 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x1eac36 = a0_0x423a9f(_0x205c16, a0_0x3af636, a0_0xcffeb9, 2);
  var _0x4c5138 = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/hat.png");
  if (_0x4c5138) {
    a0_0x1306ae.save();
    var _0x3f5630 = -(-0.2 + _0x1eac36) * a0_0x873ec7(a0_0xecd7d9);
    var _0xebc3c2 = this.rad * a0_0xcecb20;
    a0_0x1306ae.rotate(a0_0x873ec7(a0_0x2e6347) + _0x3f5630);
    var _0x1a17c2 = 0;
    var _0x5cf2a5 = this.rad;
    var _0x4143eb = _0xebc3c2 * 2;
    var _0x4a004 = _0xebc3c2 * 2;
    var _0x40c3a0 = a0_0x5117fe;
    var _0x3521ce = a0_0x5d7b34;
    a0_0x1306ae.drawImage(_0x4c5138, _0x1a17c2 + _0x4143eb * -_0x40c3a0, _0x5cf2a5 + _0x4a004 * -_0x3521ce, _0x4143eb, _0x4a004);
    a0_0x1306ae.restore();
  }
};
a0_0x520427.prototype.drawSkinCustomization = function () {
  if (this.flag_flying) {
    this.flyingHatAnimation();
  } else if (!this.hideFeatures || this.flag_flying) {
    if (this.specType == 0) {
      this.bellhandAnimation(0);
    }
    this.santaHead(0);
    this.hohohoAnimation(0);
  }
};
a0_0x520427.prototype.hideFeatures = false;
a0_0x520427.prototype.bellhandAnimation = function (_0x27aca2) {
  var _0x32b9de = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x1119ee = a0_0x423a9f(_0x32b9de, a0_0x433538, a0_0x5cac34, 2);
  var _0x1160ca = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/bellhand.png");
  if (_0x1160ca) {
    a0_0x1306ae.save();
    var _0x1a6dc8 = -(-0.2 + _0x1119ee) * a0_0x873ec7(a0_0x2ecb79);
    var _0x3f3129 = this.rad * a0_0x6d17a8;
    a0_0x1306ae.rotate(a0_0x873ec7(a0_0x7213b) + _0x1a6dc8);
    var _0x4876af = 0;
    var _0x529a60 = this.rad;
    var _0x44ce7a = _0x3f3129 * 2;
    var _0x4229c8 = _0x3f3129 * 2;
    var _0x4f9043 = a0_0x247436;
    var _0x251d7f = a0_0x4710b0;
    a0_0x1306ae.drawImage(_0x1160ca, _0x4876af + _0x44ce7a * -_0x4f9043, _0x529a60 + _0x4229c8 * -_0x251d7f, _0x44ce7a, _0x4229c8);
    a0_0x1306ae.restore();
  }
};
a0_0x520427.prototype.hohohoNextT = +new Date() + 5000;
a0_0x520427.prototype.hohohoAnimation = function (_0x34a244) {
  if (a0_0x24806e > this.hohohoNextT) {
    var _0x4c5ea9 = -0.1 + _0x34a244;
    var _0x37ea87 = 500 / 340;
    var _0x52c492 = Math.trunc(a0_0x24806e / 180) % 3;
    var _0x57ca9e = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/santa_mouth" + _0x52c492 + ".png");
    if (_0x57ca9e) {
      a0_0x1306ae.save();
      var _0x383abe = this.rad;
      a0_0x1306ae.drawImage(_0x57ca9e, -_0x383abe * _0x37ea87, (-_0x383abe + _0x383abe * _0x4c5ea9) * _0x37ea87, _0x383abe * 2 * _0x37ea87, _0x383abe * 2 * _0x37ea87);
      a0_0x1306ae.restore();
    }
    if (a0_0x24806e > this.hohohoNextT + 1500) {
      this.hohohoNextT = +new Date() + 10000;
    }
  }
};
a0_0x520427.prototype.getSkinImageObj = function (_0x5739f0) {
  this.skinThemeID = 0;
  return a0_0x520427.superClass.prototype.getSkinImageObj.call(this, _0x5739f0);
};
a0_0x520427.prototype.santaHead = function (_0x582f39) {
  var _0x22ce7b = 0.1;
  var _0x275a5f = 500 / 340;
  var _0x195dd8 = this.flag_flying ? "2" : "";
  if (this.specType == 2) {
    _0x195dd8 = "3";
  }
  var _0xffe274 = this.getSkinImageObj("skins/santa/" + this.animalSpecies + "/santa_head" + _0x195dd8 + ".png");
  if (_0xffe274) {
    a0_0x1306ae.save();
    var _0x5f258e = this.rad;
    a0_0x1306ae.drawImage(_0xffe274, -_0x5f258e * _0x275a5f, (-_0x5f258e + _0x5f258e * _0x22ce7b) * _0x275a5f, _0x5f258e * 2 * _0x275a5f, _0x5f258e * 2 * _0x275a5f);
    a0_0x1306ae.restore();
  }
};
a0_0x520427.prototype.getAbilityInfo = function (_0x431d5b) {
  var _0x4f4025 = {};
  switch (_0x431d5b) {
    case a0_0x3ab8de:
      _0x4f4025.abilName = "Fly High!";
      _0x4f4025.abilImg = "skins/santa/" + this.animalSpecies + "/ability_santa_flying.png";
      break;
    case a0_0x2cada6:
      _0x4f4025.abilName = "Gives Gifts!";
      _0x4f4025.abilImg = "skins/santa/" + this.animalSpecies + "/ability_santa_throwgifts.png";
      break;
    case a0_0x3a0f5:
      _0x4f4025.abilName = "Flying Sleigh!";
      _0x4f4025.abilImg = "skins/santa/" + this.animalSpecies + "/ability_santa_flyingsleigh.png";
      break;
  }
  _0x4f4025.skinThemeID = this.skinThemeID;
  _0x4f4025.mopeSeasonID = this.mopeSeasonID;
  return _0x4f4025;
};
a0_0x520427.prototype.getSkinName = function () {
  var _0x5a3e23 = "";
  _0x5a3e23 = "santa/" + this.animalSpecies + "/santa" + (this.specType == 0 ? "" : this.specType);
  return _0x5a3e23;
};
function a0_0x520427() {
  a0_0x520427.superClass.call(this, a0_0x24738f);
}
window.Santa = a0_0x520427;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x520427, a0_0x24738f, a0_0x854d95);
var a0_0x28626c = a0_0x42171b;
a0_0x4695f8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4695f8.prototype.constructor = a0_0x4695f8;
a0_0x4695f8.superClass = a0_0x28626c;
var a0_0x57e758 = 1010;
a0_0x4695f8.prototype.updateZ = function () {
  this.z = 1010;
  if (this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x4695f8.prototype.customDraw = function (_0x20fce7) {
  var _0x73f339 = this.getSkinImageObj("skins/santa/0/sleigh.png");
  if (_0x73f339) {
    a0_0x1306ae.save();
    var _0x3582eb = this.rad * 1;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x73f339, -_0x3582eb, -_0x3582eb, _0x3582eb * 2, _0x3582eb * 2);
    a0_0x1306ae.restore();
  }
};
function a0_0x4695f8() {
  a0_0x4695f8.superClass.call(this, a0_0x1cccb6);
}
window.Sleigh = a0_0x4695f8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4695f8, a0_0x1cccb6);
var a0_0x28626c = a0_0x2449e7;
a0_0x58b218.prototype = Object.create(a0_0x28626c.prototype);
a0_0x58b218.prototype.constructor = a0_0x58b218;
a0_0x58b218.superClass = a0_0x28626c;
var a0_0x27bf9c = 100000;
a0_0x58b218.prototype.updateZ = function () {
  this.z = 1000 + this.rad + this.rowNumber;
  if (this.flag_flying) {
    this.z += a0_0x27bf9c;
  }
};
a0_0x58b218.prototype.calculateZIndex = function () {
  this.updateZ();
};
a0_0x58b218.prototype.animalInfo = function () {
  return {
    aniName: "Rudolph!",
    skinName: "santa/rudolph",
    upgradeText: "UPGRADED to Rudolph!\n Rudolph paws turn very well on ice!\n Press W to howl!",
    aniCol: "#6B6B6B"
  };
};
a0_0x58b218.prototype.getAbilityInfo = function (_0x1e79a6) {
  return {
    abilName: "Howl!"
  };
};
a0_0x58b218.prototype.getSkinName = function () {
  var _0x3018a3 = "";
  _0x3018a3 = "santa/0/" + (this.isRudolph ? "rudolph" : "deer");
  _0x3018a3 += this.specType == 0 ? "" : 1;
  return _0x3018a3;
};
a0_0x58b218.prototype.drawAnimalUnderSkinCircle = function (_0x2857e8, _0x45325c) {
  if (!this.flag_isGrabbed) {
    if (this.playerNum == 1) {
      _0x2857e8 = "cyan";
    } else if (this.playerNum == 2) {
      _0x2857e8 = "yellow";
    } else if (this.flag_eff_isOnSpiderWeb) {
      _0x2857e8 = "white";
    }
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = this.isAnimalInside1v1Arena() ? 0.3 : this.idealOp;
    a0_0x50fd5c(0, 0, this.rad, _0x2857e8);
    a0_0x1306ae.restore();
  }
};
a0_0x58b218.prototype.drawLights = function () {
  var _0x2b7c0f = "/skins/" + this.getSkinName();
  var _0x3f81bb = this.getSkinImagePath(_0x2b7c0f);
  var _0x5abbfd = this.skinScale;
  var _0x5a339f = this.skinRad;
};
a0_0x58b218.prototype.afterCustomDraw = function (_0x2d424a) {
  if (this.isRudolph) {
    this.drawLights();
  }
  var _0x24b194 = -1;
  var _0x5cc1eb = "#b84831";
  var _0x213f8d = this.curRad / this.startRad * 4;
  var _0x32133a = 1;
  this.drawRope(this.rope1_x, this.rope1_y, this.deerPos1_x, this.deerPos1_y, _0x5cc1eb, _0x213f8d, _0x24b194, _0x32133a);
  this.drawRope(this.rope2_x, this.rope2_y, this.deerPos2_x, this.deerPos2_y, _0x5cc1eb, _0x213f8d, _0x24b194, _0x32133a);
  _0x5cc1eb = "white";
  _0x213f8d = this.curRad / this.startRad * 1;
  _0x32133a = 0.3;
  this.drawRope(this.rope1_x, this.rope1_y, this.deerPos1_x, this.deerPos1_y, _0x5cc1eb, _0x213f8d, _0x24b194, _0x32133a);
  this.drawRope(this.rope2_x, this.rope2_y, this.deerPos2_x, this.deerPos2_y, _0x5cc1eb, _0x213f8d, _0x24b194, _0x32133a);
};
a0_0x58b218.prototype.drawRope = function (_0x1f27c6, _0x48356e, _0x5334f7, _0x48715a, _0x511d59, _0x3801c8, _0x4079a8, _0x1c98b9) {
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = _0x511d59;
  a0_0x1306ae.lineWidth = _0x3801c8 * (this.curRad / this.startRad);
  a0_0x1306ae.globalAlpha = _0x1c98b9;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(_0x1f27c6, _0x48356e);
  a0_0x1306ae.quadraticCurveTo(_0x1f27c6, _0x48715a - _0x4079a8, _0x5334f7, _0x48715a);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
};
a0_0x58b218.prototype.setOpacityForFlyingAnimals = function (_0x5dccf3) {
  if (this.id != a0_0x15e4d1 && this.santaID != a0_0x15e4d1) {
    this.idealOp = 0.6;
  }
};
a0_0x58b218.prototype.onLerpUpdate = function (_0x2af9a5) {
  this.rope1_x = _0x2af9a5 * (this.rope1_nx - this.rope1_ox) + this.rope1_ox;
  this.rope1_y = _0x2af9a5 * (this.rope1_ny - this.rope1_oy) + this.rope1_oy;
  this.deerPos1_x = _0x2af9a5 * (this.deerpos1_nx - this.deerpos1_ox) + this.deerpos1_ox;
  this.deerPos1_y = _0x2af9a5 * (this.deerpos1_ny - this.deerpos1_oy) + this.deerpos1_oy;
  this.rope2_x = _0x2af9a5 * (this.rope2_nx - this.rope2_ox) + this.rope2_ox;
  this.rope2_y = _0x2af9a5 * (this.rope2_ny - this.rope2_oy) + this.rope2_oy;
  this.deerPos2_x = _0x2af9a5 * (this.deerpos2_nx - this.deerpos2_ox) + this.deerpos2_ox;
  this.deerPos2_y = _0x2af9a5 * (this.deerpos2_ny - this.deerpos2_oy) + this.deerpos2_oy;
};
a0_0x58b218.prototype.readCustomData_onNewlyVisible = function (_0x1edba8) {
  a0_0x58b218.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x1edba8);
  this.santaID = _0x1edba8.readUInt32();
  this.rowNumber = _0x1edba8.readUInt8();
  this.isRudolph = _0x1edba8.readUInt8() == 1;
  this.startRad = _0x1edba8.readUInt16() / 100;
  this.curRad = _0x1edba8.readUInt16() / 100;
  this.readInfo(_0x1edba8);
  this.rope1_nx = this.rope1_ox = this.rope1_x = this.x;
  this.rope1_ny = this.rope1_oy = this.rope1_y = this.y;
  this.deerpos1_ox = this.deerPos1_x = this.deerpos1_nx = this.x;
  this.deerpos1_oy = this.deerPos1_y = this.deerpos1_ny = this.y;
  this.rope2_nx = this.rope2_ox = this.rope2_x = this.x;
  this.rope2_ny = this.rope2_oy = this.rope2_y = this.y;
  this.deerpos2_ox = this.deerPos2_x = this.deerpos2_nx = this.x;
  this.deerpos2_oy = this.deerPos2_y = this.deerpos2_ny = this.y;
};
a0_0x58b218.prototype.rope1_x = 0;
a0_0x58b218.prototype.rope1_y = 0;
a0_0x58b218.prototype.deerPos1_x = 0;
a0_0x58b218.prototype.deerPos1_y = 0;
a0_0x58b218.prototype.rope2_x = 0;
a0_0x58b218.prototype.rope2_y = 0;
a0_0x58b218.prototype.deerPos2_x = 0;
a0_0x58b218.prototype.deerPos2_y = 0;
a0_0x58b218.prototype.webState = 0;
a0_0x58b218.prototype.readInfo = function (_0x3d5849) {
  this.customUpdatedProperty(a0_0x55132a, _0x3d5849);
  this.customUpdatedProperty(a0_0x21e219, _0x3d5849);
  this.customUpdatedProperty(a0_0x155e8a, _0x3d5849);
  this.customUpdatedProperty(a0_0x423bc1, _0x3d5849);
};
a0_0x58b218.prototype.customUpdatedProperty = function (_0x250ced, _0x55989e) {
  if (_0x250ced == a0_0x55132a) {
    var _0x7a81a8 = _0x55989e.readUInt16() / 4;
    var _0x44db3d = _0x55989e.readUInt16() / 4;
    this.rope1_ox = this.rope1_x;
    this.rope1_oy = this.rope1_y;
    this.rope1_nx = _0x7a81a8;
    this.rope1_ny = _0x44db3d;
  } else if (_0x250ced == a0_0x21e219) {
    var _0x26ab68 = _0x55989e.readUInt16() / 4;
    var _0xa6e4ed = _0x55989e.readUInt16() / 4;
    this.rope2_ox = this.rope2_x;
    this.rope2_oy = this.rope2_y;
    this.rope2_nx = _0x26ab68;
    this.rope2_ny = _0xa6e4ed;
  } else if (_0x250ced == a0_0x155e8a) {
    var _0x4d598d = _0x55989e.readUInt16() / 4;
    var _0x5163f5 = _0x55989e.readUInt16() / 4;
    this.deerpos1_ox = this.deerPos1_x;
    this.deerpos1_oy = this.deerPos1_y;
    this.deerpos1_nx = _0x4d598d;
    this.deerpos1_ny = _0x5163f5;
  } else if (_0x250ced == a0_0x423bc1) {
    var _0x1ccf16 = _0x55989e.readUInt16() / 4;
    var _0x4200ce = _0x55989e.readUInt16() / 4;
    this.deerpos2_ox = this.deerPos2_x;
    this.deerpos2_oy = this.deerPos2_y;
    this.deerpos2_nx = _0x1ccf16;
    this.deerpos2_ny = _0x4200ce;
  }
};
function a0_0x58b218() {
  a0_0x58b218.superClass.call(this, a0_0x24738f);
}
window.Rudolph = a0_0x58b218;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x58b218, a0_0x24738f, a0_0x4a912e);
var a0_0x28626c = a0_0x42171b;
a0_0x3deed7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3deed7.prototype.constructor = a0_0x3deed7;
a0_0x3deed7.superClass = a0_0x28626c;
var a0_0x55ac07 = 1008;
a0_0x3deed7.prototype.updateZ = function () {
  this.z = 1008;
  if (this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x3deed7.prototype.customDraw = function (_0x571b7d) {
  a0_0x50fd5c(0, 0, this.curRad, "#ebac2d");
  a0_0x50fd5c(0, 0, this.curRad * 0.6, "#ffbc33");
};
a0_0x3deed7.prototype.beforeCustomDraw = function (_0x57d5ef) {
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "#ffbc33";
  a0_0x1306ae.lineWidth = this.curRad / this.startRad * 10;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.webX, this.webY);
  a0_0x1306ae.lineTo(this.spiderX, this.spiderY);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "gold";
  a0_0x1306ae.lineWidth = this.curRad / this.startRad * 6;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.webX, this.webY);
  a0_0x1306ae.lineTo(this.spiderX, this.spiderY);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
};
a0_0x3deed7.prototype.onLerpUpdate = function (_0x1e11bc) {
  this.webX = _0x1e11bc * (this.web_nx - this.web_ox) + this.web_ox;
  this.webY = _0x1e11bc * (this.web_ny - this.web_oy) + this.web_oy;
  this.spiderX = _0x1e11bc * (this.spider_nx - this.spider_ox) + this.spider_ox;
  this.spiderY = _0x1e11bc * (this.spider_ny - this.spider_oy) + this.spider_oy;
};
a0_0x3deed7.prototype.readCustomData_onUpdate = function (_0xe3392a) {
  a0_0x3deed7.superClass.prototype.readCustomData_onUpdate.call(this, _0xe3392a);
  this.readInfo(_0xe3392a);
};
a0_0x3deed7.prototype.readCustomData_onNewlyVisible = function (_0x122736) {
  a0_0x3deed7.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x122736);
  this.startRad = _0x122736.readUInt16() / 100;
  this.readInfo(_0x122736);
  this.web_nx = this.web_ox = this.webX = this.x;
  this.web_ny = this.web_oy = this.webY = this.y;
  this.spider_ox = this.spiderX = this.spider_nx = this.x;
  this.spider_oy = this.spiderY = this.spider_ny = this.y;
};
a0_0x3deed7.prototype.startRad = 0;
a0_0x3deed7.prototype.webX = 0;
a0_0x3deed7.prototype.webY = 0;
a0_0x3deed7.prototype.spiderX = 0;
a0_0x3deed7.prototype.spiderY = 0;
a0_0x3deed7.prototype.webState = 0;
a0_0x3deed7.prototype.readInfo = function (_0x1a222d) {
  this.curRad = _0x1a222d.readUInt16() / 100;
  var _0x2fd978 = _0x1a222d.readUInt16() / 4;
  var _0x3c8e60 = _0x1a222d.readUInt16() / 4;
  this.web_ox = this.webX;
  this.web_oy = this.webY;
  this.web_nx = _0x2fd978;
  this.web_ny = _0x3c8e60;
  var _0x18d7fd = _0x1a222d.readUInt16() / 4;
  var _0x5c9678 = _0x1a222d.readUInt16() / 4;
  this.spider_ox = this.spiderX;
  this.spider_oy = this.spiderY;
  this.spider_nx = _0x18d7fd;
  this.spider_ny = _0x5c9678;
};
function a0_0x3deed7() {
  a0_0x3deed7.superClass.call(this, a0_0x45e5b0);
  this.spawnTime = +new Date();
}
window.CartSaddle = a0_0x3deed7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3deed7, a0_0x45e5b0);
var a0_0x28626c = a0_0x42171b;
a0_0x4de7ae.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4de7ae.prototype.constructor = a0_0x4de7ae;
a0_0x4de7ae.superClass = a0_0x28626c;
var a0_0x48f3a5 = 1007;
a0_0x4de7ae.prototype.updateZ = function () {
  this.z = 1007;
  if (this.flag_flying) {
    this.z += 100000;
  }
};
a0_0x4de7ae.prototype.customDraw = function (_0x5604eb) {
  a0_0x50fd5c(0, 0, this.rad, "#ebac2d");
  a0_0x50fd5c(0, 0, this.rad * 0.9, "#e9ae34");
};
a0_0x4de7ae.prototype.beforeCustomDraw = function (_0x434caf) {
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "#ffbc33";
  a0_0x1306ae.lineWidth = this.curRad / this.startRad * 10;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.webX, this.webY);
  a0_0x1306ae.lineTo(this.spiderX, this.spiderY);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "gold";
  a0_0x1306ae.lineWidth = this.curRad / this.startRad * 6;
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(this.webX, this.webY);
  a0_0x1306ae.lineTo(this.spiderX, this.spiderY);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
};
a0_0x4de7ae.prototype.onLerpUpdate = function (_0x58f16e) {
  this.webX = _0x58f16e * (this.web_nx - this.web_ox) + this.web_ox;
  this.webY = _0x58f16e * (this.web_ny - this.web_oy) + this.web_oy;
  this.spiderX = _0x58f16e * (this.spider_nx - this.spider_ox) + this.spider_ox;
  this.spiderY = _0x58f16e * (this.spider_ny - this.spider_oy) + this.spider_oy;
};
a0_0x4de7ae.prototype.readCustomData_onUpdate = function (_0xda8f31) {
  a0_0x4de7ae.superClass.prototype.readCustomData_onUpdate.call(this, _0xda8f31);
  this.readInfo(_0xda8f31);
};
a0_0x4de7ae.prototype.readCustomData_onNewlyVisible = function (_0x59170a) {
  a0_0x4de7ae.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x59170a);
  this.startRad = _0x59170a.readUInt16() / 100;
  this.readInfo(_0x59170a);
  this.curRad = this.rad;
  this.web_nx = this.web_ox = this.webX = this.x;
  this.web_ny = this.web_oy = this.webY = this.y;
  this.spider_ox = this.spiderX = this.spider_nx = this.x;
  this.spider_oy = this.spiderY = this.spider_ny = this.y;
};
a0_0x4de7ae.prototype.webX = 0;
a0_0x4de7ae.prototype.webY = 0;
a0_0x4de7ae.prototype.spiderX = 0;
a0_0x4de7ae.prototype.spiderY = 0;
a0_0x4de7ae.prototype.webState = 0;
a0_0x4de7ae.prototype.readInfo = function (_0x4db7ed) {
  this.curRad = _0x4db7ed.readUInt16() / 100;
  var _0x4d5fe2 = _0x4db7ed.readUInt16() / 4;
  var _0x13ff83 = _0x4db7ed.readUInt16() / 4;
  this.web_ox = this.webX;
  this.web_oy = this.webY;
  this.web_nx = _0x4d5fe2;
  this.web_ny = _0x13ff83;
  var _0x55c22d = _0x4db7ed.readUInt16() / 4;
  var _0x4ed066 = _0x4db7ed.readUInt16() / 4;
  this.spider_ox = this.spiderX;
  this.spider_oy = this.spiderY;
  this.spider_nx = _0x55c22d;
  this.spider_ny = _0x4ed066;
};
function a0_0x4de7ae() {
  a0_0x4de7ae.superClass.call(this, a0_0x2efa79);
}
window.Saddle = a0_0x4de7ae;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4de7ae, a0_0x2efa79);
var a0_0x28626c = a0_0x42171b;
a0_0x2b03d3.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b03d3.prototype.constructor = a0_0x2b03d3;
a0_0x2b03d3.superClass = a0_0x28626c;
a0_0x2b03d3.prototype.foodType = 0;
a0_0x2b03d3.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x2b03d3.prototype.customDraw = function (_0x14c6b8) {
  a0_0x1306ae.save();
  var _0x3c7403 = "gameobj/" + this.oType + "/" + this.oType + "_" + this.foodType + "" + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x3869df = this.getSkinImageObj(_0x3c7403);
  if (_0x3869df) {
    var _0x4190c6 = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x3869df, -_0x4190c6, -_0x4190c6, _0x4190c6 * 2, _0x4190c6 * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x2b03d3.prototype.readCustomData_onNewlyVisible = function (_0x2ec866) {
  this.foodType = _0x2ec866.readUInt8();
};
var a0_0x3f2f50 = 142;
function a0_0x2b03d3() {
  a0_0x2b03d3.superClass.call(this, a0_0x3f2f50);
  this.doesDrawEffectScale = true;
}
window.XmasFood = a0_0x2b03d3;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2b03d3, a0_0x3f2f50);
var a0_0x28626c = a0_0x42171b;
a0_0x26c6e0.prototype = Object.create(a0_0x28626c.prototype);
a0_0x26c6e0.prototype.constructor = a0_0x26c6e0;
a0_0x26c6e0.superClass = a0_0x28626c;
a0_0x26c6e0.prototype.giftColor = 0;
a0_0x26c6e0.prototype.giftType = 0;
a0_0x26c6e0.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x26c6e0.prototype.customDraw = function (_0x22e50a) {
  a0_0x1306ae.save();
  var _0x54853d = this.getSkinImageObj("img/xmasgifts/" + this.giftColor + "/gift_e.png");
  if (_0x54853d) {
    var _0x126c98 = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x54853d, -_0x126c98, -_0x126c98, _0x126c98 * 2, _0x126c98 * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x26c6e0.prototype.readCustomData_onNewlyVisible = function (_0x50014d) {
  this.giftColor = _0x50014d.readUInt8();
  this.giftType = _0x50014d.readUInt8();
};
var a0_0x13ffe3 = 143;
function a0_0x26c6e0() {
  a0_0x26c6e0.superClass.call(this, a0_0x13ffe3);
  this.doesDrawEffectScale = true;
}
window.XmasGift = a0_0x26c6e0;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x26c6e0, a0_0x13ffe3);
var a0_0xd3bf67 = +new Date() + 5000;
var a0_0x3d03c2 = false;
let a0_0x4403fd;
let a0_0x4b023e = 50;
let a0_0x46d1ff = a0_0x9b6712 - 1350 + a0_0x4b023e;
var a0_0x3c6388 = null;
var a0_0x35baac = {
  particleCount: 700,
  particleSize: 3,
  fallingSpeed: 0.5,
  color: "#fff",
  xspeed: 1,
  yspeed: 0.5,
  yspeedF: 1,
  angle: 90
};
var a0_0xc7df07 = {
  particleCount: 1500,
  particleSize: 4,
  fallingSpeed: 1,
  color: "#fff",
  xspeed: 1.5,
  yspeed: 1,
  yspeedF: 1.5,
  angle: 90
};
var a0_0x4df5eb = {
  particleCount: 1500,
  particleSize: 5,
  fallingSpeed: 1.5,
  color: "#fff",
  xspeed: 2,
  yspeed: 1.5,
  yspeedF: 3,
  angle: 90
};
function a0_0x7691f2(_0x1f1d88, _0x23b1b3) {
  return Math.floor(Math.random() * (_0x23b1b3 - _0x1f1d88 + 1) + _0x1f1d88);
}
function a0_0x2f28d0(_0x41ad4b, _0x3c111b, _0xc8d684, _0xf26f2, _0x298234) {
  this.x = _0x41ad4b;
  this.y = _0x3c111b;
  this.nx = _0x41ad4b;
  this.ny = _0x3c111b;
  this.radius = _0xc8d684;
  this.color = _0xf26f2;
  this.radians = _0x298234;
  this.velocity = Math.max(0.001, Math.random() * 0.004);
  this.t = 0;
  this.update = () => {
    this.radians += this.velocity;
    this.y += Math.pow(this.velocity, a0_0x3c6388.yspeed) + a0_0x3c6388.yspeed * a0_0x3c6388.yspeedF;
    this.x += Math.sin(this.radians) * 0.5 * a0_0x3c6388.xspeed;
    this.draw();
  };
  this.lerp = () => {};
  this.draw = () => {
    this.lerp();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);
    a0_0x1306ae.fillStyle = this.color;
    a0_0x1306ae.fill();
    a0_0x1306ae.closePath();
    this.reset();
  };
  this.reset = () => {
    if (this.x < -a0_0x4b023e || this.y < -a0_0x4b023e || this.x > a0_0x3acc86 + a0_0x4b023e || this.y > a0_0x46d1ff || this.t == 0 || +new Date() > this.t) {
      this.x = a0_0x7691f2(0, a0_0x3acc86 - 100);
      this.y = a0_0x7691f2(0, a0_0x9b6712 - 1350);
      this.t = +new Date() + Math.random() * 30000;
    }
  };
}
function a0_0x19b402() {
  a0_0x46d1ff = a0_0x9b6712 - 1350 + a0_0x4b023e;
  a0_0x4403fd = [];
  for (let _0x1b439b = 0; _0x1b439b < a0_0x3c6388.particleCount; _0x1b439b++) {
    a0_0x4403fd.push(new a0_0x2f28d0(a0_0x7691f2(0, a0_0x3acc86 - 100), a0_0x7691f2(0, a0_0x9b6712 - 1350), a0_0x7691f2(0.5, a0_0x3c6388.particleSize), a0_0x3c6388.color, 90));
  }
  a0_0x399ca6 = true;
  a0_0x3d03c2 = false;
  a0_0xd3bf67 = +new Date() + 10000;
}
var a0_0x399ca6 = false;
function a0_0x21ba8f() {
  if (a0_0x399ca6 && a0_0x3c6388 != null) {
    a0_0x4403fd.forEach(_0x4cb491 => {
      _0x4cb491.update();
    });
  }
}
function a0_0xad9c09() {
  if (a0_0x3c6388 == null) {
    return;
  }
  if (!a0_0x3d03c2) {
    if (a0_0xd3bf67 < +new Date()) {
      a0_0x3d03c2 = true;
    }
    return;
  }
  if (a0_0x371da2 && a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x21ba8f();
  }
}
var a0_0x28626c = a0_0x2449e7;
a0_0x55b910.prototype = Object.create(a0_0x28626c.prototype);
a0_0x55b910.prototype.constructor = a0_0x55b910;
a0_0x55b910.superClass = a0_0x28626c;
a0_0x55b910.prototype.animalInfo = function () {
  var _0x4381de = {};
  switch (this.animalSpecies) {
    case 0:
      _0x4381de.aniName = "Seahorse!";
      break;
    case 111:
      _0x4381de.aniName = "Classic Seahorse";
      break;
    case 112:
      _0x4381de.aniName = "Gold-trim Seahorse";
      break;
    case 200:
      _0x4381de.aniName = "Tully Monster!";
      break;
    case 201:
      _0x4381de.aniName = "Water Gun Horse!";
      break;
    case 202:
      _0x4381de.aniName = "Leafy Seadragon";
      break;
  }
  _0x4381de.skinName = this.getSkinName();
  _0x4381de.aniDesc = "";
  _0x4381de.upgradeText = "UPGRADED to " + _0x4381de.aniName;
  _0x4381de.aniCol = "#502E1A";
  return _0x4381de;
};
a0_0x55b910.prototype.getSkinName = function () {
  let _0x14a378 = this.getSpeciesPath() + "/seahorse";
  return _0x14a378;
};
a0_0x55b910.prototype.getSpeciesPath = function () {
  return "ocean/seahorse/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x55b910.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x55b910.prototype.getAbilityInfo = function (_0x334a3e) {
  var _0x5a669d = {
    abilName: "Dash!"
  };
  _0x5a669d.abilImg = "skins/" + this.getSkinName() + ".png";
  _0x5a669d.skinThemeID = this.skinThemeID;
  _0x5a669d.mopeSeasonID = this.mopeSeasonID;
  return _0x5a669d;
};
a0_0x55b910.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x1411d5 = this.skinRad;
  let _0x2a052c = 1.5;
  var _0x1162bc = 0;
  if (this.mopeSeasonID == 1) {
    if (this.animalSpecies == 200 || this.animalSpecies == 201) {
      _0x2a052c = 1.8;
    }
    if (this.animalSpecies == 201) {
      _0x1162bc = -0.1;
    }
  }
  if (this.loadedSkinImg) {
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x1411d5 * _0x2a052c, -_0x1411d5 * _0x2a052c + _0x1411d5 * _0x1162bc, _0x1411d5 * 2 * _0x2a052c, _0x1411d5 * 2 * _0x2a052c);
  }
};
function a0_0x55b910() {
  a0_0x55b910.superClass.call(this, a0_0x24738f);
}
window.Seahorse = a0_0x55b910;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x55b910, a0_0x24738f, a0_0x187484);
var a0_0x28626c = a0_0x2449e7;
a0_0x4cdeea.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4cdeea.prototype.constructor = a0_0x4cdeea;
a0_0x4cdeea.superClass = a0_0x28626c;
a0_0x4cdeea.prototype.animalInfo = function () {
  var _0x3cc79c = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3cc79c.aniName = "Shrimp!";
      break;
    case 111:
      _0x3cc79c.aniName = "Classic Shrimp!";
      break;
    case 112:
      _0x3cc79c.aniName = "Gold-trim Shrimp!";
      break;
    case 200:
      _0x3cc79c.aniName = "Deluxe Shrimp!";
      break;
    case 201:
      _0x3cc79c.aniName = "Chef Shrimp!";
      break;
    case 202:
      _0x3cc79c.aniName = "Sushi Shrimp!";
      break;
  }
  _0x3cc79c.skinName = this.getSkinName();
  _0x3cc79c.aniDesc = "";
  _0x3cc79c.upgradeText = "UPGRADED to " + _0x3cc79c.aniName;
  _0x3cc79c.aniCol = "#502E1A";
  return _0x3cc79c;
};
a0_0x4cdeea.prototype.getSkinName = function () {
  let _0x567709 = this.getSpeciesPath() + "/shrimp";
  return _0x567709;
};
a0_0x4cdeea.prototype.getSpeciesPath = function () {
  return "ocean/shrimp/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4cdeea.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x4cdeea() {
  a0_0x4cdeea.superClass.call(this, a0_0x24738f);
}
window.Shrimp = a0_0x4cdeea;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4cdeea, a0_0x24738f, a0_0x306fa0);
var a0_0x28626c = a0_0x2449e7;
a0_0x32ca1a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x32ca1a.prototype.constructor = a0_0x32ca1a;
a0_0x32ca1a.superClass = a0_0x28626c;
a0_0x32ca1a.prototype.animalInfo = function () {
  var _0x41b137 = {};
  switch (this.animalSubSpecies) {
    case 222:
    case 0:
      switch (this.animalSpecies) {
        case 0:
          _0x41b137.aniName = "Trout";
          break;
        case 111:
          _0x41b137.aniName = "Classic Trout";
          break;
        case 112:
          _0x41b137.aniName = "Gold-trim Trout";
          break;
      }
      break;
    case 200:
      _0x41b137.aniName = "Clownfish";
      break;
    case 201:
      _0x41b137.aniName = "Popsicle Trout";
      break;
    case 202:
      _0x41b137.aniName = "Royal Guppy";
      break;
    case 221:
      _0x41b137.aniName = "Ice Husk Trout";
      break;
    case 2023:
      _0x41b137.aniName = "Dr. Lochness";
      break;
  }
  _0x41b137.skinName = this.getSkinName();
  _0x41b137.aniDesc = "";
  _0x41b137.upgradeText = "UPGRADED to " + _0x41b137.aniName + "!";
  _0x41b137.aniCol = "#502E1A";
  return _0x41b137;
};
a0_0x32ca1a.prototype.getAbilityInfo = function (_0xc8bf33) {
  var _0x3997a6 = {
    abilName: "Extra Boost!"
  };
  _0x3997a6.abilImg = "skins/" + this.getSkinName() + ".png";
  _0x3997a6.skinThemeID = this.skinThemeID;
  _0x3997a6.mopeSeasonID = this.mopeSeasonID;
  return _0x3997a6;
};
a0_0x32ca1a.prototype.getSkinName = function () {
  let _0x34bdbb = this.getSpeciesPath() + "/trout";
  return _0x34bdbb;
};
a0_0x32ca1a.prototype.getSpeciesPath = function () {
  return "ocean/trout/" + this.animalSpecies + "/" + this.animalSubSpecies;
};
function a0_0x32ca1a() {
  a0_0x32ca1a.superClass.call(this, a0_0x24738f);
}
window.Trout = a0_0x32ca1a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x32ca1a, a0_0x24738f, a0_0x1d6a29);
var a0_0x28626c = a0_0x2449e7;
a0_0x57015a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x57015a.prototype.constructor = a0_0x57015a;
a0_0x57015a.superClass = a0_0x28626c;
a0_0x57015a.prototype.getSkinName = function () {
  return "arctic/arcticfox/" + this.animalSpecies + this.getSubSpecies() + "/arcticfox";
};
a0_0x57015a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x57015a.prototype.animalInfo = function () {
  var _0x235844 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x235844.aniName = "Arctic Fox";
      break;
    case 200:
      _0x235844.aniName = "Ice Fox";
      break;
    case 111:
      _0x235844.aniName = "Classic Arctic Fox";
      break;
    case 112:
      _0x235844.aniName = "Gold-trim Arctic Fox";
      break;
    case 201:
      _0x235844.aniName = "Forest Spirit Fox";
      break;
    case 202:
      _0x235844.aniName = "Ice Fox";
      break;
  }
  _0x235844.skinName = this.getSkinName();
  _0x235844.aniDesc = "";
  _0x235844.upgradeText = "UPGRADED to " + _0x235844.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
  _0x235844.aniCol = "#CFCFCF";
  return _0x235844;
};
function a0_0x57015a() {
  a0_0x57015a.superClass.call(this, a0_0x24738f);
}
window.ArcticFox = a0_0x57015a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x57015a, a0_0x24738f, a0_0x90abb);
var a0_0x28626c = a0_0x2449e7;
a0_0x168870.prototype = Object.create(a0_0x28626c.prototype);
a0_0x168870.prototype.constructor = a0_0x168870;
a0_0x168870.superClass = a0_0x28626c;
a0_0x168870.prototype.getSkinName = function () {
  let _0x17585b = this.getSpeciesPath() + "/fox";
  return _0x17585b;
};
a0_0x168870.prototype.getSpeciesPath = function () {
  return "land/fox/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x168870.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x168870.prototype.animalInfo = function () {
  var _0x57c0b9 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x57c0b9.aniName = "Fox!";
      break;
    case 200:
      _0x57c0b9.aniName = "Night Thief!";
      break;
    case 111:
      _0x57c0b9.aniName = "Classic Fox";
      break;
    case 112:
      _0x57c0b9.aniName = "Gold-trim Fox";
      break;
    case 200:
      _0x57c0b9.aniName = "Sneaky Fox";
      break;
    case 204:
      _0x57c0b9.aniName = "Black Asura Fox";
      break;
  }
  _0x57c0b9.skinName = this.getSkinName();
  _0x57c0b9.aniDesc = "";
  _0x57c0b9.upgradeText = "UPGRADED to " + _0x57c0b9.aniName + "!\n You can kick players out of hiding holes! (Press W when in one!)\n+ Hide in red berry bushes!";
  _0x57c0b9.aniCol = "#FF9D43";
  return _0x57c0b9;
};
a0_0x168870.prototype.getAbilityInfo = function (_0x2e409f) {
  var _0xfc7efa = {
    abilName: "Pull from Hole"
  };
  _0xfc7efa.abilImg = "skins/" + this.getSkinName() + ".png";
  _0xfc7efa.skinThemeID = this.skinThemeID;
  _0xfc7efa.mopeSeasonID = this.mopeSeasonID;
  return _0xfc7efa;
};
function a0_0x168870() {
  a0_0x168870.superClass.call(this, a0_0x24738f);
}
window.Fox = a0_0x168870;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x168870, a0_0x24738f, a0_0x368012);
var a0_0x28626c = a0_0x2449e7;
a0_0x4e3b9a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x4e3b9a.prototype.constructor = a0_0x4e3b9a;
a0_0x4e3b9a.superClass = a0_0x28626c;
a0_0x4e3b9a.prototype.animalInfo = function () {
  var _0xd2d5d3 = {};
  switch (this.animalSpecies) {
    case 0:
      _0xd2d5d3.aniName = "Rabbit!";
      break;
    case 111:
      _0xd2d5d3.aniName = "Classic Rabbit";
      break;
    case 112:
      _0xd2d5d3.aniName = "Gold-trim Rabbit";
      break;
    case 200:
      _0xd2d5d3.aniName = "Monochrome Rabbit!";
      break;
    case 202:
      switch (this.animalSubSpecies) {
        case 0:
          _0xd2d5d3.aniName = "Jackapole";
          break;
        case 1:
          _0xd2d5d3.aniName = "Hollow Rabbit";
      }
      break;
    case 204:
      _0xd2d5d3.aniName = "Carrot Rabbit";
      break;
    case 220:
      _0xd2d5d3.aniName = "Fairy Rabbit";
      break;
    case 222:
      _0xd2d5d3.aniName = "Jolly Rabbit";
      break;
  }
  _0xd2d5d3.skinName = this.getSpeciesPath("rabbit") + "/rabbit";
  _0xd2d5d3.aniDesc = "";
  _0xd2d5d3.upgradeText = "UPGRADED to " + _0xd2d5d3.aniName;
  _0xd2d5d3.aniCol = "#502E1A";
  return _0xd2d5d3;
};
a0_0x4e3b9a.prototype.getSkinName = function () {
  return this.getSpeciesPath("rabbit") + "/rabbit";
};
a0_0x4e3b9a.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  if (this.animalSpecies === 202) {
    return "/" + this.animalSubSpecies;
  } else {
    return "";
  }
};
a0_0x4e3b9a.prototype.getSpeciesPath = function (_0x1f72f0 = "rabbit") {
  return "land/" + _0x1f72f0 + "/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x4e3b9a.prototype.getAbilityInfo = function (_0x5c0353) {
  var _0x3fbe8c = {
    abilName: "Dig Hole!"
  };
  _0x3fbe8c.abilImg = "skins/" + this.getSpeciesPath() + "/rabbit.png";
  _0x3fbe8c.skinThemeID = this.skinThemeID;
  _0x3fbe8c.mopeSeasonID = this.mopeSeasonID;
  return _0x3fbe8c;
};
a0_0x4e3b9a.prototype.getSkinName = function (_0x1d2687) {
  var _0x329014 = this.getSpeciesPath("rabbit") + "/rabbit" + (_0x1d2687 === true ? ".png" : "");
  return _0x329014;
};
function a0_0x4e3b9a() {
  a0_0x4e3b9a.superClass.call(this, a0_0x24738f);
}
window.Rabbit = a0_0x4e3b9a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4e3b9a, a0_0x24738f, a0_0x621981);
var a0_0x28626c = a0_0x2449e7;
a0_0x31b612.prototype = Object.create(a0_0x28626c.prototype);
a0_0x31b612.prototype.constructor = a0_0x31b612;
a0_0x31b612.superClass = a0_0x28626c;
a0_0x31b612.prototype.getSkinName = function () {
  let _0x4e6199 = this.getSpeciesPath() + "/hedgehog";
  if (this.flag_usingAbility) {
    _0x4e6199 += "2";
  }
  return _0x4e6199;
};
a0_0x31b612.prototype.getSpeciesPath = function () {
  return "land/hedgehog/" + this.animalSpecies + this.getSubSpecies();
};
a0_0x31b612.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x31b612.prototype.animalInfo = function () {
  var _0x36a292 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x36a292.aniName = "Hedgehog!";
      break;
    case 111:
      _0x36a292.aniName = "Classic Hedgehog";
      break;
    case 112:
      _0x36a292.aniName = "Gold-trim Hedgehog";
      break;
    case 202:
      _0x36a292.aniName = "Grass Hedgehog";
      break;
  }
  _0x36a292.skinName = this.getSkinName();
  _0x36a292.aniDesc = "";
  _0x36a292.upgradeText = "UPGRADED to " + _0x36a292.aniName + "!\n (Hold W to become spiky, and dangerous to touch!)";
  _0x36a292.aniCol = "#5b400d";
  return _0x36a292;
};
a0_0x31b612.prototype.getAbilityInfo = function (_0x462e66) {
  var _0x3493aa = {
    abilName: "Spikes!"
  };
  _0x3493aa.abilImg = "skins/" + this.getSpeciesPath() + "/hedgehog2.png";
  _0x3493aa.skinThemeID = this.skinThemeID;
  _0x3493aa.mopeSeasonID = this.mopeSeasonID;
  return _0x3493aa;
};
function a0_0x31b612() {
  a0_0x31b612.superClass.call(this, a0_0x24738f);
}
window.Hedgehog = a0_0x31b612;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x31b612, a0_0x24738f, a0_0x35d037);
var a0_0x28626c = a0_0x42171b;
a0_0x2a64f8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2a64f8.prototype.constructor = a0_0x2a64f8;
a0_0x2a64f8.superClass = a0_0x28626c;
a0_0x2a64f8.prototype.foodType = 0;
a0_0x2a64f8.prototype.updateZ = function () {
  this.z = -98;
};
a0_0x2a64f8.prototype.customDraw = function (_0xd4782b) {
  var _0x168e82 = this.rad - 10;
  this.waterRipples(_0x168e82);
  a0_0x1306ae.save();
  a0_0x1306ae.restore();
  var _0xde6fc = "img/floaters/" + this.floaterType + ".png";
  this.drawSkin(_0xde6fc, _0x168e82);
};
a0_0x2a64f8.prototype.drawSkin = function (_0x31531a, _0x54bf0b) {
  a0_0x1306ae.save();
  var _0x3c6d32 = this.getSkinImageObj(_0x31531a);
  if (_0x3c6d32) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x3c6d32, -_0x54bf0b, -_0x54bf0b, _0x54bf0b * 2, _0x54bf0b * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
var a0_0x2084ff = 0.01;
var a0_0x68f72e = 0.02;
var a0_0x3ea3d5 = 10;
var a0_0x3baa43 = 15;
a0_0x2a64f8.prototype.waterRipples = function (_0x45f0bd) {
  _0x45f0bd = _0x45f0bd - 5;
  var _0x86eec4 = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x29e5ab = 1.75;
  var _0xc0bfc0 = 0.5;
  var _0x2979fa = _0xc0bfc0 * Math.sin(Math.PI * 2 / _0x29e5ab * _0x86eec4);
  var _0x3bdedc = a0_0x1306ae.globalAlpha;
  if (!this.isFloatingInWater) {
    _0x2979fa = 1;
  }
  if (this.floaterType == 0 || this.floaterType == 2 || this.floaterType == 3 || this.floaterType == 4 || this.floaterType == 5 || this.floaterType == 7) {
    var _0x210889 = "img/floaters/" + this.floaterType + "_ripple.png";
    a0_0x1306ae.globalAlpha *= 0.7 - _0x2979fa * 0.25;
    this.drawSkin(_0x210889, _0x45f0bd + a0_0x3ea3d5 - 5);
    a0_0x1306ae.globalAlpha *= 0.6 - _0x2979fa * 0.2;
    this.drawSkin(_0x210889, _0x45f0bd + a0_0x3baa43 - 5);
  } else {
    a0_0x1306ae.globalAlpha *= 0.8 - _0x2979fa * 0.2;
    a0_0x68a33b(0, _0x45f0bd * a0_0x2084ff, _0x45f0bd * (0.9 + _0x2979fa * 0.15), a0_0x3ea3d5, "#4668ff");
    a0_0x1306ae.globalAlpha *= 0.7 - _0x2979fa * 0.2;
    a0_0x68a33b(0, -_0x45f0bd * a0_0x68f72e, _0x45f0bd * (1.05 + _0x2979fa * 0.1), a0_0x3baa43, "#4668ff");
  }
  a0_0x1306ae.globalAlpha = _0x3bdedc;
};
a0_0x2a64f8.prototype.readCustomData_onNewlyVisible = function (_0x283e47) {
  this.floaterType = _0x283e47.readUInt8();
};
a0_0x2a64f8.prototype.isFloatingInWater = true;
a0_0x2a64f8.prototype.readUpdatedProperty = function (_0x212e67, _0x31f470) {
  if (_0x212e67 == a0_0x2b0702) {
    this.isFloatingInWater = _0x31f470.readUInt8() == 1;
  }
};
var a0_0x5c838a = 144;
function a0_0x2a64f8() {
  a0_0x2a64f8.superClass.call(this, a0_0x5c838a);
  this.drawEffectScale_Slow = true;
}
window.WaterFloater = a0_0x2a64f8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2a64f8, a0_0x5c838a);
var a0_0x28626c = a0_0x42171b;
a0_0x14318e.prototype = Object.create(a0_0x28626c.prototype);
a0_0x14318e.prototype.constructor = a0_0x14318e;
a0_0x14318e.superClass = a0_0x28626c;
a0_0x14318e.prototype.lookAngle = 0;
a0_0x14318e.prototype.frameNumber = 0;
a0_0x14318e.prototype.isRolling = false;
a0_0x14318e.prototype.pumpkinType = false;
a0_0x14318e.prototype.updateZ = function () {
  this.z = 1002;
};
var a0_0x4328b1 = -0.07;
var a0_0x2bc690 = -0.1;
var a0_0x519d1c = 8;
var a0_0x1a2f9a = 12;
var a0_0x4d77a7 = 8;
a0_0x14318e.prototype.waterRipples = function (_0x524c90) {
  a0_0x1306ae.save();
  _0x524c90 = _0x524c90 + a0_0x4d77a7;
  var _0x4c795d = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x639227 = 1.75;
  var _0x5842f0 = 0.5;
  var _0x4c4ec2 = _0x5842f0 * Math.sin(Math.PI * 2 / _0x639227 * _0x4c795d);
  var _0xe6d67e = a0_0x1306ae.globalAlpha;
  if (!this.isFloating) {
    _0x4c4ec2 = 1;
  }
  a0_0x1306ae.rotate(a0_0x873ec7(this.lookAngle + 45));
  a0_0x1306ae.globalAlpha *= 0.8 - _0x4c4ec2 * 0.2;
  a0_0x68a33b(0, _0x524c90 * a0_0x4328b1, _0x524c90 * (0.9 + _0x4c4ec2 * 0.15), a0_0x519d1c, "#4668ff");
  a0_0x1306ae.globalAlpha *= 0.7 - _0x4c4ec2 * 0.2;
  a0_0x68a33b(0, -_0x524c90 * a0_0x2bc690, _0x524c90 * (1.05 + _0x4c4ec2 * 0.1), a0_0x1a2f9a, "#4668ff");
  a0_0x1306ae.globalAlpha = _0xe6d67e;
  a0_0x1306ae.restore();
};
a0_0x14318e.prototype.customDraw = function (_0x47ca24) {
  var _0x509c6f = this.rad - 10;
  var _0x28262b = 1;
  var _0x10af26 = 0.15;
  var _0x19ff93 = 0.8;
  var _0x553fce = (_0x19ff93 - _0x10af26) * 0.5;
  var _0x530a1a = _0x10af26 + _0x553fce + _0x553fce * Math.sin(Math.PI * 2 / _0x28262b * (a0_0x24806e / 1000));
  var _0x28262b = 1;
  var _0x10af26 = 0.85;
  var _0x19ff93 = 1;
  var _0x553fce = (_0x19ff93 - _0x10af26) * 0.5;
  var _0x20c0c0 = 1;
  if (this.isRolling) {
    this.frameNumber = Math.trunc(a0_0x24806e / 120) % 8;
  }
  var _0x5647a4 = this.getSkinImageObj("img/beachball/" + this.pumpkinType + "/" + this.frameNumber + ".png");
  if (_0x5647a4) {
    var _0x54b483 = 0;
    var _0x2cf282 = this.rad;
    var _0x42f82e = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x1b6fc1 = 0.5;
    var _0x21922e = 0.95;
    a0_0x1306ae.save();
    {
      a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x20c0c0;
      a0_0x1306ae.rotate(this.angle + a0_0x5c63e1);
      a0_0x1306ae.drawImage(_0x5647a4, _0x54b483 + _0x42f82e * -_0x1b6fc1, _0x2cf282 + imH * -_0x21922e, _0x42f82e, imH);
    }
    a0_0x1306ae.restore();
  } else {}
};
a0_0x14318e.prototype.isFloating = false;
a0_0x14318e.prototype.isRolling = false;
a0_0x14318e.prototype.readUpdatedProperty = function (_0x57d118, _0x2e24ed) {
  if (_0x57d118 == a0_0x2b0702) {
    this.isFloating = _0x2e24ed.readUInt8() == 1;
  } else if (_0x57d118 == a0_0x5af041) {
    this.isRolling = _0x2e24ed.readUInt8() == 1;
  }
};
a0_0x14318e.prototype.readCustomData_onNewlyVisible = function (_0x250c05) {
  this.isRolling = _0x250c05.readUInt8() == 1;
  this.pumpkinType = _0x250c05.readUInt8();
  this.isFloating = _0x250c05.readUInt8() == 1;
};
function a0_0x14318e() {
  a0_0x14318e.superClass.call(this, a0_0x101fcd);
  this.lookAngle = 0;
  this.isRolling = false;
  this.pumpkinType = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x101fcd = 145;
window.BeachBall = a0_0x14318e;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x14318e, a0_0x101fcd);
var a0_0x28626c = a0_0x42171b;
a0_0x568bbb.prototype = Object.create(a0_0x28626c.prototype);
a0_0x568bbb.prototype.constructor = a0_0x568bbb;
a0_0x568bbb.superClass = a0_0x28626c;
a0_0x568bbb.prototype.frameNumber = 0;
a0_0x568bbb.prototype.umbrellaType = 0;
a0_0x568bbb.prototype.umbrellaColor = 0;
a0_0x568bbb.prototype.isClosed = false;
a0_0x568bbb.prototype.updateZ = function () {
  this.z = this.rad + (!this.isClosed ? 2100 : 0);
};
a0_0x568bbb.prototype.customDraw = function (_0xfa3e72) {
  var _0x2cd2ff = 1;
  var _0x4fbc9f = 0.15;
  var _0x1525e6 = 0.8;
  var _0x54f660 = (_0x1525e6 - _0x4fbc9f) * 0.5;
  var _0x15cb82 = _0x4fbc9f + _0x54f660 + _0x54f660 * Math.sin(Math.PI * 2 / _0x2cd2ff * (a0_0x24806e / 1000));
  var _0x2cd2ff = 1;
  var _0x4fbc9f = 0.85;
  var _0x1525e6 = 1;
  var _0x54f660 = (_0x1525e6 - _0x4fbc9f) * 0.5;
  var _0x3d8fea = 1;
  var _0x17b43f = this.rad * 1.5;
  var _0x46fbde = this.getSkinImageObj("img/umbrella/" + this.umbrellaType + "/" + this.umbrellaColor + "/umbrella" + (this.isClosed ? "-closed" : "") + ".png");
  if (_0x46fbde) {
    var _0x5ad878 = 0;
    var _0x54caba = this.rad;
    var _0x418c8a = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x5beb8f = 0.5;
    var _0x9dbfdc = 0.95;
    a0_0x1306ae.save();
    {
      a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x3d8fea;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x46fbde, _0x5ad878 + _0x418c8a * -_0x5beb8f, _0x54caba + imH * -_0x9dbfdc, _0x418c8a, imH);
    }
    a0_0x1306ae.restore();
  } else {}
};
a0_0x568bbb.prototype.readUpdatedProperty = function (_0x418661, _0x1a1209) {
  if (_0x418661 == a0_0x2b0702) {
    this.isFloating = _0x1a1209.readUInt8() == 1;
  } else if (_0x418661 == a0_0x5af041) {
    this.isClosed = _0x1a1209.readUInt8() == 0;
  }
};
a0_0x568bbb.prototype.readCustomData_onNewlyVisible = function (_0x1ba8f3) {
  this.isClosed = _0x1ba8f3.readUInt8() == 1;
  this.umbrellaType = _0x1ba8f3.readUInt8();
  this.umbrellaColor = _0x1ba8f3.readUInt8();
};
function a0_0x568bbb() {
  a0_0x568bbb.superClass.call(this, a0_0x23e7a7);
  this.umbrellaType = 0;
  this.isClosed = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x23e7a7 = 146;
window.Umbrella = a0_0x568bbb;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x568bbb, a0_0x23e7a7);
var a0_0x28626c = a0_0x2449e7;
a0_0x5c92c2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x5c92c2.prototype.constructor = a0_0x5c92c2;
a0_0x5c92c2.superClass = a0_0x28626c;
a0_0x5c92c2.prototype.animalInfo = function () {
  var _0x1d03cd = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1d03cd.aniName = "Chipmunk!";
      break;
    case 201:
      _0x1d03cd.aniName = "Playful Munk!";
      break;
    case 111:
      _0x1d03cd.aniName = "Classic Chipmunk";
      break;
    case 112:
      _0x1d03cd.aniName = "Gold-trim Chipmunk";
      break;
    case 202:
      _0x1d03cd.aniName = "Chipmonk";
      break;
  }
  _0x1d03cd.skinName = this.getSkinName();
  _0x1d03cd.aniDesc = "";
  _0x1d03cd.upgradeText = "You're a tiny " + _0x1d03cd.aniName + " - Eat food to grow!";
  _0x1d03cd.aniCol = "#CFCFCF";
  return _0x1d03cd;
};
a0_0x5c92c2.prototype.getSkinName = function () {
  return "arctic/chipmunk/" + this.animalSpecies + this.getSubSpecies() + "/chipmunk";
};
a0_0x5c92c2.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x5c92c2() {
  a0_0x5c92c2.superClass.call(this, a0_0x24738f);
}
window.Chipmunk = a0_0x5c92c2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x5c92c2, a0_0x24738f, a0_0x1e02a7);
var a0_0x28626c = a0_0x2449e7;
a0_0x241fab.prototype = Object.create(a0_0x28626c.prototype);
a0_0x241fab.prototype.constructor = a0_0x241fab;
a0_0x241fab.superClass = a0_0x28626c;
a0_0x241fab.prototype.getSkinName = function () {
  return "arctic/arctichare/" + this.animalSpecies + this.getSubSpecies() + "/arctichare";
};
a0_0x241fab.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x241fab.prototype.animalInfo = function () {
  var _0x23fdd5 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x23fdd5.aniName = "Arctic Hare!";
      break;
    case 111:
      _0x23fdd5.aniName = "Classic Arctic Hare";
      break;
    case 112:
      _0x23fdd5.aniName = "Gold-trim Arctic Hare";
      break;
    case 201:
      _0x23fdd5.aniName = "Snow Cone Hare!";
      break;
  }
  _0x23fdd5.skinName = this.getSkinName();
  _0x23fdd5.aniDesc = "";
  _0x23fdd5.upgradeText = "UPGRADED to " + _0x23fdd5.aniName;
  _0x23fdd5.aniCol = "#CFCFCF";
  return _0x23fdd5;
};
function a0_0x241fab() {
  a0_0x241fab.superClass.call(this, a0_0x24738f);
}
window.ArcticHare = a0_0x241fab;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x241fab, a0_0x24738f, a0_0x303108);
var a0_0x28626c = a0_0x2449e7;
a0_0x1cb473.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1cb473.prototype.constructor = a0_0x1cb473;
a0_0x1cb473.superClass = a0_0x28626c;
a0_0x1cb473.prototype.animalInfo = function () {
  var _0x5ce809 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x5ce809.aniName = "Polar Bear";
      break;
    case 111:
      _0x5ce809.aniName = "Classic Polar Bear";
      break;
    case 112:
      _0x5ce809.aniName = "Gold-trim Polar Bear";
      break;
    case 201:
      _0x5ce809.aniName = "Cola Connoisseur";
      break;
    case 202:
      _0x5ce809.aniName = "Water Bear";
      break;
  }
  _0x5ce809.aniDesc = "";
  _0x5ce809.upgradeText = "UPGRADED to " + _0x5ce809.aniName + "!\n Polar bears can climb hills! \n+ They're amazing swimmers!";
  _0x5ce809.aniCol = "#e4e4e4";
  _0x5ce809.skinName = this.getSkinName();
  return _0x5ce809;
};
a0_0x1cb473.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x1cb473.prototype.getAbilityInfo = function (_0x5a9eb6) {
  var _0x2feb76 = {
    abilName: "Claw Slash!",
    abilImg: "skins/arctic/bear/" + this.animalSpecies + "/clawslash.png",
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x2feb76;
};
a0_0x1cb473.prototype.getSkinName = function () {
  var _0xd26fac = "arctic/bear/" + this.animalSpecies + this.getSubSpecies() + "/bear";
  if (this.animalSpecies == 201 && this.flag_usingAbility) {
    _0xd26fac += "1";
  }
  return _0xd26fac;
};
function a0_0x1cb473() {
  a0_0x1cb473.superClass.call(this, a0_0x24738f);
}
window.PolarBear = a0_0x1cb473;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1cb473, a0_0x24738f, a0_0x56a2ab);
var a0_0x28626c = a0_0x2449e7;
a0_0x1f0fbe.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1f0fbe.prototype.constructor = a0_0x1f0fbe;
a0_0x1f0fbe.superClass = a0_0x28626c;
a0_0x1f0fbe.prototype.getSpeciesPath = function (_0xd8a14) {
  return "arctic/" + _0xd8a14 + "/" + this.animalSpecies;
};
a0_0x1f0fbe.prototype.animalInfo = function () {
  var _0xdc9321 = {};
  switch (this.animalSpecies) {
    case 0:
      _0xdc9321.aniName = "Lemming!";
      break;
    case 111:
      _0xdc9321.aniName = "Classic Lemming";
      break;
  }
  _0xdc9321.skinName = this.getSpeciesPath("lemming") + "/lemming";
  _0xdc9321.aniDesc = "";
  _0xdc9321.upgradeText = "You're a tiny " + _0xdc9321.aniName + " - Eat food to grow!";
  _0xdc9321.aniCol = "#CFCFCF";
  return _0xdc9321;
};
a0_0x1f0fbe.prototype.getSkinName = function () {
  var _0x464936 = this.getSpeciesPath("lemming") + "/lemming";
  return _0x464936;
};
function a0_0x1f0fbe() {
  a0_0x1f0fbe.superClass.call(this, a0_0x24738f);
}
window.Lemming = a0_0x1f0fbe;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1f0fbe, a0_0x24738f, a0_0x36faeb);
function a0_0x23180b(_0x538a22) {
  var _0x2505ef = a0_0x5d394a.createGameObjOfOType(a0_0x24738f, _0x538a22.animalType);
  _0x2505ef.animalType = _0x538a22.animalType;
  _0x2505ef.animalSpecies = _0x538a22.animalSpecies;
  _0x2505ef.animalSubSpecies = _0x538a22.animalSubSpecies;
  _0x2505ef.animalPremiumSkin = _0x538a22.premiumSkinGroup;
  _0x2505ef.mopeSeasonID = _0x538a22.mopeSeasonID;
  _0x2505ef.skinThemeID = 0;
  var _0x26f3c7 = _0x2505ef.animalInfo();
  _0x538a22.aniCol = _0x26f3c7.aniCol;
  _0x538a22.aniName = _0x26f3c7.aniName;
  _0x538a22.skinName = _0x26f3c7.skinName;
  _0x538a22.upgradeText = _0x26f3c7.upgradeText;
  var _0xa65bb4 = _0x2505ef.getAbilityInfo(_0x538a22.abilityType);
  _0x538a22.abilityImage = _0xa65bb4.abilImg;
  _0x538a22.abilityName = _0xa65bb4.abilName;
  return _0x538a22;
}
class a0_0x12f8cb {
  static ALPHA_LOOKUP = {
    o_mudSpot: 0.7,
    o_arcticIce: 0.85,
    o_hill: 1,
    o_lakeIsland: 0.6,
    o_berryBush: 1,
    o_waterSpot: 1
  };
  constructor(_0x1ed36d) {
    this.data = _0x1ed36d;
    this.data.width = this.data.height * (this.data.gameWidth / this.data.gameHeight);
    if (!this.miniMapCanvas) {
      this.miniMapCanvas = document.createElement("canvas");
    }
    this.miniMapCanvas.width = this.data.width;
    this.miniMapCanvas.height = this.data.height;
    this.ctx_ = this.miniMapCanvas.getContext("2d");
    this.ctx_.globalAlpha = 0.55;
    this.ctx_.fillStyle = "#000000";
    this.ctx_.fillRect(0, 0, this.miniMapCanvas.width, this.miniMapCanvas.height);
    this.drawObjects();
  }
  drawObjects() {
    for (let _0x5442bb = 0; _0x5442bb < this.data.objects.length; _0x5442bb++) {
      let _0x4675a1 = this.data.objects[_0x5442bb];
      if (_0x4675a1.isRect) {
        if (_0x4675a1.objType == a0_0x1cdaba) {
          continue;
        }
        this.drawRect(_0x4675a1);
      }
    }
    for (let _0x3e843a = 0; _0x3e843a < this.data.objects.length; _0x3e843a++) {
      let _0x52a02e = this.data.objects[_0x3e843a];
      if (!_0x52a02e.isRect) {
        this.drawCircle(_0x52a02e);
      }
    }
  }
  drawCircle(_0x535bae) {
    var _0x3f4f7d = _0x535bae.x * this.data.scaleX;
    var _0x5a0b75 = _0x535bae.y * this.data.scaleY;
    var _0x2a5044 = _0x535bae.r / this.data.objScale;
    this.ctx_.beginPath();
    const _0x28206f = a0_0x12f8cb.ALPHA_LOOKUP[_0x535bae.objType] || 0.5;
    this.ctx_.globalAlpha = _0x28206f;
    this.ctx_.fillStyle = _0x535bae.c;
    this.ctx_.arc(_0x3f4f7d, _0x5a0b75, Math.max(1, _0x2a5044), 0, Math.PI * 2);
    this.ctx_.fill();
  }
  drawRect(_0x5318be) {
    var _0x51f399 = _0x5318be.x * this.data.scaleX;
    var _0x5eba75 = _0x5318be.y * this.data.scaleY;
    var _0x4f605c = _0x5318be.w * this.data.scaleX;
    var _0x107b0a = _0x5318be.h * this.data.scaleY;
    const _0x3af46a = a0_0x12f8cb.ALPHA_LOOKUP[_0x5318be.objType] || 0.5;
    this.ctx_.globalAlpha = _0x3af46a;
    this.ctx_.fillStyle = _0x5318be.c;
    this.ctx_.fillRect(_0x51f399 - _0x4f605c / 2, _0x5eba75 - _0x107b0a / 2, _0x4f605c, _0x107b0a);
  }
  drawMap() {
    if (this.miniMapCanvas && this.miniMapCanvas.width) {
      a0_0x1306ae.save();
      a0_0x1306ae.drawImage(this.miniMapCanvas, a0_0x2bf7a6 - (a0_0x2b523d * 10 + this.miniMapCanvas.width * a0_0x2c02fa), a0_0x2b523d * 10, this.data.width * a0_0x2c02fa, this.data.height * a0_0x2c02fa);
      a0_0x1306ae.restore();
    }
    for (let _0x5ee44f = 0; _0x5ee44f < a0_0x3f0fbe.length; _0x5ee44f++) {
      const _0x26e329 = a0_0x3f0fbe[_0x5ee44f];
      a0_0x5b8b88(_0x26e329, "brown", 2);
      const _0x2ef12e = _0x26e329.type == 2 ? "gold" : _0x26e329.type == 1 ? "burlywood" : "orange";
      a0_0x5b8b88(_0x26e329, _0x2ef12e, 1.5);
    }
    var _0x3f877b = a0_0x283a01[a0_0x15e4d1];
    if (_0x3f877b) {
      a0_0x392778(_0x3f877b, "white", 1);
    }
    if (a0_0x54460b != null && a0_0x54460b.id != a0_0x15e4d1) {
      a0_0x392778(a0_0x54460b, "cyan", 1);
    }
  }
  setPlayersCount(_0x46b246) {}
}
var a0_0x904f35 = 147;
var a0_0x28626c = a0_0x42171b;
a0_0x616ad9.prototype = Object.create(a0_0x28626c.prototype);
a0_0x616ad9.prototype.constructor = a0_0x616ad9;
a0_0x616ad9.superClass = a0_0x28626c;
a0_0x616ad9.prototype.drawGrid = a0_0x56bbb3 !== a0_0xbf9ed5;
a0_0x616ad9.prototype.updateZ = function () {
  switch (this.biome) {
    case a0_0x520579:
      this.z = -300;
      break;
    case a0_0x161b09:
      this.z = -299;
      break;
    case a0_0x1f3985:
    case a0_0x4b64fc:
      this.z = -298;
      break;
    case a0_0x3bf767:
      if (this.forceBiomeColor) {
        this.z = -210;
      } else {
        this.z = -208;
      }
      break;
    case a0_0x51be8a:
      this.z = -295;
      break;
  }
};
a0_0x616ad9.prototype.customDraw = function (_0x82bb64) {
  if (this.isRect) {
    this.drawBiome(_0x82bb64);
    if (!_0x82bb64) {
      if (this.jaggedSides) {
        a0_0x1306ae.save();
        this.jaggedSidesForRect();
        a0_0x1306ae.restore();
      }
    }
    if (a0_0x56bbb3 !== a0_0xbf9ed5) {
      var _0x90f443 = 45;
      a0_0xe5db5c(-this.getRectWidth() / 2 + _0x90f443, -this.getRectHeight() / 2 + _0x90f443, this.getRectWidth() / 2 - _0x90f443, this.getRectHeight() / 2 - _0x90f443, this.x, this.y);
    }
    a0_0x1306ae.save();
    a0_0x1306ae.restore();
  } else {
    this.drawBiome(false);
  }
};
a0_0x616ad9.prototype.jaggedPointsForRect = function (_0x40d4b2) {
  var _0x3c7141 = 0;
  var _0x4781b3 = 1;
  var _0x13c43a = 2;
  var _0x47e883 = 3;
  if (this.jaggedSides) {
    if (_0x40d4b2 == _0x13c43a) {
      this.jaggedRect[_0x40d4b2] = [];
      var _0x9e9342 = -this.getRectWidth() / 2;
      var _0x9fa3e2 = this.getRectWidth() / 2;
      var _0x3cf0cf = this.getRectHeight() / 2 - 32;
      var _0xca3639 = this.getRectHeight() / 2 - 32;
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9e9342,
        y: _0x3cf0cf
      });
      var _0x1a1270 = 20;
      var _0x11f134 = [-12, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
      var _0x5a129d = 60;
      var _0x30037a = 0;
      var _0x512aad = a0_0x3acc86 - this.x;
      var _0x3254cd = 0 - this.x;
      var _0x1272d2 = a0_0x9b6712 - this.y;
      var _0x3584e7 = 0 - this.y;
      var _0x454ff8;
      var _0x20b68e = _0x9e9342 - _0x1a1270;
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9e9342,
        y: _0x3cf0cf
      });
      _0x454ff8 = _0xca3639 + _0x1a1270;
      var _0x297ef3 = 0;
      var _0x2c1ca0 = 0;
      for (_0x20b68e = _0x9e9342; _0x20b68e < _0x9fa3e2; _0x20b68e += _0x5a129d) {
        _0x2c1ca0 = _0x20b68e;
        _0x297ef3 = Math.min(_0x1272d2, Math.max(_0x3584e7, _0x454ff8 + _0x11f134[_0x30037a]));
        this.jaggedRect[_0x40d4b2].push({
          x: _0x2c1ca0,
          y: _0x297ef3
        });
        _0x30037a = (_0x30037a + 1) % _0x11f134.length;
      }
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9fa3e2,
        y: _0xca3639
      });
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9fa3e2,
        y: _0x3cf0cf
      });
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9e9342,
        y: _0x3cf0cf
      });
    } else if (_0x40d4b2 == _0x3c7141) {
      var _0x2a408f = 100;
      this.jaggedRect[_0x40d4b2] = [];
      a0_0x1306ae.fillStyle = a0_0x10973d;
      var _0x9e9342 = -this.getRectWidth() / 2;
      var _0x9fa3e2 = this.getRectWidth() / 2;
      var _0x3cf0cf = -this.getRectHeight() / 2 + 24;
      var _0xca3639 = -this.getRectHeight() / 2 + 12;
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9e9342,
        y: _0x3cf0cf
      });
      var _0x1a1270 = 0;
      var _0x11f134 = [-12, 5, 10, 0, -10, 3, 12, 4, 0, 3, 5, -10, 5, -12, 5, 10, 0, -6];
      var _0x5a129d = 60;
      var _0x30037a = 0;
      var _0x512aad = a0_0x3acc86 - this.x;
      var _0x3254cd = 0 - this.x;
      var _0x1272d2 = a0_0x9b6712 - this.y;
      var _0x3584e7 = 0 - this.y;
      var _0x454ff8;
      var _0x20b68e = _0x9e9342;
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9e9342,
        y: _0xca3639
      });
      _0x454ff8 = _0xca3639;
      for (_0x20b68e = _0x9e9342; _0x20b68e < _0x9fa3e2; _0x20b68e += _0x5a129d) {
        _0x2c1ca0 = _0x20b68e;
        _0x297ef3 = Math.min(_0x1272d2, Math.max(_0x3584e7, _0x454ff8 + _0x11f134[_0x30037a]));
        this.jaggedRect[_0x40d4b2].push({
          x: _0x2c1ca0,
          y: _0x297ef3
        });
        _0x30037a = (_0x30037a + 1) % _0x11f134.length;
      }
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9fa3e2,
        y: _0xca3639
      });
      this.jaggedRect[_0x40d4b2].push({
        x: _0x9fa3e2,
        y: _0x3cf0cf
      });
    }
  }
};
a0_0x616ad9.prototype.drawJaggedCircle = function (_0xa8acee, _0xbc5394) {
  if (this.points2) {
    this.drawPoints(this.points2, _0xbc5394, true);
  }
  this.drawPoints(this.points1, _0xa8acee, true);
};
a0_0x616ad9.prototype.getRectWidth = function () {
  var _0xefd534 = this.rectW;
  return _0xefd534;
};
a0_0x616ad9.prototype.getRectHeight = function () {
  var _0xa84b5b = this.rectH;
  return _0xa84b5b;
};
a0_0x616ad9.prototype.drawBiome = function (_0x32bd05) {
  if (this.biome == a0_0x3bf767) {
    this.drawVolcanoBiome(_0x32bd05);
  } else if (!this.isRect) {
    a0_0x1306ae.fillStyle = _0x32bd05 ? "red" : this.getBiomeColor();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(1, this.rad), 0, Math.PI * 2);
    a0_0x1306ae.fill();
  } else {
    if (this.biome == a0_0x161b09) {
      a0_0x1306ae.globalAlpha = 1;
    }
    if (!_0x32bd05) {
      a0_0x1306ae.fillStyle = _0x32bd05 ? a0_0x519c59 : this.getBiomeColor();
      var _0x55d237 = _0x32bd05 ? 0 : 20;
      a0_0x1306ae.fillRect(-this.getRectWidth() / 2 + _0x55d237, -this.getRectHeight() / 2 + _0x55d237, this.getRectWidth() - _0x55d237 * 2, this.getRectHeight() - _0x55d237 * 2);
    }
  }
};
a0_0x616ad9.prototype.drawVolcanoBiome = function (_0x535e90) {
  a0_0x1306ae.save();
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
  }
  var _0xa15361 = 0;
  var _0x8b5acf = (a0_0x24806e - this.spawnTime) / 1000;
  var _0x430fd4 = 6;
  var _0x20acd1 = 1.5;
  _0xa15361 = _0x20acd1 * Math.sin(Math.PI * 2 / _0x430fd4 * _0x8b5acf);
  var _0x1ab59a = 4;
  a0_0x1306ae.fillStyle = "#604729";
  a0_0x1306ae.beginPath();
  a0_0x1306ae.arc(0, 0, this.rad, 0, Math.PI * 2);
  a0_0x1306ae.fill();
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x1306ae.fillStyle = "#8A681B";
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(0, 0, Math.max(0, this.rad - _0x1ab59a + _0xa15361), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.45, -this.rad * 0.45 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0xa15361), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad * 0.5, this.rad * 0.5 + this.rPer * 15, Math.max(0, this.rad * 0.4 + _0xa15361), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(-this.rad * 0.55 * 0.707, +this.rad * 0.55 * 0.707 + this.rPer * 15, Math.max(0, this.rad * 0.5 + _0xa15361), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(-this.rad * 0.75, -this.rad * 0.35 + this.rPer * 15, Math.max(0, this.rad * 0.3 + _0xa15361), 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad + this.rPer * 10, this.rPer * 50, 8, 0, Math.PI * 2);
    a0_0x1306ae.fill();
    a0_0x1306ae.beginPath();
    a0_0x1306ae.arc(this.rad - this.rPer * 20, this.rPer * 50, 10, 0, Math.PI * 2);
    a0_0x1306ae.fill();
  }
  a0_0x1306ae.restore();
};
a0_0x616ad9.prototype.drawPoints = function (_0x451a87, _0x1d0860, _0x5bda7f) {
  if (_0x5bda7f) {
    a0_0x1306ae.fillStyle = _0x1d0860;
  } else {
    a0_0x1306ae.strokeStyle = _0x1d0860;
  }
  a0_0x1306ae.strokeStyle = _0x1d0860;
  a0_0x1306ae.beginPath();
  var _0x446b76 = 10;
  a0_0x1306ae.moveTo(_0x451a87[0].x * _0x446b76, _0x451a87[0].y * _0x446b76);
  for (var _0x3d7797 = 1; _0x3d7797 < _0x451a87.length; _0x3d7797++) {
    a0_0x1306ae.lineTo(_0x451a87[_0x3d7797].x * _0x446b76, _0x451a87[_0x3d7797].y * _0x446b76);
  }
  a0_0x1306ae.lineTo(_0x451a87[0].x * _0x446b76, _0x451a87[0].y * _0x446b76);
  if (_0x5bda7f) {
    a0_0x1306ae.fill();
  } else {
    a0_0x1306ae.stroke();
  }
};
a0_0x616ad9.prototype.drawJaggedRect = function () {
  var _0x3c74f8 = 0;
  var _0x605181 = 1;
  var _0x17499a = 2;
  var _0x4182d7 = 3;
  for (var _0x381b48 = 0; _0x381b48 < this.jaggedRect.length; _0x381b48++) {
    if (this.jaggedRect[_0x381b48]) {
      var _0x3267d1 = this.jaggedRect[_0x381b48];
      if (_0x3267d1 && _0x3267d1.length > 0) {
        a0_0x1306ae.fillStyle = this.biomeColor;
        a0_0x1306ae.strokeStyle = "red";
        a0_0x1306ae.beginPath();
        a0_0x1306ae.moveTo(_0x3267d1[0].x, _0x3267d1[0].y);
        for (i = 1; i < _0x3267d1.length; i++) {
          a0_0x1306ae.lineTo(_0x3267d1[i].x, _0x3267d1[i].y);
        }
        a0_0x1306ae.closePath();
        a0_0x1306ae.fill();
        a0_0x1306ae.stroke();
      }
    }
  }
};
a0_0x616ad9.prototype.jaggedPointsForCircle = function (_0x138ff7, _0x358b98, _0x26cf61, _0x241d87, _0x1a83db) {
  if (this.points1 == undefined) {
    this.points1 = [];
    if (_0x1a83db > 0) {
      this.points2 = [];
    }
    var _0x26d095 = a0_0x39b824(-2, 2);
    var _0x533ae6 = Math.PI * 2 / _0x241d87;
    a = a0_0x873ec7(_0x26d095);
    var _0x2f98d1 = Math.cos(a);
    var _0x2df736 = Math.sin(a);
    var _0x578700 = _0x138ff7 + _0x26cf61 * _0x2f98d1;
    var _0x4edeb6 = _0x358b98 + _0x26cf61 * _0x2df736;
    this.points1.push({
      x: _0x578700,
      y: _0x4edeb6
    });
    if (_0x1a83db > 0) {
      var _0x531552 = _0x138ff7 + (_0x26cf61 + _0x1a83db) * _0x2f98d1;
      var _0x105b4e = _0x358b98 + (_0x26cf61 + _0x1a83db) * _0x2df736;
      this.points2.push({
        x: _0x531552,
        y: _0x105b4e
      });
    }
    for (var _0x20afb2 = 1; _0x20afb2 < _0x241d87; _0x20afb2++) {
      var _0x273ab7 = a0_0x39b824(-1, 1);
      _0x26d095 = a0_0x39b824(-2, 2);
      var _0x45782b = _0x26cf61 + _0x273ab7;
      a = _0x533ae6 * _0x20afb2 + a0_0x873ec7(_0x26d095);
      _0x2f98d1 = Math.cos(a);
      _0x2df736 = Math.sin(a);
      var _0x58cea7 = _0x138ff7 + _0x45782b * _0x2f98d1;
      var _0x9de9c0 = _0x358b98 + _0x45782b * _0x2df736;
      this.points1.push({
        x: _0x58cea7,
        y: _0x9de9c0
      });
      if (_0x1a83db > 0) {
        var _0x5664b4 = _0x26cf61 + _0x1a83db + _0x273ab7;
        var _0x40d0a3 = _0x138ff7 + (_0x5664b4 + _0x1a83db) * _0x2f98d1;
        var _0x489e2d = _0x358b98 + (_0x5664b4 + _0x1a83db) * _0x2df736;
        this.points2.push({
          x: _0x40d0a3,
          y: _0x489e2d
        });
      }
    }
    this.points1.push({
      x: _0x578700,
      y: _0x4edeb6
    });
    if (_0x1a83db > 0) {
      this.points2.push({
        x: _0x531552,
        y: _0x105b4e
      });
    }
  }
};
a0_0x616ad9.prototype.jaggedSidesForRect = function () {
  var _0x3f82e9 = 42;
  a0_0x1306ae.fillStyle = this.getBiomeColor();
  var _0x2b8b16 = -this.getRectWidth() / 2 + _0x3f82e9;
  var _0x58db7b = this.getRectWidth() / 2 - _0x3f82e9;
  var _0xd49bf7 = -this.getRectHeight() / 2 + _0x3f82e9;
  var _0x2b968a = this.getRectHeight() / 2 - _0x3f82e9;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(_0x2b8b16, _0xd49bf7);
  var _0x8938bd = 30;
  var _0x25c156 = [-8, 10, -10, 12, 0, 5, -10, 5, -12, 5, 10, 0, -6];
  var _0x5e8855 = 45;
  var _0x2c0987 = 0;
  var _0x42328f = a0_0x3acc86 - this.x;
  var _0x149c8 = 0 - this.x;
  var _0x33f97b = a0_0x9b6712 - this.y;
  var _0x12b493 = 0 - this.y;
  var _0x1897fa;
  var _0x11c328 = _0x2b8b16 - _0x8938bd;
  for (_0x1897fa = _0xd49bf7; _0x1897fa < _0x2b968a; _0x1897fa += _0x5e8855) {
    a0_0x1306ae.lineTo(Math.min(_0x42328f, Math.max(_0x149c8, _0x11c328 + _0x25c156[_0x2c0987])), _0x1897fa);
    _0x2c0987 = (_0x2c0987 + 1) % _0x25c156.length;
  }
  a0_0x1306ae.lineTo(_0x2b8b16, _0x2b968a);
  _0x1897fa = _0x2b968a + _0x8938bd;
  for (_0x11c328 = _0x2b8b16; _0x11c328 < _0x58db7b; _0x11c328 += _0x5e8855) {
    a0_0x1306ae.lineTo(_0x11c328, Math.min(_0x33f97b, Math.max(_0x12b493, _0x1897fa + _0x25c156[_0x2c0987])));
    _0x2c0987 = (_0x2c0987 + 1) % _0x25c156.length;
  }
  a0_0x1306ae.lineTo(_0x58db7b, _0x2b968a);
  _0x11c328 = _0x58db7b + _0x8938bd;
  for (_0x1897fa = _0x2b968a; _0x1897fa > _0xd49bf7; _0x1897fa -= _0x5e8855) {
    a0_0x1306ae.lineTo(Math.min(_0x42328f, Math.max(_0x149c8, _0x11c328 + _0x25c156[_0x2c0987])), _0x1897fa);
    _0x2c0987 = (_0x2c0987 + 1) % _0x25c156.length;
  }
  a0_0x1306ae.lineTo(_0x58db7b, _0xd49bf7);
  _0x1897fa = _0xd49bf7 - _0x8938bd;
  for (_0x11c328 = _0x58db7b; _0x11c328 > _0x2b8b16; _0x11c328 -= _0x5e8855) {
    a0_0x1306ae.lineTo(_0x11c328, Math.min(_0x33f97b, Math.max(_0x12b493, _0x1897fa + _0x25c156[_0x2c0987])));
    _0x2c0987 = (_0x2c0987 + 1) % _0x25c156.length;
  }
  a0_0x1306ae.closePath();
  a0_0x1306ae.fill();
};
a0_0x616ad9.prototype.getBiomeColor = function () {
  if (this.forceBiomeColor) {
    return this.biomeColor;
  }
  switch (this.biome) {
    case a0_0x51be8a:
      return a0_0x10973d;
    case a0_0x4b64fc:
      return "#c4dee7";
    case a0_0x1f3985:
      return a0_0x4f596c;
    case a0_0x3bf767:
      return a0_0x2b041b;
    case a0_0x520579:
      return a0_0x2751ed;
    case a0_0x161b09:
      return a0_0xbd6cd0;
    default:
      return a0_0x2751ed;
  }
};
a0_0x616ad9.prototype.jaggedSides = null;
a0_0x616ad9.prototype.forceBiomeColor = false;
a0_0x616ad9.prototype.readCustomData_onNewlyVisible = function (_0xe9d18a) {
  this.isRect = _0xe9d18a.readUInt8() == 1;
  this.biomeColor = _0xe9d18a.readString();
  this.biome = _0xe9d18a.readUInt16();
  var _0x489874 = _0xe9d18a.readBitGroup();
  this.forceBiomeColor = _0x489874.getBool();
  if (this.isRect) {
    this.jaggedSides = [_0x489874.getBool(), _0x489874.getBool(), _0x489874.getBool(), _0x489874.getBool()];
  }
  if (!this.isRect) {
    this.jaggedPointsForCircle(0, 0, this.rad, 40, 5, this.biomeColor, "#DAB601");
  } else {
    this.jaggedRect = [];
    var _0x444f81 = 0;
    var _0x58f100 = 1;
    var _0xb12931 = 2;
    var _0x2db5b5 = 3;
  }
  this.drawGrid = a0_0x56bbb3 !== a0_0xbf9ed5;
};
a0_0x616ad9.prototype.biomePattern = null;
a0_0x616ad9.prototype.generateTerrainFeatures = function () {
  var _0x45c130 = 100;
  var _0x7378b7 = 100;
  var _0x1759ff = 1.5;
  if (this.biome == a0_0x1f3985) {
    _0x45c130 = 125;
    _0x7378b7 = 125;
    _0x1759ff = 1.5;
  } else if (this.biome == a0_0x161b09) {
    _0x45c130 = 75;
    _0x7378b7 = 75;
    _0x1759ff = 2;
  }
  var _0x2ae59d = 1;
  var _0x1db4d7 = -this.getRectWidth() / 2 + _0x45c130;
  var _0x189ecd = -this.getRectHeight() / 2 + _0x7378b7;
  var _0xc55818 = this.getRectWidth() / 2;
  var _0x32943f = this.getRectHeight() / 2;
  var _0x461901 = _0x45c130 * (this.biome == a0_0x161b09 ? 2 : 3);
  var _0x58061b = 0;
  var _0xcfc0ae = [];
  for (; _0x1db4d7 < _0xc55818 - _0x45c130; _0x1db4d7++) {
    if (_0x2ae59d == 1) {
      var _0xd9b73 = {
        x: _0x1db4d7,
        y: _0x189ecd,
        rx: _0x1db4d7 + _0x45c130 * a0_0x39b824(-0.25, 0.25),
        ry: _0x189ecd + _0x7378b7 * a0_0x39b824(-0.25, 0.25),
        w: _0x45c130 * _0x1759ff,
        h: _0x7378b7 * _0x1759ff,
        c: "blue",
        img: this.getRandomPatternImg(),
        r: a0_0x39b824(0, 180)
      };
      if (_0xd9b73.img < 0) {
        _0xd9b73.img = 0;
      }
      _0xcfc0ae.push(_0xd9b73);
    }
    _0x1db4d7 += _0x461901;
    if (_0x1db4d7 >= _0xc55818 - _0x45c130) {
      _0x189ecd += _0x461901;
      if (this.biome != a0_0x520579 && this.biome != a0_0x161b09) {
        _0x2ae59d = _0x2ae59d == 0 ? 1 : 0;
      }
      _0x1db4d7 = -this.getRectWidth() / 2 + _0x45c130;
    }
    if (this.biome != a0_0x520579 && this.biome != a0_0x161b09) {
      _0x2ae59d = _0x2ae59d == 0 ? 1 : 0;
    } else {
      _0x2ae59d = _0x2ae59d == 0 ? 1 : 0;
    }
    if (this.biome == a0_0x520579) {
      _0x2ae59d = 1;
    }
    if (_0x189ecd > _0x32943f - _0x7378b7) {
      break;
    }
  }
  this.biomePattern = _0xcfc0ae;
};
a0_0x616ad9.prototype.drawTerrainFeatures = function () {};
a0_0x616ad9.prototype.fillPattern = function (_0x1e0d54) {
  var _0x1424d4 = this.curBiome + "_" + _0x1e0d54;
  var _0x18fc84 = "gameobj/" + this.oType + "/" + _0x1424d4 + ".jpg";
  var _0x16b9b4 = this.getSkinImageObj(_0x18fc84);
  if (_0x16b9b4) {
    var _0x29e398 = -this.getRectWidth() / 2;
    var _0x2da86e = -this.getRectHeight() / 2;
    var _0x6d0b21 = this.getRectWidth() * 2;
    var _0x17a918 = this.getRectHeight() * 2;
    var _0x369ccb = a0_0x1306ae.createPattern(_0x16b9b4, "repeat");
    a0_0x1306ae.fillStyle = _0x369ccb;
    a0_0x1306ae.fillRect(_0x29e398, _0x2da86e, _0x6d0b21, _0x17a918);
  }
};
a0_0x616ad9.prototype.drawRectObj = function (_0x2545f3) {
  var _0x7d3be1 = this.curBiome + "_" + _0x2545f3.img;
  var _0x4ab3e0 = "gameobj/" + this.oType + "/" + _0x7d3be1 + ".png";
  var _0x415b12 = this.getSkinImageObj(_0x4ab3e0);
  if (_0x415b12) {
    a0_0x1306ae.save();
    a0_0x1306ae.translate(_0x2545f3.rx, _0x2545f3.ry);
    if (this.biome == a0_0x520579 || this.biome == a0_0x4b64fc && _0x2545f3.img == 1 || this.biome == a0_0x1f3985 && _0x2545f3.img > 1) {
      a0_0x1306ae.rotate(_0x2545f3.r);
    }
    a0_0x1306ae.drawImage(_0x415b12, 0, 0, _0x2545f3.w, _0x2545f3.h);
    a0_0x1306ae.restore();
  }
};
a0_0x616ad9.prototype.getRandomPatternImg = function () {
  var _0x370cab = 1;
  if (this.biome == a0_0x520579 || this.biome == a0_0x4b64fc) {
    _0x370cab = Math.max(0, Math.round(a0_0x39b824(0, 3)));
  } else if (this.biome == a0_0x161b09) {
    _0x370cab = 1;
  } else {
    _0x370cab = Math.max(0, Math.round(a0_0x39b824(0, 2)));
  }
  return _0x370cab - 1;
};
function a0_0x616ad9() {
  a0_0x616ad9.superClass.call(this, a0_0x904f35);
}
window.BiomeShape = a0_0x616ad9;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x616ad9, a0_0x904f35);
var a0_0x28626c = a0_0x42171b;
a0_0x3c896a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3c896a.prototype.constructor = a0_0x3c896a;
a0_0x3c896a.superClass = a0_0x28626c;
a0_0x3c896a.prototype.updateZ = function () {
  this.z = 1002 + this.rad;
};
a0_0x3c896a.prototype.customDraw = function (_0x374952) {
  var _0x1ba341 = this.getSkinImageObj("img/wave.png");
  if (_0x1ba341) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = this.alpha < 0.7 ? this.alpha : 1;
    var _0x10439c = this.rad * 1;
    a0_0x1306ae.rotate(this.angle + a0_0x873ec7(180));
    a0_0x1306ae.drawImage(_0x1ba341, -_0x10439c, -_0x10439c, _0x10439c * 2, _0x10439c * 2);
    a0_0x1306ae.restore();
  }
};
a0_0x3c896a.prototype.readCustomData_onNewlyVisible = function (_0x4377ea) {
  this.alpha = _0x4377ea.readUInt8() / 100;
};
a0_0x3c896a.prototype.readUpdatedProperty = function (_0x224d95, _0xf33533) {
  if (_0x224d95 == a0_0x32aa89) {
    this.alpha = _0xf33533.readUInt8() / 100;
  }
};
var a0_0x150e89 = 148;
function a0_0x3c896a() {
  a0_0x3c896a.superClass.call(this, a0_0x150e89);
}
window.OceanWave = a0_0x3c896a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3c896a, a0_0x150e89);
var a0_0x28626c = a0_0x42171b;
a0_0x53bd20.prototype = Object.create(a0_0x28626c.prototype);
a0_0x53bd20.prototype.constructor = a0_0x53bd20;
a0_0x53bd20.superClass = a0_0x28626c;
a0_0x53bd20.prototype.updateZ = function () {
  this.z = -294;
};
a0_0x53bd20.prototype.customDraw = function (_0x45e4f8) {};
a0_0x53bd20.prototype.readCustomData_onNewlyVisible = function (_0x10c4db) {
  this.alpha = _0x10c4db.readUInt8() / 100;
};
a0_0x53bd20.prototype.readUpdatedProperty = function (_0x3a5e67, _0x5c08c0) {
  if (_0x3a5e67 == a0_0x32aa89) {
    this.alpha = _0x5c08c0.readUInt8() / 100;
  }
};
var a0_0x3f48c8 = 149;
function a0_0x53bd20() {
  a0_0x53bd20.superClass.call(this, a0_0x3f48c8);
}
window.UnderwaterFish = a0_0x53bd20;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x53bd20, a0_0x3f48c8);
var a0_0x28626c = a0_0x42171b;
a0_0xc0bfc3.prototype = Object.create(a0_0x28626c.prototype);
a0_0xc0bfc3.prototype.constructor = a0_0xc0bfc3;
a0_0xc0bfc3.superClass = a0_0x28626c;
a0_0xc0bfc3.prototype.updateZ = function () {
  this.z = this.rad + 100;
};
a0_0xc0bfc3.prototype.setSkinPath = function () {
  var _0x2ec65d = this.oType + "_" + this.speciesSubType;
  this.objSkinPath = "gameobj/" + this.oType + "/" + _0x2ec65d + "_" + this.hasPopped + ".png";
};
a0_0xc0bfc3.prototype.customDraw = function (_0x5eeb4d) {};
a0_0xc0bfc3.prototype.hasPopped = 0;
a0_0xc0bfc3.prototype.readUpdatedProperty = function (_0x1dcfcf, _0x557a67) {
  if (_0x1dcfcf == a0_0x3f956f) {
    this.hasPopped = _0x557a67.readUInt8();
  }
};
var a0_0x19169b = 151;
function a0_0xc0bfc3() {
  a0_0xc0bfc3.superClass.call(this, a0_0x19169b);
}
window.Bubbles = a0_0xc0bfc3;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xc0bfc3, a0_0x19169b);
var a0_0x28626c = a0_0x42171b;
a0_0x1c77e8.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1c77e8.prototype.constructor = a0_0x1c77e8;
a0_0x1c77e8.superClass = a0_0x28626c;
a0_0x1c77e8.prototype.updateZ = function () {
  this.z = -150;
};
a0_0x1c77e8.prototype.customDraw = function (_0x1fe293) {
  var _0x11c440 = 1;
  var _0x3609ee = 1;
  if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
    var _0x1ac006 = (a0_0x24806e - this.spawnTime) / 1000;
    var _0x45969e = 1.2;
    _0x11c440 = Math.cos(Math.PI * 2 / _0x45969e * _0x1ac006) * 3.5;
    _0x3609ee = Math.sin(Math.PI * 2 / _0x45969e * _0x1ac006) * 2.5;
  }
  this.drawOutlinedCircleRad("", "#4A549D", this.innerRad);
  if (a0_0x56bbb3 != a0_0xbf9ed5) {
    a0_0x50fd5c(0 + _0x11c440 / 2 - this.rPer, 0 + _0x3609ee / 2 - this.rPer, Math.max(0, this.innerRad - 6), "#444C8B");
  }
  a0_0x50fd5c(0 + _0x11c440 / 4.5 + this.rPer, 1 + _0x3609ee / 1.5, Math.max(0, this.innerRad - 14), "#4A549D");
  a0_0x50fd5c(0 + _0x11c440 / 1.5 - this.rPer * 2, _0x3609ee, Math.max(0, this.innerRad - 18.5 + _0x3609ee / 5), "#3F4477");
  a0_0x50fd5c(0 + _0x11c440 / 1.5 - this.rPer * 2, _0x3609ee, Math.max(0, this.innerRad - 22.5 + _0x3609ee / 11), "#353860");
  var _0x1b8a41 = a0_0x283a01[a0_0x15e4d1];
  if (_0x1b8a41 && _0x1b8a41.lastHidingHoleID == this.id) {
    if (this.alpha == undefined) {
      this.alpha = 0;
    }
    if (_0x1b8a41.flag_inHidingHole) {
      this.alpha += (0.1 + this.alpha) * 0.1;
    } else {
      this.alpha -= this.alpha * 0.1;
    }
    if (this.alpha > 1) {
      this.alpha = 1;
    } else if (this.alpha < 0) {
      this.alpha = 0;
    }
    a0_0x1306ae.globalAlpha = this.alpha;
    var _0x33eb9b = this.rad;
    this.drawOutlinedCircle("", "#4A549D", _0x33eb9b);
    if (a0_0x56bbb3 != a0_0xbf9ed5) {
      a0_0x50fd5c(0 + _0x11c440 / 2 - this.rPer, 0 + _0x3609ee / 2 - this.rPer, Math.max(0, _0x33eb9b - 6), "#444C8B");
    }
    a0_0x50fd5c(0 + _0x11c440 / 4.5 + this.rPer, 1 + _0x3609ee / 1.5, Math.max(0, _0x33eb9b - 14), "#4A549D");
    _0x33eb9b = _0x33eb9b * 0.9;
    a0_0x1306ae.globalAlpha = this.alpha * 0.6;
    a0_0x50fd5c(0 + _0x11c440 / 3.5 - this.rPer * 2, _0x3609ee, Math.max(0, _0x33eb9b - 18.5 + _0x3609ee / 5), "#3F4477");
    _0x33eb9b = _0x33eb9b * 0.7;
    a0_0x1306ae.globalAlpha = this.alpha * 0.3;
    a0_0x50fd5c(0 + _0x11c440 / 6.5 - this.rPer * 2, _0x3609ee, Math.max(0, _0x33eb9b - 22.5 + _0x3609ee / 11), "#353860");
  }
};
function a0_0x1c77e8() {
  a0_0x1c77e8.superClass.call(this, a0_0x74644c);
  this.doesDrawEffectScale = false;
  this.drawEffectScale_Slow = false;
}
window.OceanHidinghole = a0_0x1c77e8;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1c77e8, a0_0x74644c);
var a0_0x28626c = a0_0x42171b;
a0_0x84d8c2.prototype = Object.create(a0_0x28626c.prototype);
a0_0x84d8c2.prototype.constructor = a0_0x84d8c2;
a0_0x84d8c2.superClass = a0_0x28626c;
a0_0x84d8c2.prototype.playerID = 0;
a0_0x84d8c2.prototype.shellState = 0;
a0_0x84d8c2.prototype.cracksCount = 0;
a0_0x84d8c2.prototype.updateZ = function () {
  if (this.shellState == 0) {
    this.z = this.rad;
  } else {
    this.z = -153;
  }
};
a0_0x84d8c2.prototype.isEdibleOutlined = function () {
  if (this.playerID == a0_0x15e4d1) {
    return false;
  }
  return a0_0x3e58f7.superClass.prototype.isEdibleOutlined.call(this);
};
a0_0x84d8c2.prototype.nextShakeEndT = 0;
a0_0x84d8c2.prototype.nextShakeStartT = 0;
a0_0x84d8c2.prototype.drawScaleEffect = function () {
  if (this.shellState != 1) {
    this.drawNickName(1);
  }
  if (this.shellState == 0) {
    if (a0_0x24806e > this.nextShakeEndT) {
      this.nextShakeEndT = +new Date() + a0_0x39b824(2500, 4500);
      this.nextShakeStartT = this.nextShakeEndT - a0_0x39b824(1000, 1500);
    }
    if (a0_0x24806e > this.nextShakeStartT && a0_0x24806e < this.nextShakeEndT) {
      var _0x39d7ac = 0.02;
      var _0x380d17 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x557ca1 = 0.1;
      var _0x57041c = this.rad * _0x39d7ac;
      var _0x5794dc = _0x57041c * Math.sin(Math.PI * 2 / _0x557ca1 * _0x380d17);
      var _0x557ca1 = 0.15;
      var _0x57041c = this.rad * _0x39d7ac;
      var _0x543c98 = _0x57041c * Math.cos(Math.PI * 2 / _0x557ca1 * _0x380d17);
      a0_0x1306ae.translate(-_0x5794dc, -_0x543c98);
    }
  }
};
a0_0x84d8c2.prototype.customDraw = function (_0x1e3ce0) {
  var _0x3c13bb = "upgradeshell";
  if (this.shellState == 0) {
    if (this.cracksCount > 0 && this.cracksCount <= 10) {
      _0x3c13bb = "egg_crack" + this.cracksCount;
    } else {
      _0x3c13bb += "" + this.shellState;
    }
  } else {
    _0x3c13bb += "" + this.shellState;
  }
  var _0x27941b = this.getSkinImageObj("img/upgradeshell/" + _0x3c13bb + ".png");
  var _0x3a207f = this.getSkinImageObj("img/upgradeshell/outline" + this.curBiome + ".png");
  var _0x4f3f7e = this.rad;
  var _0x291a81 = this.rPer * Math.PI * 2;
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(_0x291a81);
  if (_0x27941b) {
    a0_0x1306ae.drawImage(_0x27941b, -_0x4f3f7e, -_0x4f3f7e * 1.1, _0x4f3f7e * 2, _0x4f3f7e * 2.2);
    if (this.shellState == 0 && _0x3a207f) {
      a0_0x1306ae.drawImage(_0x3a207f, -_0x4f3f7e, -_0x4f3f7e * 1.1, _0x4f3f7e * 2, _0x4f3f7e * 2.21);
    }
  }
  a0_0x1306ae.restore();
};
a0_0x84d8c2.prototype.getNameSize = function () {
  return 6;
};
a0_0x84d8c2.prototype.setNick = function (_0x4d1dc3) {
  this.nickName = _0x4d1dc3;
  if (this.nickTXT == null) {
    this.nickTXT = new a0_0x993fcb(this.getNameSize(), "#FFFFFF");
    this.nickTXT.strokeW = 1.5;
    this.nickTXT.renderScale = 5;
    this.nickTXT.setText(this.nickName);
  } else {
    this.nickTXT.setFontSize(this.getNameSize());
    this.nickTXT.setText(this.nickName);
  }
};
a0_0x84d8c2.prototype.drawNickName = function (_0x40b146) {
  if (this.nickName && this.nickTXT && !a0_0x17133c) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x40b146;
    this.nickTXT.x = 0;
    this.nickTXT.y = this.rad + 5;
    this.nickTXT.draw();
    a0_0x1306ae.restore();
  }
};
a0_0x84d8c2.prototype.readCustomData_onNewlyVisible = function (_0x4272dc) {
  a0_0x84d8c2.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x4272dc);
  this.playerID = _0x4272dc.readUInt32();
  if (this.playerID > 0) {
    var _0x22794c = _0x4272dc.readString();
    this.setNick(_0x22794c ? _0x22794c : "mope.io");
  }
  this.readUpdatedProperty(a0_0x2e7c14, _0x4272dc);
  this.readUpdatedProperty(a0_0x5a3e6d, _0x4272dc);
};
a0_0x84d8c2.prototype.readUpdatedProperty = function (_0x58ab2c, _0x2cd773) {
  if (_0x58ab2c == a0_0x2e7c14) {
    this.shellState = _0x2cd773.readUInt8();
  } else if (_0x58ab2c == a0_0x5a3e6d) {
    this.cracksCount = _0x2cd773.readUInt8();
  }
};
var a0_0x5df92a = 152;
function a0_0x84d8c2() {
  a0_0x84d8c2.superClass.call(this, a0_0x5df92a);
}
window.UpgradeShell = a0_0x84d8c2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x84d8c2, a0_0x5df92a);
var a0_0x28626c = a0_0x42171b;
a0_0x2f28d0.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2f28d0.prototype.constructor = a0_0x2f28d0;
a0_0x2f28d0.superClass = a0_0x28626c;
a0_0x2f28d0.prototype.playerID = 0;
a0_0x2f28d0.prototype.shellState = 0;
a0_0x2f28d0.prototype.cracksCount = 0;
a0_0x2f28d0.prototype.updateZ = function () {
  this.z = 100000;
};
a0_0x2f28d0.prototype.customDraw = function (_0x184d7c) {
  switch (this.speciesType) {
    case a0_0x5df92a:
      {
        var _0x152573 = this.getSkinImageObj("img/upgradeshell/shellpart" + this.speciesSubType + ".png");
        var _0x54d347 = this.rad;
        var _0x5620ea = this.rPer * Math.PI * 2;
        if (_0x152573) {
          a0_0x1306ae.save();
          a0_0x1306ae.rotate(_0x5620ea);
          a0_0x1306ae.drawImage(_0x152573, -_0x54d347, -_0x54d347, _0x54d347 * 2, _0x54d347 * 2);
          a0_0x1306ae.restore();
        }
        break;
      }
    default:
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.1;
      a0_0x50fd5c(0, 0, this.rad, "black");
      a0_0x1306ae.restore();
      break;
  }
};
var a0_0x1dd19c = 153;
function a0_0x2f28d0() {
  a0_0x2f28d0.superClass.call(this, a0_0x1dd19c);
}
window.Particle = a0_0x2f28d0;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2f28d0, a0_0x1dd19c);
var a0_0x2b9582 = a0_0x532538;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x532538.prototype.updateZ = function () {
  this.z = 100002;
};
a0_0x532538.prototype.customDraw = function (_0x529ccd) {
  this.drawEffectScale_Slow = true;
  this.doesDrawEffectScale = true;
  a0_0x1306ae.globalAlpha = 0.2;
  a0_0x50fd5c(0, 0, this.rad * 0.85, "white");
  var _0x2ff688 = this.isGreenTarget ? "_e" : "";
  var _0x545330 = this.getSkinImageObj("img/target" + _0x2ff688 + ".png");
  if (_0x545330) {
    var _0x46ab8c = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = 0.5;
    a0_0x1306ae.drawImage(_0x545330, -_0x46ab8c, -_0x46ab8c, _0x46ab8c * 2, _0x46ab8c * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.save();
  if (this.hasTimer && this.timerTxt != null) {
    a0_0x1306ae.globalAlpha = 1;
    this.timerTxt.x = 0;
    this.timerTxt.y = 0;
    this.timerTxt.draw();
  }
  a0_0x1306ae.restore();
};
a0_0x532538.prototype.worldUpd_readMsgNewlyVisible = function (_0x309b8b, _0x26e6b9, _0x52cf49) {
  this.setObjTypes(_0x26e6b9, _0x52cf49);
  this.id = _0x309b8b.readUInt32();
  var _0x57042d = _0x309b8b.readUInt16() / 4;
  var _0x324cdc = _0x309b8b.readUInt16() / 4;
  var _0x4ae1d5 = _0x309b8b.readUInt16() / 4;
  this.ox = this.x = this.nx = _0x324cdc;
  this.oy = this.y = this.ny = _0x4ae1d5;
  this.nRad = _0x57042d;
  this.oRad = this.rad = 0;
  this.setMovedToPos(_0x324cdc, _0x4ae1d5);
  this.setNewRad(_0x57042d);
  this.hasTimer = _0x309b8b.readUInt8() == 1;
  this.readUpdatedProperty(a0_0xb974c2, _0x309b8b);
  this.readUpdatedProperty(a0_0x30ca83, _0x309b8b);
  this.mopeSeasonID = 1;
};
a0_0x532538.prototype.readUpdatedProperty = function (_0x37956a, _0x441123) {
  if (_0x37956a == a0_0x2bb8df) {
    this.timer = _0x441123.readUInt16() / 100;
    if (this.timer < 30) {
      this.updateTimer();
    }
  } else if (_0x37956a == a0_0x30ca83) {
    this.targetText = _0x441123.readString();
    this.hasTimer = true;
    this.setTimer(this.targetText);
  } else if (_0x37956a == a0_0x212f58) {
    this.hasVictim = true;
    var _0x334381 = _0x441123.readUInt16() / 4;
    var _0x833957 = _0x441123.readUInt16() / 4;
    this.spider_ox = this.victimX;
    this.spider_oy = this.victimY;
    this.spider_nx = _0x334381;
    this.spider_ny = _0x833957;
  } else if (_0x37956a == a0_0xb974c2) {
    this.isGreenTarget = _0x441123.readUInt8() == 1;
  }
};
a0_0x532538.prototype.isGreenTarget = false;
a0_0x532538.prototype.hasVictim = false;
a0_0x532538.prototype.victimX = null;
a0_0x532538.prototype.victimY = null;
a0_0x532538.prototype.onLerpUpdate = function (_0x9b6bf6) {
  if (this.hasVictim) {
    this.victimX = _0x9b6bf6 * (this.spider_nx - this.spider_ox) + this.spider_ox;
    this.victimY = _0x9b6bf6 * (this.spider_ny - this.spider_oy) + this.spider_oy;
  }
};
a0_0x532538.prototype.beforeCustomDraw = function (_0x572691) {
  if (this.hasVictim) {
    a0_0x1306ae.save();
    a0_0x1306ae.strokeStyle = "white";
    a0_0x1306ae.globalAlpha = 1;
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(this.x, this.y);
    a0_0x1306ae.lineTo(this.victimX, this.victimY);
    a0_0x1306ae.stroke();
    a0_0x1306ae.restore();
  }
};
a0_0x532538.prototype.updateTimer = function () {
  this.timer = Math.round(this.timer);
  var _0x2f9916 = this.timer;
  this.setTimer(_0x2f9916);
};
a0_0x532538.prototype.timerTxt = null;
a0_0x532538.prototype.setTimer = function (_0x4d417c) {
  var _0x437aff = "" + _0x4d417c;
  if (this.timerTxt == null) {
    this.timerTxt = new a0_0x993fcb(20, "#FFFFFF");
    this.timerTxt.strokeW = 2;
    this.timerTxt.multiLine = true;
    this.timerTxt.renderScale = 5;
    this.timerTxt.setText(_0x437aff);
  } else {
    this.timerTxt.setFontSize(20);
    this.timerTxt.setText(_0x437aff);
  }
};
function a0_0x532538() {
  a0_0x532538.superClass.call(this);
}
window.TargetCircle = a0_0x532538;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x532538, a0_0x382193, a0_0x35ed85);
var a0_0x28626c = a0_0x42171b;
a0_0x28b48a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x28b48a.prototype.constructor = a0_0x28b48a;
a0_0x28b48a.superClass = a0_0x28626c;
a0_0x28b48a.prototype.stoneIncentive = 0;
a0_0x28b48a.prototype.teamID = 0;
a0_0x28b48a.prototype.lastHurtByTeamID = 0;
a0_0x28b48a.prototype.coolDownTime = 0;
a0_0x28b48a.prototype.isDefended = false;
a0_0x28b48a.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x28b48a.prototype.customDraw = function (_0x169d7b) {
  let _0xf59b10 = this.teamID;
  if (this.teamID == 0) {
    if (this.lastHurtByTeamID != 0) {
      _0xf59b10 += "_" + this.lastHurtByTeamID;
    } else if (this.coolDownTime > 0.1) {
      _0xf59b10 += "_0";
    }
  }
  var _0x107ea7 = this.getSkinImageObj("gameobj/" + this.oType + "/stone" + _0xf59b10 + ".png");
  if (_0x107ea7) {
    var _0x22de22 = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x107ea7, -_0x22de22, -_0x22de22, _0x22de22 * 2, _0x22de22 * 2);
  }
  if (!this.isDefended) {
    var _0x25eeae = this.getSkinImageObj("gameobj/" + this.oType + "/stone_undefended.png");
    if (_0x25eeae) {
      var _0x22de22 = this.rad * 1.25;
      a0_0x1306ae.drawImage(_0x25eeae, -_0x22de22, -_0x22de22, _0x22de22 * 2, _0x22de22 * 2);
    }
  }
  var _0x5aaa39 = this.getSkinImageObj("gameobj/" + this.oType + "/incentive/" + this.stoneIncentive + ".png");
  if (_0x5aaa39) {
    var _0x22de22 = this.rad / 4;
    a0_0x1306ae.drawImage(_0x5aaa39, -_0x22de22, -_0x22de22, _0x22de22 * 2, _0x22de22 * 2);
  }
};
a0_0x28b48a.prototype.setIncentiveText = function () {
  if (this.incentiveTxt == null) {
    this.incentiveTxt = new a0_0x993fcb(10, "#FFFFFF");
    this.incentiveTxt.strokeW = 1.5;
    this.incentiveTxt.multiLine = true;
    this.incentiveTxt.renderScale = 5;
    this.incentiveTxt.setText(this.nickName);
  } else {
    this.incentiveTxt.setFontSize(10);
    this.incentiveTxt.multiLine = true;
    let _0x3920f7 = "";
    if (this.coolDownTime > 0.1) {
      _0x3920f7 = "\ncooldown: " + this.coolDownTime + "s";
    }
    this.incentiveTxt.setText(this.nickName + _0x3920f7);
  }
};
a0_0x28b48a.prototype.drawIncentiveText = function (_0x13b6b6) {
  if (this.incentiveTxt && !a0_0x17133c) {
    a0_0x1306ae.save();
    a0_0x1306ae.globalAlpha = _0x13b6b6;
    this.incentiveTxt.x = -this.rad / 2;
    this.incentiveTxt.y = -this.rad / 2;
    this.incentiveTxt.draw();
    a0_0x1306ae.restore();
  }
};
a0_0x28b48a.prototype.readCustomData_onNewlyVisible = function (_0x2e14ec) {
  a0_0x28b48a.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x2e14ec);
  this.stoneIncentive = _0x2e14ec.readUInt8();
  this.readUpdatedProperty(a0_0x5db061, _0x2e14ec);
  this.readUpdatedProperty(a0_0x44718c, _0x2e14ec);
  this.readUpdatedProperty(a0_0x417e09, _0x2e14ec);
  this.readUpdatedProperty(a0_0x35f778, _0x2e14ec);
};
a0_0x28b48a.prototype.readUpdatedProperty = function (_0x442afa, _0x29136e) {
  if (_0x442afa == a0_0x5db061) {
    this.teamID = _0x29136e.readUInt8();
  } else if (_0x442afa == a0_0x44718c) {
    this.lastHurtByTeamID = _0x29136e.readUInt8();
  } else if (_0x442afa == a0_0x35f778) {
    this.isDefended = _0x29136e.readUInt8() == 1;
  } else if (_0x442afa == a0_0x417e09) {
    this.coolDownTime = _0x29136e.readUInt16() / 100;
  }
};
a0_0x28b48a.prototype.onHurt = function () {};
var a0_0x210215 = 78;
function a0_0x28b48a() {
  a0_0x28b48a.superClass.call(this, a0_0x210215);
}
window.TeamStone = a0_0x28b48a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x28b48a, a0_0x210215);
const a0_0x5b5392 = 1;
const a0_0x586b30 = 2;
const a0_0x4bab69 = 3;
const a0_0x424bce = 4;
const a0_0x54be65 = 5;
const a0_0x5e7747 = 6;
const a0_0x1e9ed2 = 7;
const a0_0x2cd31e = 8;
const a0_0x365900 = 9;
const a0_0xf4802e = 10;
const a0_0x270c76 = 11;
const a0_0x3e6459 = 12;
const a0_0x48af6a = 13;
var a0_0x28626c = a0_0x42171b;
a0_0x13634b.prototype = Object.create(a0_0x28626c.prototype);
a0_0x13634b.prototype.constructor = a0_0x13634b;
a0_0x13634b.superClass = a0_0x28626c;
a0_0x13634b.prototype.updateZ = function () {
  this.z = this.hasImpact ? this.rad : 100000000000;
};
let a0_0x2b3be9 = 1.5;
a0_0x13634b.prototype.frame = 0;
a0_0x13634b.prototype.customDraw = function (_0x30ddce) {
  if (!this.hasImpact) {
    this.frame = Math.trunc(a0_0x24806e / 120) % 6;
  } else {
    this.frame = 0;
  }
  var _0x15cd90 = "gameobj/" + this.oType + "/" + this.oType + "_" + this.frame + ".png";
  var _0x5540fd = this.getSkinImageObj(_0x15cd90);
  if (_0x5540fd) {
    a0_0x1306ae.save();
    var _0x5d8a1b = this.rad * 2;
    if (!this.hasImpact) {
      a0_0x1306ae.shadowColor = "rgba(0,0,0,0.05)";
      a0_0x1306ae.shadowBlur = 0;
      a0_0x1306ae.shadowOffsetX = this.shadowDistance;
      a0_0x1306ae.shadowOffsetY = this.shadowDistance;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0x5540fd, -_0x5d8a1b / 2, -_0x5d8a1b * a0_0x2b3be9, _0x5d8a1b, _0x5d8a1b * 2);
    } else {
      _0x15cd90 = "gameobj/" + this.oType + "/meteorite.png";
      _0x5540fd = null;
      _0x5540fd = this.getSkinImageObj(_0x15cd90);
      if (_0x5540fd) {
        a0_0x1306ae.rotate(this.angle);
        _0x5d8a1b = this.rad;
        a0_0x1306ae.drawImage(_0x5540fd, -_0x5d8a1b, -_0x5d8a1b, _0x5d8a1b * 2, _0x5d8a1b * 2);
      }
    }
    a0_0x1306ae.restore();
  }
};
a0_0x13634b.prototype.readCustomData_onNewlyVisible = function (_0x28079d) {
  a0_0x13634b.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x28079d);
  this.readUpdatedProperty(a0_0x103d05, _0x28079d);
  this.readUpdatedProperty(a0_0x5c8d1b, _0x28079d);
};
a0_0x13634b.prototype.shadowDistance = 0;
a0_0x13634b.prototype.hasImpact = false;
a0_0x13634b.prototype.readUpdatedProperty = function (_0x1ffd47, _0x654f4a) {
  if (_0x1ffd47 == a0_0x5c8d1b) {
    let _0x3cd58d = _0x654f4a.readUInt16() / 10;
    this.shadowDistance = _0x3cd58d;
  } else if (_0x1ffd47 == a0_0x103d05) {
    this.hasImpact = _0x654f4a.readUInt8() == 1;
  }
};
const a0_0x2dc6d7 = 154;
function a0_0x13634b() {
  a0_0x13634b.superClass.call(this, a0_0x2dc6d7);
}
window.Meteor = a0_0x13634b;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x13634b, a0_0x2dc6d7);
var a0_0x28626c = a0_0x42171b;
a0_0x34644a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x34644a.prototype.constructor = a0_0x34644a;
a0_0x34644a.superClass = a0_0x28626c;
a0_0x34644a.prototype.updateZ = function () {
  this.z = -101;
};
a0_0x34644a.prototype.customDraw = function (_0x551ed0) {
  skin = "gameobj/" + this.oType + "/" + this.oType + ".png";
  var _0x234ced = this.getSkinImageObj(skin);
  if (_0x234ced) {
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    rad = this.rad * 1.5;
    a0_0x1306ae.drawImage(_0x234ced, -rad, -rad, rad * 2, rad * 2);
    a0_0x1306ae.restore();
  }
};
const a0_0x516a81 = 155;
function a0_0x34644a() {
  a0_0x34644a.superClass.call(this, a0_0x516a81);
}
window.MeteorCrater = a0_0x34644a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x34644a, a0_0x516a81);
var a0_0x28626c = a0_0x42171b;
a0_0x2eb81.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2eb81.prototype.constructor = a0_0x2eb81;
a0_0x2eb81.superClass = a0_0x28626c;
a0_0x2eb81.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x2eb81.prototype.customDraw = function (_0x16d8ae) {
  this.frame = Math.trunc(a0_0x24806e / 120) % 5;
  var _0x4af1d2 = "gameobj/" + this.oType + "/" + this.oType + "_" + this.frame + ".png";
  var _0x3e3f1a = this.getSkinImageObj(_0x4af1d2);
  if (_0x3e3f1a) {
    var _0x1f4ee0 = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x3e3f1a, -_0x1f4ee0, -_0x1f4ee0, _0x1f4ee0 * 2, _0x1f4ee0 * 2);
    a0_0x1306ae.restore();
  }
};
const a0_0x3aa7b9 = 157;
function a0_0x2eb81() {
  a0_0x2eb81.superClass.call(this, a0_0x3aa7b9);
}
window.MeteorShockwave = a0_0x2eb81;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2eb81, a0_0x3aa7b9);
const a0_0x23e9b6 = 0;
const a0_0x3b7488 = 1;
const a0_0x3be0f1 = 2;
const a0_0x4a56da = 3;
var a0_0x28626c = a0_0x42171b;
a0_0x102c4b.prototype = Object.create(a0_0x28626c.prototype);
a0_0x102c4b.prototype.constructor = a0_0x102c4b;
a0_0x102c4b.superClass = a0_0x28626c;
a0_0x102c4b.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x102c4b.prototype.customDraw = function (_0x5abe44) {
  var _0x1e452f = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.oType + "_" + this.speciesType + (this.isEdibleOutlined() ? "_e" : "") + ".png");
  if (_0x1e452f) {
    var _0x2faef0 = this.rad;
    a0_0x1306ae.drawImage(_0x1e452f, -_0x2faef0, -_0x2faef0, _0x2faef0 * 2, _0x2faef0 * 2);
  }
};
var a0_0x34f5de = 158;
a0_0x102c4b.prototype.readCustomData_onNewlyVisible = function (_0x578cdd) {
  a0_0x102c4b.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x578cdd);
  this.speciesType = _0x578cdd.readUInt16();
  this.speciesSubType = _0x578cdd.readUInt16();
};
function a0_0x102c4b() {
  a0_0x102c4b.superClass.call(this, a0_0x34f5de);
}
window.HalloweenFood = a0_0x102c4b;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x102c4b, a0_0x34f5de);
var a0_0xaa8ddc = a0_0xaa8ddc;
var a0_0x28626c = a0_0x2449e7;
a0_0xaa8ddc.prototype = Object.create(a0_0x28626c.prototype);
a0_0xaa8ddc.prototype.constructor = a0_0xaa8ddc;
a0_0xaa8ddc.superClass = a0_0x28626c;
a0_0xaa8ddc.prototype.animalInfo = function () {
  var _0x39e817 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x39e817.aniName = "Swinehoe";
      break;
    case 1:
      _0x39e817.aniName = "Golden Pheasant";
      break;
  }
  _0x39e817.aniCol = "#FF9000";
  _0x39e817.skinName = this.getSkinName();
  _0x39e817.upgradeText = "UPGRADED to " + _0x39e817.aniName + "!\nHold W to charge. ";
  return _0x39e817;
};
a0_0xaa8ddc.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/pheasant" + (this.specType == 0 ? "" : this.specType);
};
a0_0xaa8ddc.prototype.getSpeciesPath = function () {
  return "forest/pheasant/" + this.animalSpecies;
};
a0_0xaa8ddc.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0xaa8ddc.prototype.getWing = function (_0x1d8ed9, _0xbc0afc, _0x365dbd) {
  var _0xee67f1 = "skins/" + this.getSpeciesPath() + "/";
  _0xee67f1 += _0x1d8ed9 + "_wing" + _0xbc0afc + ".png";
  return _0xee67f1;
};
a0_0xaa8ddc.prototype.getHead = function (_0x526b05, _0x5b53bc) {
  var _0x4c6434 = "skins/" + this.getSpeciesPath() + "/";
  _0x4c6434 += _0x526b05 + "_head.png";
  return _0x4c6434;
};
a0_0xaa8ddc.prototype.theFrame = 0;
a0_0xaa8ddc.prototype.drawUnderSkinImg = function () {
  this.setSkinScale();
  var _0x3ed4ec = -0.7;
  var _0x2db222 = 0.9;
  var _0x15108c = "skins/" + this.getSpeciesPath() + "/tail.png";
  var _0x275104 = this.getSkinImageObj(_0x15108c);
  if (_0x275104) {
    if (this.flag_usingAbility) {
      _0x2db222 = 1.1;
    }
    var _0x56923e = this.skinScale;
    var _0x328e75 = this.rad - this.outlineW;
    a0_0x1306ae.drawImage(_0x275104, -_0x328e75 * _0x56923e * _0x2db222, (-_0x328e75 + _0x328e75 * _0x3ed4ec) * _0x56923e * _0x2db222, _0x328e75 * 2 * _0x56923e * _0x2db222, _0x328e75 * 2 * _0x56923e * _0x2db222);
  }
};
a0_0xaa8ddc.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    if (this.flag_flying) {
      var _0x1c067a = "skins";
      {
        var _0x462718 = 500 / 340;
        if (this.flag_flying && !this.flag_isGrabbed) {
          a0_0x1306ae.save();
          var _0x177c72 = a0_0xae444c("bird", this.spawnTime);
          if (_0x177c72 !== undefined && _0x177c72 != null) {
            this.theFrame = _0x177c72;
          }
          var _0x35299f = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
          var _0x44b72f = this.getSkinImageObj(this.getWing("pheasant", 1, true));
          if (_0x44b72f) {
            a0_0x1306ae.save();
            var _0x224f0f = -(-0.2 + _0x35299f) * a0_0x5c63e1;
            var _0x453fb6 = this.rad * 0.8;
            a0_0x1306ae.rotate(a0_0x4973e3 + _0x224f0f);
            var _0x5b5029 = 0;
            var _0x582bf3 = this.rad;
            var _0x1cf1eb = _0x453fb6 * 2 * 0.62;
            var _0x2dedbe = _0x453fb6 * 2.5;
            var _0x590dd2 = 0.2;
            var _0x4f2c49 = 1.7;
            a0_0x1306ae.drawImage(_0x44b72f, _0x5b5029 + _0x1cf1eb * -_0x590dd2, _0x582bf3 + _0x2dedbe * -_0x4f2c49, _0x1cf1eb, _0x2dedbe);
            a0_0x1306ae.restore();
          }
          var _0x44b72f = this.getSkinImageObj(this.getWing("pheasant", 2, true));
          if (_0x44b72f) {
            a0_0x1306ae.save();
            var _0x224f0f = -(-0.2 + _0x35299f) * a0_0x873ec7(-90);
            var _0x453fb6 = this.rad * 0.8;
            a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x224f0f);
            var _0x5b5029 = 0;
            var _0x582bf3 = this.rad;
            var _0x1cf1eb = _0x453fb6 * 2 * 0.62;
            var _0x2dedbe = _0x453fb6 * 2.5;
            var _0x590dd2 = 0.8;
            var _0x4f2c49 = 1.7;
            a0_0x1306ae.drawImage(_0x44b72f, _0x5b5029 + _0x1cf1eb * -_0x590dd2, _0x582bf3 + _0x2dedbe * -_0x4f2c49, _0x1cf1eb, _0x2dedbe);
            a0_0x1306ae.restore();
          }
          a0_0x1306ae.restore();
        }
        if (this.specType != 0 && this.specType != undefined) {
          var _0x44f52c = this.getSkinImageObj(this.getHead("pheasant", true));
          if (_0x44f52c) {
            a0_0x1306ae.save();
            var _0x453fb6 = this.rad;
            var _0x5e25e3 = 0.2;
            a0_0x1306ae.drawImage(_0x44f52c, -_0x453fb6 * _0x462718, (-_0x453fb6 + _0x453fb6 * _0x5e25e3) * _0x462718, _0x453fb6 * 2 * _0x462718, _0x453fb6 * 2 * _0x462718);
            a0_0x1306ae.restore();
          }
        }
      }
    } else {
      var _0x462718 = 500 / 340;
      if (this.flag_usingAbility) {
        a0_0x1306ae.save();
        var _0x35299f = 0;
        var _0x44b72f = this.getSkinImageObj(this.getWing("pheasant", 1, true));
        if (_0x44b72f) {
          a0_0x1306ae.save();
          var _0x224f0f = -(-0.2 + _0x35299f) * a0_0x873ec7(15);
          var _0x453fb6 = this.rad * 0.8;
          a0_0x1306ae.rotate(a0_0x873ec7(15) + _0x224f0f);
          var _0x5b5029 = 0;
          var _0x582bf3 = this.rad;
          var _0x1cf1eb = _0x453fb6 * 2 * 0.7;
          var _0x2dedbe = _0x453fb6 * 2.2;
          var _0x590dd2 = 0;
          var _0x4f2c49 = 1.5;
          a0_0x1306ae.drawImage(_0x44b72f, _0x5b5029 + _0x1cf1eb * -_0x590dd2, _0x582bf3 + _0x2dedbe * -_0x4f2c49, _0x1cf1eb, _0x2dedbe);
          a0_0x1306ae.restore();
        }
        var _0x44b72f = this.getSkinImageObj(this.getWing("pheasant", 2, true));
        if (_0x44b72f) {
          a0_0x1306ae.save();
          var _0x224f0f = -(-0.2 + _0x35299f) * a0_0x873ec7(-15);
          var _0x453fb6 = this.rad * 0.8;
          a0_0x1306ae.rotate(a0_0x873ec7(-15) + _0x224f0f);
          var _0x5b5029 = 0;
          var _0x582bf3 = this.rad;
          var _0x1cf1eb = _0x453fb6 * 2 * 0.7;
          var _0x2dedbe = _0x453fb6 * 2.2;
          var _0x590dd2 = 1;
          var _0x4f2c49 = 1.5;
          a0_0x1306ae.drawImage(_0x44b72f, _0x5b5029 + _0x1cf1eb * -_0x590dd2, _0x582bf3 + _0x2dedbe * -_0x4f2c49, _0x1cf1eb, _0x2dedbe);
          a0_0x1306ae.restore();
        }
        var _0x44f52c = this.getSkinImageObj(this.getHead("pheasant", true));
        if (_0x44f52c) {
          a0_0x1306ae.save();
          var _0x453fb6 = this.rad * 1;
          var _0x30341a = -this.rad * 0.1;
          a0_0x1306ae.drawImage(_0x44f52c, -_0x453fb6 * _0x462718, -_0x453fb6 + _0x30341a * _0x462718, _0x453fb6 * 2 * _0x462718, _0x453fb6 * 2 * _0x462718);
          a0_0x1306ae.restore();
        }
        a0_0x1306ae.restore();
      }
    }
  }
};
function a0_0xaa8ddc() {
  a0_0xaa8ddc.superClass.call(this, a0_0x24738f);
}
window.Pheasant = a0_0xaa8ddc;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xaa8ddc, a0_0x24738f, a0_0x34f3ec);
var a0_0x28626c = a0_0x2449e7;
a0_0x3ef7cd.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3ef7cd.prototype.constructor = a0_0x3ef7cd;
a0_0x3ef7cd.superClass = a0_0x28626c;
a0_0x3ef7cd.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/flyinglizard" + (this.flag_usingAbility ? "_body" : "");
};
a0_0x3ef7cd.prototype.getSpeciesPath = function () {
  return "forest/flyinglizard/" + this.animalSpecies;
};
a0_0x3ef7cd.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3ef7cd.prototype.animalInfo = function () {
  var _0x3601bb = {};
  switch (this.animalSpecies) {
    case 0:
      _0x3601bb.aniName = "Flying Lizard!";
      break;
  }
  _0x3601bb.skinName = this.getSkinName();
  _0x3601bb.aniDesc = "";
  _0x3601bb.upgradeText = "UPGRADED to " + _0x3601bb.aniName + "!\nClimb on a high spot to be able to glide from it!";
  _0x3601bb.aniCol = "#FF9D43";
  return _0x3601bb;
};
a0_0x3ef7cd.prototype.getAsset = function (_0x1d3f78) {
  var _0x1e55d4 = "skins/" + this.getSpeciesPath() + "/flyinglizard";
  _0x1e55d4 += "_" + _0x1d3f78 + ".png";
  return _0x1e55d4;
};
a0_0x3ef7cd.prototype.backOffset = -0.4;
a0_0x3ef7cd.prototype.armsOffset = 0.16;
a0_0x3ef7cd.prototype.headOffset = 0.3;
a0_0x3ef7cd.prototype.wingsOffset = -0.5;
a0_0x3ef7cd.prototype.wingsScale = 1.5;
a0_0x3ef7cd.prototype.backScale = 1.1;
a0_0x3ef7cd.prototype.drawSkinCustomization = function () {
  if (this.flag_usingAbility) {
    var _0x2f4acc = 500 / 340;
    this.drawAsset(_0x2f4acc, "arms", this.armsOffset);
    this.drawAsset(_0x2f4acc, "wings", this.wingsOffset, _0x2f4acc * this.wingsScale);
    this.drawAsset(_0x2f4acc, "back", this.backOffset, _0x2f4acc * this.backScale);
    this.drawAsset(_0x2f4acc, "head", this.headOffset);
  }
};
a0_0x3ef7cd.prototype.drawAsset = function (_0x1cc7b6, _0x84616d, _0x18571d, _0x59e16c) {
  var _0x27cbd0 = this.getSkinImageObj(this.getAsset(_0x84616d));
  if (_0x27cbd0) {
    if (_0x18571d === undefined) {
      _0x18571d = 0;
    }
    if (_0x59e16c === undefined) {
      _0x59e16c = _0x1cc7b6;
    }
    a0_0x1306ae.save();
    var _0x28cde4 = this.rad;
    a0_0x1306ae.drawImage(_0x27cbd0, -_0x28cde4 * _0x1cc7b6, (-_0x28cde4 + _0x28cde4 * _0x18571d) * _0x1cc7b6, _0x28cde4 * 2 * _0x1cc7b6, _0x28cde4 * 2 * _0x59e16c);
    a0_0x1306ae.restore();
  }
};
function a0_0x3ef7cd() {
  a0_0x3ef7cd.superClass.call(this, a0_0x24738f);
}
const a0_0x2a89d6 = 121;
window.FlyingLizard = a0_0x3ef7cd;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3ef7cd, a0_0x24738f, a0_0x2a89d6);
var a0_0x28626c = a0_0x2449e7;
a0_0x2b96ac.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b96ac.prototype.constructor = a0_0x2b96ac;
a0_0x2b96ac.superClass = a0_0x28626c;
a0_0x2b96ac.prototype.getSpeciesPath = function (_0x21fd7d) {
  return "forest/" + _0x21fd7d + "/" + this.animalSpecies;
};
a0_0x2b96ac.prototype.animalInfo = function () {
  var _0x10f1e4 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x10f1e4.aniName = "Tarsier!";
      break;
  }
  _0x10f1e4.skinName = this.getSkinName();
  _0x10f1e4.aniDesc = "";
  _0x10f1e4.upgradeText = "UPGRADED to " + _0x10f1e4.aniName + "!";
  _0x10f1e4.aniCol = "#FF9D43";
  return _0x10f1e4;
};
a0_0x2b96ac.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/tarsier";
};
a0_0x2b96ac.prototype.getSpeciesPath = function () {
  return "forest/tarsier/" + this.animalSpecies;
};
a0_0x2b96ac.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
function a0_0x2b96ac() {
  a0_0x2b96ac.superClass.call(this, a0_0x24738f);
}
const a0_0x2b58e8 = 113;
window.Tarsier = a0_0x2b96ac;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2b96ac, a0_0x24738f, a0_0x2b58e8);
var a0_0x28626c = a0_0x2449e7;
a0_0x3c42e1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3c42e1.prototype.constructor = a0_0x3c42e1;
a0_0x3c42e1.superClass = a0_0x28626c;
a0_0x3c42e1.prototype.getSpeciesPath = function (_0x35f3d0) {
  return "forest/" + _0x35f3d0 + "/" + this.animalSpecies;
};
a0_0x3c42e1.prototype.animalInfo = function () {
  var _0x1cb105 = {};
  switch (this.animalSpecies) {
    case 0:
      _0x1cb105.aniName = "Chukar!";
      break;
  }
  _0x1cb105.skinName = this.getSkinName();
  _0x1cb105.aniDesc = "";
  _0x1cb105.upgradeText = "UPGRADED to " + _0x1cb105.aniName + "!\n Hold W to fly around.";
  _0x1cb105.aniCol = "#FF9D43";
  return _0x1cb105;
};
a0_0x3c42e1.prototype.getSkinName = function () {
  return this.getSpeciesPath() + this.getSubSpecies() + "/chukar" + (this.specType == 0 ? "" : this.specType);
};
a0_0x3c42e1.prototype.getSpeciesPath = function () {
  return "forest/chukar/" + this.animalSpecies;
};
a0_0x3c42e1.prototype.getSubSpecies = function () {
  if (this.mopeSeasonID == 2) {
    if (this.animalSpecies === 0 && this.animalSubSpecies > 0) {
      return "/" + this.animalSubSpecies;
    }
  }
  return "";
};
a0_0x3c42e1.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    return;
  }
  {
    var _0x778da5 = 500 / 340;
    if (this.flag_flying && !this.flag_isGrabbed) {
      a0_0x1306ae.save();
      var _0x58e74a = a0_0xae444c("bird", this.spawnTime);
      if (_0x58e74a !== undefined && _0x58e74a != null) {
        this.theFrame = _0x58e74a;
      }
      var _0x3fd359 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
      var _0x2a2d3f = this.getSkinImageObj(this.getAsset("wing1"));
      if (_0x2a2d3f) {
        a0_0x1306ae.save();
        var _0x13d2f6 = -(-0.2 + _0x3fd359) * a0_0x5c63e1;
        var _0x55f228 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x4973e3 + _0x13d2f6);
        var _0x3357df = 0;
        var _0x3f6d72 = this.rad;
        var _0x134b3c = _0x55f228 * 2 * 0.62;
        var _0x4cba8e = _0x55f228 * 2.5;
        var _0x53587d = 0.2;
        var _0x258b74 = 1.7;
        a0_0x1306ae.drawImage(_0x2a2d3f, _0x3357df + _0x134b3c * -_0x53587d, _0x3f6d72 + _0x4cba8e * -_0x258b74, _0x134b3c, _0x4cba8e);
        a0_0x1306ae.restore();
      }
      var _0x2a2d3f = this.getSkinImageObj(this.getAsset("wing2"));
      if (_0x2a2d3f) {
        a0_0x1306ae.save();
        var _0x13d2f6 = -(-0.2 + _0x3fd359) * a0_0x873ec7(-90);
        var _0x55f228 = this.rad * 0.8;
        a0_0x1306ae.rotate(a0_0x873ec7(-45) + _0x13d2f6);
        var _0x3357df = 0;
        var _0x3f6d72 = this.rad;
        var _0x134b3c = _0x55f228 * 2 * 0.62;
        var _0x4cba8e = _0x55f228 * 2.5;
        var _0x53587d = 0.8;
        var _0x258b74 = 1.7;
        a0_0x1306ae.drawImage(_0x2a2d3f, _0x3357df + _0x134b3c * -_0x53587d, _0x3f6d72 + _0x4cba8e * -_0x258b74, _0x134b3c, _0x4cba8e);
        a0_0x1306ae.restore();
      }
      a0_0x1306ae.restore();
    }
    if (this.specType != 0 && this.specType != undefined) {
      var _0x4b4b8f = this.getSkinImageObj(this.getAsset("head"));
      if (_0x4b4b8f) {
        a0_0x1306ae.save();
        var _0x55f228 = this.rad;
        a0_0x1306ae.drawImage(_0x4b4b8f, -_0x55f228 * _0x778da5, (-_0x55f228 + _0x55f228 * 0.1) * _0x778da5, _0x55f228 * 2 * _0x778da5, _0x55f228 * 2 * _0x778da5);
        a0_0x1306ae.restore();
      }
    }
  }
};
a0_0x3c42e1.prototype.getAsset = function (_0x9d6c59) {
  var _0x35124d = "skins/" + this.getSpeciesPath() + "/chukar";
  _0x35124d += "_" + _0x9d6c59 + ".png";
  return _0x35124d;
};
function a0_0x3c42e1() {
  a0_0x3c42e1.superClass.call(this, a0_0x24738f);
}
const a0_0x147c8e = 114;
window.Chukar = a0_0x3c42e1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3c42e1, a0_0x24738f, a0_0x147c8e);
var a0_0x28626c = a0_0x42171b;
a0_0x22abbf.prototype = Object.create(a0_0x28626c.prototype);
a0_0x22abbf.prototype.constructor = a0_0x22abbf;
a0_0x22abbf.superClass = a0_0x28626c;
a0_0x22abbf.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0x22abbf.prototype.customDraw = function (_0x3fd1d6) {
  var _0x1b20f5 = this.getSkinImageObj("gameobj/" + this.oType + "/" + this.oType + "_" + this.speciesType + (this.isEdibleOutlined() ? "_e" : "") + ".png");
  if (_0x1b20f5) {
    var _0x5a4a6a = this.rad;
    a0_0x1306ae.drawImage(_0x1b20f5, -_0x5a4a6a, -_0x5a4a6a, _0x5a4a6a * 2, _0x5a4a6a * 2);
  }
};
var a0_0x30f989 = 159;
a0_0x22abbf.prototype.readCustomData_onNewlyVisible = function (_0x51466d) {
  a0_0x22abbf.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x51466d);
  this.speciesType = _0x51466d.readUInt16();
  this.speciesSubType = _0x51466d.readUInt16();
};
function a0_0x22abbf() {
  a0_0x22abbf.superClass.call(this, a0_0x30f989);
}
window.ThanksgivingFood = a0_0x22abbf;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x22abbf, a0_0x30f989);
var a0_0x28626c = a0_0x42171b;
a0_0x1b1849.prototype = Object.create(a0_0x28626c.prototype);
a0_0x1b1849.prototype.constructor = a0_0x1b1849;
a0_0x1b1849.prototype.rAngle = 0;
a0_0x1b1849.prototype.rAngleF = 0.005;
a0_0x1b1849.prototype.rAngleDirection = 1;
a0_0x1b1849.superClass = a0_0x28626c;
a0_0x1b1849.prototype.updateZ = function () {
  if (this.isSnowFlake) {
    this.z = 11000;
  } else if (this.isStickingOnObject) {
    this.z = 1 + this.stickingOnObjectZIndex;
  } else {
    this.z = this.rad;
  }
};
a0_0x1b1849.prototype.customDraw = function (_0x52a3a5) {
  if (this.isSnowFlake) {
    a0_0x1306ae.globalAlpha = 0.9;
    a0_0x1306ae.globalAlpha = 1;
    var _0x541523 = "gameobj/" + this.oType + "/snow-flake.png";
    var _0x2cb5df = this.getSkinImageObj(_0x541523);
    if (_0x2cb5df) {
      a0_0x1306ae.save();
      var _0xc80820 = this.rad * 1;
      this.rAngle += this.rAngleF * this.rAngleDirection;
      a0_0x1306ae.rotate(this.rAngle);
      a0_0x1306ae.drawImage(_0x2cb5df, -_0xc80820, -_0xc80820, _0xc80820 * 2, _0xc80820 * 2);
      a0_0x1306ae.restore();
    }
  } else {
    a0_0x1306ae.globalAlpha = 1;
    var _0x541523 = "gameobj/" + this.oType + "/" + this.oType + ".png";
    var _0x2cb5df = this.getSkinImageObj(_0x541523);
    if (_0x2cb5df) {
      a0_0x1306ae.save();
      var _0xc80820 = this.rad * 1;
      a0_0x1306ae.rotate(this.rPer * 2 * Math.PI);
      a0_0x1306ae.drawImage(_0x2cb5df, -_0xc80820, -_0xc80820, _0xc80820 * 2, _0xc80820 * 2);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x1b1849.prototype.isSnowFlake = true;
a0_0x1b1849.prototype.isStickingOnObject = false;
a0_0x1b1849.prototype.stickingOnObjectZIndex = 0;
a0_0x1b1849.prototype.readUpdatedProperty = function (_0x442cdf, _0x3ba14c) {
  a0_0x1b1849.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3ba14c);
  if (_0x442cdf == a0_0x3b8a69) {
    this.isSnowFlake = _0x3ba14c.readUInt8() == 1;
  } else if (_0x442cdf == a0_0x22cf14) {
    this.isStickingOnObject = _0x3ba14c.readUInt8() == 1;
  } else if (_0x442cdf == a0_0x3030a0) {
    let _0x4ea4c0 = _0x3ba14c.readUInt32();
    let _0x3d736c = a0_0x283a01[_0x4ea4c0];
    if (_0x3d736c) {
      this.stickingOnObjectZIndex = _0x3d736c.z;
    }
  }
};
a0_0x1b1849.prototype.readCustomData_onNewlyVisible = function (_0x4ddcaa) {
  this.readUpdatedProperty(a0_0x3b8a69, _0x4ddcaa);
  this.readUpdatedProperty(a0_0x22cf14, _0x4ddcaa);
  this.readUpdatedProperty(a0_0x3030a0, _0x4ddcaa);
};
function a0_0x1b1849() {
  a0_0x1b1849.superClass.call(this, a0_0x5c347e);
  this.rAngleDirection = a0_0x39b824(0, 1) == 0 ? 1 : -1;
}
window.Snow = a0_0x1b1849;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1b1849, a0_0x5c347e);
var a0_0x28626c = a0_0x42171b;
a0_0xedb519.prototype = Object.create(a0_0x28626c.prototype);
a0_0xedb519.prototype.constructor = a0_0xedb519;
a0_0xedb519.superClass = a0_0x28626c;
a0_0xedb519.prototype.foodType = 0;
a0_0xedb519.prototype.updateZ = function () {
  this.z = this.rad;
};
a0_0xedb519.prototype.customDraw = function (_0x183d59) {
  a0_0x1306ae.save();
  var _0x5be8af = "gameobj/" + this.oType + "/" + this.oType + "_" + this.foodType + "" + (this.isEdibleOutlined() ? "_e" : "") + ".png";
  var _0x23fa4b = this.getSkinImageObj(_0x5be8af);
  if (_0x23fa4b) {
    var _0x18a49a = this.rad;
    a0_0x1306ae.save();
    a0_0x1306ae.rotate(this.rPer * 0.5 * Math.PI * 2);
    a0_0x1306ae.drawImage(_0x23fa4b, -_0x18a49a, -_0x18a49a, _0x18a49a * 2, _0x18a49a * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0xedb519.prototype.readCustomData_onNewlyVisible = function (_0x250a68) {
  this.foodType = _0x250a68.readUInt8();
};
var a0_0x33574f = 160;
function a0_0xedb519() {
  a0_0xedb519.superClass.call(this, a0_0x33574f);
  this.doesDrawEffectScale = true;
}
window.ValentineFood = a0_0xedb519;
a0_0x5d394a.setCustomClassForGameObjType(a0_0xedb519, a0_0x33574f);
var a0_0x28626c = a0_0x42171b;
a0_0x46c6f1.prototype = Object.create(a0_0x28626c.prototype);
a0_0x46c6f1.prototype.constructor = a0_0x46c6f1;
a0_0x46c6f1.superClass = a0_0x28626c;
a0_0x46c6f1.prototype.updateZ = function () {
  this.z = 1000000;
};
a0_0x46c6f1.prototype.customDraw = function (_0x57184d) {
  console.log("sand storm created...");
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 0.4;
  a0_0x50fd5c(0, 0, this.rad, "#000");
  a0_0x1306ae.restore();
};
a0_0x46c6f1.prototype.readCustomData_onNewlyVisible = function (_0x102ed7) {
  this.alpha = _0x102ed7.readUInt8() / 100;
};
a0_0x46c6f1.prototype.readUpdatedProperty = function (_0x9e85d8, _0x5cb7ee) {
  if (_0x9e85d8 == a0_0x32aa89) {
    this.alpha = _0x5cb7ee.readUInt8() / 100;
  }
};
const a0_0x30c899 = 161;
function a0_0x46c6f1() {
  a0_0x46c6f1.superClass.call(this, a0_0x30c899);
  this.alpha = 9;
}
window.SandStorm = a0_0x46c6f1;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x46c6f1, a0_0x30c899);
var a0_0x2b9582 = a0_0x4d2883;
var a0_0x28626c = a0_0x42171b;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x4d2883.prototype.customDraw = function (_0x12e003) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = 1;
  a0_0x50fd5c(0, 0, this.rad, this.color);
  a0_0x1306ae.restore();
};
a0_0x4d2883.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
const a0_0x94479b = 162;
function a0_0x4d2883() {
  a0_0x4d2883.superClass.call(this);
  this.color = a0_0x39b824(0, 1) == 1 ? "#D2B48C" : "#F0E68C";
  this.spawnTime = a0_0x24806e;
}
window.SandShard = a0_0x4d2883;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x4d2883, a0_0x94479b);
var a0_0x3370dc = a0_0x3370dc;
var a0_0x28626c = a0_0x2449e7;
a0_0x3370dc.prototype = Object.create(a0_0x28626c.prototype);
a0_0x3370dc.prototype.constructor = a0_0x3370dc;
a0_0x3370dc.superClass = a0_0x28626c;
a0_0x3370dc.prototype.getSkinName = function () {
  var _0x1555d9 = this.getSpeciesPath("land/birdmonster") + "/birdmonster";
  _0x1555d9 += this.specType == 0 ? "" : this.specType;
  return _0x1555d9;
};
a0_0x3370dc.prototype.animalInfo = function () {
  var _0x14617d = {};
  var _0x31491a = "";
  switch (this.animalSpecies) {
    case 0:
      _0x14617d.aniName = "Bird Monster";
      break;
  }
  _0x14617d.upgradeText = "UPGRADED to " + _0x14617d.aniName + "! \nPress W to Fly, and do a powerful Electro Swoop attack! Aim it well.\nPress S to create Gale charge and Electro Tornado" + _0x31491a;
  _0x14617d.aniCol = "#FF9000";
  var _0x50f795 = "" + (this.specType == 0 ? "" : this.specType);
  if (this.specType2 == 4) {
    _0x50f795 += "4";
  }
  _0x14617d.skinName = "land/birdmonster/" + this.animalSpecies + "/birdmonster" + _0x50f795;
  return _0x14617d;
};
a0_0x3370dc.prototype.getWing = function (_0x25b3c2, _0x574031, _0x3f14e6) {
  _0x3f14e6 = true;
  var _0x9ccd9e = "skins/land/" + (_0x3f14e6 ? this.getSpeciesPath(_0x25b3c2) + "/" : _0x25b3c2 + "/");
  _0x9ccd9e += _0x25b3c2 + "_wing" + _0x574031 + ".png";
  return _0x9ccd9e;
};
a0_0x3370dc.prototype.getHead = function (_0x41606b, _0x40a3e7, _0xffd28b) {
  _0xffd28b = true;
  headType = this.specType;
  if (this.specType2 == 1) {
    headType = 4;
  }
  var _0x434b1b = "skins/land/" + (_0xffd28b ? this.getSpeciesPath(_0x41606b) + "/" : _0x41606b + "/");
  _0x434b1b += _0x41606b + "_head" + headType + ".png";
  return _0x434b1b;
};
a0_0x3370dc.prototype.getWindImage = function (_0x133580) {
  hasSpecies = true;
  var _0x52bb1a = "skins/land/" + (hasSpecies ? this.getSpeciesPath("birdmonster") + "/" : "birdmonster/");
  _0x52bb1a += "tailwind/" + _0x133580 + ".png";
  return _0x52bb1a;
};
a0_0x3370dc.prototype.getElectroChargeImage = function (_0x481f94) {
  hasSpecies = true;
  var _0x347c17 = "skins/land/" + (hasSpecies ? this.getSpeciesPath("birdmonster") + "/" : "birdmonster/");
  _0x347c17 += "charge/" + _0x481f94 + ".png";
  return _0x347c17;
};
a0_0x3370dc.prototype.getAbilityInfo = function (_0xa1234) {
  var _0x58dacc = {
    abilName: "Electro Swoop & Gale Charge",
    abilImg: "skins/land/birdmonster/0/birdmonster_ability.png",
    speciesType: this.animalSpecies,
    skinThemeID: this.skinThemeID,
    mopeSeasonID: this.mopeSeasonID
  };
  return _0x58dacc;
};
var a0_0x518505 = 20;
var a0_0x5df98 = 1;
var a0_0x1e7083 = 1;
var a0_0x4b493b = 0;
var a0_0x6ef845 = undefined;
a0_0x3370dc.prototype.drawTopEffects = function () {
  a0_0x3370dc.superClass.prototype.drawTopEffects.call(this);
  this.drawElectroChargeEffect();
};
a0_0x3370dc.prototype.drawSkinCustomization = function () {
  if (!this.flag_usingAbility) {
    a0_0x6ef845 = undefined;
    return;
  }
  var _0x27c0db = 500 / 340;
  if (!this.flag_flying) {
    var _0x296c11 = a0_0xae444c("bird", this.spawnTime);
    if (_0x296c11 !== undefined && _0x296c11 != null) {
      this.theFrame = _0x296c11;
    }
    var _0x51e679 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x546d4c = this.rad * a0_0x280295;
    a0_0x202004 = -0.2;
    a0_0x28c020 = 1.4;
    a0_0x1e7083 = 0.25;
    var _0x416025 = 270;
    var _0x118012 = 6;
    var _0x5a191b = 0;
    if (a0_0x6ef845 == undefined) {
      a0_0x6ef845 = a0_0x24806e;
    } else {
      let _0x16b5c8 = (a0_0x24806e - a0_0x6ef845) / 1000;
      _0x5a191b = _0x16b5c8 / _0x118012 * _0x416025;
    }
    if (_0x5a191b > _0x416025) {
      _0x5a191b = _0x416025;
    }
    var _0x36206b;
    var _0x50783d;
    var _0x22f333;
    _0x36206b = a0_0x873ec7(_0x5a191b);
    _0x50783d = 0;
    _0x22f333 = true;
    this.drawImageCustom("birdmonster", 13, _0x51e679, _0x546d4c, _0x36206b, _0x50783d, _0x22f333);
    this.drawImageCustom("birdmonster", 23, _0x51e679, _0x546d4c, -_0x36206b, 1, _0x22f333);
  } else if (this.flag_flying && !this.flag_isGrabbed) {
    a0_0x518505 = 20;
    a0_0x5df98 = 1;
    a0_0x1e7083 = 1;
    a0_0x4b493b = 0;
    var _0x296c11 = a0_0xae444c("bird", this.spawnTime);
    if (_0x296c11 !== undefined && _0x296c11 != null) {
      this.theFrame = _0x296c11;
    }
    var _0x51e679 = a0_0x56bbb3 != a0_0xbf9ed5 && !a0_0x59c93b ? this.theFrame : this.birdNoAnimationFlyWingAngle;
    var _0x546d4c = this.rad * a0_0x280295;
    var _0x36206b;
    var _0x50783d;
    var _0x22f333;
    if (this.specType == 1) {
      a0_0x5df98 = 1.1;
      a0_0x1e7083 = 0.25;
      a0_0x4b493b = 180;
      _0x36206b = a0_0x873ec7(60 + a0_0x4b493b);
      _0x50783d = 0;
      _0x22f333 = false;
    } else if (this.specType == 2) {
      _0x51e679 = 0;
      _0x36206b = a0_0x873ec7(25);
      _0x50783d = 0;
      _0x22f333 = false;
    } else if (this.specType == 3) {
      _0x36206b = a0_0x873ec7(45);
      _0x50783d = 0;
      _0x22f333 = true;
    }
    this.drawImageCustom("birdmonster", 1, _0x51e679, _0x546d4c, _0x36206b, _0x50783d, _0x22f333);
    this.drawImageCustom("birdmonster", 2, _0x51e679, _0x546d4c, -_0x36206b, 1, _0x22f333);
  }
  if (this.specType != 0 && this.specType != undefined) {
    var _0x41f83d = this.getSkinImageObj(this.getHead("/birdmonster", true));
    if (_0x41f83d) {
      var _0x4ef9b1 = 0.9;
      a0_0x1306ae.save();
      var _0x546d4c = this.rad * _0x4ef9b1;
      var _0x4db4cd = _0x546d4c * a0_0x202004;
      a0_0x1306ae.drawImage(_0x41f83d, -_0x546d4c * _0x27c0db, (-_0x546d4c + _0x4db4cd) * _0x27c0db, _0x546d4c * 2 * _0x27c0db, _0x546d4c * 2 * _0x27c0db);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x3370dc.prototype.flag_eff_electroCharged = false;
a0_0x3370dc.prototype.drawElectroChargeEffect = function () {
  if (this.flag_eff_electroCharged === true) {
    var _0x51f2b4 = Math.trunc(a0_0x24806e / 250) % 4;
    var _0xcec418 = this.getSkinImageObj(this.getElectroChargeImage(_0x51f2b4));
    if (_0xcec418) {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = a0_0x15e4d1 == this.id ? 0.7 : 1;
      var _0x294d9c = this.rad * 1.2;
      a0_0x1306ae.rotate(this.angle);
      a0_0x1306ae.drawImage(_0xcec418, -_0x294d9c, -_0x294d9c, _0x294d9c * 2, _0x294d9c * 2);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x3370dc.prototype.drawImageCustom = function (_0x484f09, _0x84892e, _0x2f0025, _0x5e0586, _0x40fa19, _0xfb380c, _0x24efa) {
  var _0x48e5ff = this.getSkinImageObj(this.getWing(_0x484f09, _0x84892e, _0x24efa));
  if (_0x48e5ff) {
    a0_0x1306ae.save();
    _0x40fa19 = -(-0.2 + _0x2f0025 * a0_0x1e7083) * _0x40fa19;
    a0_0x1306ae.rotate(_0x40fa19 * a0_0x5df98);
    var _0x2cdd87 = 0;
    var _0x5eb9ff = this.rad;
    var _0x5741a8 = _0x5e0586 * 2 * a0_0x280295;
    var _0xeb8faa = _0x5e0586 * 2.5;
    var _0x7729a7 = a0_0x28c020;
    a0_0x1306ae.drawImage(_0x48e5ff, _0x2cdd87 + _0x5741a8 * -_0xfb380c, _0x5eb9ff + _0xeb8faa * -_0x7729a7, _0x5741a8, _0xeb8faa);
    a0_0x1306ae.restore();
  }
};
var a0_0x28c020 = 1.5;
var a0_0x280295 = 0.8;
var a0_0x59753d = 1;
var a0_0x4cd71a = 1.6;
a0_0x3370dc.prototype.basicDrawSkinImg = function () {
  this.setSkinScale();
  var _0x17a01b = this.skinScale;
  var _0x57fb71 = this.getAniRadius(this.skinRad);
  var _0x4d0376 = 0.5;
  var _0xdb257a = 0.8;
  var _0xf54e49 = 1.2;
  if (this.loadedSkinImg) {
    a0_0x1306ae.drawImage(this.loadedSkinImg, -_0x57fb71 - _0x57fb71 * _0x4d0376, -_0x57fb71 - _0x57fb71 * _0xdb257a, _0x57fb71 * 2 * _0x17a01b, _0x57fb71 * 2 * (_0x17a01b * _0xf54e49));
  }
};
a0_0x3370dc.prototype.drawUnderSkinImgOutline = function () {
  a0_0x3370dc.superClass.prototype.drawUnderSkinImgOutline.call(this);
  if (this.flag_usingAbility && this.flag_flying && this.specType == 2) {
    var _0x22acf9 = 0;
    var _0x22ec7c = -2;
    var _0x44c76b = 1;
    var _0x25e4f9 = 2;
    var _0x2cf9b7 = 1 + Math.trunc(a0_0x24806e / 120) % 5;
    var _0x5ec4ac = this.getSkinImageObj(this.getWindImage(_0x2cf9b7));
    if (_0x5ec4ac) {
      a0_0x1306ae.save();
      var _0x521efb = this.rad * _0x44c76b;
      var _0x2bcdc6 = _0x521efb * _0x22ec7c;
      var _0x4f2007 = _0x521efb * _0x22acf9;
      a0_0x1306ae.drawImage(_0x5ec4ac, -_0x521efb + _0x4f2007, -_0x521efb + _0x2bcdc6 * _0x25e4f9, _0x521efb * 2, _0x521efb * 2 * _0x25e4f9);
      a0_0x1306ae.restore();
    }
  }
};
a0_0x3370dc.prototype.customUpdatedProperty = function (_0x1d144d, _0x3aaf90) {
  if (_0x1d144d == a0_0x25b3a3) {
    this.flag_eff_electroCharged = _0x3aaf90.readUInt8() == 1;
  } else if (_0x1d144d == a0_0xd47394) {
    var _0x119429 = this.activeAbility;
    this.activeAbility = _0x3aaf90.readUInt16();
    if (_0x119429 != this.activeAbility) {
      this.onAbilityChanged(_0x119429);
    }
  }
};
var a0_0x202004 = 0.3;
a0_0x3370dc.prototype.activeAbility = 0;
a0_0x3370dc.prototype.onAbilityChanged = function (_0x1147a5) {
  console.log("prev ability: " + _0x1147a5);
  console.log("curr ability: " + this.activeAbility);
  if (this.activeAbility == 0) {
    a0_0x202004 = 0.3;
    a0_0x28c020 = 1.5;
    a0_0x280295 = 0.8;
    a0_0x59753d = 1;
    a0_0x4cd71a = 1.6;
  }
};
a0_0x3370dc.prototype.readCustomData_onNewlyVisible = function (_0x46c16f) {
  a0_0x3370dc.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x46c16f);
  this.customUpdatedProperty(a0_0x25b3a3, _0x46c16f);
};
function a0_0x3370dc() {
  a0_0x3370dc.superClass.call(this, a0_0x24738f);
}
window.BirdMonster = a0_0x3370dc;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x3370dc, a0_0x24738f, a_birdMonster);
var a0_0x2b9582 = a0_0x1c28e2;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x1c28e2.prototype.customDraw = function (_0x153d2f) {
  a0_0x1306ae.save();
  var _0x26bbf2 = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = _0x26bbf2 * 0.05;
  a0_0x50fd5c(0, 0, this.rad, "#E4E7C8");
  var _0x110bc0 = "crater" + this.curBiome;
  console.log("birdmonster crater: " + _0x110bc0);
  a0_0x1306ae.globalAlpha = _0x26bbf2 * 1;
  var _0x75b155 = "skins/land/birdmonster/" + this.speciesType + "/" + _0x110bc0 + ".png";
  var _0x404c3e = this.getSkinImageObj(_0x75b155);
  if (_0x404c3e) {
    a0_0x1306ae.save();
    var _0x3af1ba = this.rad;
    a0_0x1306ae.drawImage(_0x404c3e, -_0x3af1ba, -_0x3af1ba, _0x3af1ba * 2, _0x3af1ba * 2);
    a0_0x1306ae.restore();
  }
  a0_0x1306ae.restore();
};
a0_0x1c28e2.prototype.getSkinImageObj = function (_0x385ac8) {
  var _0x19d38b = this.speciesType === 1 || this.speciesType === 2 || this.speciesType === 201 ? 1 : 2;
  var _0x16c136 = "./assets/s/" + _0x19d38b + "/" + _0x385ac8;
  if (this.skinThemeID > 0) {
    _0x16c136 = "./assets/t/" + this.skinThemeID + "/" + _0x385ac8;
  }
  return a0_0x19ebc9(_0x16c136, function (_0x45c66c) {
    console.log(_0x45c66c.src);
  });
};
a0_0x1c28e2.prototype.readCustomData_onNewlyVisible = function (_0x3a459e) {
  a0_0x1c28e2.superClass.prototype.readCustomData_onNewlyVisible.call(this, _0x3a459e);
};
a0_0x1c28e2.prototype.readCustomData_onUpdate = function (_0x3f05ff) {
  a0_0x1c28e2.superClass.prototype.readCustomData_onUpdate.call(this, _0x3f05ff);
};
function a0_0x1c28e2() {
  a0_0x1c28e2.superClass.call(this);
}
window.BirdMonsterCrater = a0_0x1c28e2;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x1c28e2, a0_0x382193, a0_0x4087d2);
var a0_0x28626c = a0_0x42171b;
a0_0x2ae73a.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2ae73a.prototype.constructor = a0_0x2ae73a;
a0_0x2ae73a.superClass = a0_0x28626c;
a0_0x2ae73a.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
a0_0x2ae73a.prototype.customDraw = function (_0x27e5ca) {
  var _0x304af0 = "skins/land/birdmonster/" + this.speciesType + "/tornado.png";
  var _0x3b1d71 = this.getSkinImageObj(_0x304af0);
  if (_0x3b1d71) {
    var _0x5c94a6 = this.rad * 1.1;
    if (!a0_0x59c93b && a0_0x56bbb3 != a0_0xbf9ed5) {
      var _0x45a6f1 = 1;
      var _0x42c594 = 1000 / _0x45a6f1;
      var _0x489827 = (a0_0x24806e - this.spawnTime) % _0x42c594 / _0x42c594;
      var _0x1cf457 = _0x489827 * 2 * Math.PI;
      var _0x45a6f1 = 30 / 60;
      var _0x42c594 = 1000 / _0x45a6f1;
      var _0x489827 = (a0_0x24806e - this.spawnTime) % _0x42c594 / _0x42c594;
      var _0x2280e9 = _0x489827 * 2 * Math.PI;
      a0_0x1306ae.save();
      a0_0x1306ae.rotate(_0x1cf457);
      var _0x3c1102 = a0_0x1306ae.globalAlpha;
      a0_0x1306ae.globalAlpha = _0x3c1102 * 1;
      var _0x4a2e85 = (a0_0x24806e - this.spawnTime) / 1000;
      var _0x38a010 = 2.2;
      var _0x49e6ee = Math.cos(Math.PI * 2 / _0x38a010 * _0x4a2e85) * 6.5;
      var _0x48d296 = Math.sin(Math.PI * 2 / _0x38a010 * _0x4a2e85) * 6.5;
      a0_0x1306ae.globalAlpha = 0.3;
      a0_0x1306ae.drawImage(_0x3b1d71, -_0x5c94a6 - _0x49e6ee / 2.2, -_0x5c94a6, _0x5c94a6 * 2, _0x5c94a6 * 2);
      a0_0x1306ae.restore();
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.7;
      a0_0x1306ae.rotate(_0x2280e9);
      a0_0x1306ae.drawImage(_0x3b1d71, -_0x5c94a6 - _0x49e6ee / 2.2, -_0x5c94a6, _0x5c94a6 * 2, _0x5c94a6 * 2);
      a0_0x1306ae.restore();
    } else {
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = 0.7;
      a0_0x1306ae.drawImage(_0x3b1d71, -_0x5c94a6, -_0x5c94a6, _0x5c94a6 * 2, _0x5c94a6 * 2);
      a0_0x1306ae.restore();
    }
  }
};
const a0_0x2b05b5 = 163;
function a0_0x2ae73a() {
  a0_0x2ae73a.superClass.call(this, a0_0x2b05b5);
  this.doesDrawEffectScale = false;
  this.drawEffectScale_Slow = true;
}
window.ElectroTornado = a0_0x2ae73a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2ae73a, a0_0x2b05b5);
var a0_0x28626c = a0_0x42171b;
a0_0x553e1f.prototype = Object.create(a0_0x28626c.prototype);
a0_0x553e1f.prototype.constructor = a0_0x553e1f;
a0_0x553e1f.superClass = a0_0x28626c;
a0_0x553e1f.prototype.updateZ = function () {
  this.z = 10000 + this.rad;
};
a0_0x553e1f.prototype.customDraw = function (_0x36264f) {
  var _0x205d06 = "skins/land/birdmonster/" + this.speciesType + "/electric-charge.png";
  var _0x4747af = this.getSkinImageObj(_0x205d06);
  if (_0x4747af) {
    a0_0x1306ae.save();
    var _0x5009bd = this.rad * 1;
    a0_0x1306ae.rotate(this.angle);
    a0_0x1306ae.drawImage(_0x4747af, -_0x5009bd, -_0x5009bd, _0x5009bd * 2, _0x5009bd * 2);
    a0_0x1306ae.restore();
  }
};
const a0_0x13f4f5 = 164;
function a0_0x553e1f() {
  a0_0x553e1f.superClass.call(this, a0_0x13f4f5);
}
window.ElectricCharge = a0_0x553e1f;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x553e1f, a0_0x13f4f5);
var a0_0x2b9582 = a0_0x42ea3a;
var a0_0x28626c = a0_0x3d1b55;
a0_0x2b9582.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2b9582.prototype.constructor = a0_0x2b9582;
a0_0x2b9582.superClass = a0_0x28626c;
a0_0x42ea3a.prototype.customDraw = function (_0x4d9594) {
  a0_0x1306ae.save();
  a0_0x1306ae.rotate(this.angle);
  var _0x16ddd5 = a0_0x1306ae.globalAlpha;
  a0_0x1306ae.globalAlpha = this.alpha < 0.7 ? this.alpha : 0.7;
  var _0xc461aa = "skins/land/birdmonster/" + this.speciesType + "/wind.png";
  var _0x2594c8 = this.getSkinImageObj(_0xc461aa);
  if (_0x2594c8) {
    var _0x3ffa3a = this.rad * 1.25;
    a0_0x1306ae.drawImage(_0x2594c8, -_0x3ffa3a, -_0x3ffa3a, _0x3ffa3a * 2, _0x3ffa3a * 2);
  }
  a0_0x1306ae.restore();
};
a0_0x42ea3a.prototype.updateZ = function () {
  this.z = 10000 - this.rad;
};
a0_0x42ea3a.prototype.readCustomData_onNewlyVisible = function (_0x1a4b2f) {
  this.alpha = _0x1a4b2f.readUInt8() / 100;
};
a0_0x42ea3a.prototype.readUpdatedProperty = function (_0x21d94f, _0x382c63) {
  if (_0x21d94f == a0_0x32aa89) {
    this.alpha = _0x382c63.readUInt8() / 100;
  }
};
function a0_0x42ea3a() {
  a0_0x42ea3a.superClass.call(this);
  this.spawnTime = a0_0x24806e;
  this.alpha = 0;
}
window.GaleCharge = a0_0x42ea3a;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x42ea3a, a0_0x382193, a0_0x4fcb9b);
var a0_0x28626c = a0_0x42171b;
a0_0x2528d7.prototype = Object.create(a0_0x28626c.prototype);
a0_0x2528d7.prototype.constructor = a0_0x2528d7;
a0_0x2528d7.superClass = a0_0x28626c;
a0_0x2528d7.prototype.lookAngle = 0;
a0_0x2528d7.prototype.frameNumber = 0;
a0_0x2528d7.prototype.isRolling = false;
a0_0x2528d7.prototype.biomeType = false;
a0_0x2528d7.prototype.updateZ = function () {
  this.z = 1002;
};
a0_0x2528d7.prototype.customDraw = function (_0x58f47a) {
  var _0x19d3bb = this.rad - 10;
  var _0x50816e = 1;
  var _0x360e8a = 0.15;
  var _0x1c88a1 = 0.8;
  var _0xa1182c = (_0x1c88a1 - _0x360e8a) * 0.5;
  var _0x10bd22 = _0x360e8a + _0xa1182c + _0xa1182c * Math.sin(Math.PI * 2 / _0x50816e * (a0_0x24806e / 1000));
  var _0x50816e = 1;
  var _0x360e8a = 0.85;
  var _0x1c88a1 = 1;
  var _0xa1182c = (_0x1c88a1 - _0x360e8a) * 0.5;
  var _0x13139e = 1;
  if (this.isRolling) {
    this.frameNumber = Math.trunc(a0_0x24806e / 166) % 6;
  }
  var _0x41265d = "gameobj/" + this.oType + "/" + this.biomeType + "/" + this.frameNumber + ".png";
  var _0xd2c9bf = this.getSkinImageObj(_0x41265d);
  if (_0xd2c9bf) {
    var _0x53b376 = 0;
    var _0x319595 = this.rad;
    var _0x5b5cb4 = this.rad * 2.5;
    imH = this.rad * 2.5;
    var _0x45308a = 0.5;
    var _0x590d51 = 0.95;
    a0_0x1306ae.save();
    {
      a0_0x1306ae.globalAlpha *= this.onFireEffA * _0x13139e;
      a0_0x1306ae.rotate(this.angle + a0_0x2f748d);
      a0_0x1306ae.drawImage(_0xd2c9bf, _0x53b376 + _0x5b5cb4 * -_0x45308a, _0x319595 + imH * -_0x590d51, _0x5b5cb4, imH);
    }
    a0_0x1306ae.restore();
  }
};
a0_0x2528d7.prototype.isFloating = false;
a0_0x2528d7.prototype.isRolling = false;
a0_0x2528d7.prototype.readUpdatedProperty = function (_0x3ccbd2, _0x23fb06) {
  if (_0x3ccbd2 == a0_0x2b0702) {
    this.isFloating = _0x23fb06.readUInt8() == 1;
  } else if (_0x3ccbd2 == a0_0x5af041) {
    this.isRolling = _0x23fb06.readUInt8() == 1;
  }
};
a0_0x2528d7.prototype.readCustomData_onNewlyVisible = function (_0x51e4d0) {
  this.biomeType = _0x51e4d0.readUInt8();
  this.isRolling = _0x51e4d0.readUInt8() == 1;
  this.isFloating = _0x51e4d0.readUInt8() == 1;
};
function a0_0x2528d7() {
  a0_0x2528d7.superClass.call(this, a0_0x300cd2);
  this.lookAngle = 0;
  this.isRolling = false;
  this.biomeType = false;
  this.doesDrawEffectScale = true;
  this.drawEffectScale_Slow = true;
}
var a0_0x300cd2 = 165;
window.MopeBall = a0_0x2528d7;
a0_0x5d394a.setCustomClassForGameObjType(a0_0x2528d7, a0_0x300cd2);
var a0_0x4f5f13 = 0;
function a0_0x495742() {
  var _0x379ca5 = a0_0x55b16c("audio/click.mp3");
  if (_0x379ca5) {
    try {
      _0x379ca5.play();
    } catch (_0x4820f3) {}
  }
}
a0_0x55b16c("audio/click.mp3");
a0_0x595043();
a0_0x3cecb7();
var a0_0x40dddb = {};
function a0_0x5e6518(_0x2d5795) {
  switch (_0x2d5795) {
    case a0_0x47adbb:
    case a0_0xf1b509:
    case a0_0x30cd21:
    case a0_0x244bcd:
    case a0_0x226c22:
    case a0_0x74644c:
    case a0_0x116605:
    case a0_0x511276:
    case a0_0x393078:
    case a0_0x61214d:
    case a0_0x4f2b01:
    case a0_0x5c2a70:
    case a0_0x191f74:
    case a0_0x20ad77:
    case a0_0x4f8004:
    case a0_0x55cfa8:
    case a0_0xe6813b:
    case a0_0x3bf767:
    case a0_0x2b11cc:
    case a0_0x904f35:
    case a0_0x16ab5b:
    case a0_0x4b7def:
      return true;
  }
  return false;
}
var a0_0x54460b = null;
var a0_0x3c3524 = null;
const a0_0x48c40c = function (_0x59ae46) {
  var _0x29ba3c = _0x59ae46.readBitGroup();
  var _0x4cc23e = _0x29ba3c.getBool();
  if (_0x4cc23e) {
    var _0x53b513 = _0x29ba3c.getBool();
    if (_0x53b513) {
      vID = _0x59ae46.readUInt32();
      if (a0_0x3c3524 == null) {
        a0_0x3c3524 = {
          id: vID
        };
        a0_0x3c3524._ox = a0_0x3c3524.X = a0_0x3c3524._nx = 0;
        a0_0x3c3524._oy = a0_0x3c3524.Y = a0_0x3c3524._ny = 0;
      }
      var _0x34ab8a = _0x59ae46.readUInt32() / 100;
      var _0x299a6e = _0x59ae46.readUInt32() / 100;
      a0_0x3c3524._ox = a0_0x3c3524.X;
      a0_0x3c3524._oy = a0_0x3c3524.Y;
      a0_0x3c3524._nx = _0x34ab8a;
      a0_0x3c3524._ny = _0x299a6e;
    } else {
      a0_0x3c3524 = null;
    }
  } else {
    a0_0x3c3524 = null;
  }
};
const a0_0x3fddb1 = function () {
  var _0x2fb334 = a0_0x283a01[a0_0x15e4d1];
  if (a0_0x3c3524 == null || !_0x2fb334) {
    return;
  }
  a0_0x53f6c2();
  a0_0x1306ae.save();
  a0_0x1306ae.strokeStyle = "white";
  a0_0x1306ae.globalAlpha = 1;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.moveTo(_0x2fb334.x, _0x2fb334.y);
  a0_0x1306ae.lineTo(a0_0x3c3524.X, a0_0x3c3524.Y);
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
};
const a0_0x53f6c2 = function () {
  var _0x5b6c58 = 0.1;
  a0_0x3c3524.X = _0x5b6c58 * (a0_0x3c3524._nx - a0_0x3c3524._ox) + a0_0x3c3524._ox;
  a0_0x3c3524.Y = _0x5b6c58 * (a0_0x3c3524._ny - a0_0x3c3524._oy) + a0_0x3c3524._oy;
};
var a0_0x5503be = new Array();
const a0_0x4cac07 = function (_0x5af7f3) {
  var _0x14697f = _0x5af7f3.readUInt8();
  a0_0x5503be = new Array();
  for (i = 0; i < _0x14697f; i++) {
    var _0x41f851 = _0x5af7f3.readUInt16();
    var _0x9719a3 = _0x5af7f3.readUInt8();
    if (_0x9719a3 > 0) {
      for (s = 0; s < _0x9719a3; s++) {
        var _0x2c4322 = _0x5af7f3.readUInt16() / 4;
        var _0x3ff618 = _0x5af7f3.readUInt16() / 4;
        if (_0x41f851 == a0_0x3a11dd) {
          var _0x2245b4 = _0x5af7f3.readUInt8() == 1;
          var _0x148581 = _0x5af7f3.readUInt8();
          a0_0x5503be.push({
            oType: _0x41f851,
            specType: _0x148581,
            x: _0x2c4322,
            y: _0x3ff618,
            rad: 2,
            droppedInHole: _0x2245b4
          });
        } else if (_0x41f851 == a0_0x511110) {
          var _0x148581 = _0x5af7f3.readUInt8();
          a0_0x5503be.push({
            oType: _0x41f851,
            specType: _0x148581,
            x: _0x2c4322,
            y: _0x3ff618,
            rad: 2
          });
        } else {
          a0_0x5503be.push({
            oType: _0x41f851,
            x: _0x2c4322,
            y: _0x3ff618,
            rad: 2
          });
        }
      }
    }
  }
  var _0x9719a3 = _0x5af7f3.readUInt8();
  for (s = 0; s < _0x9719a3; s++) {
    var _0x40d97 = _0x5af7f3.readUInt16();
    var _0x220e31 = _0x5af7f3.readUInt16() / 4;
    var _0x2c4322 = _0x5af7f3.readUInt16() / 4;
    var _0x3ff618 = _0x5af7f3.readUInt16() / 4;
    a0_0x5503be.push({
      oType: a0_0x382193,
      abil: _0x40d97,
      x: _0x2c4322,
      y: _0x3ff618,
      angle: _0x220e31,
      rad: 2
    });
  }
};
const a0_0x1cceb1 = function (_0x469860) {
  a0_0x5d69d3 = {};
  var _0x4f58cb = _0x469860.readUInt8() == 1;
  if (_0x4f58cb) {
    var _0x5af3e1 = _0x469860.readUInt8();
    a0_0x5d69d3 = {};
    a0_0x5d69d3.treesCount = _0x5af3e1;
    for (i = 0; i < _0x5af3e1; i++) {
      a0_0x5d69d3[_0x469860.readUInt32()] = 1;
    }
  }
};
function a0_0x280226(_0x18fe4c) {
  var _0x426fd2 = [];
  _0x426fd2.rank = _0x18fe4c.readUInt16();
  _0x426fd2.topRank = _0x18fe4c.readUInt16();
  _0x426fd2.timeAlive = _0x18fe4c.readUInt16();
  _0x426fd2.totalKills = _0x18fe4c.readUInt16();
  _0x426fd2.maxXP = _0x18fe4c.readUInt32();
  return _0x426fd2;
}
var a0_0x1cbacc = null;
var a0_0xe3d4b2 = 0;
function a0_0x22d0ca(_0x4c163a) {
  a0_0xe3d4b2 = a0_0xa794f1 * 0.6;
  if (a0_0x1cbacc == null) {
    a0_0x1cbacc = document.createElement("canvas");
  }
  var _0x1bead0 = a0_0x1cbacc.getContext("2d");
  var _0x580cb0 = 55;
  var _0x6427f7 = 40;
  var _0x5035a3 = 5;
  var _0x28f721 = 200;
  var _0x24ac1e = 420;
  _0x580cb0 = _0x28f721 + _0x5035a3 * 2;
  a0_0x1cbacc.width = _0x24ac1e + _0x5035a3 * 2;
  a0_0x1cbacc.height = _0x580cb0;
  _0x1bead0.globalAlpha = 0.2;
  _0x1bead0.fillStyle = "#000000";
  _0x1bead0.fillRect(0, 0, a0_0x1cbacc.width, a0_0x1cbacc.height);
  _0x1bead0.fillStyle = "#000000";
  _0x1bead0.fillRect(_0x5035a3, _0x5035a3, a0_0x1cbacc.width - _0x5035a3 * 2, a0_0x1cbacc.height - _0x5035a3 * 2);
  var _0x207609 = 55 + _0x5035a3;
  _0x1bead0.globalAlpha = 1;
  _0x1bead0.fillStyle = "#FFFFFF";
  _0x1bead0.font = "30px Arial";
  var _0x890c11 = "YOU DIED!";
  _0x1bead0.font = "30px Arial";
  _0x1bead0.fillText(_0x890c11, a0_0x1cbacc.width / 2 - _0x1bead0.measureText(_0x890c11).width / 2, _0x207609);
  _0x1bead0.font = "20px Arial";
  _0x207609 += 45;
  _0x890c11 = "You were #" + _0x4c163a.rank;
  _0x1bead0.fillText(_0x890c11, a0_0x1cbacc.width / 2 - _0x1bead0.measureText(_0x890c11).width / 2, _0x207609);
  _0x207609 += 40;
  var _0x44bf3c = a0_0x48a798(_0x4c163a.timeAlive);
  var _0x1168bf = _0x5035a3 + 15;
  a0_0x4743f7(_0x1bead0, "Time Alive", _0x44bf3c, _0x1168bf, _0x207609);
  _0x1168bf += 210;
  a0_0x4743f7(_0x1bead0, "Total Kills", _0x4c163a.totalKills, _0x1168bf, _0x207609);
  _0x207609 += 40;
  _0x1168bf = _0x5035a3 + 15;
  a0_0x4743f7(_0x1bead0, "Top rank", _0x4c163a.topRank, _0x1168bf, _0x207609);
  _0x1168bf += 210;
  a0_0x4743f7(_0x1bead0, "Max XP", a0_0x1e543a(_0x4c163a.maxXP), _0x1168bf, _0x207609);
}
function a0_0xe5db5c(_0x5addd3, _0x5e4b91, _0x4ee3ba, _0x382dc8, _0x5a5dcb, _0x48b109) {
  if (a0_0x56bbb3 == 2) {
    return;
  }
  a0_0x1306ae.save();
  var _0x2ecd98 = _0x4ee3ba - _0x5addd3;
  var _0x4b5c8a = _0x382dc8 - _0x5e4b91;
  var _0x3b0b96 = 0;
  var _0x286d05 = a0_0x2bf7a6 / 2 / a0_0x534d92;
  var _0x5307d1 = a0_0xa794f1 / 2 / a0_0x534d92;
  _0x5addd3 = Math.max(_0x5addd3, a0_0x4a5489 - _0x286d05 - _0x5a5dcb + _0x3b0b96);
  _0x5e4b91 = Math.max(_0x5e4b91, a0_0x201ca7 - _0x5307d1 - _0x48b109 + _0x3b0b96);
  _0x4ee3ba = Math.min(_0x4ee3ba, a0_0x4a5489 + _0x286d05 - _0x5a5dcb - _0x3b0b96);
  _0x382dc8 = Math.min(_0x382dc8, a0_0x201ca7 + _0x5307d1 - _0x48b109 - _0x3b0b96);
  a0_0x1306ae.strokeStyle = "black";
  a0_0x1306ae.globalAlpha = 0.055;
  var _0x313101 = 30;
  var _0x1ef23b = _0x4ee3ba - _0x5addd3;
  fillH = _0x382dc8 - _0x5e4b91;
  for (var _0x217bd9 = -0.5 + _0x5addd3 + (_0x2ecd98 - _0x5addd3) % _0x313101; _0x217bd9 < _0x5addd3 + _0x1ef23b; _0x217bd9 += _0x313101) {
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(_0x217bd9, _0x5e4b91);
    a0_0x1306ae.lineTo(_0x217bd9, _0x5e4b91 + fillH);
    a0_0x1306ae.stroke();
  }
  for (dy = -0.5 + _0x5e4b91 + (_0x4b5c8a - _0x5e4b91) % _0x313101; dy < _0x5e4b91 + fillH; dy += _0x313101) {
    a0_0x1306ae.beginPath();
    a0_0x1306ae.moveTo(_0x5addd3, dy);
    a0_0x1306ae.lineTo(_0x5addd3 + _0x1ef23b, dy);
    a0_0x1306ae.stroke();
  }
  a0_0x1306ae.restore();
}
async function a0_0x28c354() {
  var _0x5695e5 = document.getElementById("optionsDiv");
  _0x5695e5.style.display = "none";
  a0_0x541393();
  try {
    var _0x22b586 = new Audio("audio/click.mp3");
    _0x22b586.play();
  } catch (_0x4d675a) {}
  if (a0_0x4bbd85) {
    return;
  }
  if (await a0_0xbb25d5()) {
    a0_0x42abf7();
  } else {
    a0_0x5c1246(false);
  }
}
document.getElementById("startButton").onclick = a0_0x28c354;
document.getElementById("btnSpectate").onclick = function () {
  a0_0x28c320();
};
const a0_0x28c320 = function () {
  if (!a0_0x5bd21d) {
    var _0x12de29 = new a0_0x32d020(1);
    _0x12de29.writeUInt8(a0_0x2f8a23);
    a0_0x1f8a37(_0x12de29);
  }
};
var a0_0x2b9e6a = false;
var a0_0x2ac2ef = false;
let a0_0x455982 = false;
function a0_0x449e71(_0x57df70) {
  var _0x3d562d = document.getElementById("chatinput");
  switch (_0x57df70.key) {
    case "ArrowLeft":
      if (_0x57df70.ctrlKey) {
        var _0x51c740 = _0x3d562d.style.width;
        _0x51c740 = _0x51c740.replace("px", "");
        _0x51c740 = Number(_0x51c740) - 5;
        _0x3d562d.style.width = _0x51c740 + "px";
      } else {
        var _0x51c740 = _0x3d562d.style.left;
        _0x51c740 = _0x51c740.replace("px", "");
        _0x51c740 = Number(_0x51c740) - 5;
        _0x3d562d.style.left = _0x51c740 + "px";
      }
      break;
    case "ArrowRight":
      if (_0x57df70.ctrlKey) {
        var _0x51c740 = _0x3d562d.style.width;
        _0x51c740 = _0x51c740.replace("px", "");
        _0x51c740 = Number(_0x51c740) + 5;
        _0x3d562d.style.width = _0x51c740 + "px";
      } else {
        var _0x51c740 = _0x3d562d.style.left;
        _0x51c740 = _0x51c740.replace("px", "");
        _0x51c740 = Number(_0x51c740) + 5;
        _0x3d562d.style.left = _0x51c740 + "px";
      }
      break;
    case "ArrowUp":
      var _0x51c740 = _0x3d562d.style.top;
      _0x51c740 = _0x51c740.replace("px", "");
      _0x51c740 = Number(_0x51c740) - 5;
      _0x3d562d.style.top = _0x51c740 + "px";
      break;
    case "ArrowDown":
      var _0x51c740 = _0x3d562d.style.top;
      _0x51c740 = _0x51c740.replace("px", "");
      _0x51c740 = Number(_0x51c740) + 5;
      _0x3d562d.style.top = _0x51c740 + "px";
      break;
  }
}
var a0_0x5a9a2a = false;
var a0_0x4ce5ad = true;
function a0_0x24e270(_0x1c41d1) {
  if (_0x1c41d1.indexOf("/anim-switch:") != -1) {
    var _0x5d63f6 = _0x1c41d1.replace("/anim-switch:", "");
    switch (_0x5d63f6) {
      case "honeybee":
        a0_0x58297a = !a0_0x58297a;
        return true;
      case "phoenix":
        a0_0x45af98 = !a0_0x45af98;
        return true;
    }
  }
  return a0_0x397b19(_0x1c41d1);
}
var a0_0x2f63fa = false;
const a0_0x397b19 = function (_0x415f1c) {
  if (!a0_0x52285b && !a0_0x4a41e3) {
    return false;
  }
  if (_0x415f1c.indexOf("chatbox:") != -1) {
    var _0x3dd952 = _0x415f1c.replace("chatbox:", "");
    switch (_0x3dd952) {
      case "edit:start":
        a0_0x5a9a2a = true;
        break;
      case "edit:end":
        var _0x201ec1 = document.getElementById("chatinput");
        var _0xcc7799 = {
          autoLoad: a0_0x4ce5ad,
          left: _0x201ec1.style.left,
          top: _0x201ec1.style.top,
          width: _0x201ec1.style.width
        };
        localStorage.setItem("chatbox", JSON.stringify(_0xcc7799));
        a0_0x5a9a2a = false;
        break;
      case "set:autoload":
        a0_0x4ce5ad = true;
        break;
      case "load":
        var _0x201ec1 = document.getElementById("chatinput");
        var _0xcc7799 = JSON.parse(localStorage.getItem("chatbox"));
        _0x201ec1.style.left = _0xcc7799.left;
        _0x201ec1.style.top = _0xcc7799.top;
        _0x201ec1.style.width = _0xcc7799.width;
        break;
      case "reset":
        var _0x201ec1 = document.getElementById("chatinput");
        _0x201ec1.style.left = "";
        _0x201ec1.style.right = "";
        _0x201ec1.style.width = "";
        break;
    }
    return;
  }
  switch (_0x415f1c) {
    case "show:interface":
      a0_0x59f977 = true;
      a0_0x6f38e9 = true;
      a0_0x1cb9c7 = true;
      a0_0x2021c9 = true;
      a0_0x4ba546 = true;
      a0_0x3bd5bb = true;
      a0_0x2f63fa = false;
      return true;
    case "hide:interface":
      a0_0x59f977 = false;
      a0_0x6f38e9 = false;
      a0_0x1cb9c7 = false;
      a0_0x2021c9 = false;
      a0_0x4ba546 = false;
      a0_0x3bd5bb = false;
      a0_0x2f63fa = true;
      return true;
    case "show:map":
      a0_0x59f977 = true;
      return true;
    case "show:xpbar":
      a0_0x1cb9c7 = true;
      return true;
    case "show:board":
      a0_0x6f38e9 = true;
      return true;
    case "show:waterbar":
      a0_0x2021c9 = true;
      return true;
    case "show:1v1":
      a0_0x3bd5bb = true;
      return true;
    case "show:ability":
      a0_0x4ba546 = true;
      return true;
    case "hide:map":
      a0_0x59f977 = false;
      return true;
    case "hide:xpbar":
      a0_0x1cb9c7 = false;
      return true;
    case "hide:board":
      a0_0x6f38e9 = false;
      return true;
    case "hide:waterbar":
      a0_0x2021c9 = false;
      return true;
    case "hide:1v1":
      a0_0x3bd5bb = false;
      return true;
    case "hide:ability":
      a0_0x4ba546 = false;
      return true;
  }
  return false;
};
function a0_0x4f7f9f(_0x362092) {
  if (a0_0x530c0d) {
    var _0x4326a6 = JSON.parse(localStorage.getItem("chatbox"));
    if (_0x362092 && _0x4326a6 && _0x4326a6.autoLoad) {
      var _0x13f1fb = document.getElementById("chatinput");
      _0x13f1fb.style.left = _0x4326a6.left;
      _0x13f1fb.style.top = _0x4326a6.top;
      _0x13f1fb.style.width = _0x4326a6.width;
    }
  }
}
a0_0x4f7f9f(true);
const a0_0x70a369 = function () {
  if (!a0_0x2d3651 && !a0_0x314c79) {
    a0_0x2ae11a = "You must login to chat!";
    a0_0x932ea3 = a0_0x24806e + 3500;
    return;
  }
  var _0x2f90b9 = document.getElementById("chatinput");
  if (!a0_0x2b9e6a && a0_0x371a9b) {
    _0x2f90b9.style.visibility = "visible";
    _0x2f90b9.focus();
    a0_0x2b9e6a = true;
    if (a0_0x4a41e3) {
      _0x2f90b9.maxLength = 1000000;
    }
    _0x2f90b9.onblur = function () {
      if (a0_0x2b9e6a) {
        a0_0x70a369();
      }
    };
  } else if (a0_0x2b9e6a) {
    var _0x505efb = _0x2f90b9.value + "";
    a0_0x2b9e6a = false;
    _0x2f90b9.style.visibility = "hidden";
    if (_0x505efb.length > 0 && a0_0x371a9b) {
      if (!a0_0x24e270(_0x505efb)) {
        newMsg = new a0_0x32d020(3 + a0_0xaad8f5(_0x505efb).length);
        newMsg.writeUInt8(19);
        newMsg.writeString(_0x505efb);
        a0_0x1f8a37(newMsg);
      }
    }
    _0x2f90b9.value = "";
  }
};
var a0_0x83edee = 1000;
var a0_0x339877 = 1000;
function a0_0x31cbcd() {
  a0_0x465e93 = 250;
}
function a0_0x594317() {
  a0_0x83edee = window.innerWidth;
  a0_0x339877 = window.innerHeight;
  if (a0_0x26cdc8) {
    a0_0x83edee = document.body.clientWidth;
    a0_0x339877 = document.body.clientHeight;
  }
  switch (a0_0x56bbb3) {
    case a0_0xbf9ed5:
    case a0_0x128bb9:
      a0_0x2b523d = window.devicePixelRatio * 0.6;
      break;
    case 3:
      a0_0x2b523d = window.devicePixelRatio;
      break;
    default:
      console.log("Unknown graphics level " + a0_0x56bbb3);
  }
  a0_0x2bf7a6 = a0_0x83edee * a0_0x2b523d;
  a0_0xa794f1 = a0_0x339877 * a0_0x2b523d;
  a0_0x2c02fa = a0_0x2b523d * 0.85 * Math.max(a0_0x83edee / 1920, a0_0x339877 / 1080);
}
function a0_0x595043() {
  a0_0x594317();
  a0_0x486db9 = null;
  a0_0x368317.width = a0_0x2bf7a6;
  a0_0x368317.height = a0_0xa794f1;
  a0_0x368317.style.width = a0_0x83edee + "px";
  a0_0x368317.style.height = a0_0x339877 + "px";
  var _0x3c0606 = document.getElementById("chatinput");
  _0x3c0606.style.marginTop = a0_0x339877 / 2 - 50 + "px";
  a0_0x499f6c();
  if (a0_0x351f51()) {
    mes = new a0_0x32d020(7);
    mes.writeUInt8(17);
    mes.writeUInt16(a0_0x2bf7a6);
    mes.writeUInt16(a0_0xa794f1);
    a0_0x31cbcd();
    mes.writeUInt16(a0_0x465e93);
    a0_0x1f8a37(mes);
  }
  if (a0_0x1a5043 != null) {
    a0_0x1a5043.onResize();
  }
  a0_0x4b90a8(a0_0x596657);
}
window.onresize = a0_0x595043;
var a0_0x4d3fc6 = 1;
var a0_0x46c8b1 = 2;
var a0_0x5448eb = 3;
var a0_0x5ce584 = 4;
var a0_0x23dd78 = 5;
var a0_0x1236f9 = 6;
var a0_0x3b93a7 = 7;
function a0_0x4f9f3b(_0x153e92) {
  var _0x139b56 = new a0_0x32d020(2);
  _0x139b56.writeUInt8(21);
  _0x139b56.writeUInt8(_0x153e92 ? 1 : 0);
  a0_0x1f8a37(_0x139b56);
}
function a0_0x10789a(_0x3f21a9, _0x5752e0) {
  switch (_0x3f21a9) {
    case a0_0x4d3fc6:
      {
        if (a0_0x48ccaa != _0x5752e0) {
          if (a0_0x351f51() && a0_0x371a9b) {
            if (_0x5752e0) {
              a0_0xca5393();
            }
            a0_0x4f9f3b(_0x5752e0);
            if (a0_0x3929a0 > 0) {
              var _0x19de5b = new a0_0x32d020(5);
              _0x19de5b.writeUInt8(a0_0x5656ad);
              _0x19de5b.writeUInt32(a0_0x3929a0);
              a0_0x1f8a37(_0x19de5b);
              a0_0x3929a0 = 0;
            }
          }
        }
        a0_0x48ccaa = _0x5752e0;
      }
      break;
    case a0_0x46c8b1:
      {
        if (a0_0x44f8a5 != _0x5752e0) {
          if (a0_0x351f51() && a0_0x371a9b) {
            if (_0x5752e0) {
              a0_0xca5393();
            }
            var _0x19de5b = new a0_0x32d020(2);
            _0x19de5b.writeUInt8(20);
            _0x19de5b.writeUInt8(_0x5752e0 ? 1 : 0);
            a0_0x1f8a37(_0x19de5b);
          }
        }
        a0_0x44f8a5 = _0x5752e0;
      }
      break;
    case a0_0x5448eb:
      {
        if ((a0_0x52285b || a0_0x4a41e3) && a0_0x371a9b) {
          var _0x19de5b = new a0_0x32d020(1);
          _0x19de5b.writeUInt8(26);
          a0_0x1f8a37(_0x19de5b);
        }
      }
      break;
    case a0_0x5ce584:
      {
        if ((a0_0x52285b || a0_0x4a41e3) && a0_0x371a9b) {
          var _0x19de5b = new a0_0x32d020(1);
          _0x19de5b.writeUInt8(27);
          a0_0x1f8a37(_0x19de5b);
        }
      }
      break;
    case a0_0x23dd78:
      {
        if (a0_0x371a9b) {
          var _0x19de5b = new a0_0x32d020(2);
          _0x19de5b.writeUInt8(28);
          _0x19de5b.writeUInt8(_0x5752e0 ? 1 : 0);
          a0_0x1f8a37(_0x19de5b);
        }
      }
      break;
    case a0_0x1236f9:
      {
        if (a0_0x371a9b && a0_0x4a41e3) {
          var _0x19de5b = new a0_0x32d020(2);
          _0x19de5b.writeUInt8(30);
          _0x19de5b.writeUInt8(_0x5752e0 ? 1 : 0);
          a0_0x1f8a37(_0x19de5b);
        }
      }
      break;
    case a0_0x3b93a7:
      {
        if (a0_0x371a9b && a0_0x4a41e3) {
          var _0x19de5b = new a0_0x32d020(2);
          _0x19de5b.writeUInt8(29);
          _0x19de5b.writeUInt8(_0x5752e0 ? 1 : 0);
          a0_0x1f8a37(_0x19de5b);
        }
      }
      break;
  }
}
function a0_0x3291d8() {
  if (!a0_0x2b9e6a && a0_0x371a9b) {
    if (document.activeElement && document.activeElement != a0_0x368317) {
      if (a0_0x368317) {
        console.log("canvas is focused now!");
        a0_0x368317.focus();
      }
    } else {}
  }
}
a0_0x368317.onblur = function (_0x286bc7) {
  a0_0x2e9825(_0x286bc7);
};
window.onfocus = function (_0x484c3b) {
  a0_0x53d54c(_0x484c3b);
};
function a0_0x2e9825(_0x51f7cd) {
  if (a0_0x44f8a5 || a0_0x48ccaa) {
    return;
  }
  a0_0x10789a(a0_0x4d3fc6, false);
  a0_0x10789a(a0_0x46c8b1, false);
}
function a0_0x53d54c(_0x510538) {
  a0_0x541393();
}
document.oncontextmenu = document.body.oncontextmenu = function () {
  return !a0_0x371a9b;
};
function a0_0x19a848() {
  var _0x47ac90 = a0_0x2bf7a6 / 2;
  var _0x178bd9 = a0_0xa794f1 / 2;
  a0_0x26c071 = (a0_0x3916f6 - (_0x47ac90 - a0_0x4a5489 * a0_0x534d92)) / a0_0x534d92;
  a0_0x591cbc = (a0_0x145dbf - (_0x178bd9 - a0_0x201ca7 * a0_0x534d92)) / a0_0x534d92;
}
function a0_0x3c4488(_0x11d352) {
  return _0x11d352 * a0_0x534d92 + (a0_0x2bf7a6 / 2 - a0_0x4a5489 * a0_0x534d92);
}
function a0_0x268360(_0x6d9ac2) {
  return _0x6d9ac2 * a0_0x534d92 + (a0_0xa794f1 / 2 - a0_0x201ca7 * a0_0x534d92);
}
function a0_0x1d8537(_0x315c5d, _0x53a14f, _0x52f247 = 0) {
  _0x52f247 *= a0_0x534d92;
  const _0x20b33 = {
    x: a0_0x3c4488(_0x315c5d),
    y: a0_0x268360(_0x53a14f)
  };
  if (_0x20b33.x < -_0x52f247 || _0x20b33.y < -_0x52f247) {
    return false;
  }
  if (_0x20b33.x > a0_0x2bf7a6 + _0x52f247 || _0x20b33.y > a0_0xa794f1 + _0x52f247) {
    return false;
  }
  return true;
}
function a0_0xfc3217(_0x442123, _0x381cc7, _0x275112 = 0) {
  if (_0x442123 < -_0x275112 || _0x381cc7 < -_0x275112) {
    return false;
  }
  if (_0x442123 > a0_0x3acc86 + _0x275112 || _0x381cc7 > a0_0x9b6712 + _0x275112) {
    return false;
  }
  return true;
}
function a0_0x41b9cc(_0xef5e29) {
  return (_0xef5e29 - (a0_0x2bf7a6 / 2 - a0_0x4a5489 * a0_0x534d92)) / a0_0x534d92;
}
function a0_0xd9a308(_0xe75bd6) {
  return (_0xe75bd6 - (a0_0xa794f1 / 2 - a0_0x201ca7 * a0_0x534d92)) / a0_0x534d92;
}
function a0_0xca5393() {
  if (a0_0x2ac2ef || a0_0x37478e) {
    var _0x225975 = a0_0x283a01[a0_0x15e4d1];
    if (_0x225975) {
      a0_0x26c071 = _0x225975.x;
      a0_0x591cbc = _0x225975.y + 2;
    } else {
      return;
    }
  }
  if (a0_0x351f51() && (a0_0x371a9b || a0_0x396cf5)) {
    if (Math.abs(a0_0x6d8749 - a0_0x26c071) > 0.1 || Math.abs(a0_0x4a54b7 - a0_0x591cbc) > 0.1) {
      a0_0x6d8749 = a0_0x26c071;
      a0_0x4a54b7 = a0_0x591cbc;
      mes = new a0_0x32d020(a0_0xa8ffeb);
      mes.writeUInt8(5);
      mes.writeInt16(a0_0x26c071);
      mes.writeInt16(a0_0x591cbc);
      a0_0x1f8a37(mes);
    }
  }
}
setInterval(a0_0xca5393, 10);
setInterval(a0_0xcefd37, 5000);
var a0_0x56a003 = "mope.io";
function a0_0x3cecb7() {
  a0_0x595043();
  a0_0x4da0d1 = 0;
  a0_0x283a01 = {};
  a0_0x7532a0 = [];
  a0_0x40dddb = {};
  a0_0x25de50 = [];
  a0_0x15960b = 25;
  a0_0x4fc0c4 = a0_0x22db2c = 0;
  a0_0x1b961c(a0_0x4fc0c4);
  curBarPerc_n = a0_0x37c36b = 100;
  a0_0xb662d9 = a0_0xedc14 = a0_0x4fe33d = 0;
  a0_0x171408(a0_0x4fe33d);
  a0_0x10e951 = null;
  a0_0x5bd21d = false;
  a0_0x357f25 = null;
  a0_0x2b9241 = "";
  a0_0x396162();
  a0_0x19ab74 = false;
  a0_0x5cf80a = 0;
  a0_0x121f07 = [];
  a0_0x5a6ed0 = false;
  a0_0x9f83e5 = [];
  a0_0x3eb640 = 0;
  a0_0x14cbf7 = 0;
  isInfected = a0_0x59c93b = false;
  a0_0x2b2d22 = 0;
  a0_0x13885f = false;
  a0_0x4ec0cb = 0;
  a0_0xead936 = [];
  a0_0x259b84 = false;
  if (a0_0x328318 != null) {
    a0_0x328318.isVisible = false;
  }
  if (a0_0x1a5043) {
    a0_0x1a5043.interfaceButtons.splice(a0_0x1a5043.interfaceButtons.indexOf(a0_0x328318), 1);
  }
  a0_0x328318 = null;
  a0_0x5663e5 = false;
  a0_0x2f8749 = 0;
  a0_0x71c10a = 0;
  a0_0x4a41e3 = false;
  a0_0x396cf5 = false;
  a0_0x1cbacc = null;
}
const a0_0x2472a1 = document.getElementById("nickInput");
a0_0x2472a1.onchange = () => {
  let _0x9a086 = a0_0x2472a1.value;
  if (typeof a0_0x56a003 !== "undefined") {
    a0_0x56a003 = _0x9a086;
    if (window.localStorage) {
      try {
        window.localStorage.setItem("nick", _0x9a086);
      } catch (_0x390b3e) {}
    }
  }
};
a0_0x595043();
if (window.localStorage) {
  var a0_0xe98456 = a0_0x2472a1;
  a0_0x56a003 = window.localStorage.getItem("nick");
  a0_0xe98456.value = a0_0x56a003;
  a0_0xe98456.setSelectionRange(0, a0_0xe98456.value.length);
  if (!a0_0x17dc48) {
    a0_0xe98456.focus();
  }
}
if (a0_0x368317.addEventListener) {
  a0_0x368317.addEventListener("mousewheel", a0_0x41d584);
  a0_0x368317.addEventListener("DOMMouseScroll", a0_0x41d584);
} else {
  a0_0x368317.attachEvent("onmousewheel", a0_0x41d584);
}
var a0_0x36e246 = 0;
var a0_0x3715c6 = 1;
function a0_0x41d584(_0x5a4b7a) {
  var _0x5a4b7a = window.event || _0x5a4b7a;
  var _0x38c1f0 = Math.max(-1, Math.min(1, _0x5a4b7a.wheelDelta || -_0x5a4b7a.detail));
  if (_0x38c1f0 == 1) {
    a0_0x36e246 += 1;
  } else {
    a0_0x36e246 -= 0.1;
  }
  a0_0x36e246 = Math.max(0, a0_0x36e246);
  a0_0x36e246 = Math.min(10, a0_0x36e246);
  if (a0_0xcc16e4) {
    var _0x975964 = Math.abs(a0_0x36e246) * 100;
    var _0x511886 = new a0_0x32d020(4);
    _0x511886.writeUInt8(a0_0x3d63e4);
    _0x511886.writeUInt8(_0x38c1f0 == -1 ? 0 : 1);
    _0x511886.writeInt16(_0x975964);
    a0_0x1f8a37(_0x511886);
  }
}
var a0_0x1a5043 = null;
function a0_0x1f8d07() {
  a0_0x41643d();
  if (a0_0x1a5043 != null) {
    a0_0x1a5043.interfaceReset();
  }
  a0_0x1a5043 = null;
  console.log("setting game mode interface:" + a0_0x17b807);
  if (a0_0x17b807 == a0_0x28032e) {
    a0_0x1a5043 = new a0_0x3983b8(a0_0x17b807);
    a0_0x1a5043.state = a0_0x34b662;
  } else if (a0_0x17b807 == a0_0x37f513) {
    a0_0x1a5043 = new a0_0x55adbd(a0_0x17b807);
    a0_0x1a5043.state = a0_0x34b662;
  } else if (a0_0x17b807 == a0_0x2e7356) {
    a0_0x1a5043 = new a0_0x1e7c5e(a0_0x17b807);
    a0_0x1a5043.state = a0_0x34b662;
  } else if (a0_0x17b807 == a0_0x5a32c9) {
    a0_0x1a5043 = new a0_0xdca9e5();
    a0_0x1a5043.state = a0_0x34b662;
  } else if (a0_0x17b807 == a0_0x73c281) {
    a0_0x1a5043 = new a0_0x2e5ec2(a0_0x17b807);
    a0_0x1a5043.state = a0_0x34b662;
  }
  console.log(a0_0x1a5043);
}
function a0_0x2cd148(_0x258876, _0x108194, _0x381c75) {
  var _0xdf079e = _0x258876.x + _0x108194 * Math.cos(_0x381c75);
  var _0x2349a9 = _0x258876.y + _0x108194 * Math.sin(_0x381c75);
  return {
    x: _0xdf079e,
    y: _0x2349a9
  };
}
function a0_0x3585f3(_0x12f0b6, _0x397fb2, _0x31256f, _0x538f68, _0x460644) {
  a0_0x1306ae.save();
  a0_0x1306ae.globalAlpha = _0x460644;
  a0_0x1306ae.beginPath();
  a0_0x1306ae.translate(_0x12f0b6, _0x397fb2);
  a0_0x1306ae.rotate(_0x31256f);
  a0_0x1306ae.moveTo(-5, -5);
  a0_0x1306ae.lineTo(-5, 5);
  a0_0x1306ae.lineTo(5, 5);
  a0_0x1306ae.lineWidth = 1.5;
  a0_0x1306ae.strokeStyle = _0x538f68;
  a0_0x1306ae.fillStyle = _0x538f68;
  a0_0x1306ae.stroke();
  a0_0x1306ae.restore();
}
function a0_0x527d6c() {
  var _0x4f0ce9 = a0_0x283a01[a0_0x15e4d1];
  if (_0x4f0ce9) {
    for (d = 0; d < a0_0x7532a0.length; d++) {
      var _0x4e30d2 = a0_0x7532a0[d];
      if (_0x4f0ce9.id != _0x4e30d2.id) {
        if (_0x4e30d2.oType === a0_0x24738f) {
          var _0x26850e = _0x4e30d2.getOutlineColor();
          var _0x5e8996 = false;
          if (_0x26850e == a0_0x1838b8 || _0x26850e == a0_0x52f121) {
            _0x5e8996 = true;
          }
          if (_0x5e8996) {
            a0_0x4048a1(_0x4f0ce9, _0x4e30d2, _0x26850e);
          }
        }
      }
    }
  }
}
function a0_0x472d26(_0x2b85d4, _0x319d88) {
  var _0x2acd55 = _0x2b85d4.x - _0x319d88.x;
  var _0x320b4d = _0x2b85d4.y - _0x319d88.y;
  var _0x28ff0e = Math.sqrt(_0x2acd55 * _0x2acd55 + _0x320b4d * _0x320b4d);
  return _0x28ff0e;
}
function a0_0x4048a1(_0x259ecf, _0x5cf2b2, _0x5aff92) {
  var _0x36984c = a0_0x2bf7a6 / 2;
  var _0x15b7b3 = a0_0xa794f1 / 2;
  var _0x50eebe = a0_0xa3096a(_0x5cf2b2.x, _0x5cf2b2.y, _0x259ecf.x, _0x259ecf.y);
  var _0x1352ea = a0_0x3c4488(_0x5cf2b2.x);
  var _0x29f1a8 = a0_0x268360(_0x5cf2b2.y);
  var _0x3c2052 = _0x5cf2b2.rad * a0_0x534d92;
  var _0x7d4bd0 = Math.min(Math.abs(_0x1352ea - _0x3c2052 - 0), Math.abs(_0x1352ea + _0x3c2052 - a0_0x2bf7a6));
  var _0x19b089 = Math.min(Math.abs(_0x29f1a8 - _0x3c2052 - 0), Math.abs(_0x29f1a8 + _0x3c2052 - a0_0xa794f1));
  var _0x516447 = -50 - _0x259ecf.rad;
  var _0x11951d = a0_0x2cd148({
    x: _0x259ecf.x,
    y: _0x259ecf.y
  }, _0x516447, _0x50eebe);
  var _0x2c5902 = a0_0x472d26({
    x: _0x11951d.x,
    y: _0x11951d.y
  }, {
    x: _0x5cf2b2.x,
    y: _0x5cf2b2.y
  });
  if (_0x5cf2b2.rad < 100 && _0x2c5902 < _0x5cf2b2.rad * 0.5 || _0x2c5902 < 200) {
    return;
  }
  _0x50eebe += a0_0x873ec7(45);
  var _0x34d8ba = 1;
  var _0x2934cf = 20;
  a0_0x3585f3(_0x11951d.x, _0x11951d.y, _0x50eebe, _0x5aff92, _0x34d8ba);
}
function a0_0x41643d() {
  a0_0x5307a8(true);
}
function a0_0x3475a0() {
  if (a0_0x3bddc6 == a0_0x332990) {
    if (a0_0x331fda == null) {
      var _0x47e233 = new a0_0x32d020(2);
      _0x47e233.writeUInt8(a0_0x4c2e24);
      a0_0x1f8a37(_0x47e233);
    } else {
      var _0x47e233 = new a0_0x32d020(2);
      _0x47e233.writeUInt8(a0_0x4c2e24);
      a0_0x1f8a37(_0x47e233);
      a0_0x331fda.updateExpiry();
    }
  }
}
var a0_0xf1f03 = 5;
var a0_0x8f35b1 = 5;
var a0_0x4c345d = 10;
var a0_0x33873e = 0;
var a0_0x1ff61d = 0;
var a0_0x5c7588 = null;
var a0_0xdae663 = 0;
var a0_0x270302 = null;
var a0_0x41e9f4 = 0;
var a0_0x5b140c = 15;
var a0_0x4aaf7e = 0;
var a0_0x331fda = null;
function a0_0xab5677() {
  if (a0_0x331fda != null) {
    a0_0x331fda.display();
  }
}
function a0_0x179a35() {
  if (a0_0x270302 == null) {
    a0_0x4aaf7e = 0;
    a0_0x5c7588 = null;
    return;
  }
  if (a0_0x5c7588 == null) {
    a0_0x5c7588 = document.createElement("canvas");
  }
  if (a0_0x5c7588 == null) {
    return;
  }
  if (a0_0x4aaf7e == 0) {
    a0_0x4aaf7e = a0_0x24806e;
  }
  var _0x3fee62 = a0_0x5c7588.getContext("2d");
  var _0x18c908 = 55;
  var _0x4cf2da = 5;
  var _0x44d0ec = 0;
  var _0x4a4697 = a0_0x2c02fa * 80;
  var _0x722daa = 130 + (_0x4a4697 + 10) * 5;
  var _0x722daa = a0_0x2c02fa * 700;
  var _0x127481 = a0_0x2c02fa * 700;
  console.log("inferface scale " + a0_0x2c02fa + " borad_height " + _0x722daa);
  _0x18c908 = _0x722daa + _0x4cf2da * 2;
  a0_0x5c7588.width = _0x127481 + _0x4cf2da * 2;
  a0_0x5c7588.height = _0x18c908;
  var _0x5dd24d = 200;
  a0_0xdae663 = _0x5dd24d;
  _0x3fee62.globalAlpha = 0.1;
  var _0x21b345 = _0x4cf2da;
  _0x3fee62.globalAlpha = 1;
  _0x3fee62.fillStyle = "#FFFFFF";
  _0x3fee62.font = "30px Arial";
  _0x21b345 += 45;
  var _0x5164f7 = "APEX KILLS";
  _0x3fee62.font = "30px Arial";
  _0x3fee62.fillText(_0x5164f7, a0_0x5c7588.width / 2 - _0x3fee62.measureText(_0x5164f7).width / 2, _0x21b345);
  _0x5dd24d = 100;
  _0x21b345 += _0x4a4697;
  var _0x3c7a26 = 360 / a0_0x270302.anis.length;
  var _0x29a0cd = a0_0x2c02fa * 250;
  var _0x2dbde0 = a0_0x5c7588.width / 2;
  var _0x37bb71 = a0_0x5c7588.height / 2;
  _0x3fee62.fillStyle = "black";
  _0x3fee62.globalAlpha = 0.1;
  _0x3fee62.beginPath();
  _0x3fee62.arc(_0x2dbde0, _0x2dbde0, _0x29a0cd - _0x4a4697 / 2, 0, Math.PI * 2, false);
  _0x3fee62.arc(_0x2dbde0, _0x2dbde0, _0x29a0cd + _0x4a4697 / 2, Math.PI * 2, 0, true);
  _0x3fee62.fill();
  _0x3fee62.globalAlpha = 0.5;
  _0x3fee62.beginPath();
  _0x3fee62.arc(_0x2dbde0, _0x2dbde0, _0x29a0cd + _0x4a4697 / 2, Math.PI * 2, 0);
  _0x3fee62.stroke();
  var _0x283058 = Math.PI * 2 / a0_0x270302.anis.length;
  var _0x377dfe = 0;
  var _0x3dde1b = (a0_0x24806e - a0_0x4aaf7e) / 1000;
  var _0x5c3b9c = 2;
  var _0x54bc7c = 8;
  _0x377dfe = _0x54bc7c * Math.sin(Math.PI * 2 / _0x5c3b9c * _0x3dde1b);
  for (r = 0; r < a0_0x270302.anis.length; r++) {
    var _0x255117 = _0x37bb71 + Math.sin(_0x3c7a26 * r * (Math.PI / 180) - a0_0x873ec7(90)) * _0x29a0cd;
    var _0x4dbcba = _0x2dbde0 + Math.cos(_0x3c7a26 * r * (Math.PI / 180) - a0_0x873ec7(90)) * _0x29a0cd;
    var _0x3b7303 = r * _0x283058 - a0_0x873ec7(90) - _0x283058 / 2;
    var _0x2f6626 = _0x3b7303 + _0x283058;
    ani = a0_0x270302.anis[r];
    var _0x2450b4 = a0_0x29c1bf(ani);
    var _0x54171c = a0_0x19ebc9(_0x2450b4);
    if (_0x54171c) {
      var _0x291eea = a0_0x270302[ani] > 0;
      _0x3fee62.save();
      _0x3fee62.globalAlpha = _0x291eea ? 1 : 0.3;
      var _0xeb99df = _0x4a4697;
      if (_0x291eea) {
        _0x3fee62.shadowOffsetX = 0;
        _0x3fee62.shadowOffsetY = 0;
        _0x3fee62.shadowColor = "black";
        _0x3fee62.shadowBlur = 8;
        _0xeb99df -= _0x377dfe;
      }
      _0x3fee62.drawImage(_0x54171c, _0x4dbcba - _0xeb99df / 2, _0x255117 - _0xeb99df / 2, _0xeb99df, _0xeb99df);
      _0x3fee62.restore();
      _0x3fee62.save();
      if (_0x291eea) {
        _0x3fee62.shadowOffsetX = 0;
        _0x3fee62.shadowOffsetY = 0;
        _0x3fee62.shadowColor = "black";
        _0x3fee62.shadowBlur = 8;
      }
      _0x3fee62.strokeStyle = _0x291eea ? "#ff6e00" : "black";
      var _0xe9a4ff = _0x291eea ? 5 : 1;
      _0x3fee62.lineWidth = _0xe9a4ff;
      _0x3fee62.globalAlpha = _0x291eea ? 1 : 0.5;
      _0x3fee62.beginPath();
      _0x3fee62.arc(_0x2dbde0, _0x2dbde0, _0x29a0cd - (_0xe9a4ff - 2) - _0x4a4697 / 2, _0x3b7303, _0x2f6626);
      _0x3fee62.stroke();
    }
  }
  if (a0_0x5c7588 != null) {
    if (a0_0x5c7588.width) {
      var _0xc246e2 = (a0_0x24806e - a0_0x4aaf7e) / 600;
      var _0x4eb777 = (a0_0x41e9f4 - a0_0x24806e) / 600;
      if (_0x4eb777 < 1) {
        _0xc246e2 = Math.max(0, _0x4eb777);
      }
      var _0x355e68 = Math.min(1, _0xc246e2);
      var _0x2d4666 = a0_0x5c7588.width * _0x355e68;
      var _0x5e9ba9 = a0_0x5c7588.height * _0x355e68;
      a0_0x1306ae.save();
      a0_0x1306ae.globalAlpha = _0x355e68;
      a0_0x1306ae.drawImage(a0_0x5c7588, a0_0x2bf7a6 / 2 - _0x2d4666 / 2, a0_0xa794f1 / 2 - _0x5e9ba9 / 2, _0x2d4666, _0x5e9ba9);
      a0_0x1306ae.restore();
      if (a0_0x24806e > a0_0x41e9f4 || !a0_0x371a9b) {
        a0_0x270302 = null;
        a0_0x4aaf7e = 0;
      }
    }
  }
}
function a0_0x29c1bf(_0x2f0437) {
  switch (_0x2f0437) {
    case a0_0x332990:
      return "./skins/volcano/blackdragon/0/blackdragon.png";
    case a0_0x77ab87:
      return "./skins/land/dinomonster/0/dinomonster.png";
    case a0_0xadcba8:
      return "./skins/arctic/icemonster/0/icemonster.png";
    case a0_0x53b0d7:
      return "./skins/volcano/landmonster/0/0/landmonster.png";
    case a0_0x5aaf14:
      return "./skins/ocean/seamonster/0/seamonster.png";
    case a0_0x3a4899:
      return "./skins/desert/scorpion/0/giantscorpion.png";
    case a0_0x1c04bf:
      return "./skins/arctic/yeti/0/wolf.png";
    case a0_0x59b763:
      return "./skins/land/dragon/0/0/dragon.png";
    case a0_0x45db7b:
      return "./skins/land/trex/0/trex.png";
    case a0_0x17dc35:
      return "./skins/ocean/kraken/0/0/kraken.png";
    case a0_0x487fb5:
      return "./skins/ocean/kingcrab/0/kingcrab.png";
    case a0_0x1e1209:
      return "./skins/phoenix/phoenix.png";
    case a0_0x407000:
      return "./skins/desert/pterodactyl/0/pterodactyl_ability.png";
  }
}
document.addEventListener("keydown", function (_0xe16e3) {
  if (_0xe16e3.ctrlKey == true && (_0xe16e3.code == "Minus" || _0xe16e3.key == "Equal" || _0xe16e3.code == "NumpadSubtract" || _0xe16e3.key == "NumpadAdd")) {
    _0xe16e3.preventDefault();
  }
}, {
  passive: false
});
let a0_0x31f3de = null;
function a0_0x5e8cc5(_0x439e37) {
  return new Promise((_0x10e8f8, _0x432765) => {
    let _0x5ed200 = document.body.querySelector("#turnstile");
    if (_0x5ed200) {
      _0x5ed200.style.removeProperty("display");
    } else {
      _0x5ed200 = document.createElement("div");
      _0x5ed200.setAttribute("id", "turnstile");
      document.body.append(_0x5ed200);
    }
    a0_0x31f3de = turnstile.render(_0x5ed200, {
      sitekey: _0x439e37,
      callback: _0x1f0251 => {
        a0_0x29d9af();
        _0x10e8f8(_0x1f0251);
      },
      "error-callback": _0x1a4bc8 => {
        a0_0x29d9af();
        _0x432765(_0x1a4bc8);
      }
    });
  });
}
function a0_0x29d9af() {
  let _0x1d4a23 = document.body.querySelector("#turnstile");
  if (_0x1d4a23) {
    _0x1d4a23.style.setProperty("display", "none");
    turnstile.remove(a0_0x31f3de);
  }
}